{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,C,E,C,E,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,G,C,C,E,C,O,C,C,E,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,O,C,K,E,E,S,C,K,E,E,S,C,K,E,E,C,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,A,Y,O,Q,O,G,E,O,W,O,C,E,C,E,C,Q,C,S,C,C,C,C,C,C,C,ECGC,IAAA,EAAA,EAAA,kD,E,iB,C,GAsqBD,EAAA,MAAA,CAAA,EAAA,qBAAA,IACE,GADF,EAAA,MAAA,CAAA,EAAA,aAAA,IAEE,GAtqBF,EAAA,sCACA,EAAA,wCACA,EAAA,wCACA,IAAA,EAAA,EAAA,mCAMA,OAAM,EACJ,aAAc,CACZ,IAAI,CAAC,YAAY,CAAG,IAAI,IACxB,IAAI,CAAC,cAAc,CAAG,IAAI,CAAC,wBAAwB,GACnD,IAAI,CAAC,aAAa,CAAG,IAAI,CAAC,4BAA4B,EACxD,CAKA,0BAA2B,CACzB,MAAO,CACL,UAAW,WACX,aAAc,IAAI,IAClB,Y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","sources":["<anon>","js/ui/enhancedAdvancedUI.js"],"sourcesContent":["// modules are defined as an array\r\n// [ module function, map of requires ]\r\n//\r\n// map of requires is short require name -> numeric require\r\n//\r\n// anything defined in a previous bundle is accessed via the\r\n// orig method which is the require for previous bundles\r\n\r\n(function (\r\n  modules,\r\n  entry,\r\n  mainEntry,\r\n  parcelRequireName,\r\n  externals,\r\n  distDir,\r\n  publicUrl,\r\n  devServer\r\n) {\r\n  /* eslint-disable no-undef */\r\n  var globalObject =\r\n    typeof globalThis !== 'undefined'\r\n      ? globalThis\r\n      : typeof self !== 'undefined'\r\n      ? self\r\n      : typeof window !== 'undefined'\r\n      ? window\r\n      : typeof global !== 'undefined'\r\n      ? global\r\n      : {};\r\n  /* eslint-enable no-undef */\r\n\r\n  // Save the require from previous bundle to this closure if any\r\n  var previousRequire =\r\n    typeof globalObject[parcelRequireName] === 'function' &&\r\n    globalObject[parcelRequireName];\r\n\r\n  var importMap = previousRequire.i || {};\r\n  var cache = previousRequire.cache || {};\r\n  // Do not use `require` to prevent Webpack from trying to bundle this call\r\n  var nodeRequire =\r\n    typeof module !== 'undefined' &&\r\n    typeof module.require === 'function' &&\r\n    module.require.bind(module);\r\n\r\n  function newRequire(name, jumped) {\r\n    if (!cache[name]) {\r\n      if (!modules[name]) {\r\n        if (externals[name]) {\r\n          return externals[name];\r\n        }\r\n        // if we cannot find the module within our internal map or\r\n        // cache jump to the current global require ie. the last bundle\r\n        // that was added to the page.\r\n        var currentRequire =\r\n          typeof globalObject[parcelRequireName] === 'function' &&\r\n          globalObject[parcelRequireName];\r\n        if (!jumped && currentRequire) {\r\n          return currentRequire(name, true);\r\n        }\r\n\r\n        // If there are other bundles on this page the require from the\r\n        // previous one is saved to 'previousRequire'. Repeat this as\r\n        // many times as there are bundles until the module is found or\r\n        // we exhaust the require chain.\r\n        if (previousRequire) {\r\n          return previousRequire(name, true);\r\n        }\r\n\r\n        // Try the node require function if it exists.\r\n        if (nodeRequire && typeof name === 'string') {\r\n          return nodeRequire(name);\r\n        }\r\n\r\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\r\n        err.code = 'MODULE_NOT_FOUND';\r\n        throw err;\r\n      }\r\n\r\n      localRequire.resolve = resolve;\r\n      localRequire.cache = {};\r\n\r\n      var module = (cache[name] = new newRequire.Module(name));\r\n\r\n      modules[name][0].call(\r\n        module.exports,\r\n        localRequire,\r\n        module,\r\n        module.exports,\r\n        globalObject\r\n      );\r\n    }\r\n\r\n    return cache[name].exports;\r\n\r\n    function localRequire(x) {\r\n      var res = localRequire.resolve(x);\r\n      return res === false ? {} : newRequire(res);\r\n    }\r\n\r\n    function resolve(x) {\r\n      var id = modules[name][1][x];\r\n      return id != null ? id : x;\r\n    }\r\n  }\r\n\r\n  function Module(moduleName) {\r\n    this.id = moduleName;\r\n    this.bundle = newRequire;\r\n    this.require = nodeRequire;\r\n    this.exports = {};\r\n  }\r\n\r\n  newRequire.isParcelRequire = true;\r\n  newRequire.Module = Module;\r\n  newRequire.modules = modules;\r\n  newRequire.cache = cache;\r\n  newRequire.parent = previousRequire;\r\n  newRequire.distDir = distDir;\r\n  newRequire.publicUrl = publicUrl;\r\n  newRequire.devServer = devServer;\r\n  newRequire.i = importMap;\r\n  newRequire.register = function (id, exports) {\r\n    modules[id] = [\r\n      function (require, module) {\r\n        module.exports = exports;\r\n      },\r\n      {},\r\n    ];\r\n  };\r\n\r\n  // Only insert newRequire.load when it is actually used.\r\n  // The code in this file is linted against ES5, so dynamic import is not allowed.\r\n  // INSERT_LOAD_HERE\r\n\r\n  Object.defineProperty(newRequire, 'root', {\r\n    get: function () {\r\n      return globalObject[parcelRequireName];\r\n    },\r\n  });\r\n\r\n  globalObject[parcelRequireName] = newRequire;\r\n\r\n  for (var i = 0; i < entry.length; i++) {\r\n    newRequire(entry[i]);\r\n  }\r\n\r\n  if (mainEntry) {\r\n    // Expose entry point to Node, AMD or browser globals\r\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\r\n    var mainExports = newRequire(mainEntry);\r\n\r\n    // CommonJS\r\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\r\n      module.exports = mainExports;\r\n\r\n      // RequireJS\r\n    } else if (typeof define === 'function' && define.amd) {\r\n      define(function () {\r\n        return mainExports;\r\n      });\r\n    }\r\n  }\r\n})({\"5fv1I\":[function(require,module,exports,__globalThis) {\n/**\r\n * Enhanced Advanced UI Integration\r\n * Sophisticated interface for next-level features\r\n */ var parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"EnhancedAdvancedUI\", ()=>EnhancedAdvancedUI);\nparcelHelpers.export(exports, \"enhancedUI\", ()=>enhancedUI);\nvar _dataVisualizationJs = require(\"../algorithms/dataVisualization.js\");\nvar _wellnessIntegrationJs = require(\"../algorithms/wellnessIntegration.js\");\nvar _periodizationSystemJs = require(\"../algorithms/periodizationSystem.js\");\nvar _intelligenceHubJs = require(\"../algorithms/intelligenceHub.js\");\n/**\r\n * Enhanced Advanced UI System\r\n * Manages sophisticated interfaces for advanced features\r\n */ class EnhancedAdvancedUI {\n    constructor(){\n        this.activeCharts = new Map();\n        this.dashboardState = this.initializeDashboardState();\n        this.notifications = this.initializeNotificationSystem();\n    }\n    /**\r\n   * Initialize dashboard state\r\n   */ initializeDashboardState() {\n        return {\n            activeTab: 'overview',\n            chartConfigs: new Map(),\n            refreshRate: 5000,\n            autoRefresh: false,\n            fullscreen: false,\n            theme: 'light'\n        };\n    }\n    /**\r\n   * Initialize notification system\r\n   */ initializeNotificationSystem() {\n        return {\n            queue: [],\n            displayed: new Set(),\n            types: {\n                info: {\n                    icon: \"\\u2139\\uFE0F\",\n                    color: '#3b82f6'\n                },\n                success: {\n                    icon: \"\\u2705\",\n                    color: '#10b981'\n                },\n                warning: {\n                    icon: \"\\u26A0\\uFE0F\",\n                    color: '#f59e0b'\n                },\n                error: {\n                    icon: \"\\u274C\",\n                    color: '#ef4444'\n                },\n                insight: {\n                    icon: \"\\uD83D\\uDCA1\",\n                    color: '#8b5cf6'\n                }\n            }\n        };\n    }\n    /**\r\n   * Create comprehensive training dashboard\r\n   */ createAdvancedDashboard() {\n        const dashboard = document.createElement('div');\n        dashboard.className = 'advanced-dashboard';\n        dashboard.innerHTML = `\n      <div class=\"dashboard-header\">\n        <h2>\\u{1F3AF} Advanced Training Dashboard</h2>\n        <div class=\"dashboard-controls\">\n          <button onclick=\"enhancedUI.toggleFullscreen()\" class=\"control-btn\">\n            <span id=\"fullscreenIcon\">\\u{26F6}</span> Fullscreen\n          </button>\n          <button onclick=\"enhancedUI.exportDashboard()\" class=\"control-btn\">\n            \\u{1F4CA} Export\n          </button>\n          <button onclick=\"enhancedUI.refreshDashboard()\" class=\"control-btn\">\n            \\u{1F504} Refresh\n          </button>\n        </div>\n      </div>\n\n      <div class=\"dashboard-navigation\">\n        <nav class=\"tab-navigation\">\n          <button class=\"tab-btn active\" onclick=\"enhancedUI.switchTab('overview')\">\\u{1F4C8} Overview</button>\n          <button class=\"tab-btn\" onclick=\"enhancedUI.switchTab('analytics')\">\\u{1F52C} Analytics</button>\n          <button class=\"tab-btn\" onclick=\"enhancedUI.switchTab('wellness')\">\\u{1F49A} Wellness</button>\n          <button class=\"tab-btn\" onclick=\"enhancedUI.switchTab('planning')\">\\u{1F4C5} Planning</button>\n          <button class=\"tab-btn\" onclick=\"enhancedUI.switchTab('insights')\">\\u{1F9E0} Insights</button>\n        </nav>\n      </div>\n\n      <div class=\"dashboard-content\">\n        ${this.createOverviewTab()}\n        ${this.createAnalyticsTab()}\n        ${this.createWellnessTab()}\n        ${this.createPlanningTab()}\n        ${this.createInsightsTab()}\n      </div>\n\n      <div class=\"notification-area\" id=\"notificationArea\"></div>\n    `;\n        return dashboard;\n    }\n    /**\r\n   * Create overview tab content\r\n   */ createOverviewTab() {\n        return `\n      <div class=\"tab-content active\" id=\"overview-tab\">\n        <div class=\"overview-grid\">\n          <!-- Key Metrics Panel -->\n          <div class=\"metric-panel\">\n            <h3>\\u{1F4CA} Key Metrics</h3>\n            <div class=\"metrics-grid\">\n              <div class=\"metric-card\">\n                <div class=\"metric-value\" id=\"currentPerformance\">--</div>\n                <div class=\"metric-label\">Performance Score</div>\n              </div>\n              <div class=\"metric-card\">\n                <div class=\"metric-value\" id=\"recoveryScore\">--</div>\n                <div class=\"metric-label\">Recovery Score</div>\n              </div>\n              <div class=\"metric-card\">\n                <div class=\"metric-value\" id=\"readinessScore\">--</div>\n                <div class=\"metric-label\">Readiness Score</div>\n              </div>\n              <div class=\"metric-card\">\n                <div class=\"metric-value\" id=\"totalVolume\">--</div>\n                <div class=\"metric-label\">Weekly Volume</div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Performance Trend Chart -->\n          <div class=\"chart-panel\">\n            <h3>\\u{1F4C8} Performance Trends</h3>\n            <canvas id=\"performanceTrendChart\" width=\"400\" height=\"200\"></canvas>\n          </div>\n\n          <!-- Volume Distribution -->\n          <div class=\"chart-panel\">\n            <h3>\\u{1F3CB}\\u{FE0F} Volume Distribution</h3>\n            <canvas id=\"volumeDistributionChart\" width=\"400\" height=\"200\"></canvas>\n          </div>\n\n          <!-- Recent Achievements -->\n          <div class=\"achievements-panel\">\n            <h3>\\u{1F3C6} Recent Achievements</h3>\n            <div id=\"achievementsList\" class=\"achievements-list\">\n              <!-- Achievements populated dynamically -->\n            </div>\n          </div>\n\n          <!-- Action Items -->\n          <div class=\"action-panel\">\n            <h3>\\u{26A1} Priority Actions</h3>\n            <div id=\"actionItems\" class=\"action-items\">\n              <!-- Action items populated dynamically -->\n            </div>\n          </div>\n\n          <!-- System Status -->\n          <div class=\"status-panel\">\n            <h3>\\u{2699}\\u{FE0F} System Status</h3>\n            <div class=\"status-indicators\">\n              <div class=\"status-item\">\n                <span id=\"analyticsStatusAdv\">\\u{274C}</span>\n                <span>Advanced Analytics</span>\n              </div>\n              <div class=\"status-item\">\n                <span id=\"wellnessStatusAdv\">\\u{274C}</span>\n                <span>Wellness Integration</span>\n              </div>\n              <div class=\"status-item\">\n                <span id=\"planningStatusAdv\">\\u{274C}</span>\n                <span>Auto-Planning</span>\n              </div>\n              <div class=\"status-item\">\n                <span id=\"intelligenceStatusAdv\">\\u{274C}</span>\n                <span>AI Intelligence</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n    }\n    /**\r\n   * Create analytics tab content\r\n   */ createAnalyticsTab() {\n        return `\n      <div class=\"tab-content\" id=\"analytics-tab\">\n        <div class=\"analytics-grid\">\n          <!-- Predictive Analytics -->\n          <div class=\"analytics-section\">\n            <h3>\\u{1F52E} Predictive Analytics</h3>\n            <div class=\"analytics-controls\">\n              <button onclick=\"enhancedUI.generatePredictiveChart()\" class=\"analytics-btn\">\n                \\u{1F4CA} Performance Prediction\n              </button>\n              <button onclick=\"enhancedUI.analyzeVolumeOptimization()\" class=\"analytics-btn\">\n                \\u{1F3AF} Volume Optimization\n              </button>\n              <button onclick=\"enhancedUI.detectPlateauRisk()\" class=\"analytics-btn\">\n                \\u{26A0}\\u{FE0F} Plateau Analysis\n              </button>\n            </div>\n            <div class=\"chart-container\">\n              <canvas id=\"predictiveChart\" width=\"600\" height=\"300\"></canvas>\n            </div>\n          </div>\n\n          <!-- Advanced Visualizations -->\n          <div class=\"analytics-section\">\n            <h3>\\u{1F4C8} Advanced Visualizations</h3>\n            <div class=\"visualization-controls\">\n              <select id=\"chartTypeSelector\" onchange=\"enhancedUI.changeChartType()\">\n                <option value=\"trend\">Trend Analysis</option>\n                <option value=\"heatmap\">Volume Heatmap</option>\n                <option value=\"radar\">Muscle Distribution</option>\n                <option value=\"correlation\">Correlation Matrix</option>\n              </select>\n              <select id=\"timeRangeSelector\" onchange=\"enhancedUI.changeTimeRange()\">\n                <option value=\"4\">Last 4 Weeks</option>\n                <option value=\"8\">Last 8 Weeks</option>\n                <option value=\"12\">Last 12 Weeks</option>\n                <option value=\"all\">All Time</option>\n              </select>\n            </div>\n            <div class=\"chart-container\">\n              <canvas id=\"advancedVisualizationChart\" width=\"600\" height=\"400\"></canvas>\n            </div>\n          </div>\n\n          <!-- Statistical Analysis -->\n          <div class=\"analytics-section\">\n            <h3>\\u{1F4CA} Statistical Analysis</h3>\n            <div class=\"stats-grid\">\n              <div class=\"stat-card\">\n                <h4>Performance Statistics</h4>\n                <div id=\"performanceStats\" class=\"stat-content\">\n                  <!-- Stats populated dynamically -->\n                </div>\n              </div>\n              <div class=\"stat-card\">\n                <h4>Volume Statistics</h4>\n                <div id=\"volumeStats\" class=\"stat-content\">\n                  <!-- Stats populated dynamically -->\n                </div>\n              </div>\n              <div class=\"stat-card\">\n                <h4>Recovery Statistics</h4>\n                <div id=\"recoveryStats\" class=\"stat-content\">\n                  <!-- Stats populated dynamically -->\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n    }\n    /**\r\n   * Create wellness tab content\r\n   */ createWellnessTab() {\n        return `\n      <div class=\"tab-content\" id=\"wellness-tab\">\n        <div class=\"wellness-grid\">\n          <!-- Wellness Input Panel -->\n          <div class=\"wellness-input-panel\">\n            <h3>\\u{1F4DD} Daily Wellness Check-in</h3>\n            <form id=\"wellnessForm\" class=\"wellness-form\">\n              <div class=\"form-section\">\n                <h4>\\u{1F634} Sleep Quality</h4>\n                <div class=\"input-group\">\n                  <label for=\"sleepDuration\">Duration (hours):</label>\n                  <input type=\"number\" id=\"sleepDuration\" min=\"4\" max=\"12\" step=\"0.5\" value=\"7.5\">\n                </div>\n                <div class=\"input-group\">\n                  <label for=\"sleepQuality\">Quality (1-10):</label>\n                  <input type=\"range\" id=\"sleepQuality\" min=\"1\" max=\"10\" value=\"7\">\n                  <span class=\"range-value\" id=\"sleepQualityValue\">7</span>\n                </div>\n              </div>\n\n              <div class=\"form-section\">\n                <h4>\\u{1F630} Stress Levels</h4>\n                <div class=\"input-group\">\n                  <label for=\"workStress\">Work Stress (1-10):</label>\n                  <input type=\"range\" id=\"workStress\" min=\"1\" max=\"10\" value=\"5\">\n                  <span class=\"range-value\" id=\"workStressValue\">5</span>\n                </div>\n                <div class=\"input-group\">\n                  <label for=\"lifeStress\">Life Stress (1-10):</label>\n                  <input type=\"range\" id=\"lifeStress\" min=\"1\" max=\"10\" value=\"4\">\n                  <span class=\"range-value\" id=\"lifeStressValue\">4</span>\n                </div>\n              </div>\n\n              <div class=\"form-section\">\n                <h4>\\u{1F957} Nutrition & Hydration</h4>\n                <div class=\"input-group\">\n                  <label for=\"hydration\">Hydration (1-10):</label>\n                  <input type=\"range\" id=\"hydration\" min=\"1\" max=\"10\" value=\"7\">\n                  <span class=\"range-value\" id=\"hydrationValue\">7</span>\n                </div>\n                <div class=\"input-group\">\n                  <label for=\"nutritionQuality\">Nutrition Quality (1-10):</label>\n                  <input type=\"range\" id=\"nutritionQuality\" min=\"1\" max=\"10\" value=\"7\">\n                  <span class=\"range-value\" id=\"nutritionQualityValue\">7</span>\n                </div>\n              </div>\n\n              <button type=\"button\" onclick=\"enhancedUI.submitWellnessData()\" class=\"submit-btn\">\n                \\u{1F4BE} Save Wellness Data\n              </button>\n            </form>\n          </div>\n\n          <!-- Wellness Dashboard -->\n          <div class=\"wellness-dashboard\">\n            <h3>\\u{1F3AF} Wellness Overview</h3>\n            <div class=\"wellness-scores\">\n              <div class=\"score-card\">\n                <div class=\"score-value\" id=\"wellnessRecoveryScore\">--</div>\n                <div class=\"score-label\">Recovery Score</div>\n              </div>\n              <div class=\"score-card\">\n                <div class=\"score-value\" id=\"wellnessReadinessScore\">--</div>\n                <div class=\"score-label\">Readiness Score</div>\n              </div>\n              <div class=\"score-card\">\n                <div class=\"score-value\" id=\"wellnessStressScore\">--</div>\n                <div class=\"score-label\">Stress Score</div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Training Recommendations -->\n          <div class=\"training-recommendations\">\n            <h3>\\u{1F3AF} Training Recommendations</h3>\n            <div id=\"trainingRecommendations\" class=\"recommendations-content\">\n              <!-- Recommendations populated dynamically -->\n            </div>\n          </div>\n\n          <!-- Wellness Trends -->\n          <div class=\"wellness-trends\">\n            <h3>\\u{1F4C8} Wellness Trends</h3>\n            <canvas id=\"wellnessTrendChart\" width=\"500\" height=\"250\"></canvas>\n          </div>\n        </div>\n      </div>\n    `;\n    }\n    /**\r\n   * Create planning tab content\r\n   */ createPlanningTab() {\n        return `\n      <div class=\"tab-content\" id=\"planning-tab\">\n        <div class=\"planning-grid\">\n          <!-- Plan Creation -->\n          <div class=\"plan-creation-panel\">\n            <h3>\\u{1F3AF} Create Training Plan</h3>\n            <form id=\"planningForm\" class=\"planning-form\">\n              <div class=\"form-group\">\n                <label for=\"planDuration\">Plan Duration:</label>\n                <select id=\"planDuration\">\n                  <option value=\"8\">8 Weeks</option>\n                  <option value=\"12\">12 Weeks</option>\n                  <option value=\"16\" selected>16 Weeks</option>\n                  <option value=\"20\">20 Weeks</option>\n                  <option value=\"24\">24 Weeks</option>\n                </select>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"primaryGoal\">Primary Goal:</label>\n                <select id=\"primaryGoal\">\n                  <option value=\"hypertrophy\">Hypertrophy</option>\n                  <option value=\"strength\">Strength</option>\n                  <option value=\"powerbuilding\">Powerbuilding</option>\n                  <option value=\"endurance\">Endurance</option>\n                  <option value=\"general\">General Fitness</option>\n                </select>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"experienceLevel\">Experience Level:</label>\n                <select id=\"experienceLevel\">\n                  <option value=\"beginner\">Beginner</option>\n                  <option value=\"intermediate\">Intermediate</option>\n                  <option value=\"advanced\">Advanced</option>\n                </select>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"trainingDays\">Training Days per Week:</label>\n                <select id=\"trainingDays\">\n                  <option value=\"3\">3 Days</option>\n                  <option value=\"4\">4 Days</option>\n                  <option value=\"5\">5 Days</option>\n                  <option value=\"6\">6 Days</option>\n                </select>\n              </div>\n\n              <button type=\"button\" onclick=\"enhancedUI.generateTrainingPlan()\" class=\"generate-btn\">\n                \\u{1F680} Generate Intelligent Plan\n              </button>\n            </form>\n          </div>\n\n          <!-- Current Plan Overview -->\n          <div class=\"current-plan-panel\">\n            <h3>\\u{1F4CB} Current Plan</h3>\n            <div id=\"currentPlanOverview\" class=\"plan-overview\">\n              <!-- Plan overview populated dynamically -->\n            </div>\n          </div>\n\n          <!-- Plan Timeline -->\n          <div class=\"plan-timeline-panel\">\n            <h3>\\u{1F4C5} Plan Timeline</h3>\n            <div id=\"planTimeline\" class=\"timeline-container\">\n              <!-- Timeline populated dynamically -->\n            </div>\n          </div>\n\n          <!-- Adaptation Controls -->\n          <div class=\"adaptation-panel\">\n            <h3>\\u{1F527} Plan Adaptations</h3>\n            <div class=\"adaptation-controls\">\n              <button onclick=\"enhancedUI.adaptPlanForPerformance()\" class=\"adapt-btn\">\n                \\u{1F4C8} Adapt for Performance\n              </button>\n              <button onclick=\"enhancedUI.adaptPlanForRecovery()\" class=\"adapt-btn\">\n                \\u{1F49A} Adapt for Recovery\n              </button>\n              <button onclick=\"enhancedUI.triggerIntelligentDeload()\" class=\"adapt-btn\">\n                \\u{1F6D1} Trigger Deload\n              </button>\n            </div>\n            <div id=\"adaptationResults\" class=\"adaptation-results\">\n              <!-- Adaptation results populated dynamically -->\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n    }\n    /**\r\n   * Create insights tab content\r\n   */ createInsightsTab() {\n        return `\n      <div class=\"tab-content\" id=\"insights-tab\">\n        <div class=\"insights-grid\">\n          <!-- AI Insights -->\n          <div class=\"ai-insights-panel\">\n            <h3>\\u{1F9E0} AI Training Insights</h3>\n            <div class=\"insights-controls\">\n              <button onclick=\"enhancedUI.generateAIInsights()\" class=\"insights-btn\">\n                \\u{1F52E} Generate Insights\n              </button>\n              <button onclick=\"enhancedUI.analyzeTrainingPatterns()\" class=\"insights-btn\">\n                \\u{1F4CA} Pattern Analysis\n              </button>\n              <button onclick=\"enhancedUI.predictOptimizations()\" class=\"insights-btn\">\n                \\u{1F3AF} Optimization Opportunities\n              </button>\n            </div>\n            <div id=\"aiInsightsContent\" class=\"insights-content\">\n              <!-- AI insights populated dynamically -->\n            </div>\n          </div>\n\n          <!-- Performance Analysis -->\n          <div class=\"performance-analysis-panel\">\n            <h3>\\u{1F4C8} Performance Analysis</h3>\n            <div id=\"performanceAnalysis\" class=\"analysis-content\">\n              <!-- Performance analysis populated dynamically -->\n            </div>\n          </div>\n\n          <!-- Trend Predictions -->\n          <div class=\"predictions-panel\">\n            <h3>\\u{1F52E} Trend Predictions</h3>\n            <canvas id=\"predictionChart\" width=\"500\" height=\"300\"></canvas>\n          </div>\n\n          <!-- Risk Assessment -->\n          <div class=\"risk-assessment-panel\">\n            <h3>\\u{26A0}\\u{FE0F} Risk Assessment</h3>\n            <div id=\"riskAssessment\" class=\"risk-content\">\n              <!-- Risk assessment populated dynamically -->\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n    }\n    /**\r\n   * Initialize the enhanced UI system\r\n   */ initializeEnhancedUI() {\n        this.setupEventListeners();\n        this.initializeCharts();\n        this.startAutoRefresh();\n        this.loadDashboardData();\n        console.log(\"\\uD83D\\uDE80 Enhanced Advanced UI System Initialized\");\n    }\n    /**\r\n   * Setup event listeners for interactive elements\r\n   */ setupEventListeners() {\n        // Range input event listeners for real-time updates\n        document.addEventListener('input', (event)=>{\n            if (event.target.type === 'range') {\n                const valueSpan = document.getElementById(event.target.id + 'Value');\n                if (valueSpan) valueSpan.textContent = event.target.value;\n            }\n        });\n        // Tab navigation\n        document.addEventListener('click', (event)=>{\n            if (event.target.classList.contains('tab-btn')) this.handleTabClick(event.target);\n        });\n        // Auto-save wellness data\n        document.addEventListener('change', (event)=>{\n            if (event.target.closest('#wellnessForm')) this.autoSaveWellnessData();\n        });\n    }\n    /**\r\n   * Switch between dashboard tabs\r\n   */ switchTab(tabName) {\n        // Update tab buttons\n        document.querySelectorAll('.tab-btn').forEach((btn)=>btn.classList.remove('active'));\n        document.querySelector(`.tab-btn[onclick*=\"${tabName}\"]`).classList.add('active');\n        // Update tab content\n        document.querySelectorAll('.tab-content').forEach((content)=>content.classList.remove('active'));\n        document.getElementById(`${tabName}-tab`).classList.add('active');\n        // Load tab-specific data\n        this.loadTabData(tabName);\n        this.dashboardState.activeTab = tabName;\n    }\n    /**\r\n   * Load data for specific tab\r\n   */ loadTabData(tabName) {\n        switch(tabName){\n            case 'overview':\n                this.loadOverviewData();\n                break;\n            case 'analytics':\n                this.loadAnalyticsData();\n                break;\n            case 'wellness':\n                this.loadWellnessData();\n                break;\n            case 'planning':\n                this.loadPlanningData();\n                break;\n            case 'insights':\n                this.loadInsightsData();\n                break;\n        }\n    }\n    /**\r\n   * Generate AI insights\r\n   */ generateAIInsights() {\n        const insights = (0, _intelligenceHubJs.advancedIntelligence).getWeeklyIntelligence();\n        const content = document.getElementById('aiInsightsContent');\n        let html = '<div class=\"insights-list\">';\n        if (insights.recommendations.length > 0) {\n            html += \"<h4>\\uD83C\\uDFAF Recommendations</h4>\";\n            insights.recommendations.forEach((rec)=>{\n                html += `<div class=\"insight-item ${rec.urgency}\">\n          <strong>${rec.type}:</strong> ${rec.message}\n        </div>`;\n            });\n        }\n        if (insights.analytics) {\n            html += \"<h4>\\uD83D\\uDCCA Analytics Insights</h4>\";\n            Object.entries(insights.analytics.volumeLandmarkOptimizations || {}).forEach(([muscle, opt])=>{\n                html += `<div class=\"insight-item success\">\n          <strong>${muscle}:</strong> Volume landmarks can be optimized (${opt.confidence}% confidence)\n        </div>`;\n            });\n        }\n        html += '</div>';\n        content.innerHTML = html;\n        this.showNotification('AI insights generated successfully', 'success');\n    }\n    /**\r\n   * Show notification\r\n   */ showNotification(message, type = 'info') {\n        const notification = document.createElement('div');\n        notification.className = `notification ${type}`;\n        notification.innerHTML = `\n      <span class=\"notification-icon\">${this.notifications.types[type].icon}</span>\n      <span class=\"notification-message\">${message}</span>\n      <button class=\"notification-close\" onclick=\"this.parentElement.remove()\">\\xd7</button>\n    `;\n        document.getElementById('notificationArea').appendChild(notification);\n        // Auto-remove after 5 seconds\n        setTimeout(()=>{\n            if (notification.parentElement) notification.remove();\n        }, 5000);\n    }\n    /**\r\n   * Export dashboard data\r\n   */ exportDashboard() {\n        const dashboardData = this.collectDashboardData();\n        const exportData = {\n            timestamp: new Date().toISOString(),\n            data: dashboardData\n        };\n        const blob = new Blob([\n            JSON.stringify(exportData, null, 2)\n        ], {\n            type: 'application/json'\n        });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `training-dashboard-${new Date().toISOString().split('T')[0]}.json`;\n        a.click();\n        this.showNotification('Dashboard data exported successfully', 'success');\n    }\n    /**\r\n   * Helper method to collect all dashboard data\r\n   */ collectDashboardData() {\n        return {\n            overview: this.getOverviewData(),\n            analytics: this.getAnalyticsData(),\n            wellness: this.getWellnessData(),\n            planning: this.getPlanningData(),\n            insights: this.getInsightsData()\n        };\n    }\n}\n// Create and expose singleton instance\nconst enhancedUI = new EnhancedAdvancedUI();\n// Make globally available\nwindow.enhancedUI = enhancedUI;\n\n},{\"../algorithms/dataVisualization.js\":\"ewacr\",\"../algorithms/wellnessIntegration.js\":\"baIS0\",\"../algorithms/periodizationSystem.js\":\"gvkvx\",\"../algorithms/intelligenceHub.js\":\"bDUtg\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"91HVb\"}]},[\"5fv1I\"], \"5fv1I\", \"parcelRequire66c8\", {})\n\n//# sourceMappingURL=ProgramDesignWorkspace.36e482e4.js.map\n","/**\r\n * Enhanced Advanced UI Integration\r\n * Sophisticated interface for next-level features\r\n */\r\n\r\nimport { dataVisualizer } from '../algorithms/dataVisualization.js';\r\nimport { wellnessSystem } from '../algorithms/wellnessIntegration.js';\r\nimport { periodizationSystem } from '../algorithms/periodizationSystem.js';\r\nimport { advancedIntelligence } from '../algorithms/intelligenceHub.js';\r\n\r\n/**\r\n * Enhanced Advanced UI System\r\n * Manages sophisticated interfaces for advanced features\r\n */\r\nclass EnhancedAdvancedUI {\r\n  constructor() {\r\n    this.activeCharts = new Map();\r\n    this.dashboardState = this.initializeDashboardState();\r\n    this.notifications = this.initializeNotificationSystem();\r\n  }\r\n\r\n  /**\r\n   * Initialize dashboard state\r\n   */\r\n  initializeDashboardState() {\r\n    return {\r\n      activeTab: 'overview',\r\n      chartConfigs: new Map(),\r\n      refreshRate: 5000, // 5 seconds\r\n      autoRefresh: false,\r\n      fullscreen: false,\r\n      theme: 'light'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initialize notification system\r\n   */\r\n  initializeNotificationSystem() {\r\n    return {\r\n      queue: [],\r\n      displayed: new Set(),\r\n      types: {\r\n        info: { icon: 'ℹ️', color: '#3b82f6' },\r\n        success: { icon: '✅', color: '#10b981' },\r\n        warning: { icon: '⚠️', color: '#f59e0b' },\r\n        error: { icon: '❌', color: '#ef4444' },\r\n        insight: { icon: '💡', color: '#8b5cf6' }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create comprehensive training dashboard\r\n   */\r\n  createAdvancedDashboard() {\r\n    const dashboard = document.createElement('div');\r\n    dashboard.className = 'advanced-dashboard';\r\n    dashboard.innerHTML = `\r\n      <div class=\"dashboard-header\">\r\n        <h2>🎯 Advanced Training Dashboard</h2>\r\n        <div class=\"dashboard-controls\">\r\n          <button onclick=\"enhancedUI.toggleFullscreen()\" class=\"control-btn\">\r\n            <span id=\"fullscreenIcon\">⛶</span> Fullscreen\r\n          </button>\r\n          <button onclick=\"enhancedUI.exportDashboard()\" class=\"control-btn\">\r\n            📊 Export\r\n          </button>\r\n          <button onclick=\"enhancedUI.refreshDashboard()\" class=\"control-btn\">\r\n            🔄 Refresh\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"dashboard-navigation\">\r\n        <nav class=\"tab-navigation\">\r\n          <button class=\"tab-btn active\" onclick=\"enhancedUI.switchTab('overview')\">📈 Overview</button>\r\n          <button class=\"tab-btn\" onclick=\"enhancedUI.switchTab('analytics')\">🔬 Analytics</button>\r\n          <button class=\"tab-btn\" onclick=\"enhancedUI.switchTab('wellness')\">💚 Wellness</button>\r\n          <button class=\"tab-btn\" onclick=\"enhancedUI.switchTab('planning')\">📅 Planning</button>\r\n          <button class=\"tab-btn\" onclick=\"enhancedUI.switchTab('insights')\">🧠 Insights</button>\r\n        </nav>\r\n      </div>\r\n\r\n      <div class=\"dashboard-content\">\r\n        ${this.createOverviewTab()}\r\n        ${this.createAnalyticsTab()}\r\n        ${this.createWellnessTab()}\r\n        ${this.createPlanningTab()}\r\n        ${this.createInsightsTab()}\r\n      </div>\r\n\r\n      <div class=\"notification-area\" id=\"notificationArea\"></div>\r\n    `;\r\n\r\n    return dashboard;\r\n  }\r\n\r\n  /**\r\n   * Create overview tab content\r\n   */\r\n  createOverviewTab() {\r\n    return `\r\n      <div class=\"tab-content active\" id=\"overview-tab\">\r\n        <div class=\"overview-grid\">\r\n          <!-- Key Metrics Panel -->\r\n          <div class=\"metric-panel\">\r\n            <h3>📊 Key Metrics</h3>\r\n            <div class=\"metrics-grid\">\r\n              <div class=\"metric-card\">\r\n                <div class=\"metric-value\" id=\"currentPerformance\">--</div>\r\n                <div class=\"metric-label\">Performance Score</div>\r\n              </div>\r\n              <div class=\"metric-card\">\r\n                <div class=\"metric-value\" id=\"recoveryScore\">--</div>\r\n                <div class=\"metric-label\">Recovery Score</div>\r\n              </div>\r\n              <div class=\"metric-card\">\r\n                <div class=\"metric-value\" id=\"readinessScore\">--</div>\r\n                <div class=\"metric-label\">Readiness Score</div>\r\n              </div>\r\n              <div class=\"metric-card\">\r\n                <div class=\"metric-value\" id=\"totalVolume\">--</div>\r\n                <div class=\"metric-label\">Weekly Volume</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Performance Trend Chart -->\r\n          <div class=\"chart-panel\">\r\n            <h3>📈 Performance Trends</h3>\r\n            <canvas id=\"performanceTrendChart\" width=\"400\" height=\"200\"></canvas>\r\n          </div>\r\n\r\n          <!-- Volume Distribution -->\r\n          <div class=\"chart-panel\">\r\n            <h3>🏋️ Volume Distribution</h3>\r\n            <canvas id=\"volumeDistributionChart\" width=\"400\" height=\"200\"></canvas>\r\n          </div>\r\n\r\n          <!-- Recent Achievements -->\r\n          <div class=\"achievements-panel\">\r\n            <h3>🏆 Recent Achievements</h3>\r\n            <div id=\"achievementsList\" class=\"achievements-list\">\r\n              <!-- Achievements populated dynamically -->\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Action Items -->\r\n          <div class=\"action-panel\">\r\n            <h3>⚡ Priority Actions</h3>\r\n            <div id=\"actionItems\" class=\"action-items\">\r\n              <!-- Action items populated dynamically -->\r\n            </div>\r\n          </div>\r\n\r\n          <!-- System Status -->\r\n          <div class=\"status-panel\">\r\n            <h3>⚙️ System Status</h3>\r\n            <div class=\"status-indicators\">\r\n              <div class=\"status-item\">\r\n                <span id=\"analyticsStatusAdv\">❌</span>\r\n                <span>Advanced Analytics</span>\r\n              </div>\r\n              <div class=\"status-item\">\r\n                <span id=\"wellnessStatusAdv\">❌</span>\r\n                <span>Wellness Integration</span>\r\n              </div>\r\n              <div class=\"status-item\">\r\n                <span id=\"planningStatusAdv\">❌</span>\r\n                <span>Auto-Planning</span>\r\n              </div>\r\n              <div class=\"status-item\">\r\n                <span id=\"intelligenceStatusAdv\">❌</span>\r\n                <span>AI Intelligence</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * Create analytics tab content\r\n   */\r\n  createAnalyticsTab() {\r\n    return `\r\n      <div class=\"tab-content\" id=\"analytics-tab\">\r\n        <div class=\"analytics-grid\">\r\n          <!-- Predictive Analytics -->\r\n          <div class=\"analytics-section\">\r\n            <h3>🔮 Predictive Analytics</h3>\r\n            <div class=\"analytics-controls\">\r\n              <button onclick=\"enhancedUI.generatePredictiveChart()\" class=\"analytics-btn\">\r\n                📊 Performance Prediction\r\n              </button>\r\n              <button onclick=\"enhancedUI.analyzeVolumeOptimization()\" class=\"analytics-btn\">\r\n                🎯 Volume Optimization\r\n              </button>\r\n              <button onclick=\"enhancedUI.detectPlateauRisk()\" class=\"analytics-btn\">\r\n                ⚠️ Plateau Analysis\r\n              </button>\r\n            </div>\r\n            <div class=\"chart-container\">\r\n              <canvas id=\"predictiveChart\" width=\"600\" height=\"300\"></canvas>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Advanced Visualizations -->\r\n          <div class=\"analytics-section\">\r\n            <h3>📈 Advanced Visualizations</h3>\r\n            <div class=\"visualization-controls\">\r\n              <select id=\"chartTypeSelector\" onchange=\"enhancedUI.changeChartType()\">\r\n                <option value=\"trend\">Trend Analysis</option>\r\n                <option value=\"heatmap\">Volume Heatmap</option>\r\n                <option value=\"radar\">Muscle Distribution</option>\r\n                <option value=\"correlation\">Correlation Matrix</option>\r\n              </select>\r\n              <select id=\"timeRangeSelector\" onchange=\"enhancedUI.changeTimeRange()\">\r\n                <option value=\"4\">Last 4 Weeks</option>\r\n                <option value=\"8\">Last 8 Weeks</option>\r\n                <option value=\"12\">Last 12 Weeks</option>\r\n                <option value=\"all\">All Time</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"chart-container\">\r\n              <canvas id=\"advancedVisualizationChart\" width=\"600\" height=\"400\"></canvas>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Statistical Analysis -->\r\n          <div class=\"analytics-section\">\r\n            <h3>📊 Statistical Analysis</h3>\r\n            <div class=\"stats-grid\">\r\n              <div class=\"stat-card\">\r\n                <h4>Performance Statistics</h4>\r\n                <div id=\"performanceStats\" class=\"stat-content\">\r\n                  <!-- Stats populated dynamically -->\r\n                </div>\r\n              </div>\r\n              <div class=\"stat-card\">\r\n                <h4>Volume Statistics</h4>\r\n                <div id=\"volumeStats\" class=\"stat-content\">\r\n                  <!-- Stats populated dynamically -->\r\n                </div>\r\n              </div>\r\n              <div class=\"stat-card\">\r\n                <h4>Recovery Statistics</h4>\r\n                <div id=\"recoveryStats\" class=\"stat-content\">\r\n                  <!-- Stats populated dynamically -->\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * Create wellness tab content\r\n   */\r\n  createWellnessTab() {\r\n    return `\r\n      <div class=\"tab-content\" id=\"wellness-tab\">\r\n        <div class=\"wellness-grid\">\r\n          <!-- Wellness Input Panel -->\r\n          <div class=\"wellness-input-panel\">\r\n            <h3>📝 Daily Wellness Check-in</h3>\r\n            <form id=\"wellnessForm\" class=\"wellness-form\">\r\n              <div class=\"form-section\">\r\n                <h4>😴 Sleep Quality</h4>\r\n                <div class=\"input-group\">\r\n                  <label for=\"sleepDuration\">Duration (hours):</label>\r\n                  <input type=\"number\" id=\"sleepDuration\" min=\"4\" max=\"12\" step=\"0.5\" value=\"7.5\">\r\n                </div>\r\n                <div class=\"input-group\">\r\n                  <label for=\"sleepQuality\">Quality (1-10):</label>\r\n                  <input type=\"range\" id=\"sleepQuality\" min=\"1\" max=\"10\" value=\"7\">\r\n                  <span class=\"range-value\" id=\"sleepQualityValue\">7</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-section\">\r\n                <h4>😰 Stress Levels</h4>\r\n                <div class=\"input-group\">\r\n                  <label for=\"workStress\">Work Stress (1-10):</label>\r\n                  <input type=\"range\" id=\"workStress\" min=\"1\" max=\"10\" value=\"5\">\r\n                  <span class=\"range-value\" id=\"workStressValue\">5</span>\r\n                </div>\r\n                <div class=\"input-group\">\r\n                  <label for=\"lifeStress\">Life Stress (1-10):</label>\r\n                  <input type=\"range\" id=\"lifeStress\" min=\"1\" max=\"10\" value=\"4\">\r\n                  <span class=\"range-value\" id=\"lifeStressValue\">4</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"form-section\">\r\n                <h4>🥗 Nutrition & Hydration</h4>\r\n                <div class=\"input-group\">\r\n                  <label for=\"hydration\">Hydration (1-10):</label>\r\n                  <input type=\"range\" id=\"hydration\" min=\"1\" max=\"10\" value=\"7\">\r\n                  <span class=\"range-value\" id=\"hydrationValue\">7</span>\r\n                </div>\r\n                <div class=\"input-group\">\r\n                  <label for=\"nutritionQuality\">Nutrition Quality (1-10):</label>\r\n                  <input type=\"range\" id=\"nutritionQuality\" min=\"1\" max=\"10\" value=\"7\">\r\n                  <span class=\"range-value\" id=\"nutritionQualityValue\">7</span>\r\n                </div>\r\n              </div>\r\n\r\n              <button type=\"button\" onclick=\"enhancedUI.submitWellnessData()\" class=\"submit-btn\">\r\n                💾 Save Wellness Data\r\n              </button>\r\n            </form>\r\n          </div>\r\n\r\n          <!-- Wellness Dashboard -->\r\n          <div class=\"wellness-dashboard\">\r\n            <h3>🎯 Wellness Overview</h3>\r\n            <div class=\"wellness-scores\">\r\n              <div class=\"score-card\">\r\n                <div class=\"score-value\" id=\"wellnessRecoveryScore\">--</div>\r\n                <div class=\"score-label\">Recovery Score</div>\r\n              </div>\r\n              <div class=\"score-card\">\r\n                <div class=\"score-value\" id=\"wellnessReadinessScore\">--</div>\r\n                <div class=\"score-label\">Readiness Score</div>\r\n              </div>\r\n              <div class=\"score-card\">\r\n                <div class=\"score-value\" id=\"wellnessStressScore\">--</div>\r\n                <div class=\"score-label\">Stress Score</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Training Recommendations -->\r\n          <div class=\"training-recommendations\">\r\n            <h3>🎯 Training Recommendations</h3>\r\n            <div id=\"trainingRecommendations\" class=\"recommendations-content\">\r\n              <!-- Recommendations populated dynamically -->\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Wellness Trends -->\r\n          <div class=\"wellness-trends\">\r\n            <h3>📈 Wellness Trends</h3>\r\n            <canvas id=\"wellnessTrendChart\" width=\"500\" height=\"250\"></canvas>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * Create planning tab content\r\n   */\r\n  createPlanningTab() {\r\n    return `\r\n      <div class=\"tab-content\" id=\"planning-tab\">\r\n        <div class=\"planning-grid\">\r\n          <!-- Plan Creation -->\r\n          <div class=\"plan-creation-panel\">\r\n            <h3>🎯 Create Training Plan</h3>\r\n            <form id=\"planningForm\" class=\"planning-form\">\r\n              <div class=\"form-group\">\r\n                <label for=\"planDuration\">Plan Duration:</label>\r\n                <select id=\"planDuration\">\r\n                  <option value=\"8\">8 Weeks</option>\r\n                  <option value=\"12\">12 Weeks</option>\r\n                  <option value=\"16\" selected>16 Weeks</option>\r\n                  <option value=\"20\">20 Weeks</option>\r\n                  <option value=\"24\">24 Weeks</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label for=\"primaryGoal\">Primary Goal:</label>\r\n                <select id=\"primaryGoal\">\r\n                  <option value=\"hypertrophy\">Hypertrophy</option>\r\n                  <option value=\"strength\">Strength</option>\r\n                  <option value=\"powerbuilding\">Powerbuilding</option>\r\n                  <option value=\"endurance\">Endurance</option>\r\n                  <option value=\"general\">General Fitness</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label for=\"experienceLevel\">Experience Level:</label>\r\n                <select id=\"experienceLevel\">\r\n                  <option value=\"beginner\">Beginner</option>\r\n                  <option value=\"intermediate\">Intermediate</option>\r\n                  <option value=\"advanced\">Advanced</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div class=\"form-group\">\r\n                <label for=\"trainingDays\">Training Days per Week:</label>\r\n                <select id=\"trainingDays\">\r\n                  <option value=\"3\">3 Days</option>\r\n                  <option value=\"4\">4 Days</option>\r\n                  <option value=\"5\">5 Days</option>\r\n                  <option value=\"6\">6 Days</option>\r\n                </select>\r\n              </div>\r\n\r\n              <button type=\"button\" onclick=\"enhancedUI.generateTrainingPlan()\" class=\"generate-btn\">\r\n                🚀 Generate Intelligent Plan\r\n              </button>\r\n            </form>\r\n          </div>\r\n\r\n          <!-- Current Plan Overview -->\r\n          <div class=\"current-plan-panel\">\r\n            <h3>📋 Current Plan</h3>\r\n            <div id=\"currentPlanOverview\" class=\"plan-overview\">\r\n              <!-- Plan overview populated dynamically -->\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Plan Timeline -->\r\n          <div class=\"plan-timeline-panel\">\r\n            <h3>📅 Plan Timeline</h3>\r\n            <div id=\"planTimeline\" class=\"timeline-container\">\r\n              <!-- Timeline populated dynamically -->\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Adaptation Controls -->\r\n          <div class=\"adaptation-panel\">\r\n            <h3>🔧 Plan Adaptations</h3>\r\n            <div class=\"adaptation-controls\">\r\n              <button onclick=\"enhancedUI.adaptPlanForPerformance()\" class=\"adapt-btn\">\r\n                📈 Adapt for Performance\r\n              </button>\r\n              <button onclick=\"enhancedUI.adaptPlanForRecovery()\" class=\"adapt-btn\">\r\n                💚 Adapt for Recovery\r\n              </button>\r\n              <button onclick=\"enhancedUI.triggerIntelligentDeload()\" class=\"adapt-btn\">\r\n                🛑 Trigger Deload\r\n              </button>\r\n            </div>\r\n            <div id=\"adaptationResults\" class=\"adaptation-results\">\r\n              <!-- Adaptation results populated dynamically -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * Create insights tab content\r\n   */\r\n  createInsightsTab() {\r\n    return `\r\n      <div class=\"tab-content\" id=\"insights-tab\">\r\n        <div class=\"insights-grid\">\r\n          <!-- AI Insights -->\r\n          <div class=\"ai-insights-panel\">\r\n            <h3>🧠 AI Training Insights</h3>\r\n            <div class=\"insights-controls\">\r\n              <button onclick=\"enhancedUI.generateAIInsights()\" class=\"insights-btn\">\r\n                🔮 Generate Insights\r\n              </button>\r\n              <button onclick=\"enhancedUI.analyzeTrainingPatterns()\" class=\"insights-btn\">\r\n                📊 Pattern Analysis\r\n              </button>\r\n              <button onclick=\"enhancedUI.predictOptimizations()\" class=\"insights-btn\">\r\n                🎯 Optimization Opportunities\r\n              </button>\r\n            </div>\r\n            <div id=\"aiInsightsContent\" class=\"insights-content\">\r\n              <!-- AI insights populated dynamically -->\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Performance Analysis -->\r\n          <div class=\"performance-analysis-panel\">\r\n            <h3>📈 Performance Analysis</h3>\r\n            <div id=\"performanceAnalysis\" class=\"analysis-content\">\r\n              <!-- Performance analysis populated dynamically -->\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Trend Predictions -->\r\n          <div class=\"predictions-panel\">\r\n            <h3>🔮 Trend Predictions</h3>\r\n            <canvas id=\"predictionChart\" width=\"500\" height=\"300\"></canvas>\r\n          </div>\r\n\r\n          <!-- Risk Assessment -->\r\n          <div class=\"risk-assessment-panel\">\r\n            <h3>⚠️ Risk Assessment</h3>\r\n            <div id=\"riskAssessment\" class=\"risk-content\">\r\n              <!-- Risk assessment populated dynamically -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * Initialize the enhanced UI system\r\n   */\r\n  initializeEnhancedUI() {\r\n    this.setupEventListeners();\r\n    this.initializeCharts();\r\n    this.startAutoRefresh();\r\n    this.loadDashboardData();\r\n    \r\n    console.log('🚀 Enhanced Advanced UI System Initialized');\r\n  }\r\n\r\n  /**\r\n   * Setup event listeners for interactive elements\r\n   */\r\n  setupEventListeners() {\r\n    // Range input event listeners for real-time updates\r\n    document.addEventListener('input', (event) => {\r\n      if (event.target.type === 'range') {\r\n        const valueSpan = document.getElementById(event.target.id + 'Value');\r\n        if (valueSpan) {\r\n          valueSpan.textContent = event.target.value;\r\n        }\r\n      }\r\n    });\r\n\r\n    // Tab navigation\r\n    document.addEventListener('click', (event) => {\r\n      if (event.target.classList.contains('tab-btn')) {\r\n        this.handleTabClick(event.target);\r\n      }\r\n    });\r\n\r\n    // Auto-save wellness data\r\n    document.addEventListener('change', (event) => {\r\n      if (event.target.closest('#wellnessForm')) {\r\n        this.autoSaveWellnessData();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Switch between dashboard tabs\r\n   */\r\n  switchTab(tabName) {\r\n    // Update tab buttons\r\n    document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('active'));\r\n    document.querySelector(`.tab-btn[onclick*=\"${tabName}\"]`).classList.add('active');\r\n\r\n    // Update tab content\r\n    document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));\r\n    document.getElementById(`${tabName}-tab`).classList.add('active');\r\n\r\n    // Load tab-specific data\r\n    this.loadTabData(tabName);\r\n    \r\n    this.dashboardState.activeTab = tabName;\r\n  }\r\n\r\n  /**\r\n   * Load data for specific tab\r\n   */\r\n  loadTabData(tabName) {\r\n    switch (tabName) {\r\n      case 'overview':\r\n        this.loadOverviewData();\r\n        break;\r\n      case 'analytics':\r\n        this.loadAnalyticsData();\r\n        break;\r\n      case 'wellness':\r\n        this.loadWellnessData();\r\n        break;\r\n      case 'planning':\r\n        this.loadPlanningData();\r\n        break;\r\n      case 'insights':\r\n        this.loadInsightsData();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate AI insights\r\n   */\r\n  generateAIInsights() {\r\n    const insights = advancedIntelligence.getWeeklyIntelligence();\r\n    const content = document.getElementById('aiInsightsContent');\r\n    \r\n    let html = '<div class=\"insights-list\">';\r\n    \r\n    if (insights.recommendations.length > 0) {\r\n      html += '<h4>🎯 Recommendations</h4>';\r\n      insights.recommendations.forEach(rec => {\r\n        html += `<div class=\"insight-item ${rec.urgency}\">\r\n          <strong>${rec.type}:</strong> ${rec.message}\r\n        </div>`;\r\n      });\r\n    }\r\n    \r\n    if (insights.analytics) {\r\n      html += '<h4>📊 Analytics Insights</h4>';\r\n      Object.entries(insights.analytics.volumeLandmarkOptimizations || {}).forEach(([muscle, opt]) => {\r\n        html += `<div class=\"insight-item success\">\r\n          <strong>${muscle}:</strong> Volume landmarks can be optimized (${opt.confidence}% confidence)\r\n        </div>`;\r\n      });\r\n    }\r\n    \r\n    html += '</div>';\r\n    content.innerHTML = html;\r\n    \r\n    this.showNotification('AI insights generated successfully', 'success');\r\n  }\r\n\r\n  /**\r\n   * Show notification\r\n   */\r\n  showNotification(message, type = 'info') {\r\n    const notification = document.createElement('div');\r\n    notification.className = `notification ${type}`;\r\n    notification.innerHTML = `\r\n      <span class=\"notification-icon\">${this.notifications.types[type].icon}</span>\r\n      <span class=\"notification-message\">${message}</span>\r\n      <button class=\"notification-close\" onclick=\"this.parentElement.remove()\">×</button>\r\n    `;\r\n    \r\n    document.getElementById('notificationArea').appendChild(notification);\r\n    \r\n    // Auto-remove after 5 seconds\r\n    setTimeout(() => {\r\n      if (notification.parentElement) {\r\n        notification.remove();\r\n      }\r\n    }, 5000);\r\n  }\r\n\r\n  /**\r\n   * Export dashboard data\r\n   */\r\n  exportDashboard() {\r\n    const dashboardData = this.collectDashboardData();\r\n    const exportData = {\r\n      timestamp: new Date().toISOString(),\r\n      data: dashboardData\r\n    };\r\n    \r\n    const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `training-dashboard-${new Date().toISOString().split('T')[0]}.json`;\r\n    a.click();\r\n    \r\n    this.showNotification('Dashboard data exported successfully', 'success');\r\n  }\r\n\r\n  /**\r\n   * Helper method to collect all dashboard data\r\n   */\r\n  collectDashboardData() {\r\n    return {\r\n      overview: this.getOverviewData(),\r\n      analytics: this.getAnalyticsData(),\r\n      wellness: this.getWellnessData(),\r\n      planning: this.getPlanningData(),\r\n      insights: this.getInsightsData()\r\n    };\r\n  }\r\n}\r\n\r\n// Create and expose singleton instance\r\nconst enhancedUI = new EnhancedAdvancedUI();\r\n\r\n// Make globally available\r\nwindow.enhancedUI = enhancedUI;\r\n\r\nexport {\r\n  EnhancedAdvancedUI,\r\n  enhancedUI\r\n};\r\n"],"names":["modules","entry","mainEntry","parcelRequireName","externals","distDir","publicUrl","devServer","globalObject","globalThis","self","window","global","previousRequire","importMap","i","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","length","mainExports","define","amd","__globalThis","parcelHelpers","defineInteropFlag","export","EnhancedAdvancedUI","enhancedUI","_intelligenceHubJs","activeCharts","Map","dashboardState","initializeDashboardState","notifications","initializeNotificationSystem","activeTab","chartConfigs","refreshRate","autoRefresh","fullscreen","theme","queue","displayed","Set","types","info","icon","color","success","warning","error","insight","createAdvancedDashboard","dashboard","document","createElement","className","innerHTML","createOverviewTab","createAnalyticsTab","createWellnessTab","createPlanningTab","createInsightsTab","initializeEnhancedUI","setupEventListeners","initializeCharts","startAutoRefresh","loadDashboardData","console","log","addEventListener","event","target","type","valueSpan","getElementById","textContent","value","classList","contains","handleTabClick","closest","autoSaveWellnessData","switchTab","tabName","querySelectorAll","forEach","btn","remove","querySelector","add","content","loadTabData","loadOverviewData","loadAnalyticsData","loadWellnessData","loadPlanningData","loadInsightsData","generateAIInsights","insights","advancedIntelligence","getWeeklyIntelligence","html","recommendations","rec","urgency","message","analytics","entries","volumeLandmarkOptimizations","muscle","opt","confidence","showNotification","notification","appendChild","setTimeout","parentElement","exportDashboard","dashboardData","collectDashboardData","blob","Blob","JSON","stringify","timestamp","Date","toISOString","data","url","URL","createObjectURL","a","href","download","split","click","overview","getOverviewData","getAnalyticsData","wellness","getWellnessData","planning","getPlanningData","getInsightsData"],"version":3,"file":"ProgramDesignWorkspace.36e482e4.js.map"}