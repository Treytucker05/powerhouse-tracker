{"version":3,"file":"compute531-BdiGZ_3o.js","sources":["../../src/lib/fiveThreeOne/compute531.js"],"sourcesContent":["// src/lib/fiveThreeOne/compute531.js\r\n// Pure functions to build a 4-week 5/3/1 plan from wizard state\r\n\r\n// Internal array form used by buildProgram/mainSetsFor\r\nconst LOADING_OPTIONS_ARRAY = {\r\n    1: [\r\n        { week: 1, sets: [{ pct: 65, reps: 5 }, { pct: 75, reps: 5 }, { pct: 85, reps: 5, amrap: true }] },\r\n        { week: 2, sets: [{ pct: 70, reps: 3 }, { pct: 80, reps: 3 }, { pct: 90, reps: 3, amrap: true }] },\r\n        { week: 3, sets: [{ pct: 75, reps: 5 }, { pct: 85, reps: 3 }, { pct: 95, reps: 1, amrap: true }] },\r\n        { week: 4, sets: [{ pct: 40, reps: 5 }, { pct: 50, reps: 5 }, { pct: 60, reps: 5 }] }, // deload\r\n    ],\r\n    2: [\r\n        { week: 1, sets: [{ pct: 75, reps: 5 }, { pct: 80, reps: 5 }, { pct: 85, reps: 5, amrap: true }] },\r\n        { week: 2, sets: [{ pct: 80, reps: 3 }, { pct: 85, reps: 3 }, { pct: 90, reps: 3, amrap: true }] },\r\n        { week: 3, sets: [{ pct: 85, reps: 5 }, { pct: 90, reps: 3 }, { pct: 95, reps: 1, amrap: true }] },\r\n        { week: 4, sets: [{ pct: 40, reps: 5 }, { pct: 50, reps: 5 }, { pct: 60, reps: 5 }] },\r\n    ],\r\n};\r\n\r\n// Public percent table (per Prompt 7) used by Step 4 UI\r\nexport const LOADING_OPTIONS = {\r\n    1: {\r\n        1: [65, 75, 85],\r\n        2: [70, 80, 90],\r\n        3: [75, 85, 95],\r\n        4: [40, 50, 60]\r\n    },\r\n    2: {\r\n        1: [75, 80, 85],\r\n        2: [80, 85, 90],\r\n        3: [85, 90, 95],\r\n        4: [40, 50, 60]\r\n    }\r\n};\r\n\r\nexport const WARMUP_SCHEME = { jumps: [40, 50, 60], reps: [5, 5, 3] }; // Wendler: 40/50/60 x 5/5/3\r\n\r\n// Percent tables for main set schemes (Option 1 & 2)\r\nexport const PERCENT_SCHEMES = {\r\n    1: {\r\n        1: [{ pct: 65, reps: '5' }, { pct: 75, reps: '5' }, { pct: 85, reps: '5+' }],\r\n        2: [{ pct: 70, reps: '3' }, { pct: 80, reps: '3' }, { pct: 90, reps: '3+' }],\r\n        3: [{ pct: 75, reps: '5' }, { pct: 85, reps: '3' }, { pct: 95, reps: '1+' }],\r\n        4: [{ pct: 40, reps: '5' }, { pct: 50, reps: '5' }, { pct: 60, reps: '5' }],\r\n    },\r\n    2: {\r\n        1: [{ pct: 75, reps: '5' }, { pct: 80, reps: '5' }, { pct: 85, reps: '5+' }],\r\n        2: [{ pct: 80, reps: '3' }, { pct: 85, reps: '3' }, { pct: 90, reps: '3+' }],\r\n        3: [{ pct: 85, reps: '5' }, { pct: 90, reps: '3' }, { pct: 95, reps: '1+' }],\r\n        4: [{ pct: 40, reps: '5' }, { pct: 50, reps: '5' }, { pct: 60, reps: '5' }],\r\n    },\r\n};\r\n\r\nexport function getMainSetScheme(option = 1, week = 1) {\r\n    const opt = Number(option) === 2 ? 2 : 1;\r\n    const w = Math.max(1, Math.min(4, Number(week) || 1));\r\n    return PERCENT_SCHEMES[opt][w];\r\n}\r\n\r\nexport function roundToIncrement(value, inc = 5, mode = 'nearest') {\r\n    if (!inc || inc <= 0) return Math.round(value);\r\n    const x = value / inc;\r\n    if (mode === 'floor') return Math.floor(x) * inc;\r\n    if (mode === 'ceiling') return Math.ceil(x) * inc;\r\n    return Math.round(x) * inc;\r\n}\r\n\r\nfunction pctOfTM(tm, pct) {\r\n    return tm * (pct / 100);\r\n}\r\n\r\nexport function effectiveTM(lift, state) {\r\n    const l = state?.lifts?.[lift] || {};\r\n    const tmPct = l.tmPercent ?? state?.tmPercent ?? 90;\r\n    const base = l.tm ?? (l.oneRM ? l.oneRM * (tmPct / 100) : null);\r\n    if (!base) return null;\r\n    const inc = state?.rounding?.increment ?? (state?.units === 'kg' ? 2.5 : 5);\r\n    const mode = state?.rounding?.mode ?? 'nearest';\r\n    return roundToIncrement(base, inc, mode);\r\n}\r\n\r\nfunction warmupsFor(tm, state) {\r\n    const inc = state?.rounding?.increment ?? (state?.units === 'kg' ? 2.5 : 5);\r\n    const mode = state?.rounding?.mode ?? 'nearest';\r\n    return WARMUP_SCHEME.jumps.map((p, i) => ({\r\n        pct: p,\r\n        reps: WARMUP_SCHEME.reps[i],\r\n        weight: roundToIncrement(pctOfTM(tm, p), inc, mode),\r\n    }));\r\n}\r\n\r\nfunction mainSetsFor(tm, loadingOption, targetWeek, state) {\r\n    const table = LOADING_OPTIONS_ARRAY[loadingOption] || LOADING_OPTIONS_ARRAY[1];\r\n    const entry = table.find((w) => w.week === targetWeek);\r\n    if (!entry) return [];\r\n    const inc = state?.rounding?.increment ?? (state?.units === 'kg' ? 2.5 : 5);\r\n    const mode = state?.rounding?.mode ?? 'nearest';\r\n    return entry.sets.map((s) => ({\r\n        pct: s.pct,\r\n        reps: s.reps,\r\n        amrap: !!s.amrap && targetWeek !== 4, // never AMRAP deload\r\n        weight: roundToIncrement(pctOfTM(tm, s.pct), inc, mode),\r\n    }));\r\n}\r\n\r\n// Simple set calculation using schemes; used by previews/utilities\r\nexport function calcMainSets(tm, optionOrOpts = 1, week = 1, rounding = { increment: 5, mode: 'nearest' }) {\r\n    if (!Number.isFinite(tm)) return [];\r\n    // Support legacy signature: calcMainSets(tm, { week, option, increment, mode })\r\n    if (optionOrOpts && typeof optionOrOpts === 'object') {\r\n        const { week: w = 1, option: opt = 1, increment = 5, mode = 'nearest' } = optionOrOpts;\r\n        return getMainSetScheme(opt, w).map(s => ({\r\n            pct: s.pct,\r\n            reps: typeof s.reps === 'string' ? Number(s.reps.replace('+', '')) || Number(s.reps) || 0 : s.reps,\r\n            amrap: typeof s.reps === 'string' ? s.reps.includes('+') && w !== 4 : false,\r\n            weight: roundToIncrement(tm * (s.pct / 100), increment, mode),\r\n        }));\r\n    }\r\n    const opt = Number(optionOrOpts) || 1;\r\n    const inc = rounding?.increment ?? 5;\r\n    const mode = rounding?.mode ?? 'nearest';\r\n    return getMainSetScheme(opt, week).map(s => ({\r\n        pct: s.pct,\r\n        reps: typeof s.reps === 'string' ? Number(s.reps.replace('+', '')) || Number(s.reps) || 0 : s.reps,\r\n        amrap: typeof s.reps === 'string' ? s.reps.includes('+') && week !== 4 : false,\r\n        weight: roundToIncrement(tm * (s.pct / 100), inc, mode),\r\n    }));\r\n}\r\n\r\nfunction supplementalFor(lift, week, state) {\r\n    const template = state?.template?.id || null;\r\n    const inc = state?.rounding?.increment ?? (state?.units === 'kg' ? 2.5 : 5);\r\n    const mode = state?.rounding?.mode ?? 'nearest';\r\n    const tm = effectiveTM(lift, state);\r\n    if (!template || !tm) return null;\r\n\r\n    if (template === 'bbb') {\r\n        const pct = state?.template?.bbb?.pct ?? 50; // 50/60/70 supported\r\n        const variant = state?.template?.bbb?.variant ?? 'same'; // 'same' | 'opposite'\r\n        const targetLift = variant === 'opposite'\r\n            ? (lift === 'squat' ? 'deadlift' : lift === 'deadlift' ? 'squat' : lift === 'bench' ? 'press' : 'bench')\r\n            : lift;\r\n\r\n        const tmForSupplement = effectiveTM(targetLift, state) ?? tm;\r\n        const w = roundToIncrement(pctOfTM(tmForSupplement, pct), inc, mode);\r\n        const vol = { sets: 5, reps: 10 };\r\n        const note = `BBB ${pct}% TM (${variant === 'same' ? 'same lift' : 'opposite lift: ' + targetLift})`;\r\n        return { type: 'bbb', targetLift, weight: w, volume: vol, note };\r\n    }\r\n\r\n    if (template === 'triumvirate') {\r\n        // Two assistance picks per day (already chosen or defaults)\r\n        const picks = state?.assistance?.selections?.[lift] || defaultTriumvirate(lift);\r\n        return { type: 'triumvirate', picks };\r\n    }\r\n\r\n    if (template === 'periodizationBible') {\r\n        const picks = defaultPeriodizationBible(lift);\r\n        return { type: 'periodizationBible', picks };\r\n    }\r\n\r\n    if (template === 'bodyweight') {\r\n        const picks = defaultBodyweight(lift);\r\n        return { type: 'bodyweight', picks };\r\n    }\r\n\r\n    if (template === 'jackShit') {\r\n        return { type: 'jackShit' };\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction defaultTriumvirate(lift) {\r\n    // Book-accurate Triumvirate assistance per p. 48\r\n    if (lift === 'press') return [{ ex: 'Dips', scheme: '5×15' }, { ex: 'Chin-ups', scheme: '5×10' }];\r\n    if (lift === 'bench') return [{ ex: 'DB Bench Press', scheme: '5×15' }, { ex: 'DB Rows', scheme: '5×10' }]; // Fixed: p. 48\r\n    if (lift === 'deadlift') return [{ ex: 'Good Mornings', scheme: '5×10' }, { ex: 'Hanging Leg Raises', scheme: '5×15' }];\r\n    if (lift === 'squat') return [{ ex: 'Leg Press', scheme: '5×15' }, { ex: 'Leg Curls', scheme: '5×10' }]; // Fixed: p. 48\r\n    return [];\r\n}\r\n\r\nfunction defaultPeriodizationBible(lift) {\r\n    // Simple balanced buckets; adjust later per UI selections\r\n    if (lift === 'press' || lift === 'bench') {\r\n        return [\r\n            { bucket: 'Shoulders/Chest', ex: 'DB Press', scheme: '5x12-15' },\r\n            { bucket: 'Lats/Upper Back', ex: 'Rows/Chins', scheme: '5x10-15' },\r\n            { bucket: 'Triceps', ex: 'Extensions', scheme: '5x12-20' },\r\n        ];\r\n    }\r\n    // Lower days\r\n    return [\r\n        { bucket: 'Posterior', ex: 'RDL/GHR', scheme: '5x10-15' },\r\n        { bucket: 'Quads', ex: 'Leg Press/Lunges', scheme: '5x12-20' },\r\n        { bucket: 'Abs', ex: 'Hanging Leg Raises', scheme: '5x12-20' },\r\n    ];\r\n}\r\n\r\nfunction defaultBodyweight(lift) {\r\n    return [\r\n        { ex: 'Chin-ups', targetReps: 75 },\r\n        { ex: 'Dips or Push-ups', targetReps: 75 },\r\n        { ex: 'Hanging Leg Raises', targetReps: 75 },\r\n    ];\r\n}\r\n\r\nfunction scheduleWeeks(state) {\r\n    const freq = state?.schedule?.frequency || '4day';\r\n    const order = state?.schedule?.order?.length ? state.schedule.order : ['press', 'deadlift', 'bench', 'squat'];\r\n\r\n    if (freq === '4day') {\r\n        // Week template repeats same order each week\r\n        return [order, order, order, order];\r\n    }\r\n\r\n    if (freq === '3day') {\r\n        // 6-week rolling is canonical; here we preview first 4 weeks rotation\r\n        // W1: P-DL-B, W2: SQ-P-DL, W3: B-SQ-P, W4: DL-B-SQ\r\n        return [\r\n            ['press', 'deadlift', 'bench'],\r\n            ['squat', 'press', 'deadlift'],\r\n            ['bench', 'squat', 'press'],\r\n            ['deadlift', 'bench', 'squat'],\r\n        ];\r\n    }\r\n\r\n    if (freq === '2day') {\r\n        // Default pairings\r\n        return [\r\n            ['squat', 'bench'],\r\n            ['deadlift', 'press'],\r\n            ['squat', 'bench'],\r\n            ['deadlift', 'press'],\r\n        ];\r\n    }\r\n\r\n    // 1-day: alternate pairs weekly; preview 4 weeks\r\n    return [\r\n        ['squat', 'bench'],\r\n        ['deadlift', 'press'],\r\n        ['squat', 'bench'],\r\n        ['deadlift', 'press'],\r\n    ];\r\n}\r\n\r\nexport function buildProgram(state) {\r\n    const units = state?.units || 'lb';\r\n    const loadingOption = state?.loading?.option || 1;\r\n    const includeDeload = state?.loading?.includeDeload !== false; // default true\r\n    const weeksOrder = scheduleWeeks(state);\r\n\r\n    const lifts = ['press', 'deadlift', 'bench', 'squat'];\r\n    const tmTable = Object.fromEntries(\r\n        lifts.map((lift) => [lift, effectiveTM(lift, state)])\r\n    );\r\n\r\n    const weeks = weeksOrder.map((days, wi) => {\r\n        const weekNum = wi + 1;\r\n        const isDeload = weekNum === 4 && includeDeload;\r\n        const dayPlans = days.map((lift) => {\r\n            const tm = tmTable[lift];\r\n            const warmups = tm ? warmupsFor(tm, state) : [];\r\n            const mains = tm ? mainSetsFor(tm, loadingOption, weekNum, state) : [];\r\n            const supplemental = supplementalFor(lift, weekNum, state);\r\n            return { lift, tm, warmups, mains, supplemental };\r\n        });\r\n        return { week: weekNum, deload: isDeload, days: dayPlans };\r\n    });\r\n\r\n    return {\r\n        units,\r\n        meta: {\r\n            template: state?.template?.id || null,\r\n            frequency: state?.schedule?.frequency || '4day',\r\n            order: state?.schedule?.order || ['press', 'deadlift', 'bench', 'squat'],\r\n            rounding: state?.rounding || { increment: units === 'kg' ? 2.5 : 5, mode: 'nearest' },\r\n            increments: state?.progression || { upper: 5, lower: 10, roundingMode: 'ceiling' },\r\n        },\r\n        tms: tmTable,\r\n        weeks,\r\n    };\r\n}\r\n\r\n// Utility for e1RM if you log AMRAPs later\r\nexport function estimate1RM(weight, reps) {\r\n    return weight * reps * 0.0333 + weight;\r\n}\r\n\r\n// Alias for Prompt 7 naming\r\nexport function calcE1RM(weight, reps) {\r\n    if (!Number.isFinite(weight) || !Number.isFinite(reps) || reps <= 0) return 0;\r\n    return weight * reps * 0.0333 + weight;\r\n}\r\n\r\n// Classify lift for increment rules\r\nexport function classifyLift(lift) {\r\n    if (lift === 'bench' || lift === 'press') return 'upper';\r\n    return 'lower';\r\n}\r\n"],"names":["LOADING_OPTIONS_ARRAY","LOADING_OPTIONS","WARMUP_SCHEME","PERCENT_SCHEMES","getMainSetScheme","option","week","opt","w","roundToIncrement","value","inc","mode","x","pctOfTM","tm","pct","effectiveTM","lift","state","_a","_b","_c","l","tmPct","base","warmupsFor","p","i","mainSetsFor","loadingOption","targetWeek","entry","s","calcMainSets","optionOrOpts","rounding","increment","supplementalFor","_d","_e","_f","_g","_h","_i","template","variant","targetLift","tmForSupplement","vol","note","defaultTriumvirate","defaultPeriodizationBible","defaultBodyweight","scheduleWeeks","freq","order","buildProgram","units","includeDeload","weeksOrder","tmTable","weeks","days","wi","weekNum","isDeload","dayPlans","warmups","mains","supplemental","estimate1RM","weight","reps","calcE1RM","classifyLift"],"mappings":"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"}