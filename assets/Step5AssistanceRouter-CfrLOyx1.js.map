{"version":3,"file":"Step5AssistanceRouter-CfrLOyx1.js","sources":["../../src/lib/fiveThreeOne/assistanceLibrary.js","../../src/lib/fiveThreeOne/assistPlanner.js","../../src/components/program/steps/Step5AssistanceRouter.jsx"],"sourcesContent":["// src/lib/fiveThreeOne/assistanceLibrary.js\r\n\r\n// Template IDs used across UI/state\r\nexport const TEMPLATE_IDS = {\r\n    BBB: 'bbb',\r\n    TRIUMVIRATE: 'triumvirate',\r\n    PERIODIZATION_BIBLE: 'periodization_bible',\r\n    BODYWEIGHT: 'bodyweight',\r\n    JACK_SHIT: 'jack_shit'\r\n};\r\n\r\n// Canonical per-lift order used across the builder\r\nexport const DAY_ORDER = ['press', 'deadlift', 'bench', 'squat'];\r\n\r\n// Opposite lift mapping for BBB pairing\r\nexport const OPPOSITES = {\r\n    squat: 'deadlift',\r\n    deadlift: 'squat',\r\n    bench: 'press',\r\n    press: 'bench',\r\n    press: 'bench'\r\n};\r\n\r\n// Lightweight catalogue of assistance exercises by bucket\r\nexport const ASSISTANCE_CATALOG = {\r\n    // Upper push\r\n    dips: { name: 'Dips', bucket: 'upper_push' },\r\n    pushups: { name: 'Push-Ups', bucket: 'upper_push' },\r\n    db_press: { name: 'DB Bench Press', bucket: 'upper_push' },\r\n    cgbp: { name: 'Close-Grip Bench', bucket: 'upper_push' },\r\n\r\n    // Upper pull\r\n    chins: { name: 'Chin-Ups', bucket: 'upper_pull' },\r\n    rows: { name: 'DB Rows', bucket: 'upper_pull' },\r\n    facepulls: { name: 'Face Pulls', bucket: 'upper_pull' },\r\n\r\n    // Hinge/posterior\r\n    ghr: { name: 'Glute-Ham Raise', bucket: 'posterior' },\r\n    rdl: { name: 'Romanian Deadlift', bucket: 'posterior' },\r\n    goodmornings: { name: 'Good Mornings', bucket: 'posterior' },\r\n    rackpulls: { name: 'Rack Pulls', bucket: 'posterior' },\r\n\r\n    // Squat/quad\r\n    legpress: { name: 'Leg Press', bucket: 'quad' },\r\n    lunges: { name: 'Lunges', bucket: 'quad' },\r\n    stepups: { name: 'Step-Ups', bucket: 'quad' },\r\n    legcurl: { name: 'Leg Curls', bucket: 'hamstring' },\r\n\r\n    // Core\r\n    hlr: { name: 'Hanging Leg Raises', bucket: 'core' },\r\n    abwheel: { name: 'Ab Wheel', bucket: 'core' },\r\n    situps: { name: 'Sit-Ups', bucket: 'core' }\r\n};\r\n\r\n// Triumvirate (book-accurate assistance per p. 48)\r\nexport const TRIUMVIRATE_DEFAULTS = {\r\n    press: [\r\n        { ref: 'dips', sets: 5, reps: 15 },\r\n        { ref: 'chins', sets: 5, reps: 10 }\r\n    ],\r\n    bench: [\r\n        { ref: 'db_press', sets: 5, reps: 15 }, // Fixed: DB Bench Press per p. 48\r\n        { ref: 'rows', sets: 5, reps: 10 }      // Fixed: DB Rows per p. 48\r\n    ],\r\n    deadlift: [\r\n        { ref: 'goodmornings', sets: 5, reps: 10 },\r\n        { ref: 'hlr', sets: 5, reps: 15 }\r\n    ],\r\n    squat: [\r\n        { ref: 'legpress', sets: 5, reps: 15 }, // Fixed: Leg Press per p. 48\r\n        { ref: 'legcurl', sets: 5, reps: 10 }   // Fixed: Leg Curls per p. 48\r\n    ]\r\n};\r\n\r\n// Periodization Bible category targets\r\nexport const PB_CATEGORIES = {\r\n    upper: [\r\n        { key: 'shoulders_chest', label: 'Shoulders/Chest' },\r\n        { key: 'lats_upperback', label: 'Lats/Upper Back' },\r\n        { key: 'triceps', label: 'Triceps' }\r\n    ],\r\n    lower_deadlift: [\r\n        { key: 'hamstrings', label: 'Hamstrings' },\r\n        { key: 'quads', label: 'Quads' },\r\n        { key: 'abs', label: 'Abs' }\r\n    ],\r\n    lower_squat: [\r\n        { key: 'low_back', label: 'Low Back' },\r\n        { key: 'quads', label: 'Quads' },\r\n        { key: 'abs', label: 'Abs' }\r\n    ]\r\n};\r\n\r\n// Bodyweight pool\r\nexport const BODYWEIGHT_POOL = {\r\n    press: ['chins', 'dips', 'pushups', 'hlr'],\r\n    deadlift: ['chins', 'hlr', 'pushups'],\r\n    bench: ['chins', 'dips', 'pushups', 'hlr'],\r\n    squat: ['pushups', 'hlr', 'situps']\r\n};\r\n","// src/lib/fiveThreeOne/assistPlanner.js\r\nimport { TEMPLATE_IDS, OPPOSITES, TRIUMVIRATE_DEFAULTS, BODYWEIGHT_POOL } from './assistanceLibrary.js';\r\n\r\n/**\r\n * Assistance item shape:\r\n * { name: string, ref?: string, sets: number, reps: number, load?: { type:'percentTM'|'bw'|'fixed', value?: number, liftRef?: string }, notes?: string }\r\n */\r\n\r\n/** Build BBB items for a given day */\r\nfunction buildBBB(dayKey, tms, percent = 50, pairMode = 'same') {\r\n    const mainLift = dayKey;\r\n    const pairLift = pairMode === 'opposite' ? (OPPOSITES[dayKey] || dayKey) : dayKey;\r\n    const refName = pairMode === 'opposite' ? `${pairLift.toUpperCase()} (BBB)` : `${mainLift.toUpperCase()} (BBB)`;\r\n\r\n    const liftRef = pairLift;\r\n    const item = {\r\n        name: refName,\r\n        sets: 5,\r\n        reps: 10,\r\n        load: { type: 'percentTM', value: percent, liftRef }\r\n    };\r\n    return [item];\r\n}\r\n\r\n/** Build Triumvirate items (2 assistance) */\r\nfunction buildTriumvirate(dayKey) {\r\n    const defs = TRIUMVIRATE_DEFAULTS[dayKey] || [];\r\n    return defs.map(d => ({\r\n        name: d.ref.toUpperCase(),\r\n        ref: d.ref,\r\n        sets: d.sets,\r\n        reps: d.reps,\r\n        load: { type: 'bw' }\r\n    }));\r\n}\r\n\r\n/** Periodization Bible builder: 3 categories, 5x10-20 default */\r\nfunction buildPeriodizationBible(dayKey) {\r\n    // Keep simple defaults; user can edit in UI\r\n    const picks = {\r\n        press: [\r\n            { name: 'DB Press', sets: 5, reps: 12 },\r\n            { name: 'Chin-Ups', sets: 5, reps: 10, load: { type: 'bw' } },\r\n            { name: 'Pushdowns', sets: 5, reps: 15 }\r\n        ],\r\n        bench: [\r\n            { name: 'DB Incline Press', sets: 5, reps: 12 },\r\n            { name: 'Rows', sets: 5, reps: 10 },\r\n            { name: 'Dips', sets: 5, reps: 12, load: { type: 'bw' } }\r\n        ],\r\n        deadlift: [\r\n            { name: 'RDL', sets: 5, reps: 10 },\r\n            { name: 'Leg Press', sets: 5, reps: 15 },\r\n            { name: 'Abs', sets: 5, reps: 15, load: { type: 'bw' } }\r\n        ],\r\n        squat: [\r\n            { name: 'Back Extensions', sets: 5, reps: 12 },\r\n            { name: 'Leg Curls', sets: 5, reps: 15 },\r\n            { name: 'Abs', sets: 5, reps: 15, load: { type: 'bw' } }\r\n        ]\r\n    };\r\n    return picks[dayKey] || [];\r\n}\r\n\r\n/** Bodyweight builder: 2-4 movements to 75+ reps each */\r\nfunction buildBodyweight(dayKey) {\r\n    const pool = BODYWEIGHT_POOL[dayKey] || [];\r\n    const select = pool.slice(0, 3); // default 3\r\n    return select.map(ref => ({\r\n        name: ref.toUpperCase(),\r\n        ref,\r\n        sets: 5,\r\n        reps: 15,\r\n        load: { type: 'bw' }\r\n    }));\r\n}\r\n\r\n/** Jack Shit builder: none */\r\nfunction buildJackShit() {\r\n    return [];\r\n}\r\n\r\n/**\r\n * Generate plan per day from template + options\r\n * @param {string} templateId\r\n * @param {{bbb?:{percent:number,pairMode:'same'|'opposite'}}} options\r\n * @param {{press?:{tm:number}, bench?:{tm:number}, squat?:{tm:number}, deadlift?:{tm:number}}} tms\r\n * @returns {{press:object[], deadlift:object[], bench:object[], squat:object[]}}\r\n */\r\nexport function buildAssistancePlan(templateId, options, tms) {\r\n    // Normalize template ID to our canonical constants; accept camelCase variants from older UI\r\n    const tpl = (templateId === 'periodizationBible') ? TEMPLATE_IDS.PERIODIZATION_BIBLE\r\n        : (templateId === 'jackShit') ? TEMPLATE_IDS.JACK_SHIT\r\n            : templateId;\r\n    const res = { press: [], deadlift: [], bench: [], squat: [] };\r\n    switch (tpl) {\r\n        case TEMPLATE_IDS.BBB: {\r\n            const percent = Number(options?.bbb?.percent ?? 50);\r\n            const pairMode = options?.bbb?.pairMode === 'opposite' ? 'opposite' : 'same';\r\n            ['press', 'deadlift', 'bench', 'squat'].forEach(day => {\r\n                res[day] = buildBBB(day, tms, percent, pairMode);\r\n            });\r\n            return res;\r\n        }\r\n        case TEMPLATE_IDS.TRIUMVIRATE: {\r\n            ['press', 'deadlift', 'bench', 'squat'].forEach(day => { res[day] = buildTriumvirate(day); });\r\n            return res;\r\n        }\r\n        case TEMPLATE_IDS.PERIODIZATION_BIBLE: {\r\n            ['press', 'deadlift', 'bench', 'squat'].forEach(day => { res[day] = buildPeriodizationBible(day); });\r\n            return res;\r\n        }\r\n        case TEMPLATE_IDS.BODYWEIGHT: {\r\n            ['press', 'deadlift', 'bench', 'squat'].forEach(day => { res[day] = buildBodyweight(day); });\r\n            return res;\r\n        }\r\n        case TEMPLATE_IDS.JACK_SHIT:\r\n        default:\r\n            ['press', 'deadlift', 'bench', 'squat'].forEach(day => { res[day] = buildJackShit(); });\r\n            return res;\r\n    }\r\n}\r\n","// src/components/program/steps/Step5AssistanceRouter.jsx\r\nimport React, { useMemo, useState } from 'react';\r\nimport { Info, AlertTriangle, RefreshCcw, Settings, CheckCircle } from 'lucide-react';\r\nimport StepStatusPill from './_shared/StepStatusPill.jsx';\r\nimport { STEP_IDS } from './_registry/stepRegistry.js';\r\nimport { TEMPLATE_IDS } from '../../../lib/fiveThreeOne/assistanceLibrary.js';\r\nimport { buildAssistancePlan } from '../../../lib/fiveThreeOne/assistPlanner.js';\r\nimport { percentOfTM, toDisplayWeight } from '../../../lib/fiveThreeOne/math.js';\r\nimport { useExerciseDB } from '../../../contexts/ExerciseDBContext.jsx';\r\n\r\nexport default function Step5AssistanceRouter({ data, updateData }) {\r\n    const st = data || {};\r\n    const { loaded: exLoaded, categoriesMap } = useExerciseDB();\r\n    const [newPick, setNewPick] = useState({}); // { press: name }\r\n    const set = (patch) => updateData({ ...st, ...patch });\r\n\r\n    const templateId = st?.template?.id || st?.template; // support either shape\r\n    const lifts = st?.lifts || {};\r\n    const rounding = st?.rounding || { increment: 5, mode: 'nearest' };\r\n\r\n    const assistance = st?.assistance || {\r\n        options: { bbb: { percent: 50, pairMode: 'same' }, bodyweight: { minRepsPerExercise: 75 } },\r\n        perDay: { press: [], deadlift: [], bench: [], squat: [] }\r\n    };\r\n\r\n    const caps = st?.caps || { maxAssistanceSetsPerDay: 15, superset: true };\r\n\r\n    const regenerate = () => {\r\n        if (!templateId) return;\r\n        const plan = buildAssistancePlan(templateId, assistance?.options, lifts);\r\n        set({ assistance: { ...assistance, perDay: plan } });\r\n    };\r\n\r\n    const changeBBB = (patch) => {\r\n        const next = { ...assistance, options: { ...assistance.options, bbb: { ...assistance.options.bbb, ...patch } } };\r\n        const plan = templateId === TEMPLATE_IDS.BBB ? buildAssistancePlan(templateId, next.options, lifts) : assistance.perDay;\r\n        set({ assistance: { ...next, perDay: plan } });\r\n    };\r\n\r\n    const totalSets = (items) => items.reduce((a, it) => a + (Number(it.sets) || 0), 0);\r\n\r\n    const dayNames = { press: 'Press Day', deadlift: 'Deadlift Day', bench: 'Bench Day', squat: 'Squat Day' };\r\n\r\n    const bbbPercent = Number(assistance?.options?.bbb?.percent ?? 50);\r\n    const bbbPairMode = assistance?.options?.bbb?.pairMode ?? 'same';\r\n\r\n    // UI helpers for BBB weight display\r\n    const computeBBBWeight = (liftRef) => {\r\n        const tm = Number(lifts?.[liftRef]?.tm);\r\n        if (!Number.isFinite(tm)) return '-';\r\n        return toDisplayWeight(percentOfTM(tm, bbbPercent, rounding?.increment ?? 5));\r\n    };\r\n\r\n    const templateBadge = useMemo(() => {\r\n        switch (templateId) {\r\n            case TEMPLATE_IDS.BBB: return 'Boring But Big';\r\n            case TEMPLATE_IDS.TRIUMVIRATE: return 'Triumvirate';\r\n            case TEMPLATE_IDS.PERIODIZATION_BIBLE: return 'Periodization Bible';\r\n            case TEMPLATE_IDS.BODYWEIGHT: return 'Bodyweight Only';\r\n            case TEMPLATE_IDS.JACK_SHIT: return 'Main Lift Only';\r\n            default: return 'No Template Selected';\r\n        }\r\n    }, [templateId]);\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            <div className=\"flex items-start justify-between\">\r\n                <div>\r\n                    <h3 className=\"text-xl font-semibold text-white mb-1\">Step 5: Assistance Router</h3>\r\n                    <p className=\"text-gray-400 text-sm\">Template-driven assistance with smart defaults. Edit per day as needed.</p>\r\n                </div>\r\n                <StepStatusPill stepId={STEP_IDS.ASSISTANCE_ROUTER} data={st} />\r\n            </div>\r\n\r\n            {!templateId && (\r\n                <div className=\"bg-yellow-900/20 border border-yellow-600 rounded p-4\">\r\n                    <div className=\"flex gap-2 items-start\">\r\n                        <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                        <div className=\"text-yellow-100 text-sm\">\r\n                            Select a template in <b>Step 2: Template Selection</b> to enable assistance planning.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Info box */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 rounded p-4\">\r\n                <div className=\"flex gap-3 items-start\">\r\n                    <Info className=\"w-5 h-5 text-blue-300 mt-0.5\" />\r\n                    <div className=\"text-blue-100 text-sm\">\r\n                        <div className=\"font-medium mb-1\">Guidelines</div>\r\n                        <ul className=\"list-disc ml-5 space-y-1\">\r\n                            <li>Assistance supports — not replaces — the main lift PRs.</li>\r\n                            <li>BBB: 5×10 at 50–70% of TM; pair with same or opposite lift.</li>\r\n                            <li>Triumvirate: exactly two accessories (5 sets each) after the main lift.</li>\r\n                            <li>Periodization Bible: 3 categories × 5 sets of 10–20 reps.</li>\r\n                            <li>Bodyweight: 2–4 movements, target ≥75 total reps per movement.</li>\r\n                            <li>Jack Shit: no assistance (valid if time/recovery limited).</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Template header */}\r\n            <div className=\"bg-gray-900/60 border border-gray-700 rounded p-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"text-white font-medium\">Current Template: <span className=\"text-red-400\">{templateBadge}</span></div>\r\n                    <button\r\n                        onClick={regenerate}\r\n                        disabled={!templateId}\r\n                        className={`inline-flex items-center gap-2 px-3 py-1 rounded border ${templateId ? 'border-gray-600 hover:bg-gray-700/40 text-white' : 'border-gray-700 text-gray-500 cursor-not-allowed'}`}\r\n                        title=\"Rebuild assistance from template defaults\"\r\n                    >\r\n                        <RefreshCcw className=\"w-4 h-4\" /> Auto-Generate\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Template-specific controls (BBB only for now) */}\r\n                {templateId === TEMPLATE_IDS.BBB && (\r\n                    <div className=\"mt-4 grid grid-cols-1 md:grid-cols-3 gap-3\">\r\n                        <div>\r\n                            <label className=\"text-sm text-gray-300\">BBB % of TM</label>\r\n                            <select\r\n                                value={bbbPercent}\r\n                                onChange={e => changeBBB({ percent: Number(e.target.value) })}\r\n                                className=\"w-full bg-gray-800 border border-gray-600 text-white rounded px-2 py-1\"\r\n                            >\r\n                                {[50, 60, 70].map(p =>\r\n                                    <option key={p} value={p}>{p}%</option>\r\n                                )}\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"text-sm text-gray-300\">Pairing</label>\r\n                            <select\r\n                                value={bbbPairMode}\r\n                                onChange={e => changeBBB({ pairMode: e.target.value })}\r\n                                className=\"w-full bg-gray-800 border border-gray-600 text-white rounded px-2 py-1\"\r\n                            >\r\n                                <option value=\"same\">Same Lift</option>\r\n                                <option value=\"opposite\">Opposite Lift</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-400 flex items-end\">Weights are rounded using your Step 4 rounding rules.</div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Per-day editor */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                {['press', 'deadlift', 'bench', 'squat'].map(day => {\r\n                    const items = assistance?.perDay?.[day] || [];\r\n                    const setCount = totalSets(items);\r\n                    const overCap = caps?.maxAssistanceSetsPerDay && setCount > caps.maxAssistanceSetsPerDay;\r\n\r\n                    return (\r\n                        <div key={day} className=\"bg-gray-900/60 border border-gray-700 rounded p-4\">\r\n                            <div className=\"flex items-center justify-between mb-2\">\r\n                                <div className=\"text-white font-medium\">{dayNames[day]}</div>\r\n                                <div className=\"text-xs text-gray-400\">{setCount} sets total</div>\r\n                            </div>\r\n\r\n                            {!items.length && (\r\n                                <div className=\"text-gray-500 text-sm\">No assistance on this day.</div>\r\n                            )}\r\n\r\n                            {!!items.length && (\r\n                                <ul className=\"space-y-2\">\r\n                                    {items.map((it, idx) => (\r\n                                        <li key={idx} className=\"bg-gray-800/50 border border-gray-700 rounded p-3\">\r\n                                            <div className=\"flex items-center justify-between\">\r\n                                                <div className=\"text-gray-200 font-medium\">{it.name}</div>\r\n                                                <div className=\"text-gray-300 text-sm\">\r\n                                                    {it.sets}×{it.reps}\r\n                                                    {it?.load?.type === 'percentTM' && (\r\n                                                        <span className=\"ml-2 text-gray-400\">\r\n                                                            @ {it.load.value}% TM\r\n                                                            {Number.isFinite(Number(lifts?.[it.load.liftRef]?.tm)) && (\r\n                                                                <> → <span className=\"font-mono\">\r\n                                                                    {(() => {\r\n                                                                        const tm = Number(lifts[it.load.liftRef].tm);\r\n                                                                        return toDisplayWeight(percentOfTM(tm, Number(it.load.value), rounding?.increment ?? 5));\r\n                                                                    })()}\r\n                                                                </span></>\r\n                                                            )}\r\n                                                        </span>\r\n                                                    )}\r\n                                                    {it?.load?.type === 'bw' && <span className=\"ml-2 text-gray-400\">@ BW</span>}\r\n                                                </div>\r\n                                            </div>\r\n                                            {/* Editable minimal controls (sets/reps) */}\r\n                                            <div className=\"mt-2 grid grid-cols-3 gap-2\">\r\n                                                <div>\r\n                                                    <label className=\"text-xs text-gray-400\">Sets</label>\r\n                                                    <input\r\n                                                        type=\"number\" min=\"1\" step=\"1\"\r\n                                                        value={it.sets}\r\n                                                        onChange={e => {\r\n                                                            const next = { ...assistance };\r\n                                                            next.perDay[day][idx].sets = Number(e.target.value);\r\n                                                            set({ assistance: next });\r\n                                                        }}\r\n                                                        className=\"w-full bg-gray-800 border border-gray-600 text-white rounded px-2 py-1\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div>\r\n                                                    <label className=\"text-xs text-gray-400\">Reps</label>\r\n                                                    <input\r\n                                                        type=\"number\" min=\"1\" step=\"1\"\r\n                                                        value={it.reps}\r\n                                                        onChange={e => {\r\n                                                            const next = { ...assistance };\r\n                                                            next.perDay[day][idx].reps = Number(e.target.value);\r\n                                                            set({ assistance: next });\r\n                                                        }}\r\n                                                        className=\"w-full bg-gray-800 border border-gray-600 text-white rounded px-2 py-1\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"flex items-end justify-end\">\r\n                                                    <button\r\n                                                        onClick={() => {\r\n                                                            const next = { ...assistance };\r\n                                                            next.perDay[day] = next.perDay[day].filter((_, i) => i !== idx);\r\n                                                            set({ assistance: next });\r\n                                                        }}\r\n                                                        className=\"px-3 py-1 rounded border border-gray-600 hover:bg-gray-700/40 text-white\"\r\n                                                    >\r\n                                                        Remove\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            )}\r\n\r\n                            {overCap && (\r\n                                <div className=\"mt-2 bg-yellow-900/20 border border-yellow-600 rounded p-2 text-yellow-100 text-xs flex items-center gap-2\">\r\n                                    <AlertTriangle className=\"w-4 h-4\" /> Over soft cap ({caps.maxAssistanceSetsPerDay} sets).\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Add quick bodyweight or simple item */}\r\n                            <div className=\"mt-3 space-y-2\">\r\n                                <div>\r\n                                    <label className=\"text-xs text-gray-400 mb-1 block\">Add Exercise</label>\r\n                                    {!exLoaded && <div className=\"text-gray-500 text-xs\">Loading exercise database...</div>}\r\n                                    {exLoaded && (\r\n                                        <select\r\n                                            value={newPick[day] || ''}\r\n                                            onChange={e => setNewPick(p => ({ ...p, [day]: e.target.value }))}\r\n                                            className=\"w-full bg-gray-800 border border-gray-600 text-white rounded px-2 py-1 text-sm\"\r\n                                        >\r\n                                            <option value=\"\">-- Select Exercise --</option>\r\n                                            {Object.keys(categoriesMap).sort().map(cat => (\r\n                                                <optgroup key={cat} label={cat}>\r\n                                                    {categoriesMap[cat].map(row => {\r\n                                                        const equip = row.equipment ? ` (${row.equipment.split(';')[0]})` : '';\r\n                                                        return <option key={row.exercise} value={row.exercise}>{row.exercise}{equip}</option>\r\n                                                    })}\r\n                                                </optgroup>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"flex gap-2\">\r\n                                    <button\r\n                                        onClick={() => {\r\n                                            const choice = newPick[day];\r\n                                            if (!choice) return;\r\n                                            const row = Object.values(categoriesMap).flat().find(r => r.exercise === choice);\r\n                                            const sets = Number(row?.default_sets) || 5;\r\n                                            const reps = row?.numeric_reps || (/amrap/i.test(row?.default_reps || '') ? 12 : Number(row?.default_reps) || 10);\r\n                                            const load = (/body|bw|bodyweight/i.test(row?.equipment || '') || /AMRAP/i.test(row?.default_reps)) ? { type: 'bw' } : undefined;\r\n                                            const next = { ...assistance };\r\n                                            next.perDay[day] = [...(next.perDay[day] || []), { name: choice, sets, reps, load }];\r\n                                            set({ assistance: next });\r\n                                            setNewPick(p => ({ ...p, [day]: '' }));\r\n                                        }}\r\n                                        disabled={!newPick[day]}\r\n                                        className={`px-3 py-1 rounded border ${newPick[day] ? 'border-gray-600 hover:bg-gray-700/40 text-white' : 'border-gray-700 text-gray-500 cursor-not-allowed'}`}\r\n                                    >\r\n                                        + Add\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={() => setNewPick(p => ({ ...p, [day]: '' }))}\r\n                                        className=\"px-3 py-1 rounded border border-gray-700 hover:bg-gray-700/40 text-gray-300\"\r\n                                    >Clear</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            {/* Global caps & superset */}\r\n            <div className=\"bg-gray-900/60 border border-gray-700 rounded p-4\">\r\n                <div className=\"text-white font-medium mb-2\">Session Options</div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\r\n                    <div>\r\n                        <label className=\"text-sm text-gray-300\">Soft Cap: Max Assistance Sets/Day</label>\r\n                        <input\r\n                            type=\"number\" min=\"5\" step=\"1\"\r\n                            value={caps?.maxAssistanceSetsPerDay ?? 15}\r\n                            onChange={e => set({ caps: { ...caps, maxAssistanceSetsPerDay: Number(e.target.value) } })}\r\n                            className=\"w-full bg-gray-800 border border-gray-600 text-white rounded px-2 py-1\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex items-end\">\r\n                        <label className=\"inline-flex items-center gap-2 text-gray-200\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={!!caps?.superset}\r\n                                onChange={e => set({ caps: { ...caps, superset: !!e.target.checked } })}\r\n                            />\r\n                            Superset assistance where possible\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"text-gray-400 text-sm flex items-end\"><Settings className=\"w-4 h-4 mr-2\" /> Applies to preview and printouts.</div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Completion */}\r\n            <div className=\"bg-green-900/20 border border-green-500 rounded p-3 text-green-200 text-sm flex items-center gap-2\">\r\n                <CheckCircle className=\"w-4 h-4\" /> Assistance configured. You can refine sets/reps anytime.\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"names":["TEMPLATE_IDS","OPPOSITES","TRIUMVIRATE_DEFAULTS","BODYWEIGHT_POOL","buildBBB","dayKey","tms","percent","pairMode","mainLift","pairLift","buildTriumvirate","d","buildPeriodizationBible","buildBodyweight","ref","buildJackShit","buildAssistancePlan","templateId","options","tpl","res","_a","_b","day","Step5AssistanceRouter","data","updateData","st","exLoaded","categoriesMap","useExerciseDB","newPick","setNewPick","useState","set","patch","lifts","rounding","assistance","caps","regenerate","plan","changeBBB","next","totalSets","items","a","it","dayNames","bbbPercent","_c","bbbPairMode","_e","_d","templateBadge","useMemo","jsxs","jsx","StepStatusPill","STEP_IDS","AlertTriangle","Info","RefreshCcw","e","p","setCount","overCap","idx","Fragment","tm","toDisplayWeight","percentOfTM","_","i","cat","row","equip","choice","r","sets","reps","load","Settings","CheckCircle"],"mappings":"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"}