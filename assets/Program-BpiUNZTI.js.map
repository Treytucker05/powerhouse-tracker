{"version":3,"mappings":"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AAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;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AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAA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","names":["FiveThreeOneEngine$2","weight","reps","oneRepMax","roundTo","trainingMax","maxes","trainingMaxes","lift","max","week","percentageOption","scheme","mainWork","i","percentage","isLastSet","template","level","assistanceTemplate","config","schedule","assistanceLevel","includeWarmup","scheduleTemplate","weeks","weekData","dayIndex","assistanceWork","percentages","errors","Step1MaxTesting","data","updateData","roundingIncrement","useSettings","testingMethod","setTestingMethod","useState","oneRMs","setOneRMs","repTests","setRepTests","setTrainingMaxes","liftNames","calculateEst1RM","w","r","calculateTrainingMax","oneRM","roundToIncrement","handleOneRMChange","value","newOneRMs","newTrainingMaxes","liftKey","handleRepTestChange","field","newRepTests","test","est1RM","isStepComplete","tm","jsxs","jsx","Info","CheckCircle","Calculator","name","e","AlertCircle","FiveThreeOneEngine","EngineModule.default","EngineModule.FiveThreeOneEngine","ScheduleSelectionStep","programData","setProgramData","engine","state","scheduleState","toKey","freq","toFrequency","key","selectedKey","handleScheduleSelect","scheduleKey","prev","scheduleOptions","option","Clock","Calendar","pro","index","con","_b","_a","_c","opt","_f","Step2CoreLifts","coreLifts","setCoreLifts","customLifts","setCustomLifts","trainingFrequency","setTrainingFrequency","schedulePattern","setSchedulePattern","equipmentAccess","setEquipmentAccess","equipmentProfile","setEquipmentProfile","injuryLimitations","setInjuryLimitations","liftOptions","frequencyOptions","handleLiftChange","liftType","liftVariation","newCoreLifts","updateStepData","handleCustomLiftChange","customName","newCustomLifts","handleFrequencyChange","frequency","handleScheduleChange","pattern","handleEquipmentChange","equipment","available","newEquipment","applyEquipmentProfile","profile","preset","acc","k","handleInjuryChange","injury","hasInjury","newInjuries","updates","validateEquipment","getEquipmentWarnings","warnings","getInjuryWarnings","liftsSelected","customLiftsNamed","variation","Package","p","active","cat","label","Layers","EquipmentPreview","AlertTriangle","warning","liftData","details","rows","row","req","Step4CycleStructure","loadingOption","setLoadingOption","perLiftOptions","setPerLiftOptions","usePerLiftOptions","setUsePerLiftOptions","deadliftStyle","setDeadliftStyle","cyclePreview","setCyclePreview","calculatedWeights","setCalculatedWeights","loadingOptions","deadliftStyles","repTargets","calculateWeight","toDisplayWeight","percentOfTM","calculateAllWeights","optionData","weights","set","calculateCycleProgressions","currentTM","cycles","progressions","increment","cycle","useEffect","newWeights","handleLoadingOptionChange","newPerLiftOptions","handlePerLiftOptionChange","handleUsePerLiftToggle","enabled","handleDeadliftStyleChange","style","handleCyclePreviewChange","BarChart3","Target","targets","Settings","progression","Step5Week1Execution","executionStrategy","setExecutionStrategy","setRepTargets","badDayProtocol","setBadDayProtocol","restPeriods","setRestPeriods","formCues","setFormCues","executionStrategies","badDayProtocols","formCueOptions","performanceIndicators","calculateWeek1Weights","handleExecutionStrategyChange","strategy","handleBadDayProtocolChange","protocol","handleRestPeriodChange","type","minutes","newRestPeriods","handleFormCueToggle","cue","currentCues","newCues","c","newFormCues","char","Step6Week2Execution","week2Results","setWeek2Results","currentSession","setCurrentSession","week2Percentages","week2Reps","handleAmrapResult","newResults","handleNotes","notes","calculateEstimated1RM","liftOrder","isPR","week1Reps","isCompleted","amrapReps","amrapWeight","estimated1RM","setIndex","Zap","Step7Week3Execution","week3Results","setWeek3Results","week3Percentages","week3Reps","sanitized","e1rm","calcE1RM","week3E1RM","lastWeekWeight","lastWeekReps","lastWeekE1RM","order","l","gotPR","Trophy","Step8DeloadWeek","deloadResults","setDeloadResults","recoveryMetrics","setRecoveryMetrics","assistanceReduction","setAssistanceReduction","deloadPercentages","deloadReps","handleSessionComplete","handleRecoveryMetric","metric","newMetrics","getRecoveryStatus","metrics","sleep","soreness","motivation","status","message","color","RefreshCw","Pause","Heart","Step9CycleProgression","setNewTrainingMaxes","progressionDecisions","setProgressionDecisions","cyclePerformance","setCyclePerformance","nextCycleReady","setNextCycleReady","currentTrainingMaxes","incrementRules","roundToNearest5","calculateNewTM","getLiftCategory","analyzePerformance","week3Data","handleManualTM","newTMs","handleProgressionDecision","decision","newTM","newDecisions","initialized","TrendingUp","performance","standardIncrement","ArrowRight","RotateCcw","Step10StallingReset","stallAnalysis","setStallAnalysis","resetDecisions","setResetDecisions","resetTrainingMaxes","setResetTrainingMaxes","stallHistory","setStallHistory","resetPercentages","calculateResetTM","resetType","analyzeStall","stallCount","handleResetDecision","newResetDecisions","newResetTMs","handleManualResetTM","handleNoReset","getResetCount","TrendingDown","analysis","resetDecision","resetTM","Step12BoringButBig","bbbConfig","setBbbConfig","selectedPairings","setSelectedPairings","intensityLevel","setIntensityLevel","additionalAssistance","setAdditionalAssistance","intensityOptions","standardPairings","useMemo","assistanceOptions","handlePairingChange","mainLift","bbbLift","newPairings","handleIntensityChange","handleAssistanceToggle","exercise","isSelected","ex","newAssistance","calculateBBBWeight","getVolumePrediction","Step11AssistanceWork","selectedAssistance","setSelectedAssistance","customExercises","setCustomExercises","showCustomForm","setShowCustomForm","newExercise","setNewExercise","assistanceMovements","assistanceData","nextCustomExercises","handleExerciseToggle","currentSelections","newSelections","addCustomExercise","nextAssist","nextCustom","exercises","getTotalExercises","total","Dumbbell","Plus","Step13Triumvirate","triumvirateConfig","setTriumvirateConfig","editingDay","setEditingDay","standardTriumvirate","exerciseAlternatives","dayNames","handleExerciseChange","day","exerciseType","newConfig","resetToStandard","getProgressionTip","exerciseName","Users","Edit3","selectedEx","category","Step14PeriodizationBible","bibleConfig","setBibleConfig","selectedExercises","setSelectedExercises","volumeLevel","setVolumeLevel","experienceLevel","setExperienceLevel","volumeOptions","exerciseDatabase","dailyStructure","handleExerciseSelection","daySelections","categorySelections","maxSelections","getMaxSelectionsPerCategory","getVolumeMultiplier","getTotalExercisesPerDay","getTotalSetsPerDay","totalSets","setsStr","sets","getRecoveryWarning","avgSetsPerDay","dayName","BookOpen","canSelect","_d","Step15Bodyweight","bodyweightConfig","setBodyweightConfig","bodyweightExercises","coreExercises","progressionMethods","repSchemes","currentSelected","newSelected","handleProgressionChange","method","handleRepSchemeChange","getDifficultyColor","difficulty","Weight","Step16JackShit","jackShitConfig","setJackShitConfig","sessionDurations","conditioningOptions","focusAreaOptions","Activity","handleSessionDurationChange","duration","handleConditioningChange","handleFocusAreaToggle","areaId","currentFocus","newFocus","id","handleConditioningDurationChange","area","IconComponent","Timer","Step17ConditioningRecovery","conditioningConfig","setConditioningConfig","recoveryConfig","setRecoveryConfig","hi","li","next","stress","soft","nutrition","conditioningMethods","highIntensityOptions","lowIntensityOptions","stressManagementTechniques","softTissueMethods","handleConditioningMethodChange","handleHighIntensityToggle","current","newExercises","baseHi","handleLowIntensityToggle","baseLi","handleStressManagementToggle","technique","newTechniques","t","handleSoftTissueToggle","newMethods","m","hiLen","liLen","hasConditioning","sleepTarget","stressLen","softLen","_e","hasRecovery","Moon","Utensils","Brain","Step18ProgramCustomization","customizationConfig","setCustomizationConfig","normalized","_g","_h","_i","_j","_k","_l","_m","_n","_o","_p","_q","_r","_s","_t","goalConfigurations","autoRegulationFeatures","specializationOptions","handleGoalChange","goal","handleFeatureToggle","feature","handleSpecializationToggle","handleWeakLiftSelection","Award","FiveThreeOneWorkflow","STORAGE_KEY","currentStep","setCurrentStep","error","setError","packRef","useRef","raw","parsed","user","supabase","cloud","loadFromSupabase","cancelled","loadMethodPack","loadPack531BBB","__vitePreload","pack","useCallback","validationErrors","generatedProgram","steps","Step3ScheduleWarmup","Play","handleNext","handlePrevious","handleStepChange","stepIndex","renderStepContent","step","StepComponent","partial","isStepValid","tms","s2","lifts","allSelected","customNamesOk","v","freqOk","schedOk","s4","hasTms","deadliftOk","s5","execOk","badDayOk","s6","sched","res","s7","s8","s9","s10","decisions","aw","list","s12","pairs","cfg","dayKeys","d","getTotal","arr","s17","cond","rec","goalOk","trackingOk","handleSaveToProfile","toast","syncToSupabase","s","idx","ChevronLeft","ChevronRight","useUnsavedChanges","handler","BuilderCTA","Link","ProgramContext","createContext","PROGRAM_ACTIONS","initialState","programReducer","action","ProgramProvider","children","dispatch","useReducer","appContextData","useApp","assessment","assessmentData","localProfile","setActiveTab","tab","setSelectedLevel","setAssessmentData","setTrainingModel","model","setBlockSequence","sequence","setBlockParameters","params","updateBlockParameter","blockId","setLoadingResults","results","setGeneratedProgram","program","setLoading","loading","togglePeriodizationMode","usePeriodization","setBryantIntegrated","integrated","features","validation","setLegacyMigrationStatus","report","updatePrimaryGoal","setSelectedSystem","system","updateTimeline","timeline","updateInjuryScreen","injuryData","setOPTPhase","phase","setMethodologyContext","context","setPopulationType","populationType","actions","useProgramContext","useContext","PageLayout","title","subtitle","breadcrumbs","className","contentClassName","glass","fullWidth","crumb","React","PageSection","nasmMethodologyConfig","nasmGoalPathways","nasmExperienceMapping","SystemRecommendationStep","systems","handleSystemSelect","systemId","PrimaryGoalStep","selectedGoal","setSelectedGoal","isNASMSelected","goals","handleGoalSelect","goalId","handlePopulationSelect","g","ExperienceLevelStep","selectedExperience","setSelectedExperience","experienceLevels","handleExperienceSelect","experienceId","selectedLevel","TimelineStep","selectedCategory","setSelectedCategory","timelineCategories","handleCategoryChange","handleDurationSelect","description","handleCustomWeeksChange","customWeeks","InjuryScreeningStep","responses","setResponses","injuryExerciseMatrix","returnToTrainingProtocol","systemInjuryCompatibility","injuryQuestions","handleResponseChange","questionKey","isMultiple","newResponses","updateAlgorithmicResults","currentResponses","algorithmicResults","generateAlgorithmicResults","activeInjuries","location","injuryOption","allExclusions","modification","riskScore","compatibilityScores","adaptability","avgScore","a","b","movement","shouldShowQuestion","question","renderQuestion","mod","restriction","PHAHealthScreenStep","onNext","onPrevious","canGoNext","canGoPrevious","riskAssessment","setRiskAssessment","phaQuestions","assessRisk","highRiskCount","mediumRiskCount","totalAnswered","q","response","riskLevel","recommendations","restrictions","tacticalExp","intensityTol","questionId","handleComplete","isComplete","categoryIndex","questionIndex","optionIndex","useAssessment","suggestions","setSuggestions","classifyGainerType","repsNum","getFiberRecommendations","muscleGroup","fiberType","getMileageRecommendations","ageGroup","trainingAge","recoveryCapacity","validateSMARTGoals","allValid","generateSuggestions","newSuggestions","classification","muscle","fiber","highPriorities","_","priority","ability","saveAssessment","APP_ACTIONS","saveNutritionAssessment","nutritionData","assessBLGs","blgsData","scores","totalScore","maxScore","workRestScore","waterTarget","waterScore","sleepScore","sunScore","digestionScore","movementScore","eatingScore","mortalityScore","item","tier","generateBLGsSuggestions","assessFuel","fuelData","blgsScore","gainerType","biomotorData","determineFuelProfile","tdee","calculateTDEE","macros","calculateMacros","generateFuelSuggestions","processedFoodScore","wholeFoodScore","consistencyScore","awarenessScore","stats","bmr","bmrAlternative","finalBMR","tef","neat","leanMass","proteinMultiplier","proteinGrams","proteinCals","carbGrams","carbCals","remainingCals","fatGrams","fatCals","assessPersonalization","personData","fuelTier","deloadingOptions","generateDeloadingProtocols","eliminationPlan","generate21DayElimination","generatePersonalizationRecommendations","aversions","symptoms","food","assessSpecificity","specificityData","preferredModalities","currentSpectrum","competitionLifts","optimalSpectrum","determineOptimalSpectrum","compatibilityWarnings","checkModalityCompatibility","adaptationSequence","generateAdaptationSequence","generateSpecificityRecommendations","modalities","calculateTrainingVariables","spectrum","baseVolume","baseIntensity","baseFrequency","validatePhaseProgression","currentPhase","targetPhase","currentIndex","targetIndex","requiredPhases","nextPhase","saveSpecificityAssessment","assessOverload","overloadData","volume","intensity","exerciseSelection","failureProximity","baseline","mrvByPhase","calculateMRVByPhase","disruptionLevel","calculateHomeostasisDisruption","progressionPlan","generateOverloadProgression","optimizations","assessOverloadOptimization","calculateCurrentLoad","generateOverloadRecommendations","baseMRV","gainerMRV","volumeDisruption","intensityDisruption","frequencyDisruption","failureDisruption","totalDisruption","recoveryTime","currentLoad","phaseData","weeklyLoad","assessFatigue","fatigueData","trainingLoad","lifestyle","fuelFatigue","assessFuelFatigue","nervousFatigue","assessNervousFatigue","messengerFatigue","assessMessengerFatigue","tissueFatigue","assessTissueFatigue","overallState","determineFatigueState","managementStrategies","generateFatigueManagement","recoveryTimeline","calculateRecoveryTimeline","generateFatigueRecommendations","glycogenStores","muscleFullness","energyLevels","postWorkoutFatigue","glycogenScore","volumeImpact","nervousData","forceOutput","techniqueQuality","learningRate","sleepQuality","volumeScore","intensityScore","performanceScore","messengerData","moodSwings","inflammation","hormoneSymptoms","recoveryRate","inflammationScore","hormoneScore","tissueData","jointPain","muscleTightness","tendonIssues","overuseSymptoms","injuryHistory","microtraumaScore","loadScore","historyScore","fuel","nervous","messengers","tissues","severeCount","f","highCount","strategies","deloadIntensity","saveOverloadAssessment","saveFatigueAssessment","assessPHAHealth","phaHealthData","highBP","cardiacHistory","fitness","contraindications","eligibilityScore","eligibilityStatus","programModifications","generatePHAModifications","modifications","integratePHAWithFatigue","phaHealthScreen","savePHAHealthAssessment","calculateMEV","factors","recoveryScore","trainingHistory","mev","calculateMRV","stressLevel","nutritionQuality","mrv","recoveryFactor","calculateMAV","weekNumber","mesocycleLength","progressionFactor","mavRange","mav","assessVolumeLandmarks","muscleGroups","individualFactors","trainingGoals","landmarks","generateMAVProgression","generateVolumeSummary","assessCurrentVolume","currentVolume","landmark","targetMAV","recommendation","generateProgressionSuggestion","nextWeek","nextTargetMAV","volumeIncrease","totalMEV","sum","totalMRV","averageMAV","muscleCount","weeklyTimeEstimate","insights","highVolumeMuslces","generateWeeklyVolumeProgression","weeklyTarget","performanceFeedback","adjustments","feedback","recovery","pump","currentLandmark","mevAdjustment","mrvAdjustment","reasoning","deloadType","deloadTargets","volumeData","VolumeLandmarksTab","saveVolumeLandmarks","setIndividualFactors","selectedMuscles","setSelectedMuscles","setCurrentVolume","setTrainingGoals","currentWeek","setCurrentWeek","setAssessment","volumeStatus","setVolumeStatus","showDeloadWarning","setShowDeloadWarning","result","overreachingMuscles","handleFactorChange","handleVolumeChange","handleMuscleSelection","handleSaveAssessment","getStatusColor","getStatusIcon","muscleGroupOptions","target","insight","TrainingMaxStep","MovementAssessmentStep","movementScreenItems","motorControlFocuses","handleMovementScore","itemId","score","handleSaveAndContinue","focus","NASMMovementAssessmentStep","currentView","setCurrentView","selectedAssessment","setSelectedAssessment","currentAssessment","setCurrentAssessment","currentTab","setCurrentTab","completedAssessments","setCompletedAssessments","selectedQuickTags","setSelectedQuickTags","additionalNotes","setAdditionalNotes","activeSide","setActiveSide","assessmentConfig","requiredAssessments","optionalAssessments","canProceed","completedRequired","completedOptional","totalRequired","startAssessment","assessmentId","backToSelection","completeCurrentAssessment","saveAssessmentData","showSuccessToast","proceedToNextStep","showWarning","compensationData","handleCompensationChange","section","compensation","calculateAnalysis","calculateSeverityScore","ohsCompensations","comp","ohsCount","slsCount","pushCount","pullCount","totalCount","severityScore","determineStartingPhase","compensationCount","clientExperience","AssessmentSelectionScreen","Fragment","renderSetupTab","renderAssessmentTab","renderModificationsTab","renderAnalysisTab","presentCompensations","phaseRecommendation","compData","renderSingleLegAssessment","assessmentInfo","compensations","toggleCompensation","compId","currentValue","hasCompensations","saveAndContinue","skipAssessment","clearAssessment","renderPushingAssessment","renderPullingAssessment","renderOverheadPressAssessment","markComplete","completionData","renderStarBalanceAssessment","directions","direction","renderGaitAnalysisAssessment","gaitPhases","renderSelectedAssessment","handleAssessmentComplete","finalResults","PeriodizationStep","ImplementationStep","CheckIcon","titleId","props","svgRef","React.createElement","ForwardRef","React.forwardRef","ChevronDownIcon","CogIcon","MagnifyingGlassIcon","PlayIcon","UserIcon","LayoutGroupContext","useConstant","init","ref","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","PresenceContext","addUniqueItem","removeItem","clamp","min","invariant","MotionGlobalConfig","isNumericalString","isObject","isZeroValueString","memo","callback","noop","any","combineFunctions","pipe","transformers","progress","from","to","toFromDifference","SubscriptionManager","numSubscriptions","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","velocityPerSecond","velocity","frameDuration","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","x","lowerBound","upperBound","mX1","mX2","currentX","currentT","cubicBezier","mY1","mY2","getTForX","aX","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","circOut","circInOut","easeIn","easeOut","easeInOut","isEasingArray","ease","isBezierDefinition","easingLookup","isValidEasing","easingDefinitionToFunction","definition","x1","y1","x2","y2","stepsOrder","createRenderStep","runNextFrame","stepName","thisFrame","nextFrame","isProcessing","flushNextFrame","toKeepAlive","latestFrameData","triggerCallback","keepAlive","immediate","queue","frameData","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","useDefaultElapsed","flagRunNextFrame","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","timestamp","wake","process","frame","cancelFrame","frameSteps","now","clearTime","time","newTime","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","number","alpha","scale","sanitize","floatRegex","isNullish","singleColorRegex","isColorString","testProp","splitColor","aName","bName","cName","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","parseHex","hex","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","values","indexes","types","split","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","getAnimatableNone","complex","hueToRgb","hslaToRgba","mixImmediate","mixNumber","mixLinearColor","fromExpo","expo","colorTypes","getColorType","asRGBA","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixVisibility","origin","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","matchOrder","orderedOrigin","pointers","originIndex","originValue","originStats","targetStats","mix","frameloopDriver","passTimestamp","generateLinearEasing","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","timeStep","createGeneratorEasing","options","createGenerator","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","initialGuess","approximateRoot","stiffness","rootIterations","durationKeys","physicsKeys","isSpringType","keys","getSpringOptions","springOptions","visualDuration","root","damping","derived","spring","optionsOrVisualDuration","restSpeed","restDelta","isResolvedFromDuration","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","dampedAngularFreq","freqForT","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","calculatedDuration","generatorOptions","inertia","keyframes","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","isOutOfBounds","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","isZeroDeltaRange","interpolator","progressInRange","fillOffset","offset","remaining","offsetProgress","defaultOffset","convertOffsetToTimes","o","defaultEasing","keyframeValues","times","easingFunctions","absoluteTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","speed","resolvedKeyframes","transitionTypeMap","replaceTransitionType","transition","WithPromise","resolve","onResolve","onReject","percentToProgress","JSAnimation","motionValue","repeatDelay","keyframes$1","generatorFactory","animationTime","sample","totalDuration","mixKeyframes","mirroredGenerator","resolvedDuration","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","iterationProgress","done","isAnimationFinished","reject","newSpeed","hasChanged","driver","startTime","sampleTime","fillWildcards","radToDeg","rad","rotate","angle","rebaseAngle","matrix2dParsers","rotateZ","scaleX","scaleY","matrix3dParsers","defaultTransformValue","parseValueFromTransform","transform","matrix3dMatch","parsers","match","matrix2dMatch","valueParser","convertTransformToNumber","readTransformValue","instance","transformPropOrder","transformProps","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","visualElement","removedTransforms","positionalValues","paddingLeft","paddingRight","y","paddingTop","paddingBottom","_bbox","top","left","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","elementsToMeasure","transformsToRestore","element","restore","readAllKeyframes","flushKeyframeResolvers","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","valueAsRead","isForcedComplete","isCSSVar","setStyle","supportsScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","isGenerator","applyGeneratorOptions","NativeAnimation","allowFlatten","keyframe","newStartTime","observe","unsupportedEasingFunctions","isUnsupportedEase","replaceStringEasing","sampleDelta","NativeAnimationExtended","sampleAnimation","isAnimatable","hasKeyframesChanged","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","makeAnimationInstant","acceleratedValues","supportsWaapi","supportsBrowserAnimation","transformTemplate","MAX_RESOLVE_DELAY","AsyncMotionValueAnimation","autoplay","optionsWithDefaults","KeyframeResolver$1","forced","sync","isHandoff","resolvedOptions","animation","_onReject","splitCSSVariableRegex","parseCSSVariable","token1","token2","fallback","getVariableValue","depth","resolved","trimmed","getValueTransition","positionalKeys","auto","testValueType","dimensionValueTypes","findDimensionValueType","isNone","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","filter","functions","int","transformValueTypes","numberValueTypes","defaultValueTypes","getDefaultValueType","defaultValueType","invalidTemplates","makeNoneKeyframesAnimatable","noneKeyframeIndexes","animatableTemplate","noneIndex","DOMKeyframesResolver","originType","targetType","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","resolveElements","elementOrSelector","scope","selectorCache","elements","getValueAsType","isHTMLElement","MAX_VELOCITY_DELTA","isFloat","MotionValue","currentTime","dependent","prevFrameValue","subscription","eventName","unsubscribe","eventManagers","passiveEffect","stopPassiveEffect","endAnimation","startAnimation","microtask","isDragging","isDragActive","setDragLock","axis","setupGesture","gestureAbortController","eventOptions","isValidHover","event","hover","onHoverStart","cancel","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","isNodeOrChild","parent","child","isPrimaryPointer","focusableElements","isElementKeyboardAccessible","isPressing","filterEvents","firePointerEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","isValidPressEvent","press","targetOrSelector","onPressStart","cancelEvents","startPress","startEvent","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","cancelEvent","isSVGElement","isSVGSVGElement","isMotionValue","valueTypes","findValueType","MotionConfigContext","PopChildMeasure","React.Component","prevProps","parentWidth","size","PopChild","isPresent","anchorX","useId","nonce","useInsertionEffect","width","height","right","React.cloneElement","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","isReusedContext","childId","React.useEffect","usePresence","subscribe","register","safeToRemove","getChildKey","onlyElements","filtered","Children","isValidElement","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","renderedChildren","setRenderedChildren","exitingChildren","nextChildren","forceRender","onExit","isEveryExitComplete","isExitComplete","LazyContext","featureProps","featureDefinitions","loadFeatures","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","MotionContext","isAnimationControls","isVariantLabel","variantPriorityOrder","variantProps","isControllingVariants","isVariantNode","getCurrentTreeVariants","animate","useCreateMotionContext","variantLabelsAsDependency","prop","scaleCorrectors","addScaleCorrector","correctors","isForcedMotionValue","layout","layoutId","translateAlias","numTransforms","buildTransform","latestValues","transformString","transformIsDefault","valueIsDefault","valueAsType","transformName","buildHTMLStyles","vars","transformOrigin","hasTransform","hasTransformOrigin","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","useInitialMotionValues","visualState","useStyle","styleProp","useHTMLProps","htmlProps","dashKeys","camelKeys","buildSVGPath","attrs","length","spacing","useDashCase","pathLength","pathSpacing","buildSVGAttrs","attrX","attrY","attrScale","pathOffset","isSVGTag","createSvgRenderState","tag","useSVGProps","_isStatic","Component","visualProps","rawStyles","lowercaseSVGElements","isSVGComponent","useRender","isStatic","elementProps","createElement","getValueState","resolveVariantFromProps","resolveMotionValue","makeState","scrapeMotionValuesFromProps","createRenderState","presenceContext","makeLatestValues","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","transitionEnd","valueTarget","makeUseVisualState","make","newValues","useHTMLVisualState","scrapeMotionValuesFromProps$1","targetKey","useSVGVisualState","motionComponentSymbol","isRefObject","useMotionRef","externalRef","camelToDash","str","optimizedAppearDataId","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","initialLayoutGroupConfig","createProjectionNode","isMounted","optimisedAppearId","wantsHandoff","initialPromotionConfig","drag","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","createMotionComponent","preloadedFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","getProjectionFunctionality","ForwardRefMotionComponent","forwardRef","layoutGroupId","combined","createMotionProxy","componentCache","factory","deprecatedFactoryFunction","_target","convertBoundingBoxToBox","bottom","convertBoxToBoundingBox","transformBoxPoints","point","transformPoint","topLeft","bottomRight","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","originPoint","distanceFromOrigin","scaled","applyPointDelta","translate","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","node","transformBox","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","measureViewportBox","measurePageBox","rootProjectionNode","transformPagePoint","viewportBox","scroll","createAxisDelta","createDelta","createAxis","createBox","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","motionMediaQuery","setReducedMotionPreferences","visualElementStore","updateMotionValuesFromProps","nextValue","prevValue","existingValue","latestValue","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","blockInitialAnimation","renderState","willChange","initialMotionValues","remove","valueIsTransform","removeOnChange","removeSyncCheck","other","featureDefinition","isEnabled","FeatureConstructor","listenerName","listener","closestVariantNode","valueFromInitial","variant","args","DOMVisualElement","renderHTML","projection","elementStyle","getComputedStyle","HTMLVisualElement","computedStyle","camelCaseAttributes","renderSVG","_styleProp","SVGVisualElement","defaultType","createDomVisualElement","resolveVariant","isKeyframesTarget","setMotionValue","resolveFinalValueInKeyframes","setTarget","isWillChangeMotionValue","addValueToWillChange","newWillChange","getOptimisedAppearId","underDampedSpring","criticallyDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","animateMotionValue","valueTransition","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","appearId","calcChildStagger","numChildren","maxStaggerDuration","animateVariant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","animateVisualElement","resolvedDefinition","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","buildResolvedTypeValues","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","willAnimateViaParent","parentVariant","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","isActive","createTypeState","Feature","AnimationFeature","prevAnimate","ExitAnimationFeature","prevIsPresent","exitAnimation","addDomEvent","extractEventInfo","addPointerInfo","addPointerEvent","SCALE_PRECISION","SCALE_MIN","SCALE_MAX","TRANSLATE_PRECISION","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","isNear","maxDistance","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","distance2D","xDelta","yDelta","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","info","getPanInfo","isPanStarted","isDistancePastThreshold","onStart","onMove","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","subtractPoint","history","lastDevicePoint","startDevicePoint","getVelocity","timeDelta","timestampedPoint","lastPoint","applyConstraints","elastic","calcRelativeAxisConstraints","calcRelativeConstraints","layoutBox","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","constraintsBox","calcOrigin","sourceLength","targetLength","rebaseAxisConstraints","constraints","relativeConstraints","defaultElastic","resolveDragElastic","dragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","elementDragControls","VisualElementDragControls","originEvent","snapToCursor","dragPropagation","onDragStart","measuredAxis","animationState","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","finalEvent","finalPanInfo","onDragEnd","_point","shouldDrag","axisValue","prevConstraints","onMeasureDragConstraints","constraintsElement","measuredConstraints","userConstraints","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","dragKey","externalMotionValue","boxProgress","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","currentDirection","lockThreshold","DragGesture","dragControls","asyncHandler","PanGesture","pointerDownEvent","onPanSessionStart","onPanStart","onPan","onPanEnd","globalProjectionState","pixelsToPercent","pixels","correctBorderRadius","correctBoxShadow","projectionDelta","original","shadow","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","layoutDependency","stack","promoteContext","animateSingleValue","motionValue$1","compareByDepth","FlatTree","timeout","start","checkElapsed","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisDelta","sourceAxis","removeAxisTransforms","transforms","scaleKey","originKey","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","boxEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","indexOfNode","member","preserveFollowOpacity","crossfade","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","rotateX","rotateY","skewX","skewY","elementScaleX","elementScaleY","transformAxes","animationTarget","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","subscriptionManager","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","finishAnimation","hasRelativeLayoutChanged","newLayout","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","hasOnlyRelativeTargetChanged","animationOptions","resetSkewAndRotation","shouldNotifyListeners","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","updateLayout","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","prevLayout","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","roundBox","checkNodeWasScrollRoot","boxWithoutScroll","transformOnly","withTransforms","boxWithoutTransform","nodeBox","forceRecalculation","isShared","relativeParent","canSkip","prevTreeScaleX","prevTreeScaleY","notifyAll","snapshot","snapshotLatestValues","mixedValues","targetDelta","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","prevRelativeTarget","mixAxisDelta","mixBox","targetWithTransforms","shouldAnimatePositionOnly","xLength","yLength","needsReset","hasDistortingTransform","resetValues","targetStyle","valuesToRender","correct","applyTo","isCSSVariable","corrected","num","measuredLayout","animationType","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","mixAxis","userAgentContains","string","roundPoint","roundAxis","DocumentProjectionNode","notify","HTMLProjectionNode","documentNode","handleHoverEvent","lifecycle","HoverGesture","_element","FocusGesture","isFocusVisible","handlePressEvent","PressGesture","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","thresholdNames","InViewFeature","viewport","rootMargin","amount","once","onIntersectionUpdate","isIntersecting","onViewportEnter","onViewportLeave","hasViewportOptionChanged","prevViewport","gestureAnimations","featureBundle","motion","nasmPhases","nasmStepConfig","getNASMStep","stepId","getNextNASMStep","currentStepId","getPreviousNASMStep","NASMIntakeStep","setErrors","intakeData","setIntakeData","showFollowUp","setShowFollowUp","expandedSections","setExpandedSections","goalOptions","equipmentOptions","handleInputChange","validateField","validateForm","newErrors","answer","handlePARQChange","newIntakeData","hasYesAnswer","handlePARQTextChange","handleDeclarationChange","handlePARQFollowupChange","toggleSection","handleArrayToggle","handleSubmit","isPARQComplete","clearanceStatus","determinePARQClearanceStatus","goalHierarchy","baselineSchedule","isFormComplete","basicInfoComplete","parqComplete","declarationComplete","NASMVitalsStep","vitalsData","setVitalsData","riskFlags","setRiskFlags","updated","calculateBMI","calculateAverageRHR","calculateWHR","day1","day2","day3","validDays","hr","waist","hip","getRHRClassification","rhr","getBPClassification","systolic","diastolic","sys","dia","getBMIClassification","bmi","bmiValue","getWHRRisk","whr","gender","ratio","handleGirthChange","measurement","handleAssessmentMethodChange","checked","handleSkinfoldChange","site","calculatedBF","calculateBodyFatFromSkinfolds","skinfolds","age","chest","abdominal","thigh","tricep","subscapular","suprailiac","midaxillary","clientAge","bodyDensity","isRequiredMeasurement","heightFeet","heightInches","heightUnit","weightUnit","heightInMeters","weightInKg","assessRiskFlags","flags","bf","newFlags","currentRiskFlags","trackingBaselines","classifications","flag","_u","_v","NASMStaticPostureStep","activeView","setActiveView","completedSections","setCompletedSections","selectedTags","setSelectedTags","viewCompletionStatus","setViewCompletionStatus","postureData","setPostureData","suspectedDistortions","setSuspectedDistortions","muscleImbalancePredictor","countDeviationsInSection","view","sectionData","countDeviationsInView","viewData","getTotalDeviations","getSectionConfig","handleDeviationChange","deviation","countAsymmetries","count","opposite","detectPosturalSyndromes","syndromes","deviations","getSuggestedFocusAreas","areas","markSectionNormal","clearedSection","clearSection","calculateMuscleImbalances","predictions","baseDeviation","getCompletedViews","completed","getAsymmetries","asymmetries","rightKey","leftKey","toggleTag","canProceedToNextStep","completedViews","viewName","getAllViewsComplete","handleProceed","handleDeviationChangeEnhanced","val","detectedSyndromes","posturalAssessment","sectionKey","deviationKey","deviationName","isBilateral","baseKey","bothKey","asymmetry","imbalances","distortion","OPT_PHASES","GOAL_TO_PHASE","NASMOPTPhaseStep","selectedPhase","setSelectedPhase","showRecommendation","setShowRecommendation","userGoal","goalMapping","phaseId","handlePhaseSelection","handleContinue","PhaseCard","isRecommended","phaseName","benefit","NASMProgramWorkflow","useNavigate","searchParams","setSearchParams","useSearchParams","completedSteps","setCompletedSteps","isContentVisible","setIsContentVisible","animationKey","setAnimationKey","mobileSidebarOpen","setMobileSidebarOpen","isDesktop","setIsDesktop","openPhases","setOpenPhases","urlStep","currentStepConfig","navigateToStep","newParams","newCompleted","handleResize","isLargeScreen","getCurrentPhase","timer","currentStepData","stepsByPhase","togglePhase","newOpenPhases","renderStepComponent","prevStep","nextStep","StreamlinedProgramNavigation","pendingChanges","setPendingChanges","streamlinedTabs","getMethodologySpecificTabs","selectedSystem","currentMethodologyTabs","allTabs","StreamlinedProgramContent","renderCurrentStep","StreamlinedProgram","StreamlinedProgramRouter","Program","selectedMethodology","setSelectedMethodology","handleMethodologySelect","methodology","MethodologySelection"],"ignoreList":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"sources":["../../src/lib/engines/FiveThreeOneEngine.js","../../src/components/program/steps/Step1MaxTesting.jsx","../../src/components/program/steps/ScheduleSelectionStep.jsx","../../src/components/program/steps/Step2CoreLifts.jsx","../../src/components/program/steps/Step4CycleStructure.jsx","../../src/components/program/steps/Step5Week1Execution.jsx","../../src/components/program/steps/Step6Week2Execution.jsx","../../src/components/program/steps/Step7Week3Execution.jsx","../../src/components/program/steps/Step8DeloadWeek.jsx","../../src/components/program/steps/Step9CycleProgression.jsx","../../src/components/program/steps/Step10StallingReset.jsx","../../src/components/program/steps/Step12BoringButBig.jsx","../../src/components/program/steps/Step11AssistanceWork.jsx","../../src/components/program/steps/Step13Triumvirate.jsx","../../src/components/program/steps/Step14PeriodizationBible.jsx","../../src/components/program/steps/Step15Bodyweight.jsx","../../src/components/program/steps/Step16JackShit.jsx","../../src/components/program/steps/Step17ConditioningRecovery.jsx","../../src/components/program/steps/Step18ProgramCustomization.jsx","../../src/components/program/FiveThreeOneWorkflow.jsx","../../src/hooks/useUnsavedChanges.js","../../src/components/program/BuilderCTA.jsx","../../src/contexts/ProgramContext.jsx","../../src/layout/PageLayout.jsx","../../src/components/assessment/nasm/shared/nasmOPTModel.js","../../src/components/program/tabs/SystemRecommendationStep.jsx","../../src/components/program/tabs/PrimaryGoalStep.jsx","../../src/components/program/tabs/ExperienceLevelStep.jsx","../../src/components/program/tabs/TimelineStep.jsx","../../src/components/program/tabs/InjuryScreeningStep.jsx","../../src/components/program/tabs/PHAHealthScreenStep.jsx","../../src/hooks/useAssessment.js","../../src/components/program/tabs/VolumeLandmarksTab.jsx","../../src/components/program/tabs/TrainingMaxStep.jsx","../../src/components/program/tabs/MovementAssessmentStep.jsx","../../src/components/program/tabs/NASMMovementAssessmentStep.jsx","../../src/components/program/tabs/PeriodizationStep.jsx","../../src/components/program/tabs/ImplementationStep.jsx","../../node_modules/@heroicons/react/24/solid/esm/CheckIcon.js","../../node_modules/@heroicons/react/24/solid/esm/ChevronDownIcon.js","../../node_modules/@heroicons/react/24/solid/esm/CogIcon.js","../../node_modules/@heroicons/react/24/solid/esm/MagnifyingGlassIcon.js","../../node_modules/@heroicons/react/24/solid/esm/PlayIcon.js","../../node_modules/@heroicons/react/24/solid/esm/UserIcon.js","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/motion-utils/dist/es/array.mjs","../../node_modules/motion-utils/dist/es/clamp.mjs","../../node_modules/motion-utils/dist/es/errors.mjs","../../node_modules/motion-utils/dist/es/global-config.mjs","../../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../../node_modules/motion-utils/dist/es/is-object.mjs","../../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../../node_modules/motion-utils/dist/es/memo.mjs","../../node_modules/motion-utils/dist/es/noop.mjs","../../node_modules/motion-utils/dist/es/pipe.mjs","../../node_modules/motion-utils/dist/es/progress.mjs","../../node_modules/motion-utils/dist/es/subscription-manager.mjs","../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../../node_modules/motion-utils/dist/es/easing/back.mjs","../../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../../node_modules/motion-utils/dist/es/easing/circ.mjs","../../node_modules/motion-utils/dist/es/easing/ease.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../../node_modules/motion-dom/dist/es/frameloop/order.mjs","../../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../../node_modules/motion-dom/dist/es/animation/utils/make-animation-instant.mjs","../../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../../node_modules/motion-dom/dist/es/value/types/auto.mjs","../../node_modules/motion-dom/dist/es/value/types/test.mjs","../../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../../node_modules/motion-dom/dist/es/value/types/int.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../../node_modules/motion-dom/dist/es/value/index.mjs","../../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../src/config/nasmStepConfig.js","../../src/components/program/tabs/NASMIntakeStep.jsx","../../src/components/program/tabs/NASMVitalsStep.jsx","../../src/components/program/tabs/NASMStaticPostureStep.jsx","../../src/components/program/tabs/NASMOPTPhaseStep.jsx","../../src/components/program/NASMProgramWorkflow.jsx","../../src/pages/StreamlinedProgram.jsx","../../src/pages/Program.jsx"],"sourcesContent":["/**\r\n * Complete 5/3/1 Training System Engine\r\n * Based on Jim Wendler's 5/3/1 methodology\r\n */\r\n\r\nclass FiveThreeOneEngine {\r\n    constructor() {\r\n        // Both percentage options from manual\r\n        this.percentageSchemes = {\r\n            option1: {\r\n                week1: { sets: [5, 5, 5], percentages: [65, 75, 85], amrap: true },\r\n                week2: { sets: [3, 3, 3], percentages: [70, 80, 90], amrap: true },\r\n                week3: { sets: [5, 3, 1], percentages: [75, 85, 95], amrap: true },\r\n                week4: { sets: [5, 5, 5], percentages: [40, 50, 60], amrap: false }\r\n            },\r\n            option2: {\r\n                week1: { sets: [5, 5, 5], percentages: [75, 80, 85], amrap: true },\r\n                week2: { sets: [3, 3, 3], percentages: [80, 85, 90], amrap: true },\r\n                week3: { sets: [5, 3, 1], percentages: [75, 85, 95], amrap: true },\r\n                week4: { sets: [5, 5, 5], percentages: [40, 50, 60], amrap: false }\r\n            }\r\n        };\r\n\r\n        // All assistance templates from manual\r\n        this.assistanceTemplates = {\r\n            bbb: {\r\n                name: \"Boring But Big\",\r\n                description: \"Same lift 5x10 after main work\",\r\n                loads: { beginner: 30, intermediate: 40, advanced: 50 }\r\n            },\r\n            triumvirate: {\r\n                name: \"Triumvirate\",\r\n                description: \"3 exercises total per day\"\r\n            },\r\n            jackshit: {\r\n                name: \"I'm Not Doing Jack Shit\",\r\n                description: \"Main lift only\"\r\n            },\r\n            periodization_bible: {\r\n                name: \"Periodization Bible\",\r\n                description: \"3 categories x 5x10-20 each\"\r\n            },\r\n            bodyweight: {\r\n                name: \"Bodyweight Template\",\r\n                description: \"≥75 reps per exercise\",\r\n                targetReps: 75\r\n            }\r\n        };\r\n\r\n        // Schedule templates\r\n        this.scheduleTemplates = {\r\n            four_day: {\r\n                name: \"4 Days/Week (Standard)\",\r\n                description: \"One main lift per day\",\r\n                pattern: ['press', 'deadlift', 'bench', 'squat'],\r\n                deload: true\r\n            },\r\n            three_day: {\r\n                name: \"3 Days/Week (Rolling)\",\r\n                description: \"6-week rolling cycle\",\r\n                pattern: \"rolling\",\r\n                deload: \"week_5\"\r\n            },\r\n            two_day: {\r\n                name: \"2 Days/Week\",\r\n                description: \"Paired lifts\",\r\n                pattern: [['squat', 'bench'], ['deadlift', 'press']],\r\n                deload: false\r\n            }\r\n        };\r\n    }\r\n\r\n    // Calculate Estimated 1RM using Epley formula\r\n    calculateEst1RM(weight, reps) {\r\n        if (reps === 1) return weight;\r\n        return Math.round(weight * (1 + reps / 30));\r\n    }\r\n\r\n    // Calculate Training Max (90% of 1RM)\r\n    calculateTrainingMax(oneRepMax, roundTo = 5) {\r\n        const trainingMax = oneRepMax * 0.9;\r\n        return Math.round(trainingMax / roundTo) * roundTo;\r\n    }\r\n\r\n    // Calculate all training maxes\r\n    calculateAllTrainingMaxes(maxes, roundTo = 5) {\r\n        const trainingMaxes = {};\r\n        for (const [lift, max] of Object.entries(maxes)) {\r\n            if (max) {\r\n                trainingMaxes[lift] = this.calculateTrainingMax(max, roundTo);\r\n            }\r\n        }\r\n        return trainingMaxes;\r\n    }\r\n\r\n    // Generate main work for a specific week and lift\r\n    generateMainWork(lift, trainingMax, week, percentageOption = 'option1', roundTo = 5) {\r\n        const scheme = this.percentageSchemes[percentageOption][`week${week}`];\r\n        const mainWork = [];\r\n\r\n        for (let i = 0; i < scheme.sets.length; i++) {\r\n            const percentage = scheme.percentages[i];\r\n            const weight = Math.round((trainingMax * (percentage / 100)) / roundTo) * roundTo;\r\n            const isLastSet = i === scheme.sets.length - 1;\r\n\r\n            mainWork.push({\r\n                sets: 1,\r\n                reps: scheme.sets[i],\r\n                weight: weight,\r\n                percentage: percentage,\r\n                amrap: scheme.amrap && isLastSet,\r\n                notes: scheme.amrap && isLastSet ? `${scheme.sets[i]}+ reps (AMRAP)` : `${scheme.sets[i]} reps`\r\n            });\r\n        }\r\n\r\n        return mainWork;\r\n    }\r\n\r\n    // Generate assistance work for a lift\r\n    generateAssistanceWork(lift, trainingMax, template, level = 'intermediate') {\r\n        const assistanceTemplate = this.assistanceTemplates[template];\r\n\r\n        if (!assistanceTemplate || template === 'jackshit') {\r\n            return [];\r\n        }\r\n\r\n        if (template === 'bbb') {\r\n            const percentage = assistanceTemplate.loads[level];\r\n            const weight = Math.round(trainingMax * (percentage / 100) / 5) * 5;\r\n            return [{\r\n                exercise: lift,\r\n                sets: 5,\r\n                reps: 10,\r\n                load: weight,\r\n                notes: `${percentage}% of Training Max`\r\n            }];\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    // Generate a complete 4-week cycle\r\n    generateCycle(trainingMaxes, config = {}) {\r\n        const {\r\n            schedule = 'four_day',\r\n            percentageOption = 'option1',\r\n            assistanceTemplate = 'bbb',\r\n            assistanceLevel = 'intermediate',\r\n            roundTo = 5,\r\n            includeWarmup = true\r\n        } = config;\r\n\r\n        const scheduleTemplate = this.scheduleTemplates[schedule];\r\n        const weeks = [];\r\n\r\n        for (let week = 1; week <= 4; week++) {\r\n            const weekData = {\r\n                week: week,\r\n                name: week === 4 ? 'Deload Week' : `Week ${week}`,\r\n                description: week === 4 ? 'Recovery and form focus' : this.getWeekDescription(week, percentageOption),\r\n                days: []\r\n            };\r\n\r\n            if (schedule === 'four_day') {\r\n                scheduleTemplate.pattern.forEach((lift, dayIndex) => {\r\n                    if (trainingMaxes[lift]) {\r\n                        const mainWork = this.generateMainWork(lift, trainingMaxes[lift], week, percentageOption, roundTo);\r\n                        const assistanceWork = this.generateAssistanceWork(lift, trainingMaxes[lift], assistanceTemplate, assistanceLevel);\r\n\r\n                        weekData.days.push({\r\n                            day: dayIndex + 1,\r\n                            focus: lift,\r\n                            mainWork: mainWork,\r\n                            assistanceWork: assistanceWork\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            weeks.push(weekData);\r\n        }\r\n\r\n        return {\r\n            program: '5/3/1',\r\n            schedule: scheduleTemplate.name,\r\n            percentageOption: percentageOption,\r\n            assistanceTemplate: this.assistanceTemplates[assistanceTemplate].name,\r\n            weeks: weeks,\r\n            progressionNotes: this.getProgressionNotes()\r\n        };\r\n    }\r\n\r\n    // Get week description based on percentage scheme\r\n    getWeekDescription(week, percentageOption) {\r\n        const scheme = this.percentageSchemes[percentageOption][`week${week}`];\r\n        const percentages = scheme.percentages.join('%, ') + '%';\r\n        const sets = scheme.sets.join(', ');\r\n        return `${sets} reps at ${percentages} + AMRAP final set`;\r\n    }\r\n\r\n    // Get progression notes\r\n    getProgressionNotes() {\r\n        return [\r\n            \"Add 5 lbs to upper body TM after successful cycle\",\r\n            \"Add 10 lbs to lower body TM after successful cycle\",\r\n            \"Successful cycle = getting required reps on all AMRAP sets\",\r\n            \"If you miss reps, repeat cycle with same weights\",\r\n            \"Deload week is mandatory - do not skip\",\r\n            \"Track all AMRAP sets for progression decisions\"\r\n        ];\r\n    }\r\n\r\n    // Validate maxes\r\n    validateMaxes(maxes) {\r\n        const errors = [];\r\n        const requiredLifts = ['squat', 'bench', 'deadlift', 'press'];\r\n\r\n        requiredLifts.forEach(lift => {\r\n            if (!maxes[lift] || maxes[lift] <= 0) {\r\n                errors.push(`${lift.replace('_', ' ')} max is required`);\r\n            }\r\n        });\r\n\r\n        return errors;\r\n    }\r\n}\r\n\r\nexport default FiveThreeOneEngine;\r\nexport { FiveThreeOneEngine };\r\n","import React, { useState } from 'react';\r\nimport { useSettings } from '../../../contexts/SettingsContext.jsx';\r\nimport { roundToIncrement } from '../../../lib/fiveThreeOne/math.js';\r\nimport { Calculator, AlertCircle, CheckCircle, Info } from 'lucide-react';\r\n\r\nexport default function Step1MaxTesting({ data, updateData }) {\r\n    const { roundingIncrement } = useSettings();\r\n    const [testingMethod, setTestingMethod] = useState(data.testingMethod || 'estimate');\r\n    const [oneRMs, setOneRMs] = useState(data.oneRMs || {\r\n        squat: '',\r\n        bench: '',\r\n        deadlift: '',\r\n        overhead_press: ''\r\n    });\r\n    const [repTests, setRepTests] = useState(data.repTests || {\r\n        squat: { weight: '', reps: '' },\r\n        bench: { weight: '', reps: '' },\r\n        deadlift: { weight: '', reps: '' },\r\n        overhead_press: { weight: '', reps: '' }\r\n    });\r\n    const [trainingMaxes, setTrainingMaxes] = useState(data.trainingMaxes || {});\r\n\r\n    const liftNames = {\r\n        squat: 'Squat',\r\n        bench: 'Bench Press',\r\n        deadlift: 'Deadlift',\r\n        overhead_press: 'Overhead Press'\r\n    };\r\n\r\n    // Wendler's formula: Estimated 1RM = Weight × Reps × 0.0333 + Weight\r\n    const calculateEst1RM = (weight, reps) => {\r\n        if (!weight || !reps || reps < 1) return 0;\r\n        const w = parseFloat(weight);\r\n        const r = parseInt(reps);\r\n        if (r === 1) return w;\r\n        return Math.round(w * r * 0.0333 + w);\r\n    };\r\n\r\n    // Training Max = 90% of 1RM\r\n    const calculateTrainingMax = (oneRM) => {\r\n        if (!oneRM) return 0;\r\n        return roundToIncrement(oneRM * 0.9, roundingIncrement);\r\n    };\r\n\r\n    const handleOneRMChange = (lift, value) => {\r\n        const newOneRMs = { ...oneRMs, [lift]: value };\r\n        setOneRMs(newOneRMs);\r\n\r\n        // Calculate training maxes\r\n        const newTrainingMaxes = {};\r\n        Object.keys(newOneRMs).forEach(liftKey => {\r\n            if (newOneRMs[liftKey]) {\r\n                newTrainingMaxes[liftKey] = calculateTrainingMax(parseFloat(newOneRMs[liftKey]));\r\n            }\r\n        });\r\n        setTrainingMaxes(newTrainingMaxes);\r\n\r\n        updateData({\r\n            testingMethod,\r\n            oneRMs: newOneRMs,\r\n            repTests,\r\n            trainingMaxes: newTrainingMaxes\r\n        });\r\n    };\r\n\r\n    const handleRepTestChange = (lift, field, value) => {\r\n        const newRepTests = {\r\n            ...repTests,\r\n            [lift]: { ...repTests[lift], [field]: value }\r\n        };\r\n        setRepTests(newRepTests);\r\n\r\n        // Calculate estimated 1RMs and training maxes\r\n        const newOneRMs = { ...oneRMs };\r\n        const newTrainingMaxes = {};\r\n\r\n        Object.keys(newRepTests).forEach(liftKey => {\r\n            const test = newRepTests[liftKey];\r\n            if (test.weight && test.reps) {\r\n                const est1RM = calculateEst1RM(test.weight, test.reps);\r\n                newOneRMs[liftKey] = est1RM.toString();\r\n                newTrainingMaxes[liftKey] = calculateTrainingMax(est1RM);\r\n            }\r\n        });\r\n\r\n        setOneRMs(newOneRMs);\r\n        setTrainingMaxes(newTrainingMaxes);\r\n\r\n        updateData({\r\n            testingMethod,\r\n            oneRMs: newOneRMs,\r\n            repTests: newRepTests,\r\n            trainingMaxes: newTrainingMaxes\r\n        });\r\n    };\r\n\r\n    const isStepComplete = () => {\r\n        return Object.values(trainingMaxes).every(tm => tm > 0);\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            <div>\r\n                <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                    Step 1: Establish One-Rep Maxes and Training Max\r\n                </h3>\r\n                <p className=\"text-gray-400\">\r\n                    Determine your current 1RM for each lift and calculate Training Max (90% of 1RM).\r\n                </p>\r\n            </div>\r\n\r\n            {/* Core Philosophy */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-blue-300 font-medium mb-2\">5/3/1 Philosophy</h4>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>• <strong>Start too light:</strong> Training Max = 90% of 1RM</li>\r\n                            <li>• <strong>Leave your ego at the door:</strong> Conservative TMs enable long-term progress</li>\r\n                            <li>• <strong>You should get 5+ reps</strong> with your Training Max</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Testing Method Selection */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4\">Testing Method</h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div\r\n                        onClick={() => setTestingMethod('known')}\r\n                        className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${testingMethod === 'known'\r\n                            ? 'border-red-500 bg-red-900/20'\r\n                            : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                            }`}\r\n                    >\r\n                        <div className=\"flex items-center mb-2\">\r\n                            <CheckCircle className=\"w-5 h-5 text-green-400 mr-2\" />\r\n                            <span className=\"text-white font-medium\">Known 1RM</span>\r\n                        </div>\r\n                        <p className=\"text-gray-400 text-sm\">\r\n                            I know my current 1RM for each lift\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div\r\n                        onClick={() => setTestingMethod('estimate')}\r\n                        className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${testingMethod === 'estimate'\r\n                            ? 'border-red-500 bg-red-900/20'\r\n                            : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                            }`}\r\n                    >\r\n                        <div className=\"flex items-center mb-2\">\r\n                            <Calculator className=\"w-5 h-5 text-blue-400 mr-2\" />\r\n                            <span className=\"text-white font-medium\">Estimate from Rep Test</span>\r\n                        </div>\r\n                        <p className=\"text-gray-400 text-sm\">\r\n                            Calculate 1RM using Wendler's formula\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Known 1RM Input */}\r\n            {testingMethod === 'known' && (\r\n                <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                    <h4 className=\"text-lg font-medium text-white mb-4\">Enter Your Current 1RMs</h4>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        {Object.entries(liftNames).map(([lift, name]) => (\r\n                            <div key={lift} className=\"space-y-2\">\r\n                                <label className=\"block text-sm font-medium text-gray-300\">\r\n                                    {name} 1RM (lbs)\r\n                                </label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={oneRMs[lift]}\r\n                                    onChange={(e) => handleOneRMChange(lift, e.target.value)}\r\n                                    placeholder=\"e.g., 315\"\r\n                                    className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-md text-white focus:border-red-500 focus:ring-red-500\"\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Rep Test Input */}\r\n            {testingMethod === 'estimate' && (\r\n                <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                    <h4 className=\"text-lg font-medium text-white mb-4\">Rep Test Calculator</h4>\r\n                    <div className=\"mb-4 p-3 bg-blue-900/20 border border-blue-600 rounded-lg\">\r\n                        <p className=\"text-blue-200 text-sm\">\r\n                            <strong>Wendler's Formula:</strong> Estimated 1RM = Weight × Reps × 0.0333 + Weight\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-6\">\r\n                        {Object.entries(liftNames).map(([lift, name]) => (\r\n                            <div key={lift} className=\"bg-gray-800 p-4 rounded-lg\">\r\n                                <h5 className=\"text-white font-medium mb-3\">{name}</h5>\r\n                                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 items-end\">\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n                                            Weight (lbs)\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            value={repTests[lift].weight}\r\n                                            onChange={(e) => handleRepTestChange(lift, 'weight', e.target.value)}\r\n                                            placeholder=\"e.g., 275\"\r\n                                            className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:border-red-500\"\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n                                            Reps\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            value={repTests[lift].reps}\r\n                                            onChange={(e) => handleRepTestChange(lift, 'reps', e.target.value)}\r\n                                            placeholder=\"e.g., 5\"\r\n                                            min=\"1\"\r\n                                            max=\"20\"\r\n                                            className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:border-red-500\"\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n                                            Estimated 1RM\r\n                                        </label>\r\n                                        <div className=\"px-3 py-2 bg-gray-600 rounded-md text-white font-medium\">\r\n                                            {repTests[lift].weight && repTests[lift].reps\r\n                                                ? `${calculateEst1RM(repTests[lift].weight, repTests[lift].reps)} lbs`\r\n                                                : '---'\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Training Maxes Display */}\r\n            {Object.keys(trainingMaxes).length > 0 && (\r\n                <div className=\"bg-green-900/20 border border-green-600 p-6 rounded-lg\">\r\n                    <h4 className=\"text-lg font-medium text-white mb-4\">\r\n                        Your Training Maxes (90% of 1RM)\r\n                    </h4>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                        {Object.entries(trainingMaxes).map(([lift, tm]) => (\r\n                            <div key={lift} className=\"bg-gray-800 p-4 rounded-lg text-center\">\r\n                                <div className=\"text-green-400 font-medium\">{liftNames[lift]}</div>\r\n                                <div className=\"text-2xl font-bold text-white\">{tm} lbs</div>\r\n                                <div className=\"text-gray-400 text-sm\">Training Max</div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className=\"mt-4 p-3 bg-yellow-900/20 border border-yellow-600 rounded-lg\">\r\n                        <div className=\"flex items-start space-x-2\">\r\n                            <AlertCircle className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                            <div className=\"text-yellow-200 text-sm\">\r\n                                <strong>Validation:</strong> You should be able to perform 5+ reps with your Training Max.\r\n                                If not, reduce the TM until you can get at least 5 strong reps.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Completion Status */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-green-900/20 border border-green-500 p-4 rounded-lg\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n                        <span className=\"text-green-300 font-medium\">\r\n                            Step 1 Complete! Training Maxes calculated for all lifts.\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Calendar, Clock, CheckCircle } from 'lucide-react';\r\nimport * as EngineModule from '../../../lib/engines/FiveThreeOneEngine.js';\r\n\r\nconst FiveThreeOneEngine = EngineModule.default ?? EngineModule.FiveThreeOneEngine;\r\n\r\nconst ScheduleSelectionStep = ({ programData, setProgramData, data, updateData }) => {\r\n    const engine = new FiveThreeOneEngine();\r\n\r\n    // Support both prop shapes: { programData, setProgramData } or { data, updateData }\r\n    const state = programData ?? data ?? {};\r\n    const scheduleState = state?.schedule ?? {};\r\n\r\n    const toKey = (freq) => {\r\n        switch (freq) {\r\n            case '4day': return 'four_day';\r\n            case '3day': return 'three_day';\r\n            case '2day': return 'two_day';\r\n            case '1day': return 'one_day';\r\n            default: return undefined;\r\n        }\r\n    };\r\n    const toFrequency = (key) => {\r\n        switch (key) {\r\n            case 'four_day': return '4day';\r\n            case 'three_day': return '3day';\r\n            case 'two_day': return '2day';\r\n            case 'one_day': return '1day';\r\n            default: return '4day';\r\n        }\r\n    };\r\n\r\n    const selectedKey = toKey(scheduleState.frequency) ?? state.schedule; // fallback for older shape\r\n\r\n    const handleScheduleSelect = (scheduleKey) => {\r\n        const freq = toFrequency(scheduleKey);\r\n        if (typeof updateData === 'function') {\r\n            // Wizard updater expects a partial object\r\n            updateData({\r\n                schedule: {\r\n                    ...scheduleState,\r\n                    frequency: freq\r\n                }\r\n            });\r\n        } else if (typeof setProgramData === 'function') {\r\n            // Legacy setState style (accept function form if provided by caller)\r\n            try {\r\n                setProgramData(prev => ({\r\n                    ...prev,\r\n                    schedule: {\r\n                        ...(prev?.schedule ?? {}),\r\n                        frequency: freq\r\n                    }\r\n                }));\r\n            } catch {\r\n                // Fallback to shallow merge\r\n                setProgramData({\r\n                    ...state,\r\n                    schedule: {\r\n                        ...scheduleState,\r\n                        frequency: freq\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const scheduleOptions = [\r\n        {\r\n            key: 'four_day',\r\n            icon: '4️⃣',\r\n            title: '4 Days Per Week',\r\n            subtitle: 'Standard 5/3/1 Schedule',\r\n            description: 'One main lift per day with full assistance work',\r\n            timeCommitment: '60-90 minutes per session',\r\n            pattern: 'Day 1: OHP • Day 2: Deadlift • Day 3: Bench • Day 4: Squat',\r\n            pros: [\r\n                'Original 5/3/1 schedule',\r\n                'Optimal for strength gains',\r\n                'Full recovery between lifts',\r\n                'Complete assistance work'\r\n            ],\r\n            cons: [\r\n                'Requires 4 gym days',\r\n                'Longer total weekly time'\r\n            ],\r\n            recommended: 'Best for strength goals and those with time'\r\n        },\r\n        {\r\n            key: 'three_day',\r\n            icon: '3️⃣',\r\n            title: '3 Days Per Week',\r\n            subtitle: 'Rolling 6-Week Cycle',\r\n            description: 'Rolling pattern over 6 weeks instead of 4',\r\n            timeCommitment: '75-105 minutes per session',\r\n            pattern: 'Week 1: OHP, DL, Bench • Week 2: Squat, OHP, DL • etc.',\r\n            pros: [\r\n                'Only 3 gym days needed',\r\n                'Good for busy schedules',\r\n                'Still hits all lifts regularly'\r\n            ],\r\n            cons: [\r\n                'More complex planning',\r\n                'Longer cycles',\r\n                'Less frequent lift practice'\r\n            ],\r\n            recommended: 'Good for busy schedules with consistency'\r\n        },\r\n        {\r\n            key: 'two_day',\r\n            icon: '2️⃣',\r\n            title: '2 Days Per Week',\r\n            subtitle: 'Paired Lifts',\r\n            description: 'Two lifts per session, minimal assistance',\r\n            timeCommitment: '90-120 minutes per session',\r\n            pattern: 'Day 1: Squat + Bench • Day 2: Deadlift + OHP',\r\n            pros: [\r\n                'Minimal time commitment',\r\n                'Good for maintenance',\r\n                'Efficient sessions'\r\n            ],\r\n            cons: [\r\n                'Longer sessions',\r\n                'Limited assistance work',\r\n                'Slower progression'\r\n            ],\r\n            recommended: 'For maintenance phases or very busy periods'\r\n        },\r\n        {\r\n            key: 'one_day',\r\n            icon: '1️⃣',\r\n            title: '1 Day Per Week',\r\n            subtitle: 'Temporary/Emergency',\r\n            description: 'Alternating lift pairs, bare minimum',\r\n            timeCommitment: '60-90 minutes per session',\r\n            pattern: 'Week 1: Squat + Bench • Week 2: Deadlift + OHP',\r\n            pros: [\r\n                'Better than nothing',\r\n                'Maintains some strength',\r\n                'Very low time commitment'\r\n            ],\r\n            cons: [\r\n                'Very slow progression',\r\n                'Minimal volume',\r\n                'Not sustainable long-term'\r\n            ],\r\n            recommended: 'Emergency use only - travel, illness, etc.'\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            <div className=\"text-center mb-6\">\r\n                <h3 className=\"text-xl font-bold text-white mb-2\">Choose Your Training Schedule</h3>\r\n                <p className=\"text-gray-300\">\r\n                    Select the schedule that fits your availability and goals\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                {scheduleOptions.map((option) => (\r\n                    <div\r\n                        key={option.key}\r\n                        onClick={() => handleScheduleSelect(option.key)}\r\n                        className={`\r\n                            bg-gray-800 rounded-lg p-6 border-2 cursor-pointer transition-all duration-200 hover:scale-[1.02]\r\n                            ${selectedKey === option.key\r\n                                ? 'border-red-500 bg-red-900/20'\r\n                                : 'border-gray-700 hover:border-gray-600'\r\n                            }\r\n                        `}\r\n                    >\r\n                        {/* Header */}\r\n                        <div className=\"flex items-center justify-between mb-4\">\r\n                            <div className=\"flex items-center gap-3\">\r\n                                <span className=\"text-2xl\">{option.icon}</span>\r\n                                <div>\r\n                                    <h4 className=\"text-lg font-semibold text-white\">\r\n                                        {option.title}\r\n                                    </h4>\r\n                                    <p className=\"text-sm text-gray-400\">\r\n                                        {option.subtitle}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            {selectedKey === option.key && (\r\n                                <CheckCircle className=\"w-6 h-6 text-red-500\" />\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* Description */}\r\n                        <p className=\"text-gray-300 text-sm mb-4\">\r\n                            {option.description}\r\n                        </p>\r\n\r\n                        {/* Time Commitment */}\r\n                        <div className=\"flex items-center gap-2 mb-4\">\r\n                            <Clock className=\"w-4 h-4 text-blue-400\" />\r\n                            <span className=\"text-blue-300 text-sm font-medium\">\r\n                                {option.timeCommitment}\r\n                            </span>\r\n                        </div>\r\n\r\n                        {/* Pattern */}\r\n                        <div className=\"bg-gray-700/50 rounded-lg p-3 mb-4\">\r\n                            <div className=\"flex items-center gap-2 mb-2\">\r\n                                <Calendar className=\"w-4 h-4 text-yellow-400\" />\r\n                                <span className=\"text-yellow-300 text-sm font-medium\">\r\n                                    Pattern\r\n                                </span>\r\n                            </div>\r\n                            <p className=\"text-gray-300 text-sm\">\r\n                                {option.pattern}\r\n                            </p>\r\n                        </div>\r\n\r\n                        {/* Pros and Cons */}\r\n                        <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4 mb-4\">\r\n                            <div>\r\n                                <h6 className=\"text-green-400 text-sm font-medium mb-2\">Pros</h6>\r\n                                <ul className=\"space-y-1\">\r\n                                    {option.pros.map((pro, index) => (\r\n                                        <li key={index} className=\"text-green-300 text-xs flex items-start gap-1\">\r\n                                            <span className=\"text-green-400 mt-0.5\">•</span>\r\n                                            {pro}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                            <div>\r\n                                <h6 className=\"text-red-400 text-sm font-medium mb-2\">Cons</h6>\r\n                                <ul className=\"space-y-1\">\r\n                                    {option.cons.map((con, index) => (\r\n                                        <li key={index} className=\"text-red-300 text-xs flex items-start gap-1\">\r\n                                            <span className=\"text-red-400 mt-0.5\">•</span>\r\n                                            {con}\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Recommendation */}\r\n                        <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-3\">\r\n                            <p className=\"text-blue-300 text-sm\">\r\n                                <span className=\"font-medium\">Best for:</span> {option.recommended}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Selected Schedule Summary */}\r\n            {selectedKey && (\r\n                <div className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n                    <h4 className=\"text-lg font-semibold text-white mb-4\">\r\n                        Selected Schedule: {engine?.scheduleTemplates?.[selectedKey]?.name ?? 'Custom'}\r\n                    </h4>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                        <div className=\"text-center\">\r\n                            <div className=\"text-2xl mb-2\">\r\n                                {scheduleOptions.find(opt => opt.key === selectedKey)?.icon}\r\n                            </div>\r\n                            <p className=\"text-gray-400 text-sm\">Schedule Type</p>\r\n                            <p className=\"text-white font-medium\">\r\n                                {engine?.scheduleTemplates?.[selectedKey]?.name ?? 'Custom'}\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <div className=\"text-2xl mb-2\">⏱️</div>\r\n                            <p className=\"text-gray-400 text-sm\">Time Per Session</p>\r\n                            <p className=\"text-white font-medium\">\r\n                                {scheduleOptions.find(opt => opt.key === selectedKey)?.timeCommitment}\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <div className=\"text-2xl mb-2\">📅</div>\r\n                            <p className=\"text-gray-400 text-sm\">Weekly Commitment</p>\r\n                            <p className=\"text-white font-medium\">\r\n                                {String(selectedKey).replace('_', ' ').replace('day', ' days')}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* General Guidelines */}\r\n            <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4\">\r\n                <h5 className=\"text-yellow-400 font-medium mb-2\">📋 Schedule Guidelines</h5>\r\n                <ul className=\"text-yellow-200 text-sm space-y-1\">\r\n                    <li>• Choose based on your realistic availability, not ideal goals</li>\r\n                    <li>• 4-day schedule is optimal for strength gains and muscle building</li>\r\n                    <li>• Lower frequency schedules work for maintenance or busy periods</li>\r\n                    <li>• Consistency matters more than perfect schedule choice</li>\r\n                    <li>• You can change schedules between cycles if needed</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScheduleSelectionStep;\r\n","import React, { useState } from 'react';\r\nimport { Dumbbell, Calendar, AlertTriangle, CheckCircle, Info, Clock, Users, Filter, Layers, Package } from 'lucide-react';\r\n\r\nexport default function Step2CoreLifts({ data, updateData }) {\r\n    const [coreLifts, setCoreLifts] = useState(data.coreLifts || {\r\n        squat: 'back_squat',\r\n        bench: 'bench_press',\r\n        deadlift: 'conventional_deadlift',\r\n        overhead_press: 'military_press'\r\n    });\r\n    const [customLifts, setCustomLifts] = useState(data.customLifts || {});\r\n    const [trainingFrequency, setTrainingFrequency] = useState(data.trainingFrequency || '');\r\n    const [schedulePattern, setSchedulePattern] = useState(data.schedulePattern || '');\r\n    const [equipmentAccess, setEquipmentAccess] = useState({\r\n        barbell: false,\r\n        plates: false,\r\n        bench: false,\r\n        squat_rack: false,\r\n        dumbbells: false,\r\n        cables: false,\r\n        machines: false,\r\n        kettlebells: false,\r\n        bands: false,\r\n        suspension: false,\r\n        pullup_bar: false,\r\n        dip_station: false,\r\n        rings: false,\r\n        ...(data.equipmentAccess || {})\r\n    });\r\n    const [equipmentProfile, setEquipmentProfile] = useState(data.equipmentProfile || '');\r\n    const [injuryLimitations, setInjuryLimitations] = useState(data.injuryLimitations || {\r\n        back: false,\r\n        shoulders: false,\r\n        knees: false,\r\n        other: ''\r\n    });\r\n\r\n    const liftOptions = {\r\n        squat: {\r\n            name: 'Squat Movement',\r\n            options: {\r\n                back_squat: 'Back Squat (Default)',\r\n                front_squat: 'Front Squat',\r\n                custom: 'Custom Squat Variation'\r\n            }\r\n        },\r\n        bench: {\r\n            name: 'Bench Movement',\r\n            options: {\r\n                bench_press: 'Bench Press (Default - No alternatives recommended)',\r\n                custom: 'Custom Bench Variation'\r\n            }\r\n        },\r\n        deadlift: {\r\n            name: 'Deadlift Movement',\r\n            options: {\r\n                conventional_deadlift: 'Conventional Deadlift (Default)',\r\n                trap_bar_deadlift: 'Trap Bar Deadlift',\r\n                custom: 'Custom Deadlift Variation'\r\n            }\r\n        },\r\n        overhead_press: {\r\n            name: 'Overhead Press Movement',\r\n            options: {\r\n                military_press: 'Standing Military Press (Default)',\r\n                push_press: 'Push Press',\r\n                jerk: 'Jerk',\r\n                custom: 'Custom Press Variation'\r\n            }\r\n        }\r\n    };\r\n\r\n    const frequencyOptions = {\r\n        '4_day': {\r\n            name: '4-Day Week (Recommended)',\r\n            description: 'One core lift per day',\r\n            scheduleOptions: ['Mon/Tue/Thu/Fri', 'Sun/Mon/Wed/Fri'],\r\n            cycle: 'Standard 4-week cycle (3 work weeks + 1 deload)',\r\n            bestFor: 'Most lifters with time for 4 sessions/week',\r\n            timeCommitment: '45-90 minutes per session'\r\n        },\r\n        '3_day': {\r\n            name: '3-Day Week (Rolling)',\r\n            description: '3 workouts per week, rotating through lifts',\r\n            scheduleOptions: ['Mon/Wed/Fri', 'Tue/Thu/Sat'],\r\n            cycle: 'Rotate four lifts over 5 weeks, deload week 5',\r\n            bestFor: 'Better recovery, more rest days',\r\n            timeCommitment: '60-90 minutes per session'\r\n        },\r\n        '2_day': {\r\n            name: '2-Day Week',\r\n            description: 'Two lifts per session or alternating weeks',\r\n            scheduleOptions: [\r\n                'Variant A: Two lifts per session (SQ+BP, DL+OHP)',\r\n                'Variant B: Alternating weeks (Week1: SQ/BP, Week2: DL/OHP)'\r\n            ],\r\n            cycle: 'Usually skip deload unless needed',\r\n            bestFor: 'Very busy schedules, in-season athletes',\r\n            timeCommitment: '60-120 minutes per session',\r\n            warning: true\r\n        },\r\n        '1_day': {\r\n            name: '1-Day Week (Emergency Only)',\r\n            description: 'Extreme time constraints only',\r\n            scheduleOptions: ['Week1: SQ+BP, Week2: DL+OHP'],\r\n            cycle: 'Skip deload unless needed',\r\n            bestFor: 'Extreme time constraints only',\r\n            timeCommitment: '90+ minutes per session',\r\n            warning: true\r\n        }\r\n    };\r\n\r\n    const handleLiftChange = (liftType, liftVariation) => {\r\n        const newCoreLifts = { ...coreLifts, [liftType]: liftVariation };\r\n        setCoreLifts(newCoreLifts);\r\n        updateStepData({ coreLifts: newCoreLifts });\r\n    };\r\n\r\n    const handleCustomLiftChange = (liftType, customName) => {\r\n        const newCustomLifts = { ...customLifts, [liftType]: customName };\r\n        setCustomLifts(newCustomLifts);\r\n        updateStepData({ customLifts: newCustomLifts });\r\n    };\r\n\r\n    const handleFrequencyChange = (frequency) => {\r\n        setTrainingFrequency(frequency);\r\n        setSchedulePattern(''); // Reset schedule when frequency changes\r\n        updateStepData({ trainingFrequency: frequency, schedulePattern: '' });\r\n    };\r\n\r\n    const handleScheduleChange = (pattern) => {\r\n        setSchedulePattern(pattern);\r\n        updateStepData({ schedulePattern: pattern });\r\n    };\r\n\r\n    const handleEquipmentChange = (equipment, available) => {\r\n        const newEquipment = { ...equipmentAccess, [equipment]: available };\r\n        setEquipmentAccess(newEquipment);\r\n        updateStepData({ equipmentAccess: newEquipment });\r\n    };\r\n\r\n    const applyEquipmentProfile = (profile) => {\r\n        let preset = {};\r\n        switch (profile) {\r\n            case 'full':\r\n                preset = Object.keys(equipmentAccess).reduce((acc, k) => ({ ...acc, [k]: true }), {});\r\n                break;\r\n            case 'home_basic':\r\n                preset = { ...equipmentAccess, barbell: true, plates: true, bench: true, squat_rack: true, dumbbells: true, bands: true };\r\n                break;\r\n            case 'minimal':\r\n                preset = { ...equipmentAccess, barbell: true, plates: true, pullup_bar: true };\r\n                break;\r\n            case 'bodyweight':\r\n                preset = { ...equipmentAccess, pullup_bar: true, dip_station: true, rings: true };\r\n                // Turn off loaded equipment\r\n                Object.keys(preset).forEach(k => { if (!['pullup_bar', 'dip_station', 'rings'].includes(k)) preset[k] = false; });\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n        setEquipmentAccess(preset);\r\n        setEquipmentProfile(profile);\r\n        updateStepData({ equipmentAccess: preset, equipmentProfile: profile });\r\n    };\r\n\r\n    const handleInjuryChange = (injury, hasInjury) => {\r\n        const newInjuries = { ...injuryLimitations, [injury]: hasInjury };\r\n        setInjuryLimitations(newInjuries);\r\n        updateStepData({ injuryLimitations: newInjuries });\r\n    };\r\n\r\n    const updateStepData = (updates) => {\r\n        updateData({\r\n            coreLifts,\r\n            customLifts,\r\n            trainingFrequency,\r\n            schedulePattern,\r\n            equipmentAccess,\r\n            injuryLimitations,\r\n            ...updates\r\n        });\r\n    };\r\n\r\n    const validateEquipment = () => {\r\n        // Keep legacy requirement for core barbell lifts\r\n        return equipmentAccess.barbell && equipmentAccess.squat_rack && equipmentAccess.bench && equipmentAccess.plates;\r\n    };\r\n\r\n    const getEquipmentWarnings = () => {\r\n        const warnings = [];\r\n        if (!equipmentAccess.barbell) warnings.push('Barbell required for 5/3/1 system');\r\n        if (!equipmentAccess.squat_rack) warnings.push('Squat rack/power rack needed for safe squatting');\r\n        if (!equipmentAccess.bench) warnings.push('Bench required for bench press');\r\n        if (!equipmentAccess.plates) warnings.push('Weight plates needed for progression');\r\n        return warnings;\r\n    };\r\n\r\n    const getInjuryWarnings = () => {\r\n        const warnings = [];\r\n        if (injuryLimitations.back) warnings.push('Consider modifications for deadlifts and squats');\r\n        if (injuryLimitations.shoulders) warnings.push('May need to modify overhead press and bench press');\r\n        if (injuryLimitations.knees) warnings.push('Consider squat depth limitations or alternatives');\r\n        if (injuryLimitations.other) warnings.push('Consult with healthcare provider about modifications');\r\n        return warnings;\r\n    };\r\n\r\n    const isStepComplete = () => {\r\n        const liftsSelected = Object.values(coreLifts).every((lift) => lift !== '');\r\n        const customLiftsNamed = Object.entries(coreLifts).every(([liftType, variation]) => {\r\n            if (variation === 'custom') {\r\n                return customLifts[liftType] && customLifts[liftType].trim() !== '';\r\n            }\r\n            return true;\r\n        });\r\n        const frequencySelected = trainingFrequency !== '';\r\n        const scheduleSelected = schedulePattern !== '';\r\n\r\n        return liftsSelected && customLiftsNamed && frequencySelected && scheduleSelected;\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            <div>\r\n                <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                    Step 2: Choose Core Lifts and Weekly Training Frequency\r\n                </h3>\r\n                <p className=\"text-gray-400\">\r\n                    Select your four core lifts and determine your weekly training schedule.\r\n                </p>\r\n            </div>\r\n\r\n            {/* Core Lifts Philosophy */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-blue-300 font-medium mb-2\">Core Lift Selection</h4>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>\r\n                                • <strong>Four mandatory movements:</strong> Squat, Bench, Deadlift, Overhead Press\r\n                            </li>\r\n                            <li>• <strong>Stick to basics:</strong> Wendler recommends minimal substitutions</li>\r\n                            <li>• <strong>Master the movement:</strong> Technical proficiency is key</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Equipment Access & Profiles (Redesigned) */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg space-y-6 border border-gray-600\">\r\n                <div className=\"space-y-2\">\r\n                    <h4 className=\"text-lg font-medium text-white\">Equipment Access & Profiles</h4>\r\n                    <p className=\"text-gray-300 text-sm\">Selected equipment determines available assistance exercises and variations. Expand availability responsibly—more options can add unnecessary decision fatigue.</p>\r\n                    <p className=\"text-[11px] text-gray-400\">Toggle individual items or choose a profile below. Adjustments instantly update the sample assistance filter preview.</p>\r\n                </div>\r\n\r\n                {/* Profiles */}\r\n                <div>\r\n                    <div className=\"text-white font-medium text-sm mb-2 flex items-center gap-2\"><Package className=\"w-4 h-4 text-gray-300\" />Quick Profiles</div>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-4 gap-3\">\r\n                        {[{\r\n                            id: 'full', title: 'Full Gym', desc: 'All equipment available'\r\n                        }, { id: 'home_basic', title: 'Home Gym Basic', desc: 'Barbell, rack, bench, DBs, bands' }, { id: 'minimal', title: 'Minimal Setup', desc: 'Barbell + bodyweight only' }, { id: 'bodyweight', title: 'Bodyweight Only', desc: 'Rings / bar / dips' }].map(p => {\r\n                            const active = equipmentProfile === p.id;\r\n                            return (\r\n                                <button key={p.id} onClick={() => applyEquipmentProfile(p.id)} className={`text-left p-3 rounded border transition bg-gray-800/50 hover:bg-gray-800 ${active ? 'border-red-500 ring-2 ring-red-600' : 'border-gray-600'}`}>\r\n                                    <div className=\"text-sm font-semibold text-white\">{p.title}</div>\r\n                                    <div className=\"text-[11px] text-gray-400 mt-1 leading-snug\">{p.desc}</div>\r\n                                    {active && <div className=\"mt-1 text-[10px] text-green-400 flex items-center gap-1\"><CheckCircle className=\"w-3 h-3\" /> Active</div>}\r\n                                </button>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Categorized Equipment */}\r\n                <div className=\"space-y-5\">\r\n                    {[{\r\n                        label: 'Essential', note: 'Core barbell work requirements', items: [['barbell', 'Barbell'], ['plates', 'Plates'], ['bench', 'Bench'], ['squat_rack', 'Squat Rack']]\r\n                    }, {\r\n                        label: 'Assistance', note: 'Expands accessory & hypertrophy options', items: [['dumbbells', 'Dumbbells'], ['cables', 'Cables'], ['machines', 'Selectorized Machines']]\r\n                    }, {\r\n                        label: 'Specialty', note: 'Variation & conditioning tools', items: [['kettlebells', 'Kettlebells'], ['bands', 'Bands'], ['suspension', 'Suspension Trainer']]\r\n                    }, {\r\n                        label: 'Bodyweight', note: 'Calisthenics apparatus', items: [['pullup_bar', 'Pull-Up Bar'], ['dip_station', 'Dip Station'], ['rings', 'Rings']]\r\n                    }].map(cat => (\r\n                        <div key={cat.label} className=\"bg-gray-800/50 border border-gray-600 rounded p-4\">\r\n                            <div className=\"flex items-center justify-between mb-2\">\r\n                                <div>\r\n                                    <div className=\"text-white font-medium text-sm\">{cat.label}</div>\r\n                                    <div className=\"text-[11px] text-gray-400\">{cat.note}</div>\r\n                                </div>\r\n                                {cat.label === 'Essential' && !validateEquipment() && <span className=\"text-[10px] text-red-400\">Incomplete</span>}\r\n                            </div>\r\n                            <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2\">\r\n                                {cat.items.map(([key, label]) => (\r\n                                    <label key={key} className={`flex items-center gap-2 px-2 py-1 rounded border text-xs cursor-pointer select-none ${equipmentAccess[key] ? 'bg-red-600/10 border-red-500 text-white' : 'bg-gray-900/40 border-gray-600 text-gray-300 hover:bg-gray-900/70'}`}>\r\n                                        <input type=\"checkbox\" className=\"hidden\" checked={!!equipmentAccess[key]} onChange={e => handleEquipmentChange(key, e.target.checked)} />\r\n                                        <span className=\"w-2.5 h-2.5 rounded-full border ${equipmentAccess[key] ? 'border-red-400 bg-red-500' : 'border-gray-500'}\"></span>\r\n                                        {label}\r\n                                    </label>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {/* Impact & Preview */}\r\n                <div className=\"bg-gray-800/70 border border-gray-600 rounded p-4 space-y-4\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <Layers className=\"w-4 h-4 text-gray-300\" />\r\n                        <div className=\"text-white font-medium text-sm\">Assistance Availability Preview</div>\r\n                    </div>\r\n                    <p className=\"text-[11px] text-gray-400\">Demonstrates how equipment toggles unlock / restrict common assistance exercises.</p>\r\n                    <EquipmentPreview equipmentAccess={equipmentAccess} />\r\n                </div>\r\n\r\n                {!validateEquipment() && (\r\n                    <div className=\"p-3 bg-red-900/20 border border-red-600 rounded-lg\">\r\n                        <div className=\"flex items-start space-x-2\">\r\n                            <AlertTriangle className=\"w-5 h-5 text-red-400 mt-0.5\" />\r\n                            <div>\r\n                                <h5 className=\"text-red-300 font-medium mb-1\">Essential Equipment Warnings</h5>\r\n                                <ul className=\"text-red-200 text-sm space-y-1\">\r\n                                    {getEquipmentWarnings().map((warning, index) => (\r\n                                        <li key={index}>• {warning}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Injury Limitations */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4\">Injury Limitations</h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    {[\r\n                        {\r\n                            key: 'back',\r\n                            name: 'Lower Back Issues'\r\n                        },\r\n                        {\r\n                            key: 'shoulders',\r\n                            name: 'Shoulder Problems'\r\n                        },\r\n                        {\r\n                            key: 'knees',\r\n                            name: 'Knee Problems'\r\n                        }\r\n                    ].map(({ key, name }) => (\r\n                        <div key={key} className=\"flex items-center space-x-2\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id={key}\r\n                                checked={injuryLimitations[key]}\r\n                                onChange={(e) => handleInjuryChange(key, e.target.checked)}\r\n                                className=\"w-4 h-4 text-yellow-500 bg-gray-800 border-gray-600 rounded focus:ring-yellow-500\"\r\n                            />\r\n                            <label htmlFor={key} className=\"text-gray-300 text-sm\">\r\n                                {name}\r\n                            </label>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"mt-4\">\r\n                    <label htmlFor=\"other_injury\" className=\"block text-sm font-medium text-gray-300 mb-1\">\r\n                        Other limitations or injuries\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"other_injury\"\r\n                        value={injuryLimitations.other}\r\n                        onChange={(e) => handleInjuryChange('other', e.target.value)}\r\n                        placeholder=\"Describe any other concerns...\"\r\n                        className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 rounded-md text-white focus:border-yellow-500\"\r\n                    />\r\n                </div>\r\n\r\n                {getInjuryWarnings().length > 0 && (\r\n                    <div className=\"mt-4 p-3 bg-yellow-900/20 border border-yellow-600 rounded-lg\">\r\n                        <div className=\"flex items-start space-x-2\">\r\n                            <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                            <div>\r\n                                <h5 className=\"text-yellow-300 font-medium mb-1\">Modification Recommendations</h5>\r\n                                <ul className=\"text-yellow-200 text-sm space-y-1\">\r\n                                    {getInjuryWarnings().map((warning, index) => (\r\n                                        <li key={index}>• {warning}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Core Lift Selection */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4\">Select Your Core Lifts</h4>\r\n                <div className=\"space-y-6\">\r\n                    {Object.entries(liftOptions).map(([liftType, liftData]) => (\r\n                        <div key={liftType} className=\"bg-gray-800 p-4 rounded-lg\">\r\n                            <h5 className=\"text-white font-medium mb-3\">{liftData.name}</h5>\r\n                            <div className=\"space-y-2\">\r\n                                {Object.entries(liftData.options).map(([variation, name]) => (\r\n                                    <div key={variation} className=\"flex items-center space-x-2\">\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            id={`${liftType}_${variation}`}\r\n                                            name={liftType}\r\n                                            value={variation}\r\n                                            checked={coreLifts[liftType] === variation}\r\n                                            onChange={(e) => handleLiftChange(liftType, e.target.value)}\r\n                                            className=\"w-4 h-4 text-red-500 bg-gray-700 border-gray-600 focus:ring-red-500\"\r\n                                        />\r\n                                        <label htmlFor={`${liftType}_${variation}`} className=\"text-gray-300 text-sm\">\r\n                                            {name}\r\n                                        </label>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                            {coreLifts[liftType] === 'custom' && (\r\n                                <div className=\"mt-3\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={customLifts[liftType] || ''}\r\n                                        onChange={(e) => handleCustomLiftChange(liftType, e.target.value)}\r\n                                        placeholder={`Enter custom ${liftData.name.toLowerCase()}...`}\r\n                                        className=\"w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:border-red-500\"\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Training Frequency Selection */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4\">Training Frequency</h4>\r\n                <div className=\"space-y-4\">\r\n                    {Object.entries(frequencyOptions).map(([frequency, details]) => (\r\n                        <div\r\n                            key={frequency}\r\n                            onClick={() => handleFrequencyChange(frequency)}\r\n                            className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${trainingFrequency === frequency\r\n                                ? 'border-red-500 bg-red-900/20'\r\n                                : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                }`}\r\n                        >\r\n                            <div className=\"flex items-start justify-between\">\r\n                                <div className=\"flex-1\">\r\n                                    <div className=\"flex items-center mb-2\">\r\n                                        <Calendar className=\"w-5 h-5 text-blue-400 mr-2\" />\r\n                                        <span className=\"text-white font-medium\">{details.name}</span>\r\n                                        {details.warning && (\r\n                                            <AlertTriangle className=\"w-4 h-4 text-yellow-400 ml-2\" />\r\n                                        )}\r\n                                    </div>\r\n                                    <p className=\"text-gray-400 text-sm mb-2\">{details.description}</p>\r\n                                    <div className=\"text-xs text-gray-500 space-y-1\">\r\n                                        <div><strong>Cycle:</strong> {details.cycle}</div>\r\n                                        <div><strong>Best for:</strong> {details.bestFor}</div>\r\n                                        <div className=\"flex items-center\">\r\n                                            <Clock className=\"w-3 h-3 mr-1\" />\r\n                                            {details.timeCommitment}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Schedule Pattern Selection */}\r\n            {trainingFrequency && (\r\n                <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                    <h4 className=\"text-lg font-medium text-white mb-4\">Schedule Pattern</h4>\r\n                    <div className=\"space-y-2\">\r\n                        {frequencyOptions[trainingFrequency].scheduleOptions.map((pattern, index) => (\r\n                            <div key={index} className=\"flex items-center space-x-2\">\r\n                                <input\r\n                                    type=\"radio\"\r\n                                    id={`schedule_${index}`}\r\n                                    name=\"schedule\"\r\n                                    value={pattern}\r\n                                    checked={schedulePattern === pattern}\r\n                                    onChange={(e) => handleScheduleChange(e.target.value)}\r\n                                    className=\"w-4 h-4 text-red-500 bg-gray-700 border-gray-600 focus:ring-red-500\"\r\n                                />\r\n                                <label htmlFor={`schedule_${index}`} className=\"text-gray-300 text-sm\">\r\n                                    {pattern}\r\n                                </label>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {frequencyOptions[trainingFrequency].warning && (\r\n                        <div className=\"mt-4 p-3 bg-yellow-900/20 border border-yellow-600 rounded-lg\">\r\n                            <div className=\"flex items-start space-x-2\">\r\n                                <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                                <div className=\"text-yellow-200 text-sm\">\r\n                                    <strong>Warning:</strong> This frequency is suboptimal for most lifters.\r\n                                    Consider if you can manage more training days for better results.\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {/* Completion Status */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-green-900/20 border border-green-500 p-4 rounded-lg\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n                        <span className=\"text-green-300 font-medium\">\r\n                            Step 2 Complete! Core lifts and training frequency selected.\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n// --- Helper: EquipmentPreview ---\r\nfunction EquipmentPreview({ equipmentAccess }) {\r\n    const CATALOG = [\r\n        { name: 'Chin Ups', need: ['pullup_bar'], cat: 'Pull' },\r\n        { name: 'Dips', need: ['dip_station'], cat: 'Push' },\r\n        { name: 'Ring Rows', need: ['rings'], cat: 'Pull' },\r\n        { name: 'DB Row', need: ['dumbbells'], cat: 'Pull' },\r\n        { name: 'DB Incline Press', need: ['dumbbells', 'bench'], cat: 'Push' },\r\n        { name: 'Face Pull', need: ['cables'], cat: 'Rear Delt' },\r\n        { name: 'Leg Extension', need: ['machines'], cat: 'Quad' },\r\n        { name: 'Hamstring Curl', need: ['machines'], cat: 'Posterior' },\r\n        { name: 'Kettlebell Swing', need: ['kettlebells'], cat: 'Posterior' },\r\n        { name: 'Band Pull-Apart', need: ['bands'], cat: 'Upper Back' },\r\n        { name: 'Suspension Fallouts', need: ['suspension'], cat: 'Core' }\r\n    ];\r\n    const rows = CATALOG.map(row => {\r\n        const available = row.need.every(req => equipmentAccess[req]);\r\n        return { ...row, available };\r\n    });\r\n    return (\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-2\">\r\n            {rows.map(r => (\r\n                <div key={r.name} className={`text-[11px] px-2 py-1 rounded border flex items-center justify-between ${r.available ? 'border-green-600 bg-green-900/20 text-green-200' : 'border-gray-600 bg-gray-900/40 text-gray-400'}`}>\r\n                    <span>{r.name}</span>\r\n                    <span className={`px-1.5 py-0.5 rounded text-[10px] tracking-wide ${r.available ? 'bg-green-700/40 text-green-200' : 'bg-gray-700/40 text-gray-400'}`}>{r.available ? 'UNLOCKED' : 'LOCKED'}</span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSettings } from '../../../contexts/SettingsContext.jsx';\r\nimport { percentOfTM, toDisplayWeight } from '../../../lib/fiveThreeOne/math.js';\r\nimport { BarChart3, Target, AlertCircle, CheckCircle, Info, Settings } from 'lucide-react';\r\n\r\nexport default function Step4CycleStructure({ data, updateData }) {\r\n    const { roundingIncrement } = useSettings();\r\n    const [loadingOption, setLoadingOption] = useState(data.loadingOption || 1);\r\n    const [perLiftOptions, setPerLiftOptions] = useState(data.perLiftOptions || {\r\n        squat: 1,\r\n        bench: 1,\r\n        deadlift: 1,\r\n        press: 1\r\n    });\r\n    const [usePerLiftOptions, setUsePerLiftOptions] = useState(data.usePerLiftOptions || false);\r\n    const [deadliftStyle, setDeadliftStyle] = useState(data.deadliftStyle || 'dead_stop');\r\n    const [cyclePreview, setCyclePreview] = useState(data.cyclePreview || 3);\r\n    const [trainingMaxes, setTrainingMaxes] = useState(data.trainingMaxes || {});\r\n    const [calculatedWeights, setCalculatedWeights] = useState({});\r\n\r\n    const loadingOptions = {\r\n        1: {\r\n            name: 'Option 1 (Recommended)',\r\n            description: 'Standard progression for most lifters',\r\n            weeks: {\r\n                1: { sets: [{ percent: 65, reps: 5 }, { percent: 75, reps: 5 }, { percent: 85, reps: '5+' }] },\r\n                2: { sets: [{ percent: 70, reps: 3 }, { percent: 80, reps: 3 }, { percent: 90, reps: '3+' }] },\r\n                3: { sets: [{ percent: 75, reps: 5 }, { percent: 85, reps: 3 }, { percent: 95, reps: '1+' }] },\r\n                4: { sets: [{ percent: 40, reps: 5 }, { percent: 50, reps: 5 }, { percent: 60, reps: 5 }] }\r\n            },\r\n            characteristics: 'Moderate intensity, good for building base',\r\n            bestFor: 'Beginners to intermediate, establishing routine'\r\n        },\r\n        2: {\r\n            name: 'Option 2 (Higher Intensity)',\r\n            description: 'More aggressive progression',\r\n            weeks: {\r\n                1: { sets: [{ percent: 75, reps: 5 }, { percent: 80, reps: 5 }, { percent: 85, reps: '5+' }] },\r\n                2: { sets: [{ percent: 80, reps: 3 }, { percent: 85, reps: 3 }, { percent: 90, reps: '3+' }] },\r\n                3: { sets: [{ percent: 85, reps: 5 }, { percent: 90, reps: 3 }, { percent: 95, reps: '1+' }] },\r\n                4: { sets: [{ percent: 40, reps: 5 }, { percent: 50, reps: 5 }, { percent: 60, reps: 5 }] }\r\n            },\r\n            characteristics: 'Higher intensity, faster strength gains',\r\n            bestFor: 'Experienced lifters, competition prep'\r\n        }\r\n    };\r\n\r\n    const deadliftStyles = {\r\n        'dead_stop': {\r\n            name: 'Dead Stop',\r\n            description: 'Full reset between reps',\r\n            pros: ['More technically demanding', 'Builds starting strength', 'Traditional powerlifting style'],\r\n            cons: ['More time between reps', 'Requires more setup'],\r\n            technique: 'Lower bar to floor, pause, reset grip/position, lift'\r\n        },\r\n        'touch_and_go': {\r\n            name: 'Touch and Go',\r\n            description: 'Continuous reps with brief floor contact',\r\n            pros: ['Faster pace', 'Can be safer if tightness maintained', 'Good for volume'],\r\n            cons: ['Requires constant tension', 'Less starting strength focus'],\r\n            technique: 'Light touch to floor, maintain position, immediate lift'\r\n        }\r\n    };\r\n\r\n    const liftNames = {\r\n        squat: 'Squat',\r\n        bench: 'Bench Press',\r\n        deadlift: 'Deadlift',\r\n        press: 'Overhead Press'\r\n    };\r\n\r\n    const repTargets = {\r\n        '5+': { min: 5, good: 8, excellent: 10, description: 'Week 1 - Volume focus' },\r\n        '3+': { min: 3, good: 5, excellent: 6, description: 'Week 2 - Intensity bridge' },\r\n        '1+': { min: 1, good: 3, excellent: 4, description: 'Week 3 - Peak intensity' }\r\n    };\r\n\r\n    // Calculate weights using shared math\r\n    const calculateWeight = (tm, percentage) => {\r\n        if (!tm || tm === 0) return 0;\r\n        return toDisplayWeight(percentOfTM(tm, percentage, roundingIncrement));\r\n    };\r\n\r\n    // Calculate all weights for a given TM and loading option\r\n    const calculateAllWeights = (tm, option) => {\r\n        const optionData = loadingOptions[option];\r\n        const weights = {};\r\n\r\n        Object.entries(optionData.weeks).forEach(([week, weekData]) => {\r\n            weights[week] = weekData.sets.map(set => ({\r\n                ...set,\r\n                weight: calculateWeight(tm, set.percent)\r\n            }));\r\n        });\r\n\r\n        return weights;\r\n    };\r\n\r\n    // Calculate cycle progressions\r\n    const calculateCycleProgressions = (currentTM, lift, cycles = 3) => {\r\n        const progressions = [];\r\n        let tm = currentTM;\r\n\r\n        // Increment rules: +5 for upper body, +10 for lower body\r\n        const increment = (lift === 'bench' || lift === 'press') ? 5 : 10;\r\n\r\n        for (let cycle = 1; cycle <= cycles; cycle++) {\r\n            if (cycle > 1) {\r\n                tm += increment;\r\n            }\r\n\r\n            const option = usePerLiftOptions ? perLiftOptions[lift] : loadingOption;\r\n            const weights = calculateAllWeights(tm, option);\r\n\r\n            progressions.push({\r\n                cycle,\r\n                tm,\r\n                weights,\r\n                increment: cycle === 1 ? 0 : increment\r\n            });\r\n        }\r\n\r\n        return progressions;\r\n    };\r\n\r\n    // Update calculated weights when TMs or options change\r\n    useEffect(() => {\r\n        if (Object.keys(trainingMaxes).length > 0) {\r\n            const newWeights = {};\r\n\r\n            Object.entries(trainingMaxes).forEach(([lift, tm]) => {\r\n                newWeights[lift] = calculateCycleProgressions(tm, lift, cyclePreview);\r\n            });\r\n\r\n            setCalculatedWeights(newWeights);\r\n        }\r\n    }, [trainingMaxes, loadingOption, perLiftOptions, usePerLiftOptions, cyclePreview]);\r\n\r\n    // Get training maxes from Step 1\r\n    useEffect(() => {\r\n        if (data.trainingMaxes && Object.keys(data.trainingMaxes).length > 0) {\r\n            setTrainingMaxes(data.trainingMaxes);\r\n        }\r\n    }, [data.trainingMaxes]);\r\n\r\n    const handleLoadingOptionChange = (option) => {\r\n        setLoadingOption(option);\r\n        if (!usePerLiftOptions) {\r\n            // Update all lifts to same option\r\n            const newPerLiftOptions = {};\r\n            Object.keys(perLiftOptions).forEach(lift => {\r\n                newPerLiftOptions[lift] = option;\r\n            });\r\n            setPerLiftOptions(newPerLiftOptions);\r\n        }\r\n        updateStepData({ loadingOption: option });\r\n    };\r\n\r\n    const handlePerLiftOptionChange = (lift, option) => {\r\n        const newPerLiftOptions = { ...perLiftOptions, [lift]: option };\r\n        setPerLiftOptions(newPerLiftOptions);\r\n        updateStepData({ perLiftOptions: newPerLiftOptions });\r\n    };\r\n\r\n    const handleUsePerLiftToggle = (enabled) => {\r\n        setUsePerLiftOptions(enabled);\r\n        updateStepData({ usePerLiftOptions: enabled });\r\n    };\r\n\r\n    const handleDeadliftStyleChange = (style) => {\r\n        setDeadliftStyle(style);\r\n        updateStepData({ deadliftStyle: style });\r\n    };\r\n\r\n    const handleCyclePreviewChange = (cycles) => {\r\n        setCyclePreview(cycles);\r\n        updateStepData({ cyclePreview: cycles });\r\n    };\r\n\r\n    const updateStepData = (updates) => {\r\n        updateData({\r\n            loadingOption,\r\n            perLiftOptions,\r\n            usePerLiftOptions,\r\n            deadliftStyle,\r\n            cyclePreview,\r\n            trainingMaxes,\r\n            ...updates\r\n        });\r\n    };\r\n\r\n    const isStepComplete = () => {\r\n        return Object.keys(trainingMaxes).length > 0 && deadliftStyle !== '';\r\n    };\r\n\r\n    const getPerformanceIndicator = (week, reps) => {\r\n        const target = repTargets[week + '+'];\r\n        if (!target) return 'neutral';\r\n\r\n        if (reps >= target.excellent) return 'excellent';\r\n        if (reps >= target.good) return 'good';\r\n        if (reps >= target.min) return 'acceptable';\r\n        return 'poor';\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            <div>\r\n                <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                    Step 4: Implement the 5/3/1 Cycle Structure\r\n                </h3>\r\n                <p className=\"text-gray-400\">\r\n                    Configure your percentage scheme, cycle structure, and performance targets.\r\n                </p>\r\n            </div>\r\n\r\n            {/* 5/3/1 Philosophy */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-blue-300 font-medium mb-2\">5/3/1 Core Principles</h4>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>• <strong>Progressive Intensity:</strong> Week 1 (Volume) → Week 2 (Bridge) → Week 3 (Peak)</li>\r\n                            <li>• <strong>AMRAP Philosophy:</strong> Beat rep PRs, not weight PRs</li>\r\n                            <li>• <strong>Submaximal Training:</strong> All percentages based on 90% Training Max</li>\r\n                            <li>• <strong>Planned Recovery:</strong> Deload every 4th week</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Loading Option Selection */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4\">Select Loading Option</h4>\r\n                <div className=\"space-y-4\">\r\n                    {Object.entries(loadingOptions).map(([option, details]) => (\r\n                        <div\r\n                            key={option}\r\n                            onClick={() => handleLoadingOptionChange(parseInt(option))}\r\n                            className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${loadingOption === parseInt(option)\r\n                                ? 'border-red-500 bg-red-900/20'\r\n                                : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                }`}\r\n                        >\r\n                            <div className=\"flex items-start justify-between mb-3\">\r\n                                <div>\r\n                                    <div className=\"flex items-center mb-2\">\r\n                                        <BarChart3 className=\"w-5 h-5 text-blue-400 mr-2\" />\r\n                                        <span className=\"text-white font-medium\">{details.name}</span>\r\n                                    </div>\r\n                                    <p className=\"text-gray-400 text-sm mb-2\">{details.description}</p>\r\n                                    <div className=\"text-xs text-gray-500 space-y-1\">\r\n                                        <div><strong>Characteristics:</strong> {details.characteristics}</div>\r\n                                        <div><strong>Best for:</strong> {details.bestFor}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Percentage Table */}\r\n                            <div className=\"overflow-x-auto\">\r\n                                <table className=\"w-full text-sm\">\r\n                                    <thead>\r\n                                        <tr className=\"border-b border-gray-600\">\r\n                                            <th className=\"text-left text-gray-300 py-2\">Week</th>\r\n                                            <th className=\"text-center text-gray-300 py-2\">Set 1</th>\r\n                                            <th className=\"text-center text-gray-300 py-2\">Set 2</th>\r\n                                            <th className=\"text-center text-gray-300 py-2\">Set 3</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {Object.entries(details.weeks).map(([week, weekData]) => (\r\n                                            <tr key={week} className=\"border-b border-gray-700\">\r\n                                                <td className=\"py-2 text-gray-300\">\r\n                                                    Week {week} {week === '4' && '(Deload)'}\r\n                                                </td>\r\n                                                {weekData.sets.map((set, index) => (\r\n                                                    <td key={index} className=\"text-center py-2 text-white\">\r\n                                                        {set.percent}% × {set.reps}\r\n                                                    </td>\r\n                                                ))}\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Per-Lift Options */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                    <h4 className=\"text-lg font-medium text-white\">Advanced: Per-Lift Loading Options</h4>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"per_lift_options\"\r\n                            checked={usePerLiftOptions}\r\n                            onChange={(e) => handleUsePerLiftToggle(e.target.checked)}\r\n                            className=\"w-4 h-4 text-red-500 bg-gray-800 border-gray-600 rounded focus:ring-red-500\"\r\n                        />\r\n                        <label htmlFor=\"per_lift_options\" className=\"text-gray-300 text-sm\">\r\n                            Use different options per lift\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n\r\n                {usePerLiftOptions && (\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        {Object.entries(liftNames).map(([lift, name]) => (\r\n                            <div key={lift} className=\"bg-gray-800 p-4 rounded-lg\">\r\n                                <h5 className=\"text-white font-medium mb-3\">{name}</h5>\r\n                                <div className=\"space-y-2\">\r\n                                    {Object.entries(loadingOptions).map(([option, details]) => (\r\n                                        <div key={option} className=\"flex items-center space-x-2\">\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                id={`${lift}_option_${option}`}\r\n                                                name={`${lift}_loading`}\r\n                                                value={option}\r\n                                                checked={perLiftOptions[lift] === parseInt(option)}\r\n                                                onChange={(e) => handlePerLiftOptionChange(lift, parseInt(e.target.value))}\r\n                                                className=\"w-4 h-4 text-red-500 bg-gray-700 border-gray-600 focus:ring-red-500\"\r\n                                            />\r\n                                            <label htmlFor={`${lift}_option_${option}`} className=\"text-gray-300 text-sm\">\r\n                                                {details.name}\r\n                                            </label>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Deadlift Style Selection */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4\">Deadlift Rep Style</h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    {Object.entries(deadliftStyles).map(([style, details]) => (\r\n                        <div\r\n                            key={style}\r\n                            onClick={() => handleDeadliftStyleChange(style)}\r\n                            className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${deadliftStyle === style\r\n                                ? 'border-red-500 bg-red-900/20'\r\n                                : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                }`}\r\n                        >\r\n                            <div className=\"flex items-center mb-2\">\r\n                                <Target className=\"w-5 h-5 text-blue-400 mr-2\" />\r\n                                <span className=\"text-white font-medium\">{details.name}</span>\r\n                            </div>\r\n                            <p className=\"text-gray-400 text-sm mb-3\">{details.description}</p>\r\n\r\n                            <div className=\"space-y-2 text-xs\">\r\n                                <div>\r\n                                    <span className=\"text-green-400 font-medium\">Pros:</span>\r\n                                    <ul className=\"text-gray-300 ml-2\">\r\n                                        {details.pros.map((pro, index) => (\r\n                                            <li key={index}>• {pro}</li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"text-yellow-400 font-medium\">Cons:</span>\r\n                                    <ul className=\"text-gray-300 ml-2\">\r\n                                        {details.cons.map((con, index) => (\r\n                                            <li key={index}>• {con}</li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"pt-2 border-t border-gray-600\">\r\n                                    <span className=\"text-blue-400 font-medium\">Technique:</span>\r\n                                    <p className=\"text-gray-300\">{details.technique}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* AMRAP Guidelines */}\r\n            <div className=\"bg-purple-900/20 border border-purple-600 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4\">AMRAP Set Guidelines</h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    {Object.entries(repTargets).map(([week, targets]) => (\r\n                        <div key={week} className=\"bg-gray-800 p-4 rounded-lg\">\r\n                            <div className=\"text-purple-400 font-medium mb-2\">{week} Set</div>\r\n                            <div className=\"text-gray-300 text-sm mb-3\">{targets.description}</div>\r\n                            <div className=\"space-y-2 text-xs\">\r\n                                <div className=\"flex justify-between\">\r\n                                    <span className=\"text-red-400\">Minimum:</span>\r\n                                    <span className=\"text-white\">{targets.min} reps</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between\">\r\n                                    <span className=\"text-yellow-400\">Good:</span>\r\n                                    <span className=\"text-white\">{targets.good} reps</span>\r\n                                </div>\r\n                                <div className=\"flex justify-between\">\r\n                                    <span className=\"text-green-400\">Excellent:</span>\r\n                                    <span className=\"text-white\">{targets.excellent}+ reps</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"mt-4 p-3 bg-purple-900/20 border border-purple-600 rounded-lg\">\r\n                    <div className=\"flex items-start space-x-2\">\r\n                        <AlertCircle className=\"w-5 h-5 text-purple-400 mt-0.5\" />\r\n                        <div className=\"text-purple-200 text-sm\">\r\n                            <strong>Stop Criteria:</strong> End the set when bar speed slows significantly or form begins to break down.\r\n                            Never go to absolute failure or attempt questionable reps.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Cycle Preview */}\r\n            {Object.keys(calculatedWeights).length > 0 && (\r\n                <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                        <h4 className=\"text-lg font-medium text-white\">Cycle Preview</h4>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                            <Settings className=\"w-4 h-4 text-gray-400\" />\r\n                            <select\r\n                                value={cyclePreview}\r\n                                onChange={(e) => handleCyclePreviewChange(parseInt(e.target.value))}\r\n                                className=\"bg-gray-800 border border-gray-600 text-white text-sm rounded px-2 py-1\"\r\n                            >\r\n                                <option value={2}>2 Cycles</option>\r\n                                <option value={3}>3 Cycles</option>\r\n                                <option value={4}>4 Cycles</option>\r\n                                <option value={5}>5 Cycles</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-6\">\r\n                        {Object.entries(calculatedWeights).map(([lift, progressions]) => (\r\n                            <div key={lift} className=\"bg-gray-800 p-4 rounded-lg\">\r\n                                <h5 className=\"text-white font-medium mb-3\">{liftNames[lift]}</h5>\r\n                                <div className=\"overflow-x-auto\">\r\n                                    <table className=\"w-full text-sm\">\r\n                                        <thead>\r\n                                            <tr className=\"border-b border-gray-600\">\r\n                                                <th className=\"text-left text-gray-300 py-2\">Cycle</th>\r\n                                                <th className=\"text-center text-gray-300 py-2\">TM</th>\r\n                                                <th className=\"text-center text-gray-300 py-2\">Week 1 (85%)</th>\r\n                                                <th className=\"text-center text-gray-300 py-2\">Week 2 (90%)</th>\r\n                                                <th className=\"text-center text-gray-300 py-2\">Week 3 (95%)</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {progressions.map((progression) => (\r\n                                                <tr key={progression.cycle} className=\"border-b border-gray-700\">\r\n                                                    <td className=\"py-2 text-gray-300\">\r\n                                                        {progression.cycle}\r\n                                                        {progression.increment > 0 && (\r\n                                                            <span className=\"text-green-400 text-xs ml-1\">\r\n                                                                (+{progression.increment})\r\n                                                            </span>\r\n                                                        )}\r\n                                                    </td>\r\n                                                    <td className=\"text-center py-2 text-white font-medium\">\r\n                                                        {progression.tm}\r\n                                                    </td>\r\n                                                    <td className=\"text-center py-2 text-white\">\r\n                                                        {progression.weights['1'][2].weight}\r\n                                                    </td>\r\n                                                    <td className=\"text-center py-2 text-white\">\r\n                                                        {progression.weights['2'][2].weight}\r\n                                                    </td>\r\n                                                    <td className=\"text-center py-2 text-white\">\r\n                                                        {progression.weights['3'][2].weight}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))}\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Completion Status */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-green-900/20 border border-green-500 p-4 rounded-lg\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n                        <span className=\"text-green-300 font-medium\">\r\n                            Step 4 Complete! Cycle structure and loading options configured.\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSettings } from '../../../contexts/SettingsContext.jsx';\r\nimport { percentOfTM, toDisplayWeight } from '../../../lib/fiveThreeOne/math.js';\r\nimport { Target, TrendingUp, AlertTriangle, CheckCircle, Info, BarChart3, Clock, Zap } from 'lucide-react';\r\n\r\nexport default function Step5Week1Execution({ data, updateData }) {\r\n    const { roundingIncrement } = useSettings();\r\n    const [executionStrategy, setExecutionStrategy] = useState(data.executionStrategy || '');\r\n    const [repTargets, setRepTargets] = useState(data.repTargets || {\r\n        conservative: 8,\r\n        moderate: 10,\r\n        aggressive: 12\r\n    });\r\n    const [badDayProtocol, setBadDayProtocol] = useState(data.badDayProtocol || 'minimum_reps');\r\n    const [restPeriods, setRestPeriods] = useState(data.restPeriods || {\r\n        between_sets: 3,\r\n        before_amrap: 5\r\n    });\r\n    const [formCues, setFormCues] = useState(data.formCues || {\r\n        squat: [],\r\n        bench: [],\r\n        deadlift: [],\r\n        press: []\r\n    });\r\n    const [trainingMaxes, setTrainingMaxes] = useState(data.trainingMaxes || {});\r\n    const [loadingOption, setLoadingOption] = useState(data.loadingOption || 1);\r\n    const [calculatedWeights, setCalculatedWeights] = useState({});\r\n\r\n    const executionStrategies = {\r\n        'conservative': {\r\n            name: 'Conservative Approach',\r\n            description: 'Focus on perfect form and controlled progression',\r\n            repTarget: '8-10 reps on 5+ set',\r\n            characteristics: [\r\n                'Stop 2-3 reps short of failure',\r\n                'Prioritize form over rep count',\r\n                'Better for beginners or technique focus',\r\n                'Sustainable long-term approach'\r\n            ],\r\n            rpeTarget: '7-8 RPE on AMRAP set',\r\n            bestFor: 'Beginners, form development, injury recovery'\r\n        },\r\n        'moderate': {\r\n            name: 'Moderate Approach (Recommended)',\r\n            description: 'Balanced aggression with smart stopping point',\r\n            repTarget: '10-12 reps on 5+ set',\r\n            characteristics: [\r\n                'Push until bar speed slows noticeably',\r\n                'Stop when form begins to degrade',\r\n                'Good balance of intensity and safety',\r\n                'Most sustainable for long-term progress'\r\n            ],\r\n            rpeTarget: '8-9 RPE on AMRAP set',\r\n            bestFor: 'Most lifters, standard progression'\r\n        },\r\n        'aggressive': {\r\n            name: 'Aggressive Approach',\r\n            description: 'Push harder for maximum rep PRs',\r\n            repTarget: '12+ reps on 5+ set',\r\n            characteristics: [\r\n                'Push close to technical failure',\r\n                'Accept some form breakdown',\r\n                'Higher fatigue and recovery demands',\r\n                'Risk/reward approach'\r\n            ],\r\n            rpeTarget: '9-9.5 RPE on AMRAP set',\r\n            bestFor: 'Experienced lifters, short-term peaks'\r\n        }\r\n    };\r\n\r\n    const badDayProtocols = {\r\n        'minimum_reps': {\r\n            name: 'Minimum Reps Only',\r\n            description: 'Do prescribed reps, skip the \"+\"',\r\n            protocol: 'Complete 65%×5, 75%×5, 85%×5 (no AMRAP)',\r\n            philosophy: 'Live to fight another day',\r\n            when: 'Low energy, poor sleep, high stress'\r\n        },\r\n        'reduced_intensity': {\r\n            name: 'Reduced Intensity',\r\n            description: 'Drop all percentages by 10%',\r\n            protocol: 'Complete 55%×5, 65%×5, 75%×5+',\r\n            philosophy: 'Maintain movement patterns with less stress',\r\n            when: 'Feeling weak but not terrible'\r\n        },\r\n        'skip_session': {\r\n            name: 'Skip Session',\r\n            description: 'Rest completely and return next day',\r\n            protocol: 'Full rest, resume normal schedule',\r\n            philosophy: 'Recovery is part of training',\r\n            when: 'Illness, extreme fatigue, injury risk'\r\n        }\r\n    };\r\n\r\n    const formCueOptions = {\r\n        squat: [\r\n            'Big breath and brace before descent',\r\n            'Knees track over toes',\r\n            'Chest up, eyes forward',\r\n            'Drive through heels',\r\n            'Hip hinge to initiate',\r\n            'Maintain neutral spine',\r\n            'Full depth below parallel',\r\n            'Drive floor apart with feet'\r\n        ],\r\n        bench: [\r\n            'Retract and depress shoulder blades',\r\n            'Arch back, feet firmly planted',\r\n            'Bar path over mid-chest',\r\n            'Control the descent',\r\n            'Pause briefly at chest',\r\n            'Drive through legs',\r\n            'Press bar back over shoulders',\r\n            'Maintain tight core'\r\n        ],\r\n        deadlift: [\r\n            'Bar over mid-foot',\r\n            'Neutral spine throughout',\r\n            'Shoulders over the bar',\r\n            'Big breath and brace',\r\n            'Leg drive to start',\r\n            'Hips and shoulders rise together',\r\n            'Finish with hips, not back',\r\n            'Control the descent'\r\n        ],\r\n        press: [\r\n            'Feet shoulder-width apart',\r\n            'Grip just outside shoulders',\r\n            'Big breath and brace core',\r\n            'Bar starts at shoulder level',\r\n            'Press straight up',\r\n            'Push head through at top',\r\n            'Lock out overhead',\r\n            'Control the descent'\r\n        ]\r\n    };\r\n\r\n    const performanceIndicators = {\r\n        excellent: { min: 12, color: 'green', message: 'Excellent! TM is well-calibrated' },\r\n        good: { min: 10, color: 'blue', message: 'Good performance, progressing well' },\r\n        acceptable: { min: 8, color: 'yellow', message: 'Acceptable, monitor next week' },\r\n        concerning: { min: 6, color: 'orange', message: 'Low reps, consider TM adjustment' },\r\n        poor: { min: 0, color: 'red', message: 'Very low reps, TM likely too high' }\r\n    };\r\n\r\n    // Calculate Week 1 weights\r\n    const calculateWeek1Weights = (tm, option) => {\r\n        const percentages = option === 1\r\n            ? [{ percent: 65, reps: 5 }, { percent: 75, reps: 5 }, { percent: 85, reps: '5+' }]\r\n            : [{ percent: 75, reps: 5 }, { percent: 80, reps: 5 }, { percent: 85, reps: '5+' }];\r\n\r\n        return percentages.map(set => ({\r\n            ...set,\r\n            weight: toDisplayWeight(percentOfTM(tm, set.percent, roundingIncrement))\r\n        }));\r\n    };\r\n\r\n    // Update calculated weights when TMs change\r\n    useEffect(() => {\r\n        if (Object.keys(trainingMaxes).length > 0) {\r\n            const newWeights = {};\r\n            Object.entries(trainingMaxes).forEach(([lift, tm]) => {\r\n                newWeights[lift] = calculateWeek1Weights(tm, loadingOption);\r\n            });\r\n            setCalculatedWeights(newWeights);\r\n        }\r\n    }, [trainingMaxes, loadingOption]);\r\n\r\n    // Get data from previous steps\r\n    useEffect(() => {\r\n        if (data.trainingMaxes) setTrainingMaxes(data.trainingMaxes);\r\n        if (data.loadingOption) setLoadingOption(data.loadingOption);\r\n    }, [data.trainingMaxes, data.loadingOption]);\r\n\r\n    const handleExecutionStrategyChange = (strategy) => {\r\n        setExecutionStrategy(strategy);\r\n        updateStepData({ executionStrategy: strategy });\r\n    };\r\n\r\n    const handleBadDayProtocolChange = (protocol) => {\r\n        setBadDayProtocol(protocol);\r\n        updateStepData({ badDayProtocol: protocol });\r\n    };\r\n\r\n    const handleRestPeriodChange = (type, minutes) => {\r\n        const newRestPeriods = { ...restPeriods, [type]: minutes };\r\n        setRestPeriods(newRestPeriods);\r\n        updateStepData({ restPeriods: newRestPeriods });\r\n    };\r\n\r\n    const handleFormCueToggle = (lift, cue) => {\r\n        const currentCues = formCues[lift] || [];\r\n        const newCues = currentCues.includes(cue)\r\n            ? currentCues.filter(c => c !== cue)\r\n            : [...currentCues, cue];\r\n\r\n        const newFormCues = { ...formCues, [lift]: newCues };\r\n        setFormCues(newFormCues);\r\n        updateStepData({ formCues: newFormCues });\r\n    };\r\n\r\n    const updateStepData = (updates) => {\r\n        updateData({\r\n            executionStrategy,\r\n            repTargets,\r\n            badDayProtocol,\r\n            restPeriods,\r\n            formCues,\r\n            trainingMaxes,\r\n            loadingOption,\r\n            ...updates\r\n        });\r\n    };\r\n\r\n    const isStepComplete = () => {\r\n        return executionStrategy !== '' && badDayProtocol !== '';\r\n    };\r\n\r\n    const getPerformanceLevel = (reps) => {\r\n        if (reps >= performanceIndicators.excellent.min) return 'excellent';\r\n        if (reps >= performanceIndicators.good.min) return 'good';\r\n        if (reps >= performanceIndicators.acceptable.min) return 'acceptable';\r\n        if (reps >= performanceIndicators.concerning.min) return 'concerning';\r\n        return 'poor';\r\n    };\r\n\r\n    const liftNames = {\r\n        squat: 'Squat',\r\n        bench: 'Bench Press',\r\n        deadlift: 'Deadlift',\r\n        press: 'Overhead Press'\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            <div>\r\n                <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                    Step 5: Week 1 – \"3×5\" Week Execution\r\n                </h3>\r\n                <p className=\"text-gray-400\">\r\n                    Configure your approach to the volume-focused first week of each cycle.\r\n                </p>\r\n            </div>\r\n\r\n            {/* Week 1 Philosophy */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-blue-300 font-medium mb-2\">Week 1 Focus: Volume</h4>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>• <strong>Goal:</strong> Set rep PRs on the 85% AMRAP set</li>\r\n                            <li>• <strong>Intensity:</strong> Manageable weights, focus on bar speed</li>\r\n                            <li>• <strong>Volume:</strong> Highest rep counts of the cycle</li>\r\n                            <li>• <strong>Technique:</strong> Perfect time to reinforce movement patterns</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Execution Strategy Selection */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4\">Choose Your Execution Strategy</h4>\r\n                <div className=\"space-y-4\">\r\n                    {Object.entries(executionStrategies).map(([strategy, details]) => (\r\n                        <div\r\n                            key={strategy}\r\n                            onClick={() => handleExecutionStrategyChange(strategy)}\r\n                            className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${executionStrategy === strategy\r\n                                ? 'border-red-500 bg-red-900/20'\r\n                                : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                }`}\r\n                        >\r\n                            <div className=\"flex items-start justify-between mb-3\">\r\n                                <div className=\"flex-1\">\r\n                                    <div className=\"flex items-center mb-2\">\r\n                                        <Target className=\"w-5 h-5 text-blue-400 mr-2\" />\r\n                                        <span className=\"text-white font-medium\">{details.name}</span>\r\n                                    </div>\r\n                                    <p className=\"text-gray-400 text-sm mb-2\">{details.description}</p>\r\n                                    <div className=\"text-sm text-green-400 mb-2\">\r\n                                        <strong>Target:</strong> {details.repTarget}\r\n                                    </div>\r\n                                    <div className=\"text-xs text-gray-500 space-y-1\">\r\n                                        <div><strong>RPE:</strong> {details.rpeTarget}</div>\r\n                                        <div><strong>Best for:</strong> {details.bestFor}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"space-y-1\">\r\n                                {details.characteristics.map((char, index) => (\r\n                                    <div key={index} className=\"text-gray-300 text-sm flex items-center\">\r\n                                        <div className=\"w-1 h-1 bg-gray-500 rounded-full mr-2\"></div>\r\n                                        {char}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Week 1 Weight Display */}\r\n            {Object.keys(calculatedWeights).length > 0 && (\r\n                <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                    <h4 className=\"text-lg font-medium text-white mb-4\">Week 1 Working Weights</h4>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        {Object.entries(calculatedWeights).map(([lift, weights]) => (\r\n                            <div key={lift} className=\"bg-gray-800 p-4 rounded-lg\">\r\n                                <h5 className=\"text-white font-medium mb-3\">{liftNames[lift]}</h5>\r\n                                <div className=\"space-y-2\">\r\n                                    {weights.map((set, index) => (\r\n                                        <div key={index} className=\"flex items-center justify-between\">\r\n                                            <span className=\"text-gray-300\">\r\n                                                Set {index + 1} ({set.percent}%)\r\n                                            </span>\r\n                                            <span className=\"text-white font-medium\">\r\n                                                {set.weight} lbs × {set.reps}\r\n                                                {String(set.reps).includes('+') && (\r\n                                                    <span className=\"text-red-400 ml-1\">AMRAP</span>\r\n                                                )}\r\n                                            </span>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Rest Period Configuration */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4\">Rest Period Guidelines</h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <div className=\"space-y-4\">\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                                Between Sets 1 & 2 (minutes)\r\n                            </label>\r\n                            <select\r\n                                value={restPeriods.between_sets}\r\n                                onChange={(e) => handleRestPeriodChange('between_sets', parseInt(e.target.value))}\r\n                                className=\"w-full bg-gray-800 border border-gray-600 text-white rounded-md px-3 py-2 focus:border-red-500\"\r\n                            >\r\n                                <option value={2}>2 minutes</option>\r\n                                <option value={3}>3 minutes</option>\r\n                                <option value={4}>4 minutes</option>\r\n                                <option value={5}>5 minutes</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                                Before AMRAP Set (minutes)\r\n                            </label>\r\n                            <select\r\n                                value={restPeriods.before_amrap}\r\n                                onChange={(e) => handleRestPeriodChange('before_amrap', parseInt(e.target.value))}\r\n                                className=\"w-full bg-gray-800 border border-gray-600 text-white rounded-md px-3 py-2 focus:border-red-500\"\r\n                            >\r\n                                <option value={3}>3 minutes</option>\r\n                                <option value={4}>4 minutes</option>\r\n                                <option value={5}>5 minutes</option>\r\n                                <option value={6}>6 minutes</option>\r\n                                <option value={7}>7 minutes</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                        <div className=\"flex items-center mb-2\">\r\n                            <Clock className=\"w-4 h-4 text-blue-400 mr-2\" />\r\n                            <span className=\"text-blue-300 font-medium\">Rest Guidelines</span>\r\n                        </div>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>• First two sets: Moderate rest</li>\r\n                            <li>• AMRAP set: Full recovery</li>\r\n                            <li>• Adjust based on conditioning</li>\r\n                            <li>• Quality over speed</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Bad Day Protocol */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4\">Bad Day Protocol</h4>\r\n                <div className=\"space-y-3\">\r\n                    {Object.entries(badDayProtocols).map(([protocol, details]) => (\r\n                        <div\r\n                            key={protocol}\r\n                            onClick={() => handleBadDayProtocolChange(protocol)}\r\n                            className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${badDayProtocol === protocol\r\n                                ? 'border-red-500 bg-red-900/20'\r\n                                : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                }`}\r\n                        >\r\n                            <div className=\"flex items-center mb-2\">\r\n                                <AlertTriangle className=\"w-5 h-5 text-yellow-400 mr-2\" />\r\n                                <span className=\"text-white font-medium\">{details.name}</span>\r\n                            </div>\r\n                            <p className=\"text-gray-400 text-sm mb-2\">{details.description}</p>\r\n                            <div className=\"text-xs text-gray-500 space-y-1\">\r\n                                <div><strong>Protocol:</strong> {details.protocol}</div>\r\n                                <div><strong>Philosophy:</strong> {details.philosophy}</div>\r\n                                <div><strong>When to use:</strong> {details.when}</div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Performance Indicators */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4\">Performance Indicators (85% AMRAP Set)</h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    {Object.entries(performanceIndicators).map(([level, details]) => (\r\n                        <div key={level} className={`bg-${details.color}-900/20 border border-${details.color}-600 p-4 rounded-lg`}>\r\n                            <div className=\"flex items-center mb-2\">\r\n                                <BarChart3 className={`w-4 h-4 text-${details.color}-400 mr-2`} />\r\n                                <span className={`text-${details.color}-300 font-medium capitalize`}>{level}</span>\r\n                            </div>\r\n                            <div className={`text-${details.color}-200 text-sm mb-2`}>\r\n                                {details.min === 0 ? '5 or fewer reps' : `${details.min}+ reps`}\r\n                            </div>\r\n                            <div className={`text-${details.color}-200 text-xs`}>\r\n                                {details.message}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Form Cues Selection */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4\">Key Form Cues to Focus On</h4>\r\n                <div className=\"space-y-6\">\r\n                    {Object.entries(liftNames).map(([lift, name]) => (\r\n                        <div key={lift} className=\"bg-gray-800 p-4 rounded-lg\">\r\n                            <h5 className=\"text-white font-medium mb-3\">{name}</h5>\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                                {formCueOptions[lift].map((cue, index) => (\r\n                                    <div key={index} className=\"flex items-center space-x-2\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            id={`${lift}_cue_${index}`}\r\n                                            checked={formCues[lift]?.includes(cue) || false}\r\n                                            onChange={() => handleFormCueToggle(lift, cue)}\r\n                                            className=\"w-4 h-4 text-red-500 bg-gray-700 border-gray-600 rounded focus:ring-red-500\"\r\n                                        />\r\n                                        <label htmlFor={`${lift}_cue_${index}`} className=\"text-gray-300 text-sm\">\r\n                                            {cue}\r\n                                        </label>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Completion Status */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-green-900/20 border border-green-500 p-4 rounded-lg\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n                        <span className=\"text-green-300 font-medium\">\r\n                            Step 5 Complete! Week 1 execution strategy configured.\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSettings } from '../../../contexts/SettingsContext.jsx';\r\nimport { percentOfTM, toDisplayWeight } from '../../../lib/fiveThreeOne/math.js';\r\nimport { Target, TrendingUp, CheckCircle, Info, AlertTriangle, Calendar, Zap } from 'lucide-react';\r\n\r\nexport default function Step6Week2Execution({ data = {}, updateData }) {\r\n    const { roundingIncrement } = useSettings();\r\n    // State management with proper fallbacks\r\n    const [week2Results, setWeek2Results] = useState(data?.week2Results || {});\r\n    const [currentSession, setCurrentSession] = useState(data?.currentSession || null);\r\n\r\n    // Integration with previous steps - all with safe fallbacks\r\n    const trainingMaxes = data?.trainingMaxes || {};\r\n    const loadingOption = data?.loadingOption || 1;\r\n    const schedule = data?.schedule || { frequency: '4day', liftOrder: ['press', 'deadlift', 'bench', 'squat'] };\r\n\r\n    // Week 2 percentages based on loading option\r\n    const week2Percentages = loadingOption === 1\r\n        ? [70, 80, 90]  // Option 1 (Default)\r\n        : [80, 85, 90]; // Option 2 (Higher Intensity)\r\n\r\n    const week2Reps = [3, 3, 3]; // 3+ on last set\r\n\r\n    // Calculate weights with proper rounding\r\n    const calculateWeight = (tm, percentage) => {\r\n        if (!tm) return 0;\r\n        return toDisplayWeight(percentOfTM(tm, percentage, roundingIncrement));\r\n    };\r\n\r\n    // Lift names mapping\r\n    const liftNames = {\r\n        squat: 'Squat',\r\n        bench: 'Bench Press',\r\n        deadlift: 'Deadlift',\r\n        press: 'Overhead Press'\r\n    };\r\n\r\n    // Handle AMRAP result input\r\n    const handleAmrapResult = (lift, reps) => {\r\n        const newResults = {\r\n            ...week2Results,\r\n            [lift]: {\r\n                ...week2Results[lift],\r\n                amrapReps: parseInt(reps) || 0,\r\n                completed: true,\r\n                date: new Date().toISOString().split('T')[0]\r\n            }\r\n        };\r\n        setWeek2Results(newResults);\r\n        updateStepData({ week2Results: newResults });\r\n    };\r\n\r\n    // Handle session notes\r\n    const handleNotes = (lift, notes) => {\r\n        const newResults = {\r\n            ...week2Results,\r\n            [lift]: {\r\n                ...week2Results[lift],\r\n                notes: notes\r\n            }\r\n        };\r\n        setWeek2Results(newResults);\r\n        updateStepData({ week2Results: newResults });\r\n    };\r\n\r\n    const updateStepData = (updates) => {\r\n        if (updateData) {\r\n            updateData({\r\n                week2Results: week2Results || {},\r\n                currentSession: currentSession || null,\r\n                ...updates\r\n            });\r\n        }\r\n    };\r\n\r\n    // Calculate estimated 1RM from AMRAP\r\n    const calculateEstimated1RM = (weight, reps) => {\r\n        if (!weight || !reps) return 0;\r\n        return Math.round(weight * reps * 0.0333 + weight);\r\n    };\r\n\r\n    // Check if step is complete\r\n    const isStepComplete = () => {\r\n        const liftOrder = schedule?.liftOrder || [];\r\n        return liftOrder.length > 0 && liftOrder.every(lift =>\r\n            week2Results[lift]?.completed\r\n        );\r\n    };\r\n\r\n    // Check for PRs\r\n    const isPR = (lift, reps) => {\r\n        const week1Results = data?.week1Results || {};\r\n        const week1Reps = week1Results[lift]?.amrapReps || 0;\r\n        return reps > week1Reps;\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div>\r\n                <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                    Step 6: Week 2 – \"5/3/1\" Week Execution\r\n                </h3>\r\n                <p className=\"text-gray-400\">\r\n                    Higher intensity week with 3-rep sets. Focus on explosive movement and push the AMRAP set.\r\n                </p>\r\n            </div>\r\n\r\n            {/* Philosophy/Info Box */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-blue-300 font-medium mb-2\">Week 2 Philosophy</h4>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>• <strong>Intensity focus:</strong> Higher percentages with lower reps</li>\r\n                            <li>• <strong>AMRAP target:</strong> Aim for 5+ reps on the 90% set</li>\r\n                            <li>• <strong>Bar speed:</strong> Keep all reps explosive and controlled</li>\r\n                            <li>• <strong>Recovery:</strong> Longer rest between sets (3-5 minutes)</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Week 2 Percentages Display */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Target className=\"w-5 h-5 text-red-400 mr-2\" />\r\n                    Week 2 Loading (Option {loadingOption})\r\n                </h4>\r\n                <div className=\"grid grid-cols-3 gap-4\">\r\n                    {week2Percentages.map((percentage, index) => (\r\n                        <div key={index} className=\"bg-gray-800 p-4 rounded-lg text-center\">\r\n                            <div className=\"text-2xl font-bold text-white\">{percentage}%</div>\r\n                            <div className=\"text-gray-400\">\r\n                                {week2Reps[index]}{index === 2 ? '+' : ''} reps\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-500 mt-1\">\r\n                                Set {index + 1}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Workout Sessions */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Calendar className=\"w-5 h-5 text-red-400 mr-2\" />\r\n                    Week 2 Workout Sessions\r\n                </h4>\r\n\r\n                <div className=\"space-y-4\">\r\n                    {(schedule?.liftOrder || []).map((lift, index) => {\r\n                        const tm = trainingMaxes[lift] || 0;\r\n                        const isCompleted = week2Results[lift]?.completed;\r\n                        const amrapReps = week2Results[lift]?.amrapReps || 0;\r\n                        const amrapWeight = calculateWeight(tm, week2Percentages[2]);\r\n                        const estimated1RM = calculateEstimated1RM(amrapWeight, amrapReps);\r\n\r\n                        return (\r\n                            <div key={lift} className={`border rounded-lg p-4 ${isCompleted ? 'border-green-500 bg-green-900/10' : 'border-gray-600'\r\n                                }`}>\r\n                                <div className=\"flex items-center justify-between mb-4\">\r\n                                    <h5 className=\"text-lg font-medium text-white flex items-center\">\r\n                                        {isCompleted && <CheckCircle className=\"w-5 h-5 text-green-400 mr-2\" />}\r\n                                        Day {index + 1}: {liftNames[lift]}\r\n                                    </h5>\r\n                                    <div className=\"text-sm text-gray-400\">\r\n                                        TM: {tm} lbs\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Warm-up sets */}\r\n                                <div className=\"mb-4\">\r\n                                    <h6 className=\"text-sm font-medium text-gray-300 mb-2\">Warm-up Sets:</h6>\r\n                                    <div className=\"grid grid-cols-3 gap-2 text-sm\">\r\n                                        <div className=\"bg-gray-800 p-2 rounded text-center\">\r\n                                            <div className=\"text-white\">{calculateWeight(tm, 40)} lbs</div>\r\n                                            <div className=\"text-gray-400\">5 reps</div>\r\n                                        </div>\r\n                                        <div className=\"bg-gray-800 p-2 rounded text-center\">\r\n                                            <div className=\"text-white\">{calculateWeight(tm, 50)} lbs</div>\r\n                                            <div className=\"text-gray-400\">5 reps</div>\r\n                                        </div>\r\n                                        <div className=\"bg-gray-800 p-2 rounded text-center\">\r\n                                            <div className=\"text-white\">{calculateWeight(tm, 60)} lbs</div>\r\n                                            <div className=\"text-gray-400\">3 reps</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Working sets */}\r\n                                <div className=\"mb-4\">\r\n                                    <h6 className=\"text-sm font-medium text-gray-300 mb-2\">Working Sets:</h6>\r\n                                    <div className=\"grid grid-cols-3 gap-2\">\r\n                                        {week2Percentages.map((percentage, setIndex) => (\r\n                                            <div key={setIndex} className={`p-3 rounded ${setIndex === 2 ? 'bg-red-900/30 border border-red-600' : 'bg-gray-800'\r\n                                                }`}>\r\n                                                <div className=\"text-center\">\r\n                                                    <div className=\"text-lg font-bold text-white\">\r\n                                                        {calculateWeight(tm, percentage)} lbs\r\n                                                    </div>\r\n                                                    <div className=\"text-gray-400\">\r\n                                                        {percentage}% × {week2Reps[setIndex]}{setIndex === 2 ? '+' : ''}\r\n                                                    </div>\r\n                                                    {setIndex === 2 && (\r\n                                                        <div className=\"text-xs text-red-400 mt-1\">\r\n                                                            AMRAP SET\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* AMRAP input */}\r\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                                            AMRAP Reps Achieved\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            min=\"0\"\r\n                                            max=\"20\"\r\n                                            className=\"w-full bg-gray-800 border border-gray-600 text-white px-3 py-2 rounded focus:border-red-500 focus:outline-none\"\r\n                                            value={amrapReps || ''}\r\n                                            onChange={(e) => handleAmrapResult(lift, e.target.value)}\r\n                                            placeholder=\"Enter reps completed\"\r\n                                        />\r\n                                        {amrapReps > 0 && (\r\n                                            <div className=\"mt-2 text-sm\">\r\n                                                <div className={`${isPR(lift, amrapReps) ? 'text-green-400' : 'text-gray-400'}`}>\r\n                                                    {isPR(lift, amrapReps) && <span className=\"text-green-400\">🎉 PR! </span>}\r\n                                                    Estimated 1RM: {estimated1RM} lbs\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                                            Session Notes\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"w-full bg-gray-800 border border-gray-600 text-white px-3 py-2 rounded focus:border-red-500 focus:outline-none\"\r\n                                            value={week2Results[lift]?.notes || ''}\r\n                                            onChange={(e) => handleNotes(lift, e.target.value)}\r\n                                            placeholder=\"Form cues, RPE, etc.\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Performance Guidelines */}\r\n            <div className=\"bg-yellow-900/20 border border-yellow-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-2\">\r\n                    <Zap className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-yellow-300 font-medium mb-2\">Week 2 Performance Guidelines</h4>\r\n                        <ul className=\"text-yellow-200 text-sm space-y-1\">\r\n                            <li>• <strong>Minimum target:</strong> 3 reps on AMRAP set (meeting the base requirement)</li>\r\n                            <li>• <strong>Good performance:</strong> 5+ reps on AMRAP set</li>\r\n                            <li>• <strong>Excellent performance:</strong> 7+ reps (indicates room for TM increase)</li>\r\n                            <li>• <strong>Stop when:</strong> Bar speed slows significantly or form breaks down</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Completion Status */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-green-900/20 border border-green-500 p-4 rounded-lg\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n                        <span className=\"text-green-300 font-medium\">\r\n                            Week 2 Complete! Ready to move to Week 3 – the heaviest week of the cycle.\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"mt-2 text-sm text-green-200\">\r\n                        All AMRAP sets logged. Review your performance and prepare for the intensity of Week 3.\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useSettings } from '../../../contexts/SettingsContext.jsx';\r\nimport { percentOfTM, toDisplayWeight, e1RM as calcE1RM } from '../../../lib/fiveThreeOne/math.js';\r\nimport { Target, CheckCircle, Info, AlertTriangle, Calendar, Zap, Trophy } from 'lucide-react';\r\n\r\nexport default function Step7Week3Execution({ data = {}, updateData }) {\r\n    const { roundingIncrement } = useSettings();\r\n    // Local state with safe fallbacks\r\n    const [week3Results, setWeek3Results] = useState(data?.week3Results || {});\r\n\r\n    // Threaded inputs from prior steps (defensive defaults)\r\n    const trainingMaxes = data?.trainingMaxes || {};\r\n    const loadingOption = data?.loadingOption || 1;\r\n    const schedule = data?.schedule || { frequency: '4day', liftOrder: ['press', 'deadlift', 'bench', 'squat'] };\r\n    const week2Results = data?.week2Results || {}; // for PR comparison via e1RM\r\n\r\n    // Week 3 percentages and reps\r\n    // Option 1 (default): 75%, 85%, 95% (1+)\r\n    // Option 2 (heavier ramp): 85%, 90%, 95% (1+)\r\n    const week3Percentages = loadingOption === 1 ? [75, 85, 95] : [85, 90, 95];\r\n    const week3Reps = [5, 3, 1]; // Last set is 1+\r\n\r\n    const liftNames = {\r\n        squat: 'Squat',\r\n        bench: 'Bench Press',\r\n        deadlift: 'Deadlift',\r\n        press: 'Overhead Press'\r\n    };\r\n\r\n    // Round up to nearest 5 lbs to stay conservative on heavy week\r\n    const calculateWeight = (tm, percentage) => {\r\n        if (!tm) return 0;\r\n        return toDisplayWeight(percentOfTM(tm, percentage, roundingIncrement));\r\n    };\r\n\r\n    const updateStepData = (updates) => {\r\n        if (!updateData) return;\r\n        updateData({\r\n            week3Results: week3Results || {},\r\n            ...updates\r\n        });\r\n    };\r\n\r\n    const handleAmrapResult = (lift, reps) => {\r\n        const sanitized = Math.max(0, parseInt(reps) || 0);\r\n        const newResults = {\r\n            ...week3Results,\r\n            [lift]: {\r\n                ...week3Results[lift],\r\n                amrapReps: sanitized,\r\n                completed: true,\r\n                date: new Date().toISOString().split('T')[0]\r\n            }\r\n        };\r\n        setWeek3Results(newResults);\r\n        updateStepData({ week3Results: newResults });\r\n    };\r\n\r\n    const handleNotes = (lift, notes) => {\r\n        const newResults = {\r\n            ...week3Results,\r\n            [lift]: {\r\n                ...week3Results[lift],\r\n                notes\r\n            }\r\n        };\r\n        setWeek3Results(newResults);\r\n        updateStepData({ week3Results: newResults });\r\n    };\r\n\r\n    // Estimated 1RM via Epley\r\n    const e1rm = (weight, reps) => calcE1RM(weight, reps);\r\n\r\n    // PR if current e1RM exceeds last week's e1RM\r\n    const isPR = (lift, week3E1RM) => {\r\n        const lastWeekWeight = calculateWeight(trainingMaxes[lift] || 0, 90);\r\n        const lastWeekReps = week2Results?.[lift]?.amrapReps || 0;\r\n        const lastWeekE1RM = e1rm(lastWeekWeight, lastWeekReps);\r\n        return week3E1RM > (lastWeekE1RM || 0);\r\n    };\r\n\r\n    const isStepComplete = () => {\r\n        const order = Array.isArray(schedule?.liftOrder) ? schedule.liftOrder : [];\r\n        if (order.length === 0) return false;\r\n        return order.every(l => week3Results?.[l]?.completed);\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div>\r\n                <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                    Step 7: Week 3 – \"1+\" Week Execution\r\n                </h3>\r\n                <p className=\"text-gray-400\">\r\n                    Peak intensity week. Execute strong singles and push the final AMRAP set intelligently.\r\n                </p>\r\n            </div>\r\n\r\n            {/* Philosophy/Info Box */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-blue-300 font-medium mb-2\">Week 3 Philosophy</h4>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>• <strong>Intensity:</strong> Heaviest week of the cycle</li>\r\n                            <li>• <strong>Last set:</strong> 95% for 1+ reps — quality over quantity</li>\r\n                            <li>• <strong>Rest:</strong> Take longer rests (3–6 min) before the AMRAP</li>\r\n                            <li>• <strong>Mindset:</strong> Solid single, then push for extra reps if bar speed allows</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Week 3 Percentages Display */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Target className=\"w-5 h-5 text-red-400 mr-2\" />\r\n                    Week 3 Loading (Option {loadingOption})\r\n                </h4>\r\n                <div className=\"grid grid-cols-3 gap-4\">\r\n                    {week3Percentages.map((percentage, index) => (\r\n                        <div key={index} className=\"bg-gray-800 p-4 rounded-lg text-center\">\r\n                            <div className=\"text-2xl font-bold text-white\">{percentage}%</div>\r\n                            <div className=\"text-gray-400\">\r\n                                {week3Reps[index]}{index === 2 ? '+' : ''} reps\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-500 mt-1\">Set {index + 1}</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Workout Sessions */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Calendar className=\"w-5 h-5 text-red-400 mr-2\" />\r\n                    Week 3 Workout Sessions\r\n                </h4>\r\n\r\n                <div className=\"space-y-4\">\r\n                    {(schedule?.liftOrder || []).map((lift, index) => {\r\n                        const tm = trainingMaxes[lift] || 0;\r\n                        const isCompleted = week3Results[lift]?.completed;\r\n                        const amrapReps = week3Results[lift]?.amrapReps || 0;\r\n                        const amrapWeight = calculateWeight(tm, week3Percentages[2]);\r\n                        const estimated1RM = e1rm(amrapWeight, amrapReps);\r\n                        const gotPR = amrapReps > 0 && isPR(lift, estimated1RM);\r\n\r\n                        return (\r\n                            <div key={lift} className={`border rounded-lg p-4 ${isCompleted ? 'border-green-500 bg-green-900/10' : 'border-gray-600'}`}>\r\n                                <div className=\"flex items-center justify-between mb-4\">\r\n                                    <h5 className=\"text-lg font-medium text-white flex items-center\">\r\n                                        {isCompleted && <CheckCircle className=\"w-5 h-5 text-green-400 mr-2\" />}\r\n                                        Day {index + 1}: {liftNames[lift]}\r\n                                    </h5>\r\n                                    <div className=\"text-sm text-gray-400\">TM: {tm} lbs</div>\r\n                                </div>\r\n\r\n                                {/* Warm-up sets */}\r\n                                <div className=\"mb-4\">\r\n                                    <h6 className=\"text-sm font-medium text-gray-300 mb-2\">Warm-up Sets:</h6>\r\n                                    <div className=\"grid grid-cols-3 gap-2 text-sm\">\r\n                                        <div className=\"bg-gray-800 p-2 rounded text-center\">\r\n                                            <div className=\"text-white\">{calculateWeight(tm, 40)} lbs</div>\r\n                                            <div className=\"text-gray-400\">5 reps</div>\r\n                                        </div>\r\n                                        <div className=\"bg-gray-800 p-2 rounded text-center\">\r\n                                            <div className=\"text-white\">{calculateWeight(tm, 50)} lbs</div>\r\n                                            <div className=\"text-gray-400\">5 reps</div>\r\n                                        </div>\r\n                                        <div className=\"bg-gray-800 p-2 rounded text-center\">\r\n                                            <div className=\"text-white\">{calculateWeight(tm, 60)} lbs</div>\r\n                                            <div className=\"text-gray-400\">3 reps</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Working sets */}\r\n                                <div className=\"mb-4\">\r\n                                    <h6 className=\"text-sm font-medium text-gray-300 mb-2\">Working Sets:</h6>\r\n                                    <div className=\"grid grid-cols-3 gap-2\">\r\n                                        {week3Percentages.map((percentage, setIndex) => (\r\n                                            <div key={setIndex} className={`p-3 rounded ${setIndex === 2 ? 'bg-red-900/30 border border-red-600' : 'bg-gray-800'}`}>\r\n                                                <div className=\"text-center\">\r\n                                                    <div className=\"text-lg font-bold text-white\">{calculateWeight(tm, percentage)} lbs</div>\r\n                                                    <div className=\"text-gray-400\">{percentage}% × {week3Reps[setIndex]}{setIndex === 2 ? '+' : ''}</div>\r\n                                                    {setIndex === 2 && (\r\n                                                        <div className=\"text-xs text-red-400 mt-1\">AMRAP SET</div>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* AMRAP input & notes */}\r\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-300 mb-2\">AMRAP Reps Achieved</label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            min=\"0\"\r\n                                            max=\"20\"\r\n                                            className=\"w-full bg-gray-800 border border-gray-600 text-white px-3 py-2 rounded focus:border-red-500 focus:outline-none\"\r\n                                            value={amrapReps || ''}\r\n                                            onChange={(e) => handleAmrapResult(lift, e.target.value)}\r\n                                            placeholder=\"Enter reps completed\"\r\n                                        />\r\n                                        {amrapReps > 0 && (\r\n                                            <div className=\"mt-2 text-sm\">\r\n                                                <div className={`${isPR(lift, estimated1RM) ? 'text-green-400' : 'text-gray-400'}`}>\r\n                                                    {gotPR && <span className=\"inline-flex items-center text-green-400\"><Trophy className=\"w-4 h-4 mr-1\" /> PR! </span>}\r\n                                                    Estimated 1RM: {estimated1RM} lbs\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <label className=\"block text-sm font-medium text-gray-300 mb-2\">Session Notes</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"w-full bg-gray-800 border border-gray-600 text-white px-3 py-2 rounded focus:border-red-500 focus:outline-none\"\r\n                                            value={week3Results[lift]?.notes || ''}\r\n                                            onChange={(e) => handleNotes(lift, e.target.value)}\r\n                                            placeholder=\"Form cues, RPE, bar speed, etc.\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Safety and Mental Prep */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div className=\"bg-yellow-900/20 border border-yellow-600 p-4 rounded-lg\">\r\n                    <div className=\"flex items-start space-x-2\">\r\n                        <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                        <div>\r\n                            <h4 className=\"text-yellow-300 font-medium mb-2\">Safety Guidelines</h4>\r\n                            <ul className=\"text-yellow-200 text-sm space-y-1\">\r\n                                <li>• Treat the first rep like a meet single: tight brace, perfect setup</li>\r\n                                <li>• Stop the AMRAP when bar speed drops sharply or technique degrades</li>\r\n                                <li>• Rest 3–6 minutes before the last set</li>\r\n                                <li>• Use spotters/safeties as needed</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"bg-purple-900/20 border border-purple-600 p-4 rounded-lg\">\r\n                    <div className=\"flex items-start space-x-2\">\r\n                        <Zap className=\"w-5 h-5 text-purple-400 mt-0.5\" />\r\n                        <div>\r\n                            <h4 className=\"text-purple-300 font-medium mb-2\">Mental Prep</h4>\r\n                            <ul className=\"text-purple-200 text-sm space-y-1\">\r\n                                <li>• Visualize a clean single before the set</li>\r\n                                <li>• Use a consistent cue checklist</li>\r\n                                <li>• Commit to bar speed; don’t chase ugly reps</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Completion Status */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-green-900/20 border border-green-500 p-4 rounded-lg\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n                        <span className=\"text-green-300 font-medium\">\r\n                            Week 3 Complete! Deload next or begin next cycle as planned.\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"mt-2 text-sm text-green-200\">\r\n                        All AMRAP sets logged. Review e1RMs to guide TM adjustments.\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSettings } from '../../../contexts/SettingsContext.jsx';\r\nimport { percentOfTM, toDisplayWeight } from '../../../lib/fiveThreeOne/math.js';\r\nimport { RefreshCw, Heart, CheckCircle, Info, AlertTriangle, Calendar, Pause } from 'lucide-react';\r\n\r\nexport default function Step8DeloadWeek({ data = {}, updateData }) {\r\n    const { roundingIncrement } = useSettings();\r\n    // State management with proper fallbacks\r\n    const [deloadResults, setDeloadResults] = useState(data?.deloadResults || {});\r\n    const [recoveryMetrics, setRecoveryMetrics] = useState(data?.recoveryMetrics || {});\r\n    const [assistanceReduction, setAssistanceReduction] = useState(data?.assistanceReduction || true);\r\n\r\n    // Integration with previous steps - all with safe fallbacks\r\n    const trainingMaxes = data?.trainingMaxes || {};\r\n    const schedule = data?.schedule || { frequency: '4day', liftOrder: ['press', 'deadlift', 'bench', 'squat'] };\r\n\r\n    // Deload percentages - SAME FOR ALL OPTIONS\r\n    const deloadPercentages = [40, 50, 60];\r\n    const deloadReps = [5, 5, 5]; // NO AMRAP sets\r\n\r\n    // Calculate weights with proper rounding\r\n    const calculateWeight = (tm, percentage) => {\r\n        if (!tm) return 0;\r\n        return toDisplayWeight(percentOfTM(tm, percentage, roundingIncrement));\r\n    };\r\n\r\n    // Lift names mapping\r\n    const liftNames = {\r\n        squat: 'Squat',\r\n        bench: 'Bench Press',\r\n        deadlift: 'Deadlift',\r\n        press: 'Overhead Press'\r\n    };\r\n\r\n    // Handle session completion\r\n    const handleSessionComplete = (lift) => {\r\n        const newResults = {\r\n            ...deloadResults,\r\n            [lift]: {\r\n                ...deloadResults[lift],\r\n                completed: true,\r\n                date: new Date().toISOString().split('T')[0]\r\n            }\r\n        };\r\n        setDeloadResults(newResults);\r\n        updateStepData({ deloadResults: newResults });\r\n    };\r\n\r\n    // Handle recovery metrics\r\n    const handleRecoveryMetric = (metric, value) => {\r\n        const newMetrics = {\r\n            ...recoveryMetrics,\r\n            [metric]: value\r\n        };\r\n        setRecoveryMetrics(newMetrics);\r\n        updateStepData({ recoveryMetrics: newMetrics });\r\n    };\r\n\r\n    // Handle session notes\r\n    const handleNotes = (lift, notes) => {\r\n        const newResults = {\r\n            ...deloadResults,\r\n            [lift]: {\r\n                ...deloadResults[lift],\r\n                notes: notes\r\n            }\r\n        };\r\n        setDeloadResults(newResults);\r\n        updateStepData({ deloadResults: newResults });\r\n    };\r\n\r\n    const updateStepData = (updates) => {\r\n        if (updateData) {\r\n            updateData({\r\n                deloadResults: deloadResults || {},\r\n                recoveryMetrics: recoveryMetrics || {},\r\n                assistanceReduction,\r\n                ...updates\r\n            });\r\n        }\r\n    };\r\n\r\n    // Check if step is complete\r\n    const isStepComplete = () => {\r\n        const liftOrder = schedule?.liftOrder || [];\r\n        return liftOrder.length > 0 && liftOrder.every(lift =>\r\n            deloadResults[lift]?.completed\r\n        );\r\n    };\r\n\r\n    // Recovery assessment\r\n    const getRecoveryStatus = () => {\r\n        const metrics = recoveryMetrics;\r\n        const sleep = parseInt(metrics.sleep) || 0;\r\n        const soreness = parseInt(metrics.soreness) || 5;\r\n        const motivation = parseInt(metrics.motivation) || 5;\r\n\r\n        let status = 'good';\r\n        let message = 'Recovery on track';\r\n        let color = 'text-green-400';\r\n\r\n        if (sleep < 6 || soreness > 7 || motivation < 4) {\r\n            status = 'poor';\r\n            message = 'Consider extending deload or reducing next cycle TM';\r\n            color = 'text-red-400';\r\n        } else if (sleep < 7 || soreness > 5 || motivation < 6) {\r\n            status = 'moderate';\r\n            message = 'Monitor recovery closely next cycle';\r\n            color = 'text-yellow-400';\r\n        }\r\n\r\n        return { status, message, color };\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div>\r\n                <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                    Step 8: Week 4 – Deload Week\r\n                </h3>\r\n                <p className=\"text-gray-400\">\r\n                    Recovery and regeneration week. Focus on movement quality, not intensity. Under-do rather than overdo.\r\n                </p>\r\n            </div>\r\n\r\n            {/* Philosophy/Info Box */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-blue-300 font-medium mb-2\">Deload Week Philosophy</h4>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>• <strong>Recovery focus:</strong> Allow your body and mind to recover from 3 weeks of progression</li>\r\n                            <li>• <strong>Movement quality:</strong> Perfect your technique with lighter loads</li>\r\n                            <li>• <strong>Under-do principle:</strong> Resist the urge to add weight or extra reps</li>\r\n                            <li>• <strong>Holistic recovery:</strong> Prioritize sleep, nutrition, and stress management</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Deload Percentages Display */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <RefreshCw className=\"w-5 h-5 text-blue-400 mr-2\" />\r\n                    Deload Loading - Light and Easy\r\n                </h4>\r\n                <div className=\"grid grid-cols-3 gap-4\">\r\n                    {deloadPercentages.map((percentage, index) => (\r\n                        <div key={index} className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg text-center\">\r\n                            <div className=\"text-2xl font-bold text-blue-300\">{percentage}%</div>\r\n                            <div className=\"text-blue-200\">\r\n                                {deloadReps[index]} reps\r\n                            </div>\r\n                            <div className=\"text-sm text-blue-400 mt-1\">\r\n                                Set {index + 1}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"mt-3 text-center\">\r\n                    <span className=\"text-blue-300 text-sm font-medium\">\r\n                        NO AMRAP SETS - Prescribed reps only\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Assistance Work Reduction */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Pause className=\"w-5 h-5 text-yellow-400 mr-2\" />\r\n                    Assistance Work Protocol\r\n                </h4>\r\n                <div className=\"space-y-4\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            id=\"assistanceReduction\"\r\n                            checked={assistanceReduction}\r\n                            onChange={(e) => {\r\n                                setAssistanceReduction(e.target.checked);\r\n                                updateStepData({ assistanceReduction: e.target.checked });\r\n                            }}\r\n                            className=\"w-4 h-4 text-red-600 bg-gray-800 border-gray-600 rounded focus:ring-red-500\"\r\n                        />\r\n                        <label htmlFor=\"assistanceReduction\" className=\"text-white\">\r\n                            Reduce assistance work during deload (Recommended)\r\n                        </label>\r\n                    </div>\r\n                    {assistanceReduction && (\r\n                        <div className=\"bg-yellow-900/20 border border-yellow-600 p-3 rounded\">\r\n                            <ul className=\"text-yellow-200 text-sm space-y-1\">\r\n                                <li>• <strong>Volume:</strong> 50% of normal assistance volume</li>\r\n                                <li>• <strong>Intensity:</strong> Reduce weights by 10-15%</li>\r\n                                <li>• <strong>Focus:</strong> Movement quality and blood flow</li>\r\n                            </ul>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Recovery Metrics Tracking */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Heart className=\"w-5 h-5 text-red-400 mr-2\" />\r\n                    Recovery Monitoring\r\n                </h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                            Average Sleep (hours/night)\r\n                        </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            min=\"4\"\r\n                            max=\"12\"\r\n                            step=\"0.5\"\r\n                            className=\"w-full bg-gray-800 border border-gray-600 text-white px-3 py-2 rounded focus:border-red-500 focus:outline-none\"\r\n                            value={recoveryMetrics.sleep || ''}\r\n                            onChange={(e) => handleRecoveryMetric('sleep', e.target.value)}\r\n                            placeholder=\"7.5\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                            Soreness Level (1-10)\r\n                        </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            max=\"10\"\r\n                            className=\"w-full bg-gray-800 border border-gray-600 text-white px-3 py-2 rounded focus:border-red-500 focus:outline-none\"\r\n                            value={recoveryMetrics.soreness || ''}\r\n                            onChange={(e) => handleRecoveryMetric('soreness', e.target.value)}\r\n                            placeholder=\"3\"\r\n                        />\r\n                        <div className=\"text-xs text-gray-500 mt-1\">1 = No soreness, 10 = Extremely sore</div>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                            Motivation Level (1-10)\r\n                        </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            max=\"10\"\r\n                            className=\"w-full bg-gray-800 border border-gray-600 text-white px-3 py-2 rounded focus:border-red-500 focus:outline-none\"\r\n                            value={recoveryMetrics.motivation || ''}\r\n                            onChange={(e) => handleRecoveryMetric('motivation', e.target.value)}\r\n                            placeholder=\"8\"\r\n                        />\r\n                        <div className=\"text-xs text-gray-500 mt-1\">1 = No motivation, 10 = Highly motivated</div>\r\n                    </div>\r\n                </div>\r\n\r\n                {(recoveryMetrics.sleep || recoveryMetrics.soreness || recoveryMetrics.motivation) && (\r\n                    <div className=\"mt-4 p-3 bg-gray-800 rounded\">\r\n                        <div className={`text-sm font-medium ${getRecoveryStatus().color}`}>\r\n                            Recovery Status: {getRecoveryStatus().message}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Workout Sessions */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Calendar className=\"w-5 h-5 text-blue-400 mr-2\" />\r\n                    Deload Workout Sessions\r\n                </h4>\r\n\r\n                <div className=\"space-y-4\">\r\n                    {(schedule?.liftOrder || []).map((lift, index) => {\r\n                        const tm = trainingMaxes[lift] || 0;\r\n                        const isCompleted = deloadResults[lift]?.completed;\r\n\r\n                        return (\r\n                            <div key={lift} className={`border rounded-lg p-4 ${isCompleted ? 'border-green-500 bg-green-900/10' : 'border-gray-600'\r\n                                }`}>\r\n                                <div className=\"flex items-center justify-between mb-4\">\r\n                                    <h5 className=\"text-lg font-medium text-white flex items-center\">\r\n                                        {isCompleted && <CheckCircle className=\"w-5 h-5 text-green-400 mr-2\" />}\r\n                                        Day {index + 1}: {liftNames[lift]}\r\n                                    </h5>\r\n                                    <div className=\"text-sm text-gray-400\">\r\n                                        TM: {tm} lbs\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Warm-up sets */}\r\n                                <div className=\"mb-4\">\r\n                                    <h6 className=\"text-sm font-medium text-gray-300 mb-2\">Warm-up Sets:</h6>\r\n                                    <div className=\"grid grid-cols-3 gap-2 text-sm\">\r\n                                        <div className=\"bg-gray-800 p-2 rounded text-center\">\r\n                                            <div className=\"text-white\">{calculateWeight(tm, 40)} lbs</div>\r\n                                            <div className=\"text-gray-400\">5 reps</div>\r\n                                        </div>\r\n                                        <div className=\"bg-gray-800 p-2 rounded text-center\">\r\n                                            <div className=\"text-white\">{calculateWeight(tm, 50)} lbs</div>\r\n                                            <div className=\"text-gray-400\">5 reps</div>\r\n                                        </div>\r\n                                        <div className=\"bg-gray-800 p-2 rounded text-center\">\r\n                                            <div className=\"text-white\">{calculateWeight(tm, 60)} lbs</div>\r\n                                            <div className=\"text-gray-400\">3 reps</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Working sets */}\r\n                                <div className=\"mb-4\">\r\n                                    <h6 className=\"text-sm font-medium text-gray-300 mb-2\">Deload Sets:</h6>\r\n                                    <div className=\"grid grid-cols-3 gap-2\">\r\n                                        {deloadPercentages.map((percentage, setIndex) => (\r\n                                            <div key={setIndex} className=\"bg-blue-900/20 border border-blue-600 p-3 rounded\">\r\n                                                <div className=\"text-center\">\r\n                                                    <div className=\"text-lg font-bold text-blue-300\">\r\n                                                        {calculateWeight(tm, percentage)} lbs\r\n                                                    </div>\r\n                                                    <div className=\"text-blue-200\">\r\n                                                        {percentage}% × {deloadReps[setIndex]}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Session controls */}\r\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                    <div>\r\n                                        <button\r\n                                            onClick={() => handleSessionComplete(lift)}\r\n                                            disabled={isCompleted}\r\n                                            className={`w-full px-4 py-2 rounded font-medium ${isCompleted\r\n                                                ? 'bg-green-600 text-white cursor-not-allowed'\r\n                                                : 'bg-blue-600 hover:bg-blue-700 text-white'\r\n                                                }`}\r\n                                        >\r\n                                            {isCompleted ? 'Session Complete' : 'Mark Complete'}\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"w-full bg-gray-800 border border-gray-600 text-white px-3 py-2 rounded focus:border-red-500 focus:outline-none\"\r\n                                            value={deloadResults[lift]?.notes || ''}\r\n                                            onChange={(e) => handleNotes(lift, e.target.value)}\r\n                                            placeholder=\"How did you feel? Movement quality?\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Critical Deload Guidelines */}\r\n            <div className=\"bg-yellow-900/20 border border-yellow-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-2\">\r\n                    <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-yellow-300 font-medium mb-2\">Deload Week Critical Rules</h4>\r\n                        <ul className=\"text-yellow-200 text-sm space-y-1\">\r\n                            <li>• <strong>NO AMRAP sets:</strong> Stick to prescribed reps only - resist the urge to test</li>\r\n                            <li>• <strong>NO extra weight:</strong> Do not add weight even if it feels easy</li>\r\n                            <li>• <strong>Focus on form:</strong> Use this time to perfect technique and timing</li>\r\n                            <li>• <strong>Listen to your body:</strong> This is recovery time, not testing time</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Completion Status */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-green-900/20 border border-green-500 p-4 rounded-lg\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n                        <span className=\"text-green-300 font-medium\">\r\n                            Deload Week Complete! Ready to begin next cycle with increased training maxes.\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"mt-2 text-sm text-green-200\">\r\n                        Recovery week finished. Time to progress your training maxes and start the next 4-week cycle.\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSettings } from '../../../contexts/SettingsContext.jsx';\r\nimport { roundToIncrement } from '../../../lib/fiveThreeOne/math.js';\r\nimport { TrendingUp, Calculator, CheckCircle, Info, AlertTriangle, RotateCcw, ArrowRight } from 'lucide-react';\r\n\r\nexport default function Step9CycleProgression({ data = {}, updateData }) {\r\n    const { roundingIncrement } = useSettings();\r\n    // State management with proper fallbacks\r\n    const [newTrainingMaxes, setNewTrainingMaxes] = useState(data?.newTrainingMaxes || {});\r\n    const [progressionDecisions, setProgressionDecisions] = useState(data?.progressionDecisions || {});\r\n    const [cyclePerformance, setCyclePerformance] = useState(data?.cyclePerformance || {});\r\n    const [nextCycleReady, setNextCycleReady] = useState(false);\r\n\r\n    // Integration with previous steps - all with safe fallbacks\r\n    const currentTrainingMaxes = data?.trainingMaxes || {};\r\n    const week3Results = data?.week3Results || {};\r\n    const schedule = data?.schedule || { frequency: '4day', liftOrder: ['press', 'deadlift', 'bench', 'squat'] };\r\n\r\n    // Standard increment rules\r\n    const incrementRules = {\r\n        press: 5,  // Upper body\r\n        bench: 5,           // Upper body\r\n        squat: 10,          // Lower body\r\n        deadlift: 10        // Lower body\r\n    };\r\n\r\n    // Calculate proper rounding to nearest 5 lbs\r\n    const roundToNearest5 = (weight) => roundToIncrement(weight, roundingIncrement);\r\n\r\n    // Calculate new training max with standard increment\r\n    const calculateNewTM = (currentTM, lift) => {\r\n        if (!currentTM) return 0;\r\n        const increment = incrementRules[lift] || 5;\r\n        return roundToNearest5(currentTM + increment);\r\n    };\r\n\r\n    // Lift names mapping\r\n    const liftNames = {\r\n        squat: 'Squat',\r\n        bench: 'Bench Press',\r\n        deadlift: 'Deadlift',\r\n        press: 'Overhead Press'\r\n    };\r\n\r\n    // Get lift category for increment rules\r\n    const getLiftCategory = (lift) => {\r\n        return ['press', 'bench'].includes(lift) ? 'Upper Body' : 'Lower Body';\r\n    };\r\n\r\n    // Analyze Week 3 performance for progression recommendations\r\n    const analyzePerformance = (lift) => {\r\n        const week3Data = week3Results[lift];\r\n        if (!week3Data || !week3Data.amrapReps) {\r\n            return { recommendation: 'standard', reason: 'No Week 3 data available' };\r\n        }\r\n\r\n        const reps = week3Data.amrapReps;\r\n\r\n        if (reps >= 5) {\r\n            return {\r\n                recommendation: 'increase',\r\n                reason: `Excellent performance (${reps} reps at 95%)`,\r\n                color: 'text-green-400'\r\n            };\r\n        } else if (reps >= 3) {\r\n            return {\r\n                recommendation: 'standard',\r\n                reason: `Good performance (${reps} reps at 95%)`,\r\n                color: 'text-blue-400'\r\n            };\r\n        } else if (reps >= 1) {\r\n            return {\r\n                recommendation: 'conservative',\r\n                reason: `Minimum performance (${reps} rep at 95%)`,\r\n                color: 'text-yellow-400'\r\n            };\r\n        } else {\r\n            return {\r\n                recommendation: 'reduce',\r\n                reason: 'Failed to achieve minimum at 95%',\r\n                color: 'text-red-400'\r\n            };\r\n        }\r\n    };\r\n\r\n    // Handle manual TM adjustment\r\n    const handleManualTM = (lift, value) => {\r\n        const newTMs = {\r\n            ...newTrainingMaxes,\r\n            [lift]: roundToNearest5(parseInt(value) || 0)\r\n        };\r\n        setNewTrainingMaxes(newTMs);\r\n        updateStepData({ newTrainingMaxes: newTMs });\r\n    };\r\n\r\n    // Handle progression decision\r\n    const handleProgressionDecision = (lift, decision) => {\r\n        const currentTM = currentTrainingMaxes[lift] || 0;\r\n        let newTM;\r\n\r\n        switch (decision) {\r\n            case 'increase':\r\n                newTM = roundToNearest5(currentTM + (incrementRules[lift] * 1.5)); // 1.5x normal increment\r\n                break;\r\n            case 'standard':\r\n                newTM = calculateNewTM(currentTM, lift);\r\n                break;\r\n            case 'conservative':\r\n                newTM = roundToNearest5(currentTM + (incrementRules[lift] * 0.5)); // Half increment\r\n                break;\r\n            case 'maintain':\r\n                newTM = currentTM;\r\n                break;\r\n            case 'reduce':\r\n                newTM = roundToNearest5(currentTM * 0.9); // 90% of current\r\n                break;\r\n            default:\r\n                newTM = calculateNewTM(currentTM, lift);\r\n        }\r\n\r\n        const newDecisions = { ...progressionDecisions, [lift]: decision };\r\n        const newTMs = { ...newTrainingMaxes, [lift]: newTM };\r\n\r\n        setProgressionDecisions(newDecisions);\r\n        setNewTrainingMaxes(newTMs);\r\n        updateStepData({\r\n            progressionDecisions: newDecisions,\r\n            newTrainingMaxes: newTMs\r\n        });\r\n    };\r\n\r\n    // Initialize new training maxes on component mount\r\n    useEffect(() => {\r\n        const initialized = {};\r\n        let allInitialized = true;\r\n\r\n        (schedule?.liftOrder || []).forEach(lift => {\r\n            if (!newTrainingMaxes[lift] && currentTrainingMaxes[lift]) {\r\n                initialized[lift] = calculateNewTM(currentTrainingMaxes[lift], lift);\r\n            } else if (newTrainingMaxes[lift]) {\r\n                initialized[lift] = newTrainingMaxes[lift];\r\n            } else {\r\n                allInitialized = false;\r\n            }\r\n        });\r\n\r\n        if (Object.keys(initialized).length > 0) {\r\n            setNewTrainingMaxes(prev => ({ ...prev, ...initialized }));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentTrainingMaxes, schedule?.liftOrder]);\r\n\r\n    const updateStepData = (updates) => {\r\n        if (updateData) {\r\n            updateData({\r\n                newTrainingMaxes: newTrainingMaxes || {},\r\n                progressionDecisions: progressionDecisions || {},\r\n                cyclePerformance: cyclePerformance || {},\r\n                nextCycleReady,\r\n                ...updates\r\n            });\r\n        }\r\n    };\r\n\r\n    // Check if step is complete\r\n    const isStepComplete = () => {\r\n        const liftOrder = schedule?.liftOrder || [];\r\n        return liftOrder.length > 0 && liftOrder.every(lift =>\r\n            newTrainingMaxes[lift] && newTrainingMaxes[lift] > 0\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div>\r\n                <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                    Step 9: Cycle Progression – Increase Training Max\r\n                </h3>\r\n                <p className=\"text-gray-400\">\r\n                    Analyze your cycle performance and set new training maxes for the next 4-week cycle.\r\n                </p>\r\n            </div>\r\n\r\n            {/* Philosophy/Info Box */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-blue-300 font-medium mb-2\">Progression Philosophy</h4>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>• <strong>Slow and steady:</strong> Small, consistent increases build long-term strength</li>\r\n                            <li>• <strong>Performance-based:</strong> Week 3 AMRAP results guide progression decisions</li>\r\n                            <li>• <strong>Conservative approach:</strong> Better to progress too slowly than too quickly</li>\r\n                            <li>• <strong>Individual lifts:</strong> Each lift progresses independently based on performance</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Standard Increment Rules */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Calculator className=\"w-5 h-5 text-green-400 mr-2\" />\r\n                    Standard Increment Rules\r\n                </h4>\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div className=\"bg-gray-800 p-4 rounded-lg\">\r\n                        <h5 className=\"text-green-300 font-medium mb-2\">Upper Body Lifts</h5>\r\n                        <div className=\"space-y-2 text-sm\">\r\n                            <div className=\"flex justify-between\">\r\n                                <span className=\"text-gray-300\">Overhead Press:</span>\r\n                                <span className=\"text-white\">+5 lbs</span>\r\n                            </div>\r\n                            <div className=\"flex justify-between\">\r\n                                <span className=\"text-gray-300\">Bench Press:</span>\r\n                                <span className=\"text-white\">+5 lbs</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bg-gray-800 p-4 rounded-lg\">\r\n                        <h5 className=\"text-green-300 font-medium mb-2\">Lower Body Lifts</h5>\r\n                        <div className=\"space-y-2 text-sm\">\r\n                            <div className=\"flex justify-between\">\r\n                                <span className=\"text-gray-300\">Squat:</span>\r\n                                <span className=\"text-white\">+10 lbs</span>\r\n                            </div>\r\n                            <div className=\"flex justify-between\">\r\n                                <span className=\"text-gray-300\">Deadlift:</span>\r\n                                <span className=\"text-white\">+10 lbs</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-3 text-sm text-gray-400 text-center\">\r\n                    All weights automatically rounded to nearest 5 lbs\r\n                </div>\r\n            </div>\r\n\r\n            {/* Training Max Progression */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <TrendingUp className=\"w-5 h-5 text-red-400 mr-2\" />\r\n                    Training Max Progression\r\n                </h4>\r\n\r\n                <div className=\"space-y-4\">\r\n                    {(schedule?.liftOrder || []).map((lift, index) => {\r\n                        const currentTM = currentTrainingMaxes[lift] || 0;\r\n                        const newTM = newTrainingMaxes[lift] || calculateNewTM(currentTM, lift);\r\n                        const performance = analyzePerformance(lift);\r\n                        const standardIncrement = incrementRules[lift];\r\n\r\n                        return (\r\n                            <div key={lift} className=\"border border-gray-600 rounded-lg p-4\">\r\n                                <div className=\"flex items-center justify-between mb-4\">\r\n                                    <h5 className=\"text-lg font-medium text-white\">\r\n                                        {liftNames[lift]}\r\n                                    </h5>\r\n                                    <div className=\"text-sm text-gray-400\">\r\n                                        {getLiftCategory(lift)} (+{standardIncrement} lbs standard)\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Current vs New TM */}\r\n                                <div className=\"grid grid-cols-3 gap-4 mb-4 items-center\">\r\n                                    <div className=\"text-center\">\r\n                                        <div className=\"text-sm text-gray-400 mb-1\">Current TM</div>\r\n                                        <div className=\"text-xl font-bold text-white\">{currentTM} lbs</div>\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                        <ArrowRight className=\"w-6 h-6 text-gray-400 mx-auto\" />\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                        <div className=\"text-sm text-gray-400 mb-1\">New TM</div>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            min=\"0\"\r\n                                            step=\"5\"\r\n                                            className=\"w-20 bg-gray-800 border border-gray-600 text-white text-xl font-bold text-center px-2 py-1 rounded focus:border-red-500 focus:outline-none\"\r\n                                            value={newTM || ''}\r\n                                            onChange={(e) => handleManualTM(lift, e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Performance Analysis */}\r\n                                <div className=\"mb-4 p-3 bg-gray-800 rounded\">\r\n                                    <div className=\"text-sm\">\r\n                                        <span className=\"text-gray-300\">Week 3 Performance: </span>\r\n                                        <span className={performance.color}>{performance.reason}</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Progression Options */}\r\n                                <div className=\"grid grid-cols-2 md:grid-cols-5 gap-2\">\r\n                                    {[\r\n                                        { key: 'increase', label: '+1.5x', color: 'bg-green-600 hover:bg-green-700' },\r\n                                        { key: 'standard', label: 'Standard', color: 'bg-blue-600 hover:bg-blue-700' },\r\n                                        { key: 'conservative', label: '+0.5x', color: 'bg-yellow-600 hover:bg-yellow-700' },\r\n                                        { key: 'maintain', label: 'Maintain', color: 'bg-gray-600 hover:bg-gray-700' },\r\n                                        { key: 'reduce', label: 'Reduce', color: 'bg-red-600 hover:bg-red-700' }\r\n                                    ].map(option => (\r\n                                        <button\r\n                                            key={option.key}\r\n                                            onClick={() => handleProgressionDecision(lift, option.key)}\r\n                                            className={`px-3 py-2 rounded text-white text-sm font-medium ${option.color} ${progressionDecisions[lift] === option.key ? 'ring-2 ring-white' : ''\r\n                                                }`}\r\n                                        >\r\n                                            {option.label}\r\n                                        </button>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Progression Guidelines */}\r\n            <div className=\"bg-yellow-900/20 border border-yellow-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-2\">\r\n                    <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-yellow-300 font-medium mb-2\">Progression Decision Guidelines</h4>\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-yellow-200 text-sm\">\r\n                            <div>\r\n                                <ul className=\"space-y-1\">\r\n                                    <li>• <strong>+1.5x:</strong> 5+ reps at 95% (excellent performance)</li>\r\n                                    <li>• <strong>Standard:</strong> 3-4 reps at 95% (good performance)</li>\r\n                                    <li>• <strong>+0.5x:</strong> 1-2 reps at 95% (minimum performance)</li>\r\n                                </ul>\r\n                            </div>\r\n                            <div>\r\n                                <ul className=\"space-y-1\">\r\n                                    <li>• <strong>Maintain:</strong> Technique focus cycle</li>\r\n                                    <li>• <strong>Reduce:</strong> Failed 95% or missed sessions</li>\r\n                                    <li>• <strong>Remember:</strong> Conservative progression builds long-term strength</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Next Cycle Preview */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                    <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                        <RotateCcw className=\"w-5 h-5 text-green-400 mr-2\" />\r\n                        Next Cycle Preview\r\n                    </h4>\r\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                        {(schedule?.liftOrder || []).map(lift => (\r\n                            <div key={lift} className=\"bg-gray-800 p-3 rounded text-center\">\r\n                                <div className=\"text-sm text-gray-400 mb-1\">{liftNames[lift]}</div>\r\n                                <div className=\"text-lg font-bold text-green-400\">\r\n                                    {newTrainingMaxes[lift]} lbs\r\n                                </div>\r\n                                <div className=\"text-xs text-gray-500\">\r\n                                    Week 1 top set: {Math.ceil((newTrainingMaxes[lift] * 0.85) / 5) * 5} lbs\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Completion Status */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-green-900/20 border border-green-500 p-4 rounded-lg\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n                        <span className=\"text-green-300 font-medium\">\r\n                            Training Max Progression Complete! Ready to begin your next 4-week cycle.\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"mt-2 text-sm text-green-200\">\r\n                        New training maxes set based on performance. Continue building strength systematically.\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSettings } from '../../../contexts/SettingsContext.jsx';\r\nimport { roundToIncrement } from '../../../lib/fiveThreeOne/math.js';\r\nimport { AlertTriangle, RotateCcw, TrendingDown, CheckCircle, Info, Target, RefreshCw } from 'lucide-react';\r\n\r\nexport default function Step10StallingReset({ data = {}, updateData }) {\r\n    const { roundingIncrement } = useSettings();\r\n    // State management with proper fallbacks\r\n    const [stallAnalysis, setStallAnalysis] = useState(data?.stallAnalysis || {});\r\n    const [resetDecisions, setResetDecisions] = useState(data?.resetDecisions || {});\r\n    const [resetTrainingMaxes, setResetTrainingMaxes] = useState(data?.resetTrainingMaxes || {});\r\n    const [stallHistory, setStallHistory] = useState(data?.stallHistory || {});\r\n\r\n    // Integration with previous steps - all with safe fallbacks\r\n    const currentTrainingMaxes = data?.trainingMaxes || {};\r\n    const week3Results = data?.week3Results || {};\r\n    const previousCycles = data?.previousCycles || [];\r\n    const schedule = data?.schedule || { frequency: '4day', liftOrder: ['overhead_press', 'deadlift', 'bench', 'squat'] };\r\n\r\n    // Reset percentages\r\n    const resetPercentages = {\r\n        first_reset: 90,    // 90% of current TM\r\n        second_reset: 85,   // 85% of current TM\r\n        third_reset: 80     // 80% of current TM (rare)\r\n    };\r\n\r\n    // Calculate proper rounding to nearest 5 lbs\r\n    const roundToNearest5 = (weight) => roundToIncrement(weight, roundingIncrement);\r\n\r\n    // Calculate reset training max\r\n    const calculateResetTM = (currentTM, resetType = 'first_reset') => {\r\n        if (!currentTM) return 0;\r\n        const percentage = resetPercentages[resetType];\r\n        return roundToNearest5(currentTM * (percentage / 100));\r\n    };\r\n\r\n    // Lift names mapping\r\n    const liftNames = {\r\n        squat: 'Squat',\r\n        bench: 'Bench Press',\r\n        deadlift: 'Deadlift',\r\n        overhead_press: 'Overhead Press'\r\n    };\r\n\r\n    // Analyze if lift is stalled based on Week 3 performance\r\n    const analyzeStall = (lift) => {\r\n        const week3Data = week3Results[lift];\r\n        const currentTM = currentTrainingMaxes[lift];\r\n\r\n        if (!week3Data || week3Data.amrapReps === undefined) {\r\n            return {\r\n                isStalled: false,\r\n                reason: 'No performance data available',\r\n                severity: 'none',\r\n                color: 'text-gray-400'\r\n            };\r\n        }\r\n\r\n        const reps = week3Data.amrapReps;\r\n\r\n        if (reps === 0) {\r\n            return {\r\n                isStalled: true,\r\n                reason: 'Failed to complete minimum rep at 95%',\r\n                severity: 'critical',\r\n                recommendation: 'Immediate reset required',\r\n                color: 'text-red-400'\r\n            };\r\n        } else if (reps === 1) {\r\n            // Check if this is a pattern\r\n            const stallCount = stallHistory[lift]?.consecutiveMinimums || 0;\r\n            if (stallCount >= 1) {\r\n                return {\r\n                    isStalled: true,\r\n                    reason: `Multiple cycles at minimum (${stallCount + 1} cycles)`,\r\n                    severity: 'moderate',\r\n                    recommendation: 'Consider reset to rebuild',\r\n                    color: 'text-yellow-400'\r\n                };\r\n            } else {\r\n                return {\r\n                    isStalled: false,\r\n                    reason: 'Single minimum performance - monitor next cycle',\r\n                    severity: 'warning',\r\n                    recommendation: 'Continue with conservative progression',\r\n                    color: 'text-yellow-400'\r\n                };\r\n            }\r\n        } else {\r\n            return {\r\n                isStalled: false,\r\n                reason: `Good performance (${reps} reps at 95%)`,\r\n                severity: 'none',\r\n                recommendation: 'Continue normal progression',\r\n                color: 'text-green-400'\r\n            };\r\n        }\r\n    };\r\n\r\n    // Handle reset decision\r\n    const handleResetDecision = (lift, resetType) => {\r\n        const currentTM = currentTrainingMaxes[lift] || 0;\r\n        const newTM = calculateResetTM(currentTM, resetType);\r\n\r\n        const newResetDecisions = { ...resetDecisions, [lift]: resetType };\r\n        const newResetTMs = { ...resetTrainingMaxes, [lift]: newTM };\r\n\r\n        setResetDecisions(newResetDecisions);\r\n        setResetTrainingMaxes(newResetTMs);\r\n        updateStepData({\r\n            resetDecisions: newResetDecisions,\r\n            resetTrainingMaxes: newResetTMs\r\n        });\r\n    };\r\n\r\n    // Handle manual reset TM\r\n    const handleManualResetTM = (lift, value) => {\r\n        const newTM = roundToNearest5(parseInt(value) || 0);\r\n        const newResetTMs = { ...resetTrainingMaxes, [lift]: newTM };\r\n        setResetTrainingMaxes(newResetTMs);\r\n        updateStepData({ resetTrainingMaxes: newResetTMs });\r\n    };\r\n\r\n    // Mark lift as not needing reset\r\n    const handleNoReset = (lift) => {\r\n        const newResetDecisions = { ...resetDecisions, [lift]: 'no_reset' };\r\n        setResetDecisions(newResetDecisions);\r\n        updateStepData({ resetDecisions: newResetDecisions });\r\n    };\r\n\r\n    const updateStepData = (updates) => {\r\n        if (updateData) {\r\n            updateData({\r\n                stallAnalysis: stallAnalysis || {},\r\n                resetDecisions: resetDecisions || {},\r\n                resetTrainingMaxes: resetTrainingMaxes || {},\r\n                stallHistory: stallHistory || {},\r\n                ...updates\r\n            });\r\n        }\r\n    };\r\n\r\n    // Check if step is complete (decisions made for all lifts)\r\n    const isStepComplete = () => {\r\n        const liftOrder = schedule?.liftOrder || [];\r\n        return liftOrder.length > 0 && liftOrder.every(lift =>\r\n            resetDecisions[lift] !== undefined\r\n        );\r\n    };\r\n\r\n    // Get number of lifts requiring reset\r\n    const getResetCount = () => {\r\n        return Object.values(resetDecisions).filter(decision =>\r\n            decision !== 'no_reset' && decision !== undefined\r\n        ).length;\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div>\r\n                <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                    Step 10: Stalling and Reset Rules\r\n                </h3>\r\n                <p className=\"text-gray-400\">\r\n                    Identify stalled lifts and implement strategic resets to break through plateaus and continue progress.\r\n                </p>\r\n            </div>\r\n\r\n            {/* Philosophy/Info Box */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-blue-300 font-medium mb-2\">Reset Philosophy</h4>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>• <strong>Strategic tool:</strong> Resets aren't failures - they're planned steps back to jump forward</li>\r\n                            <li>• <strong>Break plateaus:</strong> Lower training max allows volume and technique work</li>\r\n                            <li>• <strong>Rebuild momentum:</strong> Success breeds success - get back to hitting rep PRs</li>\r\n                            <li>• <strong>Individual approach:</strong> Each lift resets independently based on performance</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Reset Guidelines */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Target className=\"w-5 h-5 text-yellow-400 mr-2\" />\r\n                    When to Reset - Official Guidelines\r\n                </h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    <div className=\"bg-red-900/20 border border-red-600 p-4 rounded\">\r\n                        <h5 className=\"text-red-300 font-medium mb-2\">Immediate Reset</h5>\r\n                        <ul className=\"text-red-200 text-sm space-y-1\">\r\n                            <li>• Failed 95% (0 reps)</li>\r\n                            <li>• Missed multiple sessions</li>\r\n                            <li>• Form breakdown at 95%</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"bg-yellow-900/20 border border-yellow-600 p-4 rounded\">\r\n                        <h5 className=\"text-yellow-300 font-medium mb-2\">Consider Reset</h5>\r\n                        <ul className=\"text-yellow-200 text-sm space-y-1\">\r\n                            <li>• 2+ cycles at 1 rep minimum</li>\r\n                            <li>• Consistently grinding reps</li>\r\n                            <li>• Loss of bar speed</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"bg-green-900/20 border border-green-600 p-4 rounded\">\r\n                        <h5 className=\"text-green-300 font-medium mb-2\">Continue Progress</h5>\r\n                        <ul className=\"text-green-200 text-sm space-y-1\">\r\n                            <li>• 3+ reps at 95%</li>\r\n                            <li>• Good bar speed</li>\r\n                            <li>• Consistent performance</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Reset Percentage Options */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <RefreshCw className=\"w-5 h-5 text-blue-400 mr-2\" />\r\n                    Reset Percentage Options\r\n                </h4>\r\n                <div className=\"grid grid-cols-3 gap-4\">\r\n                    <div className=\"bg-gray-800 p-4 rounded text-center\">\r\n                        <div className=\"text-2xl font-bold text-blue-300\">90%</div>\r\n                        <div className=\"text-blue-200 text-sm\">First Reset</div>\r\n                        <div className=\"text-gray-400 text-xs mt-1\">Most common</div>\r\n                    </div>\r\n                    <div className=\"bg-gray-800 p-4 rounded text-center\">\r\n                        <div className=\"text-2xl font-bold text-yellow-300\">85%</div>\r\n                        <div className=\"text-yellow-200 text-sm\">Second Reset</div>\r\n                        <div className=\"text-gray-400 text-xs mt-1\">Multiple stalls</div>\r\n                    </div>\r\n                    <div className=\"bg-gray-800 p-4 rounded text-center\">\r\n                        <div className=\"text-2xl font-bold text-red-300\">80%</div>\r\n                        <div className=\"text-red-200 text-sm\">Third Reset</div>\r\n                        <div className=\"text-gray-400 text-xs mt-1\">Rare/injury</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Stall Analysis and Reset Decisions */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <TrendingDown className=\"w-5 h-5 text-red-400 mr-2\" />\r\n                    Lift Analysis and Reset Decisions\r\n                </h4>\r\n\r\n                <div className=\"space-y-4\">\r\n                    {(schedule?.liftOrder || []).map((lift) => {\r\n                        const currentTM = currentTrainingMaxes[lift] || 0;\r\n                        const analysis = analyzeStall(lift);\r\n                        const resetDecision = resetDecisions[lift];\r\n                        const resetTM = resetTrainingMaxes[lift] || calculateResetTM(currentTM, 'first_reset');\r\n\r\n                        return (\r\n                            <div key={lift} className={`border rounded-lg p-4 ${analysis.isStalled ? 'border-red-500 bg-red-900/10' : 'border-gray-600'\r\n                                }`}>\r\n                                <div className=\"flex items-center justify-between mb-4\">\r\n                                    <h5 className=\"text-lg font-medium text-white\">\r\n                                        {liftNames[lift]}\r\n                                    </h5>\r\n                                    <div className=\"text-sm text-gray-400\">\r\n                                        Current TM: {currentTM} lbs\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Performance Analysis */}\r\n                                <div className=\"mb-4 p-3 bg-gray-800 rounded\">\r\n                                    <div className=\"flex items-center justify-between\">\r\n                                        <div>\r\n                                            <span className=\"text-gray-300 text-sm\">Analysis: </span>\r\n                                            <span className={`text-sm ${analysis.color}`}>{analysis.reason}</span>\r\n                                        </div>\r\n                                        {analysis.isStalled && (\r\n                                            <AlertTriangle className=\"w-5 h-5 text-red-400\" />\r\n                                        )}\r\n                                    </div>\r\n                                    {analysis.recommendation && (\r\n                                        <div className=\"mt-2 text-xs text-gray-400\">\r\n                                            Recommendation: {analysis.recommendation}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* Reset Decision Buttons */}\r\n                                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2 mb-4\">\r\n                                    <button\r\n                                        onClick={() => handleResetDecision(lift, 'first_reset')}\r\n                                        className={`px-3 py-2 rounded text-white text-sm font-medium bg-blue-600 hover:bg-blue-700 ${resetDecision === 'first_reset' ? 'ring-2 ring-white' : ''\r\n                                            }`}\r\n                                    >\r\n                                        90% Reset\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={() => handleResetDecision(lift, 'second_reset')}\r\n                                        className={`px-3 py-2 rounded text-white text-sm font-medium bg-yellow-600 hover:bg-yellow-700 ${resetDecision === 'second_reset' ? 'ring-2 ring-white' : ''\r\n                                            }`}\r\n                                    >\r\n                                        85% Reset\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={() => handleResetDecision(lift, 'third_reset')}\r\n                                        className={`px-3 py-2 rounded text-white text-sm font-medium bg-red-600 hover:bg-red-700 ${resetDecision === 'third_reset' ? 'ring-2 ring-white' : ''\r\n                                            }`}\r\n                                    >\r\n                                        80% Reset\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={() => handleNoReset(lift)}\r\n                                        className={`px-3 py-2 rounded text-white text-sm font-medium bg-green-600 hover:bg-green-700 ${resetDecision === 'no_reset' ? 'ring-2 ring-white' : ''\r\n                                            }`}\r\n                                    >\r\n                                        No Reset\r\n                                    </button>\r\n                                </div>\r\n\r\n                                {/* Reset TM Input (if reset selected) */}\r\n                                {resetDecision && resetDecision !== 'no_reset' && (\r\n                                    <div className=\"grid grid-cols-2 gap-4 p-3 bg-blue-900/20 border border-blue-600 rounded\">\r\n                                        <div>\r\n                                            <label className=\"block text-sm font-medium text-blue-300 mb-2\">\r\n                                                New Training Max\r\n                                            </label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                min=\"0\"\r\n                                                step=\"5\"\r\n                                                className=\"w-full bg-gray-800 border border-gray-600 text-white px-3 py-2 rounded focus:border-red-500 focus:outline-none\"\r\n                                                value={resetTM || ''}\r\n                                                onChange={(e) => handleManualResetTM(lift, e.target.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"flex items-end\">\r\n                                            <div className=\"text-sm text-blue-200\">\r\n                                                <div>Original: {currentTM} lbs</div>\r\n                                                <div>Reduction: {currentTM ? Math.round(((currentTM - resetTM) / currentTM) * 100) : 0}%</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Reset Strategy Information */}\r\n            <div className=\"bg-yellow-900/20 border border-yellow-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-2\">\r\n                    <RotateCcw className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-yellow-300 font-medium mb-2\">Reset Strategy - What to Expect</h4>\r\n                        <ul className=\"text-yellow-200 text-sm space-y-1\">\r\n                            <li>• <strong>First 2-3 weeks:</strong> Weights will feel very easy - this is intentional</li>\r\n                            <li>• <strong>Volume opportunity:</strong> Use lighter loads to perfect technique and add assistance work</li>\r\n                            <li>• <strong>Rebuild confidence:</strong> Hit rep PRs again and regain momentum</li>\r\n                            <li>• <strong>Progressive return:</strong> You'll surpass your previous best within 2-3 cycles</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Reset Summary */}\r\n            {getResetCount() > 0 && (\r\n                <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                    <h4 className=\"text-lg font-medium text-white mb-4\">Reset Summary</h4>\r\n                    <div className=\"text-sm text-gray-300\">\r\n                        <span className=\"font-medium\">{getResetCount()}</span> lift(s) scheduled for reset.\r\n                        This will help break through plateaus and rebuild momentum.\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Completion Status */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-green-900/20 border border-green-500 p-4 rounded-lg\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n                        <span className=\"text-green-300 font-medium\">\r\n                            Stall Analysis Complete! Reset decisions made for all lifts.\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"mt-2 text-sm text-green-200\">\r\n                        {getResetCount() === 0\r\n                            ? \"No resets needed - continue with normal progression.\"\r\n                            : \"Strategic resets will help break plateaus and rebuild momentum.\"\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { Zap, Target, Info, CheckCircle, AlertTriangle, BarChart3 } from 'lucide-react';\r\n\r\nexport default function Step12BoringButBig({ data, updateData }) {\r\n    const [bbbConfig, setBbbConfig] = useState(data.bbbConfig || {});\r\n    const [selectedPairings, setSelectedPairings] = useState(data.bbbPairings || {});\r\n    const [intensityLevel, setIntensityLevel] = useState(data.bbbIntensity || 'beginner');\r\n    const [additionalAssistance, setAdditionalAssistance] = useState(data.bbbAdditionalAssistance || []);\r\n\r\n    // BBB percentage options based on experience level\r\n    const intensityOptions = {\r\n        beginner: { percentage: 50, label: 'Beginner (50% TM)', description: 'Start here - manageable volume' },\r\n        intermediate: { percentage: 60, label: 'Intermediate (60% TM)', description: 'Moderate challenge' },\r\n        advanced: { percentage: 70, label: 'Advanced (70% TM)', description: 'Very challenging - high volume' }\r\n    };\r\n\r\n    // Exercise pairing options are standard in BBB; selection handled via dropdowns and quick presets.\r\n\r\n    // Standard BBB pairings\r\n    const standardPairings = useMemo(() => ({\r\n        same: {\r\n            squat: 'squat',\r\n            bench: 'bench',\r\n            deadlift: 'deadlift',\r\n            overhead_press: 'overhead_press'\r\n        },\r\n        opposite: {\r\n            squat: 'deadlift',\r\n            bench: 'overhead_press',\r\n            deadlift: 'squat',\r\n            overhead_press: 'bench'\r\n        }\r\n    }), []);\r\n\r\n    // Additional assistance exercises for BBB\r\n    const assistanceOptions = [\r\n        { name: 'Abs/Core Work', sets: '2-3', reps: '25-50', category: 'core' },\r\n        { name: 'Upper Back', sets: '2-3', reps: '25-50', category: 'upper_back', examples: 'Face pulls, band pull-aparts' },\r\n        { name: 'Rear Delts', sets: '2-3', reps: '25-50', category: 'rear_delts', examples: 'Reverse flyes, face pulls' },\r\n        { name: 'Tricep Work', sets: '2-3', reps: '25-50', category: 'triceps', examples: 'Pushdowns, overhead extensions' },\r\n        { name: 'Bicep Work', sets: '2-3', reps: '25-50', category: 'biceps', examples: 'Curls, hammer curls' },\r\n        { name: 'Calves', sets: '2-3', reps: '25-50', category: 'calves', examples: 'Calf raises' }\r\n    ];\r\n\r\n    const liftNames = {\r\n        squat: 'Squat',\r\n        bench: 'Bench Press',\r\n        deadlift: 'Deadlift',\r\n        overhead_press: 'Overhead Press'\r\n    };\r\n\r\n    // Get training maxes from previous steps\r\n    const trainingMaxes = data.trainingMaxes || {};\r\n\r\n    const handlePairingChange = (mainLift, bbbLift) => {\r\n        const newPairings = {\r\n            ...selectedPairings,\r\n            [mainLift]: bbbLift\r\n        };\r\n        setSelectedPairings(newPairings);\r\n        updateStepData({ bbbPairings: newPairings });\r\n    };\r\n\r\n    const handleIntensityChange = (level) => {\r\n        setIntensityLevel(level);\r\n        updateStepData({ bbbIntensity: level });\r\n    };\r\n\r\n    const handleAssistanceToggle = (exercise) => {\r\n        const isSelected = additionalAssistance.some(ex => ex.name === exercise.name);\r\n        let newAssistance;\r\n\r\n        if (isSelected) {\r\n            newAssistance = additionalAssistance.filter(ex => ex.name !== exercise.name);\r\n        } else {\r\n            newAssistance = [...additionalAssistance, exercise];\r\n        }\r\n\r\n        setAdditionalAssistance(newAssistance);\r\n        updateStepData({ bbbAdditionalAssistance: newAssistance });\r\n    };\r\n\r\n    const calculateBBBWeight = (lift) => {\r\n        const tm = trainingMaxes[lift] || 0;\r\n        const percentage = intensityOptions[intensityLevel].percentage;\r\n        return Math.round((tm * percentage / 100) / 5) * 5;\r\n    };\r\n\r\n    const updateStepData = (updates) => {\r\n        setBbbConfig({\r\n            ...bbbConfig,\r\n            ...updates\r\n        });\r\n        updateData({\r\n            bbbConfig: {\r\n                ...bbbConfig,\r\n                ...updates\r\n            },\r\n            bbbPairings: selectedPairings,\r\n            bbbIntensity: intensityLevel,\r\n            bbbAdditionalAssistance: additionalAssistance,\r\n            ...updates\r\n        });\r\n    };\r\n\r\n    const isStepComplete = () => {\r\n        return Object.keys(selectedPairings).length === 4 && intensityLevel;\r\n    };\r\n\r\n    const getVolumePrediction = () => {\r\n        const percentage = intensityOptions[intensityLevel].percentage;\r\n        if (percentage >= 70) return { level: 'Very High', color: 'text-red-400', warning: true };\r\n        if (percentage >= 60) return { level: 'Moderate', color: 'text-yellow-400', warning: false };\r\n        return { level: 'Manageable', color: 'text-green-400', warning: false };\r\n    };\r\n\r\n    // Initialize with standard pairings if none selected\r\n    useEffect(() => {\r\n        // Initialize default pairings only once when empty\r\n        if (!selectedPairings || Object.keys(selectedPairings).length === 0) {\r\n            setSelectedPairings(standardPairings.same);\r\n        }\r\n        // We intentionally avoid calling updateStepData here to prevent redundant writes on mount\r\n    }, [selectedPairings, standardPairings]);\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div>\r\n                <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                    Step 12: \"Boring But Big\" (BBB) Template\r\n                </h3>\r\n                <p className=\"text-gray-400\">\r\n                    High-volume assistance template featuring 5×10 sets to build muscle and work capacity.\r\n                </p>\r\n            </div>\r\n\r\n            {/* BBB Philosophy */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-blue-300 font-medium mb-2\">Boring But Big Philosophy</h4>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>• <strong>High volume:</strong> 5 sets × 10 reps for significant muscle building</li>\r\n                            <li>• <strong>Submaximal loads:</strong> 50-70% intensity allows volume completion</li>\r\n                            <li>• <strong>Simple progression:</strong> Increase TM percentage over cycles</li>\r\n                            <li>• <strong>Minimal extras:</strong> BBB volume replaces most assistance work</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Intensity Selection */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <div className=\"flex items-center space-x-3 mb-4\">\r\n                    <BarChart3 className=\"w-6 h-6 text-red-400\" />\r\n                    <h4 className=\"text-lg font-medium text-white\">BBB Intensity Level</h4>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n                    {Object.entries(intensityOptions).map(([level, config]) => (\r\n                        <div\r\n                            key={level}\r\n                            onClick={() => handleIntensityChange(level)}\r\n                            className={`p-4 rounded border-2 cursor-pointer transition-colors ${intensityLevel === level\r\n                                ? 'border-red-500 bg-red-900/20'\r\n                                : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                }`}\r\n                        >\r\n                            <div className=\"text-center\">\r\n                                <h5 className={`font-medium ${intensityLevel === level ? 'text-red-300' : 'text-white'}`}>\r\n                                    {config.label}\r\n                                </h5>\r\n                                <p className=\"text-sm text-gray-400 mt-1\">\r\n                                    {config.description}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {/* Volume Prediction */}\r\n                <div className=\"bg-gray-800 p-3 rounded\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <span className=\"text-gray-300\">Expected Volume Level:</span>\r\n                        <span className={`font-medium ${getVolumePrediction().color}`}>\r\n                            {getVolumePrediction().level}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Exercise Pairings */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <div className=\"flex items-center space-x-3 mb-4\">\r\n                    <Target className=\"w-6 h-6 text-red-400\" />\r\n                    <h4 className=\"text-lg font-medium text-white\">BBB Exercise Pairings</h4>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                    {Object.entries(liftNames).map(([lift, name]) => (\r\n                        <div key={lift} className=\"bg-gray-800 p-4 rounded\">\r\n                            <div className=\"flex items-center justify-between mb-3\">\r\n                                <span className=\"text-white font-medium\">{name} Main Work</span>\r\n                                <span className=\"text-gray-400\">5/3/1 Sets</span>\r\n                            </div>\r\n\r\n                            <div className=\"flex items-center space-x-4 mb-3\">\r\n                                <span className=\"text-gray-300\">BBB Work:</span>\r\n                                <select\r\n                                    value={selectedPairings[lift] || lift}\r\n                                    onChange={(e) => handlePairingChange(lift, e.target.value)}\r\n                                    className=\"px-3 py-1 bg-gray-700 border border-gray-600 text-white rounded focus:border-red-500 focus:outline-none\"\r\n                                >\r\n                                    {Object.entries(liftNames).map(([value, label]) => (\r\n                                        <option key={value} value={value}>{label}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n\r\n                            {/* Weight calculation */}\r\n                            {trainingMaxes[selectedPairings[lift] || lift] && (\r\n                                <div className=\"text-sm text-gray-400\">\r\n                                    BBB Weight: <span className=\"text-red-400 font-medium\">\r\n                                        {calculateBBBWeight(selectedPairings[lift] || lift)} lbs\r\n                                    </span> (5 sets × 10 reps)\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {/* Quick Pairing Presets */}\r\n                <div className=\"mt-4 pt-4 border-t border-gray-600\">\r\n                    <span className=\"text-gray-300 text-sm mb-2 block\">Quick Presets:</span>\r\n                    <div className=\"flex flex-wrap gap-2\">\r\n                        <button\r\n                            onClick={() => {\r\n                                setSelectedPairings(standardPairings.same);\r\n                                updateStepData({ bbbPairings: standardPairings.same });\r\n                            }}\r\n                            className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700\"\r\n                        >\r\n                            All Same Lifts\r\n                        </button>\r\n                        <button\r\n                            onClick={() => {\r\n                                setSelectedPairings(standardPairings.opposite);\r\n                                updateStepData({ bbbPairings: standardPairings.opposite });\r\n                            }}\r\n                            className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700\"\r\n                        >\r\n                            All Opposite Lifts\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Additional Assistance */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4\">\r\n                    Additional Assistance (2-3 exercises max)\r\n                </h4>\r\n                <p className=\"text-gray-400 text-sm mb-4\">\r\n                    BBB provides significant volume. Add only 25-50 total reps of these movements.\r\n                </p>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\r\n                    {assistanceOptions.map((exercise) => {\r\n                        const isSelected = additionalAssistance.some(ex => ex.name === exercise.name);\r\n                        return (\r\n                            <div\r\n                                key={exercise.name}\r\n                                onClick={() => handleAssistanceToggle(exercise)}\r\n                                className={`p-3 rounded border cursor-pointer transition-colors ${isSelected\r\n                                    ? 'border-red-500 bg-red-900/20'\r\n                                    : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                    }`}\r\n                            >\r\n                                <div className=\"flex items-start justify-between\">\r\n                                    <div className=\"flex-1\">\r\n                                        <h5 className={`font-medium text-sm ${isSelected ? 'text-red-300' : 'text-white'}`}>\r\n                                            {exercise.name}\r\n                                        </h5>\r\n                                        <p className=\"text-xs text-gray-400 mt-1\">\r\n                                            {exercise.sets} sets × {exercise.reps} reps\r\n                                        </p>\r\n                                        {exercise.examples && (\r\n                                            <p className=\"text-xs text-gray-500 mt-1\">\r\n                                                {exercise.examples}\r\n                                            </p>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className={`w-4 h-4 rounded border ${isSelected\r\n                                        ? 'bg-red-500 border-red-500'\r\n                                        : 'border-gray-400'\r\n                                        }`}>\r\n                                        {isSelected && (\r\n                                            <CheckCircle className=\"w-full h-full text-white\" />\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Warnings */}\r\n            {getVolumePrediction().warning && (\r\n                <div className=\"bg-yellow-900/20 border border-yellow-600 p-4 rounded-lg\">\r\n                    <div className=\"flex items-start space-x-2\">\r\n                        <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                        <div className=\"text-yellow-200 text-sm\">\r\n                            <strong>High Volume Warning:</strong> 70% BBB is extremely challenging.\r\n                            Ensure excellent recovery (sleep, nutrition) and consider starting with lower intensity.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {additionalAssistance.length > 3 && (\r\n                <div className=\"bg-yellow-900/20 border border-yellow-600 p-4 rounded-lg\">\r\n                    <div className=\"flex items-start space-x-2\">\r\n                        <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                        <div className=\"text-yellow-200 text-sm\">\r\n                            <strong>Volume Warning:</strong> You've selected {additionalAssistance.length} additional exercises.\r\n                            BBB already provides high volume - consider limiting to 2-3 exercises maximum.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Completion Status */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-green-900/20 border border-green-500 p-4 rounded-lg\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n                        <span className=\"text-green-300 font-medium\">\r\n                            Step 12 Complete! BBB template configured with {intensityOptions[intensityLevel].percentage}% intensity\r\n                            and {additionalAssistance.length} additional exercises.\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Dumbbell, Target, Info, CheckCircle, AlertTriangle, Plus, Minus } from 'lucide-react';\r\n\r\nexport default function Step11AssistanceWork({ data = {}, updateData }) {\r\n    const [selectedAssistance, setSelectedAssistance] = useState(data.assistanceWork || {});\r\n    const [customExercises, setCustomExercises] = useState(data.customExercises || []);\r\n    const [showCustomForm, setShowCustomForm] = useState(false);\r\n    const [newExercise, setNewExercise] = useState({ name: '', targetLift: '', category: '' });\r\n\r\n    // Top assistance movements per main lift from the manual\r\n    const assistanceMovements = {\r\n        squat: [\r\n            { name: 'Good Mornings', description: 'Posterior chain strength', priority: 1 },\r\n            { name: 'Lunges', description: 'Unilateral leg strength', priority: 2 },\r\n            { name: 'Step-ups', description: 'Single-leg power', priority: 3 },\r\n            { name: 'Leg Press', description: 'High-volume quad work', priority: 4 },\r\n            { name: 'Leg Curls', description: 'Hamstring isolation', priority: 5 }\r\n        ],\r\n        bench: [\r\n            { name: 'Dips', description: 'Tricep and chest strength', priority: 1 },\r\n            { name: 'DB Bench Press', description: 'Stabilizer recruitment', priority: 2 },\r\n            { name: 'Push-ups', description: 'Bodyweight volume', priority: 3 },\r\n            { name: 'Close-Grip Bench', description: 'Tricep focus', priority: 4 },\r\n            { name: 'DB Rows', description: 'Upper back balance', priority: 5 }\r\n        ],\r\n        deadlift: [\r\n            { name: 'Good Mornings', description: 'Hip hinge pattern', priority: 1 },\r\n            { name: 'Glute-Ham Raises', description: 'Posterior chain', priority: 2 },\r\n            { name: 'Romanian Deadlifts', description: 'Hamstring strength', priority: 3 },\r\n            { name: 'Rack Pulls', description: 'Top-end strength', priority: 4 },\r\n            { name: 'Kroc Rows', description: 'Single-arm pulling', priority: 5 }\r\n        ],\r\n        overhead_press: [\r\n            { name: 'Dips', description: 'Tricep strength', priority: 1 },\r\n            { name: 'Push Press', description: 'Explosive overhead', priority: 2 },\r\n            { name: 'DB Shoulder Press', description: 'Stabilizer work', priority: 3 },\r\n            { name: 'Chin-ups', description: 'Lat strength', priority: 4 },\r\n            { name: 'Face Pulls', description: 'Rear delt health', priority: 5 }\r\n        ]\r\n    };\r\n\r\n    const liftNames = {\r\n        squat: 'Squat',\r\n        bench: 'Bench Press',\r\n        deadlift: 'Deadlift',\r\n        overhead_press: 'Overhead Press'\r\n    };\r\n\r\n    const updateStepData = (assistanceData, nextCustomExercises = customExercises) => {\r\n        setSelectedAssistance(assistanceData);\r\n        setCustomExercises(nextCustomExercises);\r\n        updateData?.({\r\n            assistanceWork: assistanceData,\r\n            customExercises: nextCustomExercises\r\n        });\r\n    };\r\n\r\n    const handleExerciseToggle = (lift, exercise) => {\r\n        const currentSelections = selectedAssistance[lift] || [];\r\n        const isSelected = currentSelections.some(ex => ex.name === exercise.name);\r\n\r\n        let newSelections;\r\n        if (isSelected) {\r\n            newSelections = currentSelections.filter(ex => ex.name !== exercise.name);\r\n        } else {\r\n            newSelections = [...currentSelections, exercise];\r\n        }\r\n\r\n        updateStepData({\r\n            ...selectedAssistance,\r\n            [lift]: newSelections\r\n        });\r\n    };\r\n\r\n    const addCustomExercise = () => {\r\n        if (newExercise.name && newExercise.targetLift) {\r\n            const exercise = {\r\n                ...newExercise,\r\n                priority: 6,\r\n                custom: true\r\n            };\r\n\r\n            const currentSelections = selectedAssistance[newExercise.targetLift] || [];\r\n            const nextAssist = {\r\n                ...selectedAssistance,\r\n                [newExercise.targetLift]: [...currentSelections, exercise]\r\n            };\r\n\r\n            const nextCustom = [...customExercises, exercise];\r\n            updateStepData(nextAssist, nextCustom);\r\n\r\n            setNewExercise({ name: '', targetLift: '', category: '' });\r\n            setShowCustomForm(false);\r\n        }\r\n    };\r\n\r\n    const isStepComplete = () => {\r\n        return Object.keys(selectedAssistance).length > 0 &&\r\n            Object.values(selectedAssistance).some(exercises => (exercises || []).length > 0);\r\n    };\r\n\r\n    const getTotalExercises = () => {\r\n        return Object.values(selectedAssistance).reduce((total, exercises) => total + ((exercises || []).length), 0);\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div>\r\n                <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                    Step 11: Assistance Work Philosophy and Guidelines\r\n                </h3>\r\n                <p className=\"text-gray-400\">\r\n                    Select assistance exercises to support your main lifts. Focus on compound movements that address weak points.\r\n                </p>\r\n            </div>\r\n\r\n            {/* Philosophy Box */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-blue-300 font-medium mb-2\">Assistance Work Principles</h4>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>• <strong>Main lifts first:</strong> Assistance never interferes with 5/3/1 performance</li>\r\n                            <li>• <strong>Training economy:</strong> Focus on compound, high-value movements</li>\r\n                            <li>• <strong>Address weaknesses:</strong> Choose exercises that target your limiting factors</li>\r\n                            <li>• <strong>Progressive overload:</strong> Track and progress assistance work systematically</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Kroc Rows Special Note */}\r\n            <div className=\"bg-purple-900/20 border border-purple-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Target className=\"w-5 h-5 text-purple-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-purple-300 font-medium mb-2\">Kroc Rows Specification</h4>\r\n                        <div className=\"text-purple-200 text-sm space-y-1\">\r\n                            <p><strong>Definition:</strong> High-rep single-arm dumbbell rows</p>\r\n                            <p><strong>Protocol:</strong> 1 hard set × 20-40 reps per arm</p>\r\n                            <p><strong>Weight:</strong> Heavy enough to challenge in target rep range</p>\r\n                            <p><strong>Rest:</strong> 2-3 minutes between arms</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Exercise Selection by Lift */}\r\n            <div className=\"space-y-6\">\r\n                {Object.entries(assistanceMovements).map(([lift, exercises]) => (\r\n                    <div key={lift} className=\"bg-gray-700 p-6 rounded-lg\">\r\n                        <div className=\"flex items-center space-x-3 mb-4\">\r\n                            <Dumbbell className=\"w-6 h-6 text-red-400\" />\r\n                            <h4 className=\"text-lg font-medium text-white\">\r\n                                {liftNames[lift]} Assistance\r\n                            </h4>\r\n                            <span className=\"text-sm text-gray-400\">\r\n                                ({(selectedAssistance[lift] || []).length} selected)\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\r\n                            {exercises.map((exercise) => {\r\n                                const isSelected = (selectedAssistance[lift] || []).some(ex => ex.name === exercise.name);\r\n                                return (\r\n                                    <div\r\n                                        key={exercise.name}\r\n                                        onClick={() => handleExerciseToggle(lift, exercise)}\r\n                                        className={`p-4 rounded border-2 cursor-pointer transition-colors ${isSelected\r\n                                                ? 'border-red-500 bg-red-900/20'\r\n                                                : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                            }`}\r\n                                    >\r\n                                        <div className=\"flex items-start justify-between\">\r\n                                            <div className=\"flex-1\">\r\n                                                <h5 className={`font-medium ${isSelected ? 'text-red-300' : 'text-white'}`}>\r\n                                                    {exercise.name}\r\n                                                </h5>\r\n                                                <p className=\"text-sm text-gray-400 mt-1\">\r\n                                                    {exercise.description}\r\n                                                </p>\r\n                                                <span className=\"text-xs text-gray-500 mt-2 block\">\r\n                                                    Priority #{exercise.priority}\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className={`w-5 h-5 rounded border-2 ${isSelected\r\n                                                    ? 'bg-red-500 border-red-500'\r\n                                                    : 'border-gray-400'\r\n                                                }`}>\r\n                                                {isSelected && (\r\n                                                    <CheckCircle className=\"w-full h-full text-white\" />\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n\r\n                        {/* Custom Exercise Button */}\r\n                        <button\r\n                            onClick={() => {\r\n                                setNewExercise({ ...newExercise, targetLift: lift });\r\n                                setShowCustomForm(true);\r\n                            }}\r\n                            className=\"mt-3 flex items-center space-x-2 text-blue-400 hover:text-blue-300 text-sm\"\r\n                        >\r\n                            <Plus className=\"w-4 h-4\" />\r\n                            <span>Add Custom Exercise</span>\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Custom Exercise Form */}\r\n            {showCustomForm && (\r\n                <div className=\"bg-gray-700 p-6 rounded-lg border border-blue-500\">\r\n                    <h4 className=\"text-lg font-medium text-white mb-4\">Add Custom Exercise</h4>\r\n                    <div className=\"space-y-4\">\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                                Exercise Name\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={newExercise.name}\r\n                                onChange={(e) => setNewExercise({ ...newExercise, name: e.target.value })}\r\n                                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 text-white rounded focus:border-red-500 focus:outline-none\"\r\n                                placeholder=\"e.g., Bulgarian Split Squats\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                                Target Main Lift\r\n                            </label>\r\n                            <select\r\n                                value={newExercise.targetLift}\r\n                                onChange={(e) => setNewExercise({ ...newExercise, targetLift: e.target.value })}\r\n                                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 text-white rounded focus:border-red-500 focus:outline-none\"\r\n                            >\r\n                                <option value=\"\">Select target lift</option>\r\n                                {Object.entries(liftNames).map(([key, name]) => (\r\n                                    <option key={key} value={key}>{name}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                                Category/Description\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={newExercise.category}\r\n                                onChange={(e) => setNewExercise({ ...newExercise, category: e.target.value })}\r\n                                className=\"w-full px-3 py-2 bg-gray-800 border border-gray-600 text-white rounded focus:border-red-500 focus:outline-none\"\r\n                                placeholder=\"e.g., Unilateral quad strength\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"flex space-x-3\">\r\n                            <button\r\n                                onClick={addCustomExercise}\r\n                                disabled={!newExercise.name || !newExercise.targetLift}\r\n                                className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 disabled:bg-gray-600 disabled:cursor-not-allowed\"\r\n                            >\r\n                                Add Exercise\r\n                            </button>\r\n                            <button\r\n                                onClick={() => {\r\n                                    setShowCustomForm(false);\r\n                                    setNewExercise({ name: '', targetLift: '', category: '' });\r\n                                }}\r\n                                className=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700\"\r\n                            >\r\n                                Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Selection Summary */}\r\n            {getTotalExercises() > 0 && (\r\n                <div className=\"bg-gray-700 p-4 rounded-lg\">\r\n                    <h4 className=\"text-white font-medium mb-3\">Selection Summary</h4>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        {Object.entries(selectedAssistance).map(([lift, exercises]) => (\r\n                            (exercises || []).length > 0 && (\r\n                                <div key={lift}>\r\n                                    <h5 className=\"text-red-400 font-medium mb-2\">{liftNames[lift]}</h5>\r\n                                    <ul className=\"text-sm text-gray-300 space-y-1\">\r\n                                        {(exercises || []).map((exercise, index) => (\r\n                                            <li key={index} className=\"flex justify-between\">\r\n                                                <span>{exercise.name}</span>\r\n                                                {exercise.custom && (\r\n                                                    <span className=\"text-blue-400 text-xs\">Custom</span>\r\n                                                )}\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                            )\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Warnings */}\r\n            {getTotalExercises() > 15 && (\r\n                <div className=\"bg-yellow-900/20 border border-yellow-600 p-4 rounded-lg\">\r\n                    <div className=\"flex items-start space-x-2\">\r\n                        <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                        <div className=\"text-yellow-200 text-sm\">\r\n                            <strong>High Exercise Volume Warning:</strong> You've selected {getTotalExercises()} assistance exercises.\r\n                            Consider focusing on 2-3 key exercises per main lift for better recovery and progression.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Completion Status */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-green-900/20 border border-green-500 p-4 rounded-lg\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n                        <span className=\"text-green-300 font-medium\">\r\n                            Step 11 Complete! Selected {getTotalExercises()} assistance exercises across your main lifts.\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Users, Target, Info, CheckCircle, AlertTriangle, Trophy, Edit3 } from 'lucide-react';\r\n\r\nexport default function Step13Triumvirate({ data, updateData }) {\r\n    const [triumvirateConfig, setTriumvirateConfig] = useState(data.triumvirateConfig || {});\r\n    const [customExercises, setCustomExercises] = useState(data.triumvirateCustom || {});\r\n    const [editingDay, setEditingDay] = useState(null);\r\n\r\n    // Exact manual specifications for each day\r\n    const standardTriumvirate = {\r\n        press: {\r\n            mainLift: 'overhead_press',\r\n            supplemental: { name: 'Dips', sets: 5, reps: '15 or to failure', category: 'tricep_chest' },\r\n            assistance: { name: 'Chin-ups', sets: 5, reps: 10, category: 'lat_strength' }\r\n        },\r\n        deadlift: {\r\n            mainLift: 'deadlift',\r\n            supplemental: { name: 'Good Mornings', sets: 5, reps: 10, category: 'posterior_chain' },\r\n            assistance: { name: 'Hanging Leg Raises', sets: 5, reps: 15, category: 'core' }\r\n        },\r\n        bench: {\r\n            mainLift: 'bench',\r\n            supplemental: { name: 'DB Rows', sets: 5, reps: 10, category: 'upper_back' },\r\n            assistance: { name: 'Dips', sets: 5, reps: 15, category: 'tricep_chest' }\r\n        },\r\n        squat: {\r\n            mainLift: 'squat',\r\n            supplemental: { name: 'Leg Curls', sets: 5, reps: 10, category: 'hamstring' },\r\n            assistance: { name: 'Leg Raises', sets: 5, reps: 15, category: 'core' }\r\n        }\r\n    };\r\n\r\n    // Alternative exercise options for customization\r\n    const exerciseAlternatives = {\r\n        tricep_chest: [\r\n            { name: 'Dips', reps: '15 or failure' },\r\n            { name: 'Close-Grip Bench', reps: '8-12' },\r\n            { name: 'Push-ups', reps: '15-25' },\r\n            { name: 'Tricep Extensions', reps: '10-15' }\r\n        ],\r\n        lat_strength: [\r\n            { name: 'Chin-ups', reps: '8-12' },\r\n            { name: 'Pull-ups', reps: '8-12' },\r\n            { name: 'Lat Pulldowns', reps: '10-15' },\r\n            { name: 'Assisted Chin-ups', reps: '8-12' }\r\n        ],\r\n        posterior_chain: [\r\n            { name: 'Good Mornings', reps: '8-12' },\r\n            { name: 'Romanian Deadlifts', reps: '8-12' },\r\n            { name: 'Back Extensions', reps: '12-20' },\r\n            { name: 'Glute-Ham Raises', reps: '8-15' }\r\n        ],\r\n        upper_back: [\r\n            { name: 'DB Rows', reps: '8-12' },\r\n            { name: 'Barbell Rows', reps: '8-12' },\r\n            { name: 'Cable Rows', reps: '10-15' },\r\n            { name: 'T-Bar Rows', reps: '8-12' }\r\n        ],\r\n        hamstring: [\r\n            { name: 'Leg Curls', reps: '10-15' },\r\n            { name: 'Romanian Deadlifts', reps: '8-12' },\r\n            { name: 'Glute-Ham Raises', reps: '8-15' },\r\n            { name: 'Stiff-Leg Deadlifts', reps: '10-15' }\r\n        ],\r\n        core: [\r\n            { name: 'Hanging Leg Raises', reps: '10-20' },\r\n            { name: 'Leg Raises', reps: '15-25' },\r\n            { name: 'Planks', reps: '30-60 sec' },\r\n            { name: 'Ab Wheel', reps: '8-15' }\r\n        ]\r\n    };\r\n\r\n    const liftNames = {\r\n        overhead_press: 'Overhead Press',\r\n        deadlift: 'Deadlift',\r\n        bench: 'Bench Press',\r\n        squat: 'Squat'\r\n    };\r\n\r\n    const dayNames = {\r\n        press: 'Press Day',\r\n        deadlift: 'Deadlift Day',\r\n        bench: 'Bench Day',\r\n        squat: 'Squat Day'\r\n    };\r\n\r\n    // Initialize with standard template\r\n    useEffect(() => {\r\n        if (Object.keys(triumvirateConfig).length === 0) {\r\n            setTriumvirateConfig(standardTriumvirate);\r\n            updateStepData({ triumvirateConfig: standardTriumvirate });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const handleExerciseChange = (day, exerciseType, exercise) => {\r\n        const newConfig = {\r\n            ...triumvirateConfig,\r\n            [day]: {\r\n                ...triumvirateConfig[day],\r\n                [exerciseType]: {\r\n                    ...exercise,\r\n                    sets: exerciseType === 'supplemental' ? 5 : 5,\r\n                    category: exercise.category || triumvirateConfig[day][exerciseType].category\r\n                }\r\n            }\r\n        };\r\n\r\n        setTriumvirateConfig(newConfig);\r\n        updateStepData({ triumvirateConfig: newConfig });\r\n    };\r\n\r\n    const resetToStandard = () => {\r\n        setTriumvirateConfig(standardTriumvirate);\r\n        setCustomExercises({});\r\n        updateStepData({\r\n            triumvirateConfig: standardTriumvirate,\r\n            triumvirateCustom: {}\r\n        });\r\n    };\r\n\r\n    const updateStepData = (updates) => {\r\n        updateData({\r\n            triumvirateConfig,\r\n            triumvirateCustom: customExercises,\r\n            ...updates\r\n        });\r\n    };\r\n\r\n    const isStepComplete = () => {\r\n        return Object.keys(triumvirateConfig).length === 4 &&\r\n            Object.values(triumvirateConfig).every(day =>\r\n                day.supplemental && day.assistance\r\n            );\r\n    };\r\n\r\n    const getProgressionTip = (exerciseName) => {\r\n        if (exerciseName.toLowerCase().includes('dip')) {\r\n            return \"Add weight when all sets completed with bodyweight\";\r\n        } else if (exerciseName.toLowerCase().includes('chin') || exerciseName.toLowerCase().includes('pull')) {\r\n            return \"Add weight or reps when all sets completed\";\r\n        } else {\r\n            return \"Add weight when all sets/reps completed\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div>\r\n                <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                    Step 13: \"Triumvirate\" Template\r\n                </h3>\r\n                <p className=\"text-gray-400\">\r\n                    Simple 3-exercise template: one main lift, one supplemental exercise, one assistance exercise per day.\r\n                </p>\r\n            </div>\r\n\r\n            {/* Triumvirate Philosophy */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-blue-300 font-medium mb-2\">Triumvirate Philosophy</h4>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>• <strong>Rule of Three:</strong> Exactly 3 exercises per session - no more, no less</li>\r\n                            <li>• <strong>Simple progression:</strong> Add weight when all sets completed successfully</li>\r\n                            <li>• <strong>Quality focus:</strong> Perfect form over heavy weight on assistance</li>\r\n                            <li>• <strong>Time efficient:</strong> Complete workouts in 45-60 minutes</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Standard Template Overview */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                        <Users className=\"w-6 h-6 text-red-400\" />\r\n                        <h4 className=\"text-lg font-medium text-white\">Standard Triumvirate Template</h4>\r\n                    </div>\r\n                    <button\r\n                        onClick={resetToStandard}\r\n                        className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700\"\r\n                    >\r\n                        Reset to Standard\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    {Object.entries(triumvirateConfig).map(([day, config]) => (\r\n                        <div key={day} className=\"bg-gray-800 p-4 rounded border border-gray-600\">\r\n                            <div className=\"flex items-center justify-between mb-3\">\r\n                                <h5 className=\"text-white font-medium\">{dayNames[day]}</h5>\r\n                                <button\r\n                                    onClick={() => setEditingDay(editingDay === day ? null : day)}\r\n                                    className=\"text-blue-400 hover:text-blue-300\"\r\n                                >\r\n                                    <Edit3 className=\"w-4 h-4\" />\r\n                                </button>\r\n                            </div>\r\n\r\n                            <div className=\"space-y-3\">\r\n                                {/* Main Lift */}\r\n                                <div className=\"pb-2 border-b border-gray-700\">\r\n                                    <div className=\"flex justify-between\">\r\n                                        <span className=\"text-red-400 font-medium\">Main Lift:</span>\r\n                                        <span className=\"text-white\">{liftNames[config.mainLift]}</span>\r\n                                    </div>\r\n                                    <span className=\"text-xs text-gray-400\">5/3/1 Protocol</span>\r\n                                </div>\r\n\r\n                                {/* Supplemental Exercise */}\r\n                                <div>\r\n                                    <div className=\"flex justify-between items-start mb-1\">\r\n                                        <span className=\"text-yellow-400 font-medium\">Supplemental:</span>\r\n                                        {editingDay === day ? (\r\n                                            <select\r\n                                                value={config.supplemental.name}\r\n                                                onChange={(e) => {\r\n                                                    const selectedEx = exerciseAlternatives[config.supplemental.category]\r\n                                                        .find(ex => ex.name === e.target.value);\r\n                                                    handleExerciseChange(day, 'supplemental', selectedEx);\r\n                                                }}\r\n                                                className=\"text-sm px-2 py-1 bg-gray-700 border border-gray-600 text-white rounded focus:border-red-500\"\r\n                                            >\r\n                                                {exerciseAlternatives[config.supplemental.category]?.map(ex => (\r\n                                                    <option key={ex.name} value={ex.name}>{ex.name}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        ) : (\r\n                                            <span className=\"text-white\">{config.supplemental.name}</span>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"text-xs text-gray-400\">\r\n                                        {config.supplemental.sets} sets × {config.supplemental.reps}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Assistance Exercise */}\r\n                                <div>\r\n                                    <div className=\"flex justify-between items-start mb-1\">\r\n                                        <span className=\"text-green-400 font-medium\">Assistance:</span>\r\n                                        {editingDay === day ? (\r\n                                            <select\r\n                                                value={config.assistance.name}\r\n                                                onChange={(e) => {\r\n                                                    const selectedEx = exerciseAlternatives[config.assistance.category]\r\n                                                        .find(ex => ex.name === e.target.value);\r\n                                                    handleExerciseChange(day, 'assistance', selectedEx);\r\n                                                }}\r\n                                                className=\"text-sm px-2 py-1 bg-gray-700 border border-gray-600 text-white rounded focus:border-red-500\"\r\n                                            >\r\n                                                {exerciseAlternatives[config.assistance.category]?.map(ex => (\r\n                                                    <option key={ex.name} value={ex.name}>{ex.name}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        ) : (\r\n                                            <span className=\"text-white\">{config.assistance.name}</span>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"text-xs text-gray-400\">\r\n                                        {config.assistance.sets} sets × {config.assistance.reps}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Progression Tip */}\r\n                            {editingDay !== day && (\r\n                                <div className=\"mt-3 pt-3 border-t border-gray-700\">\r\n                                    <div className=\"text-xs text-blue-300\">\r\n                                        <Trophy className=\"w-3 h-3 inline mr-1\" />\r\n                                        {getProgressionTip(config.supplemental.name)}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Progression Rules */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <div className=\"flex items-center space-x-3 mb-4\">\r\n                    <Target className=\"w-6 h-6 text-red-400\" />\r\n                    <h4 className=\"text-lg font-medium text-white\">Progression Rules</h4>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"bg-gray-800 p-4 rounded\">\r\n                        <h5 className=\"text-yellow-400 font-medium mb-2\">Supplemental Exercises</h5>\r\n                        <ul className=\"text-gray-300 text-sm space-y-1\">\r\n                            <li>• Complete all prescribed sets and reps</li>\r\n                            <li>• Add weight when successful</li>\r\n                            <li>• Focus on strict form</li>\r\n                            <li>• Rest 2-3 minutes between sets</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"bg-gray-800 p-4 rounded\">\r\n                        <h5 className=\"text-green-400 font-medium mb-2\">Assistance Exercises</h5>\r\n                        <ul className=\"text-gray-300 text-sm space-y-1\">\r\n                            <li>• Bodyweight exercises: add reps or weight</li>\r\n                            <li>• Weighted exercises: add weight gradually</li>\r\n                            <li>• Don't train to failure</li>\r\n                            <li>• Rest 1-2 minutes between sets</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Exercise Categories Info */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4\">Exercise Categories & Alternatives</h4>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    {Object.entries(exerciseAlternatives).map(([category, exercises]) => (\r\n                        <div key={category} className=\"bg-gray-800 p-3 rounded\">\r\n                            <h5 className=\"text-red-400 font-medium mb-2 capitalize\">\r\n                                {category.replace('_', ' ')}\r\n                            </h5>\r\n                            <ul className=\"text-gray-300 text-sm space-y-1\">\r\n                                {exercises.map((exercise, index) => (\r\n                                    <li key={index}>\r\n                                        <span className=\"font-medium\">{exercise.name}</span>\r\n                                        <span className=\"text-gray-400 ml-2\">({exercise.reps})</span>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Template Benefits */}\r\n            <div className=\"bg-green-900/20 border border-green-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Trophy className=\"w-5 h-5 text-green-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-green-300 font-medium mb-2\">Why Triumvirate Works</h4>\r\n                        <ul className=\"text-green-200 text-sm space-y-1\">\r\n                            <li>• <strong>Simplicity:</strong> Easy to follow and track progress</li>\r\n                            <li>• <strong>Balance:</strong> Covers all movement patterns efficiently</li>\r\n                            <li>• <strong>Sustainability:</strong> Low volume prevents burnout</li>\r\n                            <li>• <strong>Proven:</strong> Jim Wendler's personal favorite for consistency</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Warnings */}\r\n            {editingDay && (\r\n                <div className=\"bg-yellow-900/20 border border-yellow-600 p-4 rounded-lg\">\r\n                    <div className=\"flex items-start space-x-2\">\r\n                        <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                        <div className=\"text-yellow-200 text-sm\">\r\n                            <strong>Customization Note:</strong> The standard Triumvirate is carefully balanced.\r\n                            Only modify exercises if you have specific equipment limitations or injuries.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Completion Status */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-green-900/20 border border-green-500 p-4 rounded-lg\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n                        <span className=\"text-green-300 font-medium\">\r\n                            Step 13 Complete! Triumvirate template configured with 3 exercises per day.\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { BookOpen, TrendingUp, Info, CheckCircle, AlertTriangle, Zap, Users } from 'lucide-react';\r\n\r\nexport default function Step14PeriodizationBible({ data, updateData }) {\r\n    const [bibleConfig, setBibleConfig] = useState(data.bibleConfig || {});\r\n    const [selectedExercises, setSelectedExercises] = useState(data.bibleExercises || {});\r\n    const [volumeLevel, setVolumeLevel] = useState(data.bibleVolumeLevel || 'moderate');\r\n    const [experienceLevel, setExperienceLevel] = useState(data.bibleExperience || 'intermediate');\r\n\r\n    // Volume level options\r\n    const volumeOptions = {\r\n        moderate: {\r\n            label: 'Moderate Volume',\r\n            description: 'Good starting point for most lifters',\r\n            exerciseCount: '5-6 exercises per session',\r\n            totalSets: '15-20 sets',\r\n            timeEstimate: '60-75 minutes'\r\n        },\r\n        high: {\r\n            label: 'High Volume',\r\n            description: 'For experienced lifters with good recovery',\r\n            exerciseCount: '6-7 exercises per session',\r\n            totalSets: '20-25 sets',\r\n            timeEstimate: '75-90 minutes'\r\n        },\r\n        extreme: {\r\n            label: 'Extreme Volume',\r\n            description: 'Maximum work capacity development',\r\n            exerciseCount: '7-8 exercises per session',\r\n            totalSets: '25-30 sets',\r\n            timeEstimate: '90+ minutes'\r\n        }\r\n    };\r\n\r\n    // Exercise categories by movement pattern\r\n    const exerciseDatabase = {\r\n        push_vertical: {\r\n            name: 'Vertical Push',\r\n            exercises: [\r\n                { name: 'DB Shoulder Press', sets: '5×10-15', intensity: 'moderate' },\r\n                { name: 'Push Press', sets: '3×8-12', intensity: 'high' },\r\n                { name: 'Pike Push-ups', sets: '3×8-15', intensity: 'bodyweight' },\r\n                { name: 'Landmine Press', sets: '4×10-12', intensity: 'moderate' }\r\n            ]\r\n        },\r\n        push_horizontal: {\r\n            name: 'Horizontal Push',\r\n            exercises: [\r\n                { name: 'DB Bench Press', sets: '5×10-15', intensity: 'moderate' },\r\n                { name: 'Incline DB Press', sets: '4×10-12', intensity: 'moderate' },\r\n                { name: 'Push-ups', sets: '3×15-25', intensity: 'bodyweight' },\r\n                { name: 'Dips', sets: '3×10-20', intensity: 'bodyweight' }\r\n            ]\r\n        },\r\n        pull_vertical: {\r\n            name: 'Vertical Pull',\r\n            exercises: [\r\n                { name: 'Chin-ups', sets: '5×8-12', intensity: 'bodyweight' },\r\n                { name: 'Lat Pulldowns', sets: '4×10-15', intensity: 'moderate' },\r\n                { name: 'Pull-ups', sets: '4×6-10', intensity: 'bodyweight' },\r\n                { name: 'Cable Pulldowns', sets: '3×12-15', intensity: 'light' }\r\n            ]\r\n        },\r\n        pull_horizontal: {\r\n            name: 'Horizontal Pull',\r\n            exercises: [\r\n                { name: 'DB Rows', sets: '5×10-15', intensity: 'moderate' },\r\n                { name: 'Barbell Rows', sets: '4×8-12', intensity: 'moderate' },\r\n                { name: 'Cable Rows', sets: '4×12-15', intensity: 'moderate' },\r\n                { name: 'Kroc Rows', sets: '2×20-40', intensity: 'high' }\r\n            ]\r\n        },\r\n        squat_pattern: {\r\n            name: 'Squat Pattern',\r\n            exercises: [\r\n                { name: 'Goblet Squats', sets: '3×15-20', intensity: 'light' },\r\n                { name: 'Bulgarian Split Squats', sets: '3×10-15', intensity: 'moderate' },\r\n                { name: 'Leg Press', sets: '4×15-20', intensity: 'moderate' },\r\n                { name: 'Lunges', sets: '3×12-16', intensity: 'moderate' }\r\n            ]\r\n        },\r\n        hinge_pattern: {\r\n            name: 'Hip Hinge Pattern',\r\n            exercises: [\r\n                { name: 'Romanian Deadlifts', sets: '4×10-12', intensity: 'moderate' },\r\n                { name: 'Good Mornings', sets: '3×10-15', intensity: 'moderate' },\r\n                { name: 'Glute-Ham Raises', sets: '3×8-15', intensity: 'bodyweight' },\r\n                { name: 'Back Extensions', sets: '3×15-20', intensity: 'light' }\r\n            ]\r\n        },\r\n        core: {\r\n            name: 'Core/Abs',\r\n            exercises: [\r\n                { name: 'Hanging Leg Raises', sets: '3×10-20', intensity: 'bodyweight' },\r\n                { name: 'Planks', sets: '3×30-60s', intensity: 'bodyweight' },\r\n                { name: 'Ab Wheel', sets: '3×8-15', intensity: 'bodyweight' },\r\n                { name: 'Russian Twists', sets: '3×20-30', intensity: 'light' }\r\n            ]\r\n        },\r\n        isolation: {\r\n            name: 'Isolation Work',\r\n            exercises: [\r\n                { name: 'Bicep Curls', sets: '2×15-20', intensity: 'light' },\r\n                { name: 'Tricep Extensions', sets: '2×15-20', intensity: 'light' },\r\n                { name: 'Lateral Raises', sets: '2×15-20', intensity: 'light' },\r\n                { name: 'Face Pulls', sets: '2×15-20', intensity: 'light' }\r\n            ]\r\n        }\r\n    };\r\n\r\n    // Daily structure based on main lift\r\n    const dailyStructure = {\r\n        press: ['push_vertical', 'pull_horizontal', 'core', 'isolation'],\r\n        deadlift: ['hinge_pattern', 'pull_vertical', 'squat_pattern', 'core'],\r\n        bench: ['push_horizontal', 'pull_horizontal', 'core', 'isolation'],\r\n        squat: ['squat_pattern', 'hinge_pattern', 'pull_vertical', 'core']\r\n    };\r\n\r\n    const liftNames = {\r\n        press: 'Press Day',\r\n        deadlift: 'Deadlift Day',\r\n        bench: 'Bench Day',\r\n        squat: 'Squat Day'\r\n    };\r\n\r\n    const handleExerciseSelection = (day, category, exercise) => {\r\n        const daySelections = selectedExercises[day] || {};\r\n        const categorySelections = daySelections[category] || [];\r\n\r\n        const isSelected = categorySelections.some(ex => ex.name === exercise.name);\r\n        let newSelections;\r\n\r\n        if (isSelected) {\r\n            newSelections = categorySelections.filter(ex => ex.name !== exercise.name);\r\n        } else {\r\n            // Limit selections based on volume level\r\n            const maxSelections = getMaxSelectionsPerCategory();\r\n            if (categorySelections.length < maxSelections) {\r\n                newSelections = [...categorySelections, exercise];\r\n            } else {\r\n                return; // Don't add if at limit\r\n            }\r\n        }\r\n\r\n        updateStepData({\r\n            bibleExercises: {\r\n                ...selectedExercises,\r\n                [day]: {\r\n                    ...daySelections,\r\n                    [category]: newSelections\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const getMaxSelectionsPerCategory = () => {\r\n        switch (volumeLevel) {\r\n            case 'moderate': return 2;\r\n            case 'high': return 3;\r\n            case 'extreme': return 4;\r\n            default: return 2;\r\n        }\r\n    };\r\n\r\n    const getVolumeMultiplier = () => {\r\n        switch (volumeLevel) {\r\n            case 'moderate': return 1.0;\r\n            case 'high': return 1.3;\r\n            case 'extreme': return 1.6;\r\n            default: return 1.0;\r\n        }\r\n    };\r\n\r\n    const updateStepData = (updates) => {\r\n        if (updates.bibleExercises) {\r\n            setSelectedExercises(updates.bibleExercises);\r\n        }\r\n        updateData({\r\n            bibleConfig,\r\n            bibleExercises: updates.bibleExercises ?? selectedExercises,\r\n            bibleVolumeLevel: volumeLevel,\r\n            bibleExperience: experienceLevel,\r\n            ...updates\r\n        });\r\n    };\r\n\r\n    const getTotalExercisesPerDay = (day) => {\r\n        const daySelections = selectedExercises[day] || {};\r\n        return Object.values(daySelections).reduce((total, exercises) => total + exercises.length, 0);\r\n    };\r\n\r\n    const getTotalSetsPerDay = (day) => {\r\n        const daySelections = selectedExercises[day] || {};\r\n        let totalSets = 5; // Main 5/3/1 work\r\n\r\n        Object.values(daySelections).forEach(exercises => {\r\n            exercises.forEach(exercise => {\r\n                const setsStr = (exercise.sets || '').split('×')[0] || '0';\r\n                const sets = parseInt(setsStr, 10) || 0;\r\n                totalSets += sets * getVolumeMultiplier();\r\n            });\r\n        });\r\n\r\n        return Math.round(totalSets);\r\n    };\r\n\r\n    const isStepComplete = () => {\r\n        const days = Object.keys(liftNames);\r\n        // Require at least 4 exercises selected on each day for completion\r\n        return days.every(day => getTotalExercisesPerDay(day) >= 4);\r\n    };\r\n\r\n    const getRecoveryWarning = () => {\r\n        const avgSetsPerDay = Object.keys(liftNames).reduce((total, day) =>\r\n            total + getTotalSetsPerDay(day), 0\r\n        ) / 4;\r\n\r\n        if (avgSetsPerDay > 25) return { level: 'extreme', message: 'Requires exceptional recovery capacity' };\r\n        if (avgSetsPerDay > 20) return { level: 'high', message: 'Requires good recovery protocols' };\r\n        return { level: 'moderate', message: 'Manageable for most lifters' };\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div>\r\n                <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                    Step 14: \"Periodization Bible\" Template\r\n                </h3>\r\n                <p className=\"text-gray-400\">\r\n                    High-volume template for advanced lifters focused on maximum work capacity development.\r\n                </p>\r\n            </div>\r\n\r\n            {/* Philosophy */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-blue-300 font-medium mb-2\">Periodization Bible Philosophy</h4>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>• <strong>High volume approach:</strong> 5-8 exercises per session for maximum adaptation</li>\r\n                            <li>• <strong>Movement patterns:</strong> Cover all fundamental human movements systematically</li>\r\n                            <li>• <strong>Work capacity:</strong> Build ability to handle increasingly larger training loads</li>\r\n                            <li>• <strong>Advanced recovery:</strong> Requires excellent nutrition, sleep, and stress management</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Volume Level Selection */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <div className=\"flex items-center space-x-3 mb-4\">\r\n                    <TrendingUp className=\"w-6 h-6 text-red-400\" />\r\n                    <h4 className=\"text-lg font-medium text-white\">Volume Level</h4>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n                    {Object.entries(volumeOptions).map(([level, config]) => (\r\n                        <div\r\n                            key={level}\r\n                            onClick={() => setVolumeLevel(level)}\r\n                            className={`p-4 rounded border-2 cursor-pointer transition-colors ${volumeLevel === level\r\n                                    ? 'border-red-500 bg-red-900/20'\r\n                                    : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                }`}\r\n                        >\r\n                            <h5 className={`font-medium mb-2 ${volumeLevel === level ? 'text-red-300' : 'text-white'}`}>\r\n                                {config.label}\r\n                            </h5>\r\n                            <div className=\"text-sm text-gray-400 space-y-1\">\r\n                                <p>{config.description}</p>\r\n                                <p>{config.exerciseCount}</p>\r\n                                <p>{config.totalSets}</p>\r\n                                <p className=\"text-blue-400\">{config.timeEstimate}</p>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {/* Recovery Warning */}\r\n                <div className={`p-3 rounded border ${getRecoveryWarning().level === 'extreme' ? 'border-red-500 bg-red-900/20' :\r\n                        getRecoveryWarning().level === 'high' ? 'border-yellow-500 bg-yellow-900/20' :\r\n                            'border-green-500 bg-green-900/20'\r\n                    }`}>\r\n                    <div className=\"text-sm\">\r\n                        <span className=\"font-medium\">Recovery Requirement: </span>\r\n                        <span className={\r\n                            getRecoveryWarning().level === 'extreme' ? 'text-red-300' :\r\n                                getRecoveryWarning().level === 'high' ? 'text-yellow-300' :\r\n                                    'text-green-300'\r\n                        }>\r\n                            {getRecoveryWarning().message}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Daily Exercise Selection */}\r\n            <div className=\"space-y-6\">\r\n                {Object.entries(liftNames).map(([day, dayName]) => (\r\n                    <div key={day} className=\"bg-gray-700 p-6 rounded-lg\">\r\n                        <div className=\"flex items-center justify-between mb-4\">\r\n                            <div className=\"flex items-center space-x-3\">\r\n                                <BookOpen className=\"w-6 h-6 text-red-400\" />\r\n                                <h4 className=\"text-lg font-medium text-white\">{dayName}</h4>\r\n                            </div>\r\n                            <div className=\"text-sm text-gray-400\">\r\n                                {getTotalExercisesPerDay(day)} exercises • {getTotalSetsPerDay(day)} total sets\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"space-y-4\">\r\n                            {/* Main Lift */}\r\n                            <div className=\"bg-gray-800 p-3 rounded border-l-4 border-red-500\">\r\n                                <div className=\"flex justify-between items-center\">\r\n                                    <span className=\"text-red-400 font-medium\">Main Lift: 5/3/1 Protocol</span>\r\n                                    <span className=\"text-gray-400 text-sm\">3 working sets + warm-up</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Movement Categories */}\r\n                            {dailyStructure[day].map(category => (\r\n                                <div key={category} className=\"bg-gray-800 p-4 rounded\">\r\n                                    <h5 className=\"text-white font-medium mb-3\">\r\n                                        {exerciseDatabase[category].name}\r\n                                        <span className=\"text-sm text-gray-400 ml-2\">\r\n                                            (Select up to {getMaxSelectionsPerCategory()})\r\n                                        </span>\r\n                                    </h5>\r\n\r\n                                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                                        {exerciseDatabase[category].exercises.map(exercise => {\r\n                                            const isSelected = selectedExercises[day]?.[category]?.some(ex => ex.name === exercise.name);\r\n                                            const categoryCount = selectedExercises[day]?.[category]?.length || 0;\r\n                                            const canSelect = categoryCount < getMaxSelectionsPerCategory();\r\n\r\n                                            return (\r\n                                                <div\r\n                                                    key={exercise.name}\r\n                                                    onClick={() => (isSelected || canSelect) && handleExerciseSelection(day, category, exercise)}\r\n                                                    className={`p-3 rounded border cursor-pointer transition-colors text-sm ${isSelected\r\n                                                            ? 'border-red-500 bg-red-900/20 text-red-300'\r\n                                                            : canSelect\r\n                                                                ? 'border-gray-600 bg-gray-700 hover:border-gray-500 text-white'\r\n                                                                : 'border-gray-600 bg-gray-700 opacity-50 cursor-not-allowed text-gray-500'\r\n                                                        }`}\r\n                                                >\r\n                                                    <div className=\"flex justify-between items-start\">\r\n                                                        <div>\r\n                                                            <div className=\"font-medium\">{exercise.name}</div>\r\n                                                            <div className=\"text-xs text-gray-400\">{exercise.sets}</div>\r\n                                                        </div>\r\n                                                        <span className={`text-xs px-2 py-1 rounded ${exercise.intensity === 'high' ? 'bg-red-600 text-white' :\r\n                                                                exercise.intensity === 'moderate' ? 'bg-yellow-600 text-white' :\r\n                                                                    exercise.intensity === 'light' ? 'bg-green-600 text-white' :\r\n                                                                        'bg-blue-600 text-white'\r\n                                                            }`}>\r\n                                                            {exercise.intensity}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            );\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Volume Summary */}\r\n            {Object.keys(selectedExercises).length > 0 && (\r\n                <div className=\"bg-gray-700 p-4 rounded-lg\">\r\n                    <h4 className=\"text-white font-medium mb-3\">Weekly Volume Summary</h4>\r\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                        {Object.entries(liftNames).map(([day, dayName]) => (\r\n                            <div key={day} className=\"text-center\">\r\n                                <div className=\"text-red-400 font-medium\">{dayName}</div>\r\n                                <div className=\"text-sm text-gray-300\">\r\n                                    {getTotalExercisesPerDay(day)} exercises\r\n                                </div>\r\n                                <div className=\"text-sm text-gray-300\">\r\n                                    {getTotalSetsPerDay(day)} sets\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Warnings */}\r\n            {volumeLevel === 'extreme' && (\r\n                <div className=\"bg-red-900/20 border border-red-600 p-4 rounded-lg\">\r\n                    <div className=\"flex items-start space-x-2\">\r\n                        <AlertTriangle className=\"w-5 h-5 text-red-400 mt-0.5\" />\r\n                        <div className=\"text-red-200 text-sm\">\r\n                            <strong>Extreme Volume Warning:</strong> This volume level requires exceptional recovery capacity.\r\n                            Ensure 8+ hours sleep, optimal nutrition, and minimal life stress before attempting.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {Object.keys(selectedExercises).some(day => getTotalSetsPerDay(day) > 25) && (\r\n                <div className=\"bg-yellow-900/20 border border-yellow-600 p-4 rounded-lg\">\r\n                    <div className=\"flex items-start space-x-2\">\r\n                        <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                        <div className=\"text-yellow-200 text-sm\">\r\n                            <strong>High Volume Alert:</strong> Some days exceed 25 total sets.\r\n                            Monitor recovery carefully and be prepared to reduce volume if needed.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Completion Status */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-green-900/20 border border-green-500 p-4 rounded-lg\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n                        <span className=\"text-green-300 font-medium\">\r\n                            Step 14 Complete! Periodization Bible template configured with {volumeLevel} volume level.\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Weight, Zap, Clock, TrendingUp, CheckCircle, Info, AlertTriangle, Plus, Minus } from 'lucide-react';\r\n\r\nexport default function Step15Bodyweight({ data, updateData }) {\r\n    const [bodyweightConfig, setBodyweightConfig] = useState(data.bodyweightConfig || {\r\n        selectedExercises: {\r\n            squat: [],\r\n            bench: [],\r\n            deadlift: [],\r\n            overhead_press: []\r\n        },\r\n        progressionMethod: 'volume', // volume, difficulty, density, load\r\n        repScheme: 'standard', // standard, cluster, time_based\r\n        frequency: 'daily' // daily, session_based\r\n    });\r\n\r\n    const [customExercises, setCustomExercises] = useState(data.customExercises || {});\r\n\r\n    // Bodyweight exercise options per main lift\r\n    const bodyweightExercises = {\r\n        squat: [\r\n            { name: 'Bodyweight Squats', difficulty: 'beginner', category: 'squat_pattern' },\r\n            { name: 'Jump Squats', difficulty: 'intermediate', category: 'power' },\r\n            { name: 'Single-Leg Squats (Pistol)', difficulty: 'advanced', category: 'unilateral' },\r\n            { name: 'Bulgarian Split Squats', difficulty: 'intermediate', category: 'unilateral' },\r\n            { name: 'Walking Lunges', difficulty: 'beginner', category: 'unilateral' },\r\n            { name: 'Reverse Lunges', difficulty: 'beginner', category: 'unilateral' },\r\n            { name: 'Lateral Lunges', difficulty: 'intermediate', category: 'unilateral' },\r\n            { name: 'Cossack Squats', difficulty: 'advanced', category: 'mobility' }\r\n        ],\r\n        bench: [\r\n            { name: 'Push-ups', difficulty: 'beginner', category: 'push' },\r\n            { name: 'Incline Push-ups', difficulty: 'beginner', category: 'push' },\r\n            { name: 'Decline Push-ups', difficulty: 'intermediate', category: 'push' },\r\n            { name: 'Diamond Push-ups', difficulty: 'intermediate', category: 'tricep_focus' },\r\n            { name: 'Wide-Grip Push-ups', difficulty: 'beginner', category: 'chest_focus' },\r\n            { name: 'One-Arm Push-ups', difficulty: 'advanced', category: 'unilateral' },\r\n            { name: 'Handstand Push-ups', difficulty: 'advanced', category: 'overhead' },\r\n            { name: 'Archer Push-ups', difficulty: 'advanced', category: 'unilateral' }\r\n        ],\r\n        deadlift: [\r\n            { name: 'Single-Leg Deadlifts', difficulty: 'intermediate', category: 'hip_hinge' },\r\n            { name: 'Good Mornings (bodyweight)', difficulty: 'beginner', category: 'hip_hinge' },\r\n            { name: 'Glute Bridges', difficulty: 'beginner', category: 'glute_activation' },\r\n            { name: 'Single-Leg Glute Bridges', difficulty: 'intermediate', category: 'unilateral' },\r\n            { name: 'Jump Squats', difficulty: 'intermediate', category: 'power' },\r\n            { name: 'Broad Jumps', difficulty: 'intermediate', category: 'power' },\r\n            { name: 'Wall Sits', difficulty: 'beginner', category: 'isometric' }\r\n        ],\r\n        overhead_press: [\r\n            { name: 'Pike Push-ups', difficulty: 'intermediate', category: 'overhead' },\r\n            { name: 'Handstand Push-ups', difficulty: 'advanced', category: 'overhead' },\r\n            { name: 'Dips (chair/bench)', difficulty: 'intermediate', category: 'tricep_focus' },\r\n            { name: 'Pull-ups', difficulty: 'intermediate', category: 'pull' },\r\n            { name: 'Chin-ups', difficulty: 'beginner', category: 'pull' },\r\n            { name: 'Assisted Pull-ups', difficulty: 'beginner', category: 'pull' },\r\n            { name: 'Inverted Rows', difficulty: 'beginner', category: 'pull' },\r\n            { name: 'Face Pulls (resistance band)', difficulty: 'beginner', category: 'rear_delt' }\r\n        ]\r\n    };\r\n\r\n    // Core bodyweight exercises for all programs\r\n    const coreExercises = [\r\n        { name: 'Planks', difficulty: 'beginner', category: 'core' },\r\n        { name: 'Side Planks', difficulty: 'beginner', category: 'core' },\r\n        { name: 'Mountain Climbers', difficulty: 'intermediate', category: 'core' },\r\n        { name: 'Dead Bug', difficulty: 'beginner', category: 'core' },\r\n        { name: 'Bird Dog', difficulty: 'beginner', category: 'core' },\r\n        { name: 'Hollow Body Hold', difficulty: 'intermediate', category: 'core' }\r\n    ];\r\n\r\n    const progressionMethods = {\r\n        volume: {\r\n            name: 'Volume Progression',\r\n            description: 'Increase total reps per session',\r\n            example: 'Week 1: 50 push-ups → Week 2: 60 push-ups'\r\n        },\r\n        difficulty: {\r\n            name: 'Difficulty Progression',\r\n            description: 'Progress to harder variations',\r\n            example: 'Push-ups → Decline Push-ups → One-Arm Push-ups'\r\n        },\r\n        density: {\r\n            name: 'Density Progression',\r\n            description: 'Same work in less time',\r\n            example: 'Complete 100 reps in 15 min → 100 reps in 12 min'\r\n        },\r\n        load: {\r\n            name: 'Load Progression',\r\n            description: 'Add weight via vest or backpack',\r\n            example: 'Bodyweight → +10lbs vest → +20lbs vest'\r\n        }\r\n    };\r\n\r\n    const repSchemes = {\r\n        standard: {\r\n            name: 'Standard Sets',\r\n            description: 'Traditional set/rep scheme',\r\n            example: '3 sets × 15 reps'\r\n        },\r\n        cluster: {\r\n            name: 'Cluster Sets',\r\n            description: 'Break large numbers into smaller sets',\r\n            example: '100 total reps = 10 sets × 10 reps'\r\n        },\r\n        time_based: {\r\n            name: 'Time-Based',\r\n            description: 'Work for time rather than reps',\r\n            example: '3 sets × 30 seconds work'\r\n        }\r\n    };\r\n\r\n    const handleExerciseToggle = (lift, exercise) => {\r\n        const currentSelected = bodyweightConfig.selectedExercises[lift] || [];\r\n        const isSelected = currentSelected.some(ex => ex.name === exercise.name);\r\n\r\n        let newSelected;\r\n        if (isSelected) {\r\n            newSelected = currentSelected.filter(ex => ex.name !== exercise.name);\r\n        } else {\r\n            newSelected = [...currentSelected, exercise];\r\n        }\r\n\r\n        setBodyweightConfig(prev => ({\r\n            ...prev,\r\n            selectedExercises: {\r\n                ...prev.selectedExercises,\r\n                [lift]: newSelected\r\n            }\r\n        }));\r\n\r\n        updateStepData({\r\n            bodyweightConfig: {\r\n                ...bodyweightConfig,\r\n                selectedExercises: {\r\n                    ...bodyweightConfig.selectedExercises,\r\n                    [lift]: newSelected\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleProgressionChange = (method) => {\r\n        setBodyweightConfig(prev => ({\r\n            ...prev,\r\n            progressionMethod: method\r\n        }));\r\n        updateStepData({ bodyweightConfig: { ...bodyweightConfig, progressionMethod: method } });\r\n    };\r\n\r\n    const handleRepSchemeChange = (scheme) => {\r\n        setBodyweightConfig(prev => ({\r\n            ...prev,\r\n            repScheme: scheme\r\n        }));\r\n        updateStepData({ bodyweightConfig: { ...bodyweightConfig, repScheme: scheme } });\r\n    };\r\n\r\n    const updateStepData = (updates) => {\r\n        updateData({\r\n            bodyweightConfig: updates.bodyweightConfig || bodyweightConfig,\r\n            customExercises,\r\n            ...updates\r\n        });\r\n    };\r\n\r\n    const isStepComplete = () => {\r\n        const hasExercisesSelected = Object.values(bodyweightConfig.selectedExercises).some(\r\n            exercises => exercises.length > 0\r\n        );\r\n        return hasExercisesSelected && bodyweightConfig.progressionMethod && bodyweightConfig.repScheme;\r\n    };\r\n\r\n    const liftNames = {\r\n        squat: 'Squat',\r\n        bench: 'Bench Press',\r\n        deadlift: 'Deadlift',\r\n        overhead_press: 'Overhead Press'\r\n    };\r\n\r\n    const getDifficultyColor = (difficulty) => {\r\n        switch (difficulty) {\r\n            case 'beginner': return 'text-green-400 bg-green-900/20 border-green-600';\r\n            case 'intermediate': return 'text-yellow-400 bg-yellow-900/20 border-yellow-600';\r\n            case 'advanced': return 'text-red-400 bg-red-900/20 border-red-600';\r\n            default: return 'text-gray-400 bg-gray-900/20 border-gray-600';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div>\r\n                <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                    Step 15: \"Bodyweight\" Template\r\n                </h3>\r\n                <p className=\"text-gray-400\">\r\n                    Equipment-free assistance work using bodyweight movements for when you can't access weights\r\n                </p>\r\n            </div>\r\n\r\n            {/* Philosophy Box */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-blue-300 font-medium mb-2\">Bodyweight Training Philosophy</h4>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>• Perfect for travel, home workouts, or minimal equipment scenarios</li>\r\n                            <li>• Focus on movement quality and progressive overload through volume or difficulty</li>\r\n                            <li>• Use multiple progression methods to continue advancing</li>\r\n                            <li>• Can supplement or replace traditional assistance work</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Progression Method Selection */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <TrendingUp className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    Progression Method\r\n                </h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    {Object.entries(progressionMethods).map(([key, method]) => (\r\n                        <div\r\n                            key={key}\r\n                            onClick={() => handleProgressionChange(key)}\r\n                            className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${bodyweightConfig.progressionMethod === key\r\n                                    ? 'border-red-500 bg-red-900/20'\r\n                                    : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                }`}\r\n                        >\r\n                            <h5 className=\"text-white font-medium mb-1\">{method.name}</h5>\r\n                            <p className=\"text-gray-400 text-sm mb-2\">{method.description}</p>\r\n                            <p className=\"text-gray-500 text-xs italic\">{method.example}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Rep Scheme Selection */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Clock className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    Rep Scheme\r\n                </h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    {Object.entries(repSchemes).map(([key, scheme]) => (\r\n                        <div\r\n                            key={key}\r\n                            onClick={() => handleRepSchemeChange(key)}\r\n                            className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${bodyweightConfig.repScheme === key\r\n                                    ? 'border-red-500 bg-red-900/20'\r\n                                    : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                }`}\r\n                        >\r\n                            <h5 className=\"text-white font-medium mb-1\">{scheme.name}</h5>\r\n                            <p className=\"text-gray-400 text-sm mb-2\">{scheme.description}</p>\r\n                            <p className=\"text-gray-500 text-xs italic\">{scheme.example}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Exercise Selection by Lift */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Weight className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    Exercise Selection by Main Lift\r\n                </h4>\r\n\r\n                {Object.entries(bodyweightExercises).map(([lift, exercises]) => (\r\n                    <div key={lift} className=\"mb-6 last:mb-0\">\r\n                        <h5 className=\"text-white font-medium mb-3 flex items-center\">\r\n                            {liftNames[lift]} Assistance\r\n                            <span className=\"ml-2 text-sm text-gray-400\">\r\n                                ({bodyweightConfig.selectedExercises[lift]?.length || 0} selected)\r\n                            </span>\r\n                        </h5>\r\n\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-3\">\r\n                            {exercises.map((exercise, index) => {\r\n                                const isSelected = bodyweightConfig.selectedExercises[lift]?.some(\r\n                                    ex => ex.name === exercise.name\r\n                                );\r\n\r\n                                return (\r\n                                    <div\r\n                                        key={index}\r\n                                        onClick={() => handleExerciseToggle(lift, exercise)}\r\n                                        className={`p-3 rounded-lg border-2 cursor-pointer transition-all ${isSelected\r\n                                                ? 'border-red-500 bg-red-900/20'\r\n                                                : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                            }`}\r\n                                    >\r\n                                        <div className=\"flex items-center justify-between mb-1\">\r\n                                            <span className=\"text-white text-sm font-medium\">\r\n                                                {exercise.name}\r\n                                            </span>\r\n                                            {isSelected && <CheckCircle className=\"w-4 h-4 text-red-400\" />}\r\n                                        </div>\r\n                                        <div className={`text-xs px-2 py-1 rounded border ${getDifficultyColor(exercise.difficulty)}`}>\r\n                                            {exercise.difficulty}\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Core Exercise Recommendations */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Zap className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    Core Exercise Recommendations\r\n                </h4>\r\n                <p className=\"text-gray-400 mb-4 text-sm\">\r\n                    These core exercises complement any bodyweight program and should be included 2-3 times per week.\r\n                </p>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\r\n                    {coreExercises.map((exercise, index) => (\r\n                        <div key={index} className=\"p-3 rounded-lg bg-gray-800 border border-gray-600\">\r\n                            <div className=\"flex items-center justify-between mb-1\">\r\n                                <span className=\"text-white text-sm font-medium\">{exercise.name}</span>\r\n                            </div>\r\n                            <div className={`text-xs px-2 py-1 rounded border ${getDifficultyColor(exercise.difficulty)}`}>\r\n                                {exercise.difficulty}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Implementation Guidelines */}\r\n            <div className=\"bg-yellow-900/20 border border-yellow-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-2\">\r\n                    <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                    <div className=\"text-yellow-200 text-sm\">\r\n                        <h5 className=\"font-medium mb-1\">Implementation Guidelines</h5>\r\n                        <ul className=\"space-y-1 text-xs\">\r\n                            <li>• Perform bodyweight work AFTER your main 5/3/1 lift</li>\r\n                            <li>• Start with easier variations and progress systematically</li>\r\n                            <li>• Quality over quantity - perfect form is essential</li>\r\n                            <li>• Track your progression just like weighted exercises</li>\r\n                            <li>• Can be done daily with proper volume management</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Completion Status */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-green-900/20 border border-green-500 p-4 rounded-lg\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n                        <span className=\"text-green-300 font-medium\">\r\n                            Step 15 Complete! Bodyweight template configured with {Object.values(bodyweightConfig.selectedExercises).flat().length} exercises selected.\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Clock, Zap, AlertTriangle, CheckCircle, Info, Timer, Activity, Target } from 'lucide-react';\r\n\r\nexport default function Step16JackShit({ data, updateData }) {\r\n    const [jackShitConfig, setJackShitConfig] = useState(data.jackShitConfig || {\r\n        sessionDuration: '20-30', // 20-30, 15-20, 30-40 minutes\r\n        conditioningReplacement: false,\r\n        conditioningType: 'low_impact', // low_impact, high_impact, none\r\n        conditioningDuration: 15, // minutes\r\n        focusAreas: [], // time_constraints, recovery_issues, simplicity, experiment\r\n        additionalNotes: ''\r\n    });\r\n\r\n    const sessionDurations = {\r\n        '15-20': {\r\n            name: '15-20 Minutes',\r\n            description: 'Ultra-quick sessions',\r\n            suitableFor: 'Extreme time constraints'\r\n        },\r\n        '20-30': {\r\n            name: '20-30 Minutes',\r\n            description: 'Standard Jack Shit duration',\r\n            suitableFor: 'Most lifters with time constraints'\r\n        },\r\n        '30-40': {\r\n            name: '30-40 Minutes',\r\n            description: 'Extended sessions with conditioning',\r\n            suitableFor: 'When including conditioning work'\r\n        }\r\n    };\r\n\r\n    const conditioningOptions = {\r\n        low_impact: {\r\n            name: 'Low Impact Conditioning',\r\n            exercises: ['Walking', 'Light cycling', 'Swimming', 'Rowing (easy pace)'],\r\n            intensity: 'Easy conversational pace',\r\n            duration: '20-40 minutes'\r\n        },\r\n        high_impact: {\r\n            name: 'High Impact Conditioning',\r\n            exercises: ['Hill sprints', 'Prowler pushes', 'Kettlebell swings', 'Bike intervals'],\r\n            intensity: 'High intensity intervals',\r\n            duration: '15-20 minutes'\r\n        },\r\n        none: {\r\n            name: 'No Conditioning',\r\n            exercises: ['Pure 5/3/1 main work only'],\r\n            intensity: 'Focus solely on strength',\r\n            duration: '15-25 minutes'\r\n        }\r\n    };\r\n\r\n    const focusAreaOptions = [\r\n        {\r\n            id: 'time_constraints',\r\n            name: 'Time Constraints',\r\n            description: 'Very busy periods in life',\r\n            icon: Clock\r\n        },\r\n        {\r\n            id: 'recovery_issues',\r\n            name: 'Recovery Issues',\r\n            description: 'Overtrained or highly stressed',\r\n            icon: AlertTriangle\r\n        },\r\n        {\r\n            id: 'simplicity',\r\n            name: 'Simplicity Focus',\r\n            description: 'Want to focus solely on main lifts',\r\n            icon: Target\r\n        },\r\n        {\r\n            id: 'experiment',\r\n            name: 'Strength Experiment',\r\n            description: 'Test gains from basics alone',\r\n            icon: Activity\r\n        }\r\n    ];\r\n\r\n    const handleSessionDurationChange = (duration) => {\r\n        setJackShitConfig(prev => ({\r\n            ...prev,\r\n            sessionDuration: duration\r\n        }));\r\n        updateStepData({ jackShitConfig: { ...jackShitConfig, sessionDuration: duration } });\r\n    };\r\n\r\n    const handleConditioningChange = (type) => {\r\n        setJackShitConfig(prev => ({\r\n            ...prev,\r\n            conditioningType: type,\r\n            conditioningReplacement: type !== 'none'\r\n        }));\r\n        updateStepData({\r\n            jackShitConfig: {\r\n                ...jackShitConfig,\r\n                conditioningType: type,\r\n                conditioningReplacement: type !== 'none'\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleFocusAreaToggle = (areaId) => {\r\n        const currentFocus = jackShitConfig.focusAreas || [];\r\n        const isSelected = currentFocus.includes(areaId);\r\n\r\n        let newFocus;\r\n        if (isSelected) {\r\n            newFocus = currentFocus.filter(id => id !== areaId);\r\n        } else {\r\n            newFocus = [...currentFocus, areaId];\r\n        }\r\n\r\n        setJackShitConfig(prev => ({\r\n            ...prev,\r\n            focusAreas: newFocus\r\n        }));\r\n        updateStepData({ jackShitConfig: { ...jackShitConfig, focusAreas: newFocus } });\r\n    };\r\n\r\n    const handleConditioningDurationChange = (duration) => {\r\n        setJackShitConfig(prev => ({\r\n            ...prev,\r\n            conditioningDuration: duration\r\n        }));\r\n        updateStepData({ jackShitConfig: { ...jackShitConfig, conditioningDuration: duration } });\r\n    };\r\n\r\n    const updateStepData = (updates) => {\r\n        updateData({\r\n            jackShitConfig: updates.jackShitConfig || jackShitConfig,\r\n            ...updates\r\n        });\r\n    };\r\n\r\n    const isStepComplete = () => {\r\n        return jackShitConfig.sessionDuration &&\r\n            jackShitConfig.conditioningType &&\r\n            (jackShitConfig.focusAreas?.length || 0) > 0;\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div>\r\n                <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                    Step 16: \"Jack Shit\" Template\r\n                </h3>\r\n                <p className=\"text-gray-400\">\r\n                    The ultimate minimalist approach - just 5/3/1 main work with zero assistance exercises\r\n                </p>\r\n            </div>\r\n\r\n            {/* Philosophy Box */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-blue-300 font-medium mb-2\">Jack Shit Philosophy</h4>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>• Pure focus on the four main lifts - nothing else</li>\r\n                            <li>• Perfect for time-constrained periods or recovery phases</li>\r\n                            <li>• Tests what strength gains come from basics alone</li>\r\n                            <li>• Sessions typically last 20-30 minutes maximum</li>\r\n                            <li>• Can optionally replace assistance with brief conditioning</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Focus Areas Selection */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Target className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    Why Are You Using Jack Shit?\r\n                </h4>\r\n                <p className=\"text-gray-400 mb-4 text-sm\">\r\n                    Select your primary reasons for choosing this minimalist approach\r\n                </p>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    {focusAreaOptions.map((area) => {\r\n                        const IconComponent = area.icon;\r\n                        const isSelected = (jackShitConfig.focusAreas || []).includes(area.id);\r\n\r\n                        return (\r\n                            <div\r\n                                key={area.id}\r\n                                onClick={() => handleFocusAreaToggle(area.id)}\r\n                                className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${isSelected\r\n                                        ? 'border-red-500 bg-red-900/20'\r\n                                        : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                    }`}\r\n                            >\r\n                                <div className=\"flex items-center space-x-3\">\r\n                                    <IconComponent className={`w-5 h-5 ${isSelected ? 'text-red-400' : 'text-gray-400'\r\n                                        }`} />\r\n                                    <div>\r\n                                        <h5 className=\"text-white font-medium\">{area.name}</h5>\r\n                                        <p className=\"text-gray-400 text-sm\">{area.description}</p>\r\n                                    </div>\r\n                                    {isSelected && <CheckCircle className=\"w-5 h-5 text-red-400 ml-auto\" />}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Session Duration */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Timer className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    Target Session Duration\r\n                </h4>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    {Object.entries(sessionDurations).map(([key, duration]) => (\r\n                        <div\r\n                            key={key}\r\n                            onClick={() => handleSessionDurationChange(key)}\r\n                            className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${jackShitConfig.sessionDuration === key\r\n                                    ? 'border-red-500 bg-red-900/20'\r\n                                    : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                }`}\r\n                        >\r\n                            <h5 className=\"text-white font-medium mb-1\">{duration.name}</h5>\r\n                            <p className=\"text-gray-400 text-sm mb-2\">{duration.description}</p>\r\n                            <p className=\"text-gray-500 text-xs italic\">{duration.suitableFor}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Conditioning Integration */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Zap className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    Optional Conditioning Integration\r\n                </h4>\r\n                <p className=\"text-gray-400 mb-4 text-sm\">\r\n                    Since there's no assistance work, you can optionally add brief conditioning\r\n                </p>\r\n\r\n                <div className=\"space-y-4\">\r\n                    {Object.entries(conditioningOptions).map(([key, option]) => (\r\n                        <div\r\n                            key={key}\r\n                            onClick={() => handleConditioningChange(key)}\r\n                            className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${jackShitConfig.conditioningType === key\r\n                                    ? 'border-red-500 bg-red-900/20'\r\n                                    : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                }`}\r\n                        >\r\n                            <div className=\"flex items-center justify-between mb-2\">\r\n                                <h5 className=\"text-white font-medium\">{option.name}</h5>\r\n                                {jackShitConfig.conditioningType === key && (\r\n                                    <CheckCircle className=\"w-5 h-5 text-red-400\" />\r\n                                )}\r\n                            </div>\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n                                <div>\r\n                                    <span className=\"text-gray-400\">Exercises:</span>\r\n                                    <p className=\"text-gray-300\">{option.exercises.join(', ')}</p>\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"text-gray-400\">Intensity:</span>\r\n                                    <p className=\"text-gray-300\">{option.intensity}</p>\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"text-gray-400\">Duration:</span>\r\n                                    <p className=\"text-gray-300\">{option.duration}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {/* Conditioning Duration Adjustment */}\r\n                {jackShitConfig.conditioningType !== 'none' && (\r\n                    <div className=\"mt-4 p-4 bg-gray-800 rounded-lg\">\r\n                        <label className=\"block text-white font-medium mb-2\">\r\n                            Conditioning Duration (minutes)\r\n                        </label>\r\n                        <div className=\"flex items-center space-x-4\">\r\n                            <input\r\n                                type=\"range\"\r\n                                min=\"10\"\r\n                                max=\"30\"\r\n                                value={jackShitConfig.conditioningDuration}\r\n                                onChange={(e) => handleConditioningDurationChange(parseInt(e.target.value))}\r\n                                className=\"flex-1 h-2 bg-gray-600 rounded-lg appearance-none cursor-pointer\"\r\n                            />\r\n                            <span className=\"text-white font-medium w-12 text-center\">\r\n                                {jackShitConfig.conditioningDuration}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"flex justify-between text-sm text-gray-400 mt-1\">\r\n                            <span>10 min</span>\r\n                            <span>30 min</span>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Implementation Guidelines */}\r\n            <div className=\"bg-yellow-900/20 border border-yellow-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-2\">\r\n                    <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                    <div className=\"text-yellow-200 text-sm\">\r\n                        <h5 className=\"font-medium mb-2\">Jack Shit Implementation Guidelines</h5>\r\n                        <div className=\"space-y-2 text-xs\">\r\n                            <div>\r\n                                <span className=\"font-medium\">Session Structure:</span>\r\n                                <p>Warm-up → 5/3/1 main lift → Optional conditioning → Done</p>\r\n                            </div>\r\n                            <div>\r\n                                <span className=\"font-medium\">When to Use:</span>\r\n                                <p>Busy periods, recovery phases, or when testing strength from basics alone</p>\r\n                            </div>\r\n                            <div>\r\n                                <span className=\"font-medium\">What NOT to Do:</span>\r\n                                <p>Don't add assistance exercises - that defeats the purpose of Jack Shit</p>\r\n                            </div>\r\n                            <div>\r\n                                <span className=\"font-medium\">Duration Guidelines:</span>\r\n                                <p>Can be used for 3-6 week blocks or indefinitely if meeting goals</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Sample Session Structure */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4\">Sample Jack Shit Session</h4>\r\n                <div className=\"space-y-3 text-sm\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                        <div className=\"w-8 h-8 bg-red-900/20 border border-red-600 rounded-full flex items-center justify-center text-red-400 font-medium text-xs\">\r\n                            1\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"text-white font-medium\">Warm-up:</span>\r\n                            <span className=\"text-gray-400 ml-2\">5-8 minutes mobility + specific warm-up sets</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-3\">\r\n                        <div className=\"w-8 h-8 bg-red-900/20 border border-red-600 rounded-full flex items-center justify-center text-red-400 font-medium text-xs\">\r\n                            2\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"text-white font-medium\">Main Work:</span>\r\n                            <span className=\"text-gray-400 ml-2\">5/3/1 sets for one main lift (8-12 minutes)</span>\r\n                        </div>\r\n                    </div>\r\n                    {jackShitConfig.conditioningType !== 'none' && (\r\n                        <div className=\"flex items-center space-x-3\">\r\n                            <div className=\"w-8 h-8 bg-red-900/20 border border-red-600 rounded-full flex items-center justify-center text-red-400 font-medium text-xs\">\r\n                                3\r\n                            </div>\r\n                            <div>\r\n                                <span className=\"text-white font-medium\">Conditioning:</span>\r\n                                <span className=\"text-gray-400 ml-2\">\r\n                                    {jackShitConfig.conditioningDuration} minutes {conditioningOptions[jackShitConfig.conditioningType]?.name.toLowerCase()}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"flex items-center space-x-3\">\r\n                        <div className=\"w-8 h-8 bg-green-900/20 border border-green-600 rounded-full flex items-center justify-center text-green-400 font-medium text-xs\">\r\n                            ✓\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"text-white font-medium\">Total Time:</span>\r\n                            <span className=\"text-gray-400 ml-2\">{sessionDurations[jackShitConfig.sessionDuration]?.name}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Completion Status */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-green-900/20 border border-green-500 p-4 rounded-lg\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n                        <span className=\"text-green-300 font-medium\">\r\n                            Step 16 Complete! Jack Shit template configured for {sessionDurations[jackShitConfig.sessionDuration]?.name} sessions\r\n                            {jackShitConfig.conditioningType !== 'none' && ` with ${jackShitConfig.conditioningDuration}-minute conditioning`}.\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Activity, Heart, Moon, Utensils, Brain, CheckCircle, Info, AlertTriangle, Clock, Zap, Target } from 'lucide-react';\r\n\r\nexport default function Step17ConditioningRecovery({ data, updateData }) {\r\n    const [conditioningConfig, setConditioningConfig] = useState(data.conditioningConfig || {\r\n        frequency: 2, // minimum 2x per week\r\n        primaryMethod: 'prowler', // prowler, hill_sprints, bike_intervals, rowing\r\n        highIntensity: {\r\n            enabled: true,\r\n            duration: 15,\r\n            exercises: []\r\n        },\r\n        lowIntensity: {\r\n            enabled: true,\r\n            duration: 30,\r\n            exercises: []\r\n        }\r\n    });\r\n\r\n    const [recoveryConfig, setRecoveryConfig] = useState(data.recoveryConfig || {\r\n        sleep: {\r\n            targetHours: 8,\r\n            priority: 'high'\r\n        },\r\n        nutrition: {\r\n            proteinFocus: true,\r\n            calorieGoal: 'maintenance', // deficit, maintenance, surplus\r\n            hydration: true\r\n        },\r\n        stressManagement: {\r\n            techniques: [],\r\n            priority: 'medium'\r\n        },\r\n        softTissue: {\r\n            methods: [],\r\n            frequency: 3\r\n        }\r\n    });\r\n\r\n    // Normalize nested structures if missing from loaded data\r\n    useEffect(() => {\r\n        setConditioningConfig(prev => {\r\n            const hi = prev?.highIntensity ?? { enabled: true, duration: 15, exercises: [] };\r\n            const li = prev?.lowIntensity ?? { enabled: true, duration: 30, exercises: [] };\r\n            const freq = Math.max(2, Number(prev?.frequency ?? 2));\r\n            const method = prev?.primaryMethod || 'prowler';\r\n            const next = { ...prev, highIntensity: hi, lowIntensity: li, frequency: freq, primaryMethod: method };\r\n            if (JSON.stringify(next) !== JSON.stringify(prev)) {\r\n                updateStepData({ conditioningConfig: next });\r\n            }\r\n            return next;\r\n        });\r\n        setRecoveryConfig(prev => {\r\n            const sleep = prev?.sleep ?? { targetHours: 8, priority: 'high' };\r\n            const stress = prev?.stressManagement ?? { techniques: [], priority: 'medium' };\r\n            const soft = prev?.softTissue ?? { methods: [], frequency: 3 };\r\n            const nutrition = prev?.nutrition ?? { proteinFocus: true, calorieGoal: 'maintenance', hydration: true };\r\n            const next = { ...prev, sleep, stressManagement: stress, softTissue: soft, nutrition };\r\n            if (JSON.stringify(next) !== JSON.stringify(prev)) {\r\n                updateStepData({ recoveryConfig: next });\r\n            }\r\n            return next;\r\n        });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // Conditioning equipment and methods\r\n    const conditioningMethods = {\r\n        prowler: {\r\n            name: 'Prowler/Sled Work',\r\n            description: 'Primary conditioning method recommended by Wendler',\r\n            equipment: 'Prowler sled or weight sled',\r\n            exercises: ['Prowler pushes', 'Prowler pulls', 'Sled drags', 'Farmers walks with sled'],\r\n            intensity: 'Variable - can be high or low intensity'\r\n        },\r\n        hill_sprints: {\r\n            name: 'Hill Sprints',\r\n            description: 'Minimal equipment alternative for high intensity',\r\n            equipment: 'Hill or incline (6-15% grade)',\r\n            exercises: ['Sprint uphill', 'Walk down recovery', 'Tempo runs uphill'],\r\n            intensity: 'High intensity intervals'\r\n        },\r\n        bike_intervals: {\r\n            name: 'Bike Intervals',\r\n            description: 'Bike-based high intensity work',\r\n            equipment: 'Stationary bike or road bike',\r\n            exercises: ['Tabata intervals', 'Sprint intervals', 'Threshold intervals'],\r\n            intensity: 'High intensity intervals'\r\n        },\r\n        rowing: {\r\n            name: 'Rowing',\r\n            description: 'Full-body conditioning option',\r\n            equipment: 'Rowing machine',\r\n            exercises: ['500m intervals', '2k time trial', 'Steady state rowing'],\r\n            intensity: 'Variable intensity'\r\n        }\r\n    };\r\n\r\n    // High intensity conditioning options\r\n    const highIntensityOptions = [\r\n        'Prowler pushes (15-20 minutes)',\r\n        'Hill sprints (10-15 minutes)',\r\n        'Bike intervals (15-20 minutes)',\r\n        'Rower intervals (15-20 minutes)',\r\n        'Kettlebell swings (15 minutes)',\r\n        'Burpees (10-15 minutes)',\r\n        'Mountain climbers (10 minutes)',\r\n        'Battle ropes (15 minutes)'\r\n    ];\r\n\r\n    // Low intensity conditioning options\r\n    const lowIntensityOptions = [\r\n        'Walking (30-60 minutes)',\r\n        'Light cycling (30-45 minutes)',\r\n        'Swimming (30-40 minutes)',\r\n        'Easy rowing (30-40 minutes)',\r\n        'Yoga flow (30-45 minutes)',\r\n        'Tai chi (30 minutes)',\r\n        'Light hiking (45-60 minutes)',\r\n        'Stretching routine (20-30 minutes)'\r\n    ];\r\n\r\n    // Stress management techniques\r\n    const stressManagementTechniques = [\r\n        { name: 'Deep breathing exercises', description: '5-10 minutes daily' },\r\n        { name: 'Meditation', description: '10-20 minutes daily' },\r\n        { name: 'Journaling', description: '10 minutes before bed' },\r\n        { name: 'Time management', description: 'Planning and prioritization' },\r\n        { name: 'Work-life boundaries', description: 'Clear separation of work/personal time' },\r\n        { name: 'Social support', description: 'Regular contact with friends/family' }\r\n    ];\r\n\r\n    // Soft tissue methods\r\n    const softTissueMethods = [\r\n        { name: 'Foam rolling', description: '10-15 minutes post-workout' },\r\n        { name: 'Massage therapy', description: 'Weekly or bi-weekly sessions' },\r\n        { name: 'Stretching routine', description: '15-20 minutes daily' },\r\n        { name: 'Lacrosse ball work', description: 'Target specific tight spots' },\r\n        { name: 'Mobility drills', description: '10 minutes pre-workout' },\r\n        { name: 'Sauna/heat therapy', description: '15-20 minutes post-workout' }\r\n    ];\r\n\r\n    const handleConditioningMethodChange = (method) => {\r\n        const next = { ...conditioningConfig, primaryMethod: method };\r\n        setConditioningConfig(next);\r\n        updateStepData({ conditioningConfig: next });\r\n    };\r\n\r\n    const handleFrequencyChange = (frequency) => {\r\n        const next = { ...conditioningConfig, frequency };\r\n        setConditioningConfig(next);\r\n        updateStepData({ conditioningConfig: next });\r\n    };\r\n\r\n    const handleHighIntensityToggle = (exercise) => {\r\n        const current = (conditioningConfig.highIntensity?.exercises) || [];\r\n        const isSelected = current.includes(exercise);\r\n\r\n        const newExercises = isSelected\r\n            ? current.filter(ex => ex !== exercise)\r\n            : [...current, exercise];\r\n\r\n        const baseHi = conditioningConfig.highIntensity || { enabled: true, duration: 15, exercises: [] };\r\n        const next = {\r\n            ...conditioningConfig,\r\n            highIntensity: {\r\n                ...baseHi,\r\n                exercises: newExercises\r\n            }\r\n        };\r\n        setConditioningConfig(next);\r\n        updateStepData({ conditioningConfig: next });\r\n    };\r\n\r\n    const handleLowIntensityToggle = (exercise) => {\r\n        const current = (conditioningConfig.lowIntensity?.exercises) || [];\r\n        const isSelected = current.includes(exercise);\r\n\r\n        const newExercises = isSelected\r\n            ? current.filter(ex => ex !== exercise)\r\n            : [...current, exercise];\r\n\r\n        const baseLi = conditioningConfig.lowIntensity || { enabled: true, duration: 30, exercises: [] };\r\n        const next = {\r\n            ...conditioningConfig,\r\n            lowIntensity: {\r\n                ...baseLi,\r\n                exercises: newExercises\r\n            }\r\n        };\r\n        setConditioningConfig(next);\r\n        updateStepData({ conditioningConfig: next });\r\n    };\r\n\r\n    const handleStressManagementToggle = (technique) => {\r\n        const current = (recoveryConfig.stressManagement?.techniques) || [];\r\n        const isSelected = current.includes(technique);\r\n\r\n        const newTechniques = isSelected\r\n            ? current.filter(t => t !== technique)\r\n            : [...current, technique];\r\n\r\n        const next = {\r\n            ...recoveryConfig,\r\n            stressManagement: {\r\n                ...recoveryConfig.stressManagement,\r\n                techniques: newTechniques\r\n            }\r\n        };\r\n        setRecoveryConfig(next);\r\n        updateStepData({ recoveryConfig: next });\r\n    };\r\n\r\n    const handleSoftTissueToggle = (method) => {\r\n        const current = (recoveryConfig.softTissue?.methods) || [];\r\n        const isSelected = current.includes(method);\r\n\r\n        const newMethods = isSelected\r\n            ? current.filter(m => m !== method)\r\n            : [...current, method];\r\n\r\n        const next = {\r\n            ...recoveryConfig,\r\n            softTissue: {\r\n                ...recoveryConfig.softTissue,\r\n                methods: newMethods\r\n            }\r\n        };\r\n        setRecoveryConfig(next);\r\n        updateStepData({ recoveryConfig: next });\r\n    };\r\n\r\n    const updateStepData = (updates) => {\r\n        updateData({\r\n            conditioningConfig,\r\n            recoveryConfig,\r\n            ...updates\r\n        });\r\n    };\r\n\r\n    const isStepComplete = () => {\r\n        const hiLen = (conditioningConfig.highIntensity?.exercises || []).length;\r\n        const liLen = (conditioningConfig.lowIntensity?.exercises || []).length;\r\n        const hasConditioning = (Number(conditioningConfig.frequency) >= 2) &&\r\n            !!conditioningConfig.primaryMethod &&\r\n            (hiLen > 0 || liLen > 0);\r\n\r\n        const sleepTarget = Number(recoveryConfig.sleep?.targetHours ?? 0);\r\n        const stressLen = (recoveryConfig.stressManagement?.techniques || []).length;\r\n        const softLen = (recoveryConfig.softTissue?.methods || []).length;\r\n        const hasRecovery = sleepTarget >= 7 && stressLen > 0 && softLen > 0;\r\n\r\n        return hasConditioning && hasRecovery;\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div>\r\n                <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                    Step 17: Conditioning and Recovery Integration\r\n                </h3>\r\n                <p className=\"text-gray-400\">\r\n                    Essential conditioning work and recovery protocols to support your 5/3/1 training\r\n                </p>\r\n            </div>\r\n\r\n            {/* Philosophy Box */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-blue-300 font-medium mb-2\">Conditioning & Recovery Philosophy</h4>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>• Conditioning minimum: 2× per week to maintain work capacity</li>\r\n                            <li>• Prowler/sled work is the gold standard for 5/3/1 conditioning</li>\r\n                            <li>• Recovery is not optional - it's where adaptation happens</li>\r\n                            <li>• Sleep is the most important recovery tool you have</li>\r\n                            <li>• Manage life stress to optimize training adaptations</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Conditioning Configuration */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Activity className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    Conditioning Protocol\r\n                </h4>\r\n\r\n                {/* Frequency Selection */}\r\n                <div className=\"mb-6\">\r\n                    <label className=\"block text-white font-medium mb-3\">\r\n                        Weekly Conditioning Frequency (Minimum 2×)\r\n                    </label>\r\n                    <div className=\"flex items-center space-x-4\">\r\n                        <input\r\n                            type=\"range\"\r\n                            min=\"2\"\r\n                            max=\"6\"\r\n                            value={conditioningConfig.frequency}\r\n                            onChange={(e) => handleFrequencyChange(parseInt(e.target.value))}\r\n                            className=\"flex-1 h-2 bg-gray-600 rounded-lg appearance-none cursor-pointer\"\r\n                        />\r\n                        <span className=\"text-white font-medium w-12 text-center\">\r\n                            {conditioningConfig.frequency}×\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-sm text-gray-400 mt-1\">\r\n                        <span>2× (minimum)</span>\r\n                        <span>6× (high volume)</span>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Primary Method Selection */}\r\n                <div className=\"mb-6\">\r\n                    <h5 className=\"text-white font-medium mb-3\">Primary Conditioning Method</h5>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        {Object.entries(conditioningMethods).map(([key, method]) => (\r\n                            <div\r\n                                key={key}\r\n                                onClick={() => handleConditioningMethodChange(key)}\r\n                                className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${conditioningConfig.primaryMethod === key\r\n                                    ? 'border-red-500 bg-red-900/20'\r\n                                    : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                    }`}\r\n                            >\r\n                                <h6 className=\"text-white font-medium mb-1\">{method.name}</h6>\r\n                                <p className=\"text-gray-400 text-sm mb-2\">{method.description}</p>\r\n                                <p className=\"text-gray-500 text-xs\">Equipment: {method.equipment}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* High Intensity Conditioning */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Zap className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    High Intensity Conditioning (15-20 minutes)\r\n                </h4>\r\n                <p className=\"text-gray-400 mb-4 text-sm\">\r\n                    Select high-intensity conditioning exercises for maximum time efficiency\r\n                </p>\r\n\r\n                {conditioningConfig.highIntensity && <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\r\n                    {highIntensityOptions.map((exercise, index) => {\r\n                        const isSelected = (conditioningConfig.highIntensity?.exercises ?? []).includes(exercise);\r\n\r\n                        return (\r\n                            <div\r\n                                key={index}\r\n                                onClick={() => handleHighIntensityToggle(exercise)}\r\n                                className={`p-3 rounded-lg border-2 cursor-pointer transition-all ${isSelected\r\n                                    ? 'border-red-500 bg-red-900/20'\r\n                                    : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                    }`}\r\n                            >\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <span className=\"text-white text-sm\">{exercise}</span>\r\n                                    {isSelected && <CheckCircle className=\"w-4 h-4 text-red-400\" />}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>}\r\n            </div>\r\n\r\n            {/* Low Intensity Conditioning */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Heart className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    Low Intensity Conditioning (20-40 minutes)\r\n                </h4>\r\n                <p className=\"text-gray-400 mb-4 text-sm\">\r\n                    Select low-intensity activities for active recovery and aerobic base building\r\n                </p>\r\n\r\n                {conditioningConfig.lowIntensity && <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\r\n                    {lowIntensityOptions.map((exercise, index) => {\r\n                        const isSelected = (conditioningConfig.lowIntensity?.exercises ?? []).includes(exercise);\r\n\r\n                        return (\r\n                            <div\r\n                                key={index}\r\n                                onClick={() => handleLowIntensityToggle(exercise)}\r\n                                className={`p-3 rounded-lg border-2 cursor-pointer transition-all ${isSelected\r\n                                    ? 'border-red-500 bg-red-900/20'\r\n                                    : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                    }`}\r\n                            >\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <span className=\"text-white text-sm\">{exercise}</span>\r\n                                    {isSelected && <CheckCircle className=\"w-4 h-4 text-red-400\" />}\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>}\r\n            </div>\r\n\r\n            {/* Recovery Protocols */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Moon className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    Recovery Protocols\r\n                </h4>\r\n\r\n                {/* Sleep */}\r\n                <div className=\"mb-6\">\r\n                    <h5 className=\"text-white font-medium mb-3 flex items-center\">\r\n                        <Moon className=\"w-4 h-4 mr-2\" />\r\n                        Sleep (Most Important!)\r\n                    </h5>\r\n                    <div className=\"flex items-center space-x-4 mb-2\">\r\n                        <label className=\"text-gray-400\">Target Hours:</label>\r\n                        <input\r\n                            type=\"range\"\r\n                            min=\"6\"\r\n                            max=\"10\"\r\n                            value={recoveryConfig.sleep?.targetHours ?? 8}\r\n                            onChange={(e) => {\r\n                                const next = {\r\n                                    ...recoveryConfig,\r\n                                    sleep: { ...recoveryConfig.sleep, targetHours: parseInt(e.target.value) }\r\n                                };\r\n                                setRecoveryConfig(next);\r\n                                updateStepData({ recoveryConfig: next });\r\n                            }}\r\n                            className=\"flex-1 h-2 bg-gray-600 rounded-lg appearance-none cursor-pointer\"\r\n                        />\r\n                        <span className=\"text-white font-medium w-12 text-center\">\r\n                            {(recoveryConfig.sleep?.targetHours ?? 8)}h\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-400\">\r\n                        Recommendation: 7-9 hours nightly for optimal recovery\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Nutrition */}\r\n                <div className=\"mb-6\">\r\n                    <h5 className=\"text-white font-medium mb-3 flex items-center\">\r\n                        <Utensils className=\"w-4 h-4 mr-2\" />\r\n                        Nutrition Focus\r\n                    </h5>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                        <div className=\"p-3 bg-gray-800 rounded-lg border border-gray-600\">\r\n                            <h6 className=\"text-white font-medium mb-1\">Protein Priority</h6>\r\n                            <p className=\"text-gray-400 text-sm\">0.8-1.2g per lb bodyweight</p>\r\n                        </div>\r\n                        <div className=\"p-3 bg-gray-800 rounded-lg border border-gray-600\">\r\n                            <h6 className=\"text-white font-medium mb-1\">Adequate Calories</h6>\r\n                            <p className=\"text-gray-400 text-sm\">Support training demands</p>\r\n                        </div>\r\n                        <div className=\"p-3 bg-gray-800 rounded-lg border border-gray-600\">\r\n                            <h6 className=\"text-white font-medium mb-1\">Hydration</h6>\r\n                            <p className=\"text-gray-400 text-sm\">Half bodyweight in ounces daily</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Stress Management */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Brain className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    Stress Management Techniques\r\n                </h4>\r\n                <p className=\"text-gray-400 mb-4 text-sm\">\r\n                    Select techniques to manage life stress and optimize recovery\r\n                </p>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    {stressManagementTechniques.map((technique, index) => {\r\n                        const isSelected = (recoveryConfig.stressManagement?.techniques || []).includes(technique.name);\r\n\r\n                        return (\r\n                            <div\r\n                                key={index}\r\n                                onClick={() => handleStressManagementToggle(technique.name)}\r\n                                className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${isSelected\r\n                                    ? 'border-red-500 bg-red-900/20'\r\n                                    : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                    }`}\r\n                            >\r\n                                <div className=\"flex items-center justify-between mb-1\">\r\n                                    <h6 className=\"text-white font-medium\">{technique.name}</h6>\r\n                                    {isSelected && <CheckCircle className=\"w-4 h-4 text-red-400\" />}\r\n                                </div>\r\n                                <p className=\"text-gray-400 text-sm\">{technique.description}</p>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Soft Tissue Work */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Activity className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    Soft Tissue Maintenance\r\n                </h4>\r\n                <p className=\"text-gray-400 mb-4 text-sm\">\r\n                    Select methods for maintaining tissue quality and mobility\r\n                </p>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    {softTissueMethods.map((method, index) => {\r\n                        const isSelected = (recoveryConfig.softTissue?.methods || []).includes(method.name);\r\n\r\n                        return (\r\n                            <div\r\n                                key={index}\r\n                                onClick={() => handleSoftTissueToggle(method.name)}\r\n                                className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${isSelected\r\n                                    ? 'border-red-500 bg-red-900/20'\r\n                                    : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                    }`}\r\n                            >\r\n                                <div className=\"flex items-center justify-between mb-1\">\r\n                                    <h6 className=\"text-white font-medium\">{method.name}</h6>\r\n                                    {isSelected && <CheckCircle className=\"w-4 h-4 text-red-400\" />}\r\n                                </div>\r\n                                <p className=\"text-gray-400 text-sm\">{method.description}</p>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Critical Guidelines */}\r\n            <div className=\"bg-yellow-900/20 border border-yellow-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-2\">\r\n                    <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                    <div className=\"text-yellow-200 text-sm\">\r\n                        <h5 className=\"font-medium mb-2\">Critical Recovery Guidelines</h5>\r\n                        <ul className=\"space-y-1 text-xs\">\r\n                            <li>• Sleep is non-negotiable - prioritize 7-9 hours nightly</li>\r\n                            <li>• Conditioning supports strength training, not the other way around</li>\r\n                            <li>• Life stress directly impacts training recovery - manage it actively</li>\r\n                            <li>• Consistency beats intensity for long-term conditioning gains</li>\r\n                            <li>• If you can only do one thing, choose sleep over everything else</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Completion Status */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-green-900/20 border border-green-500 p-4 rounded-lg\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n                        <span className=\"text-green-300 font-medium\">\r\n                            Step 17 Complete! Conditioning and recovery protocols configured for {conditioningConfig.frequency}× weekly conditioning\r\n                            with {recoveryConfig.sleep.targetHours} hours target sleep.\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Target, TrendingUp, Settings, Award, FileText, Zap, Brain, CheckCircle, Info, AlertTriangle, Calendar, BarChart3 } from 'lucide-react';\r\n\r\nexport default function Step18ProgramCustomization({ data, updateData }) {\r\n    const [customizationConfig, setCustomizationConfig] = useState(data.customizationConfig || {\r\n        primaryGoal: '', // raw_strength, muscle_building, athletic_performance\r\n        repRecordTracking: {\r\n            enabled: true,\r\n            prDetection: true,\r\n            e1rmCalculation: true,\r\n            historicalData: true\r\n        },\r\n        autoRegulation: {\r\n            enabled: false,\r\n            rpeIntegration: false,\r\n            biofeedback: false,\r\n            flexibleProgression: false\r\n        },\r\n        specialization: {\r\n            enabled: false,\r\n            weakLiftFocus: '',\r\n            pauseTraining: false,\r\n            speedWork: false\r\n        },\r\n        printableSheets: {\r\n            enabled: true,\r\n            includeWarmups: true,\r\n            includeNotes: true,\r\n            weeklyFormat: true\r\n        },\r\n        progressVisualization: {\r\n            enabled: true,\r\n            cycleComparison: true,\r\n            strengthTrends: true,\r\n            volumeTracking: true\r\n        }\r\n    });\r\n\r\n    // Normalize data structure and sync with parent\r\n    useEffect(() => {\r\n        const normalized = {\r\n            primaryGoal: customizationConfig.primaryGoal || '',\r\n            repRecordTracking: {\r\n                enabled: customizationConfig.repRecordTracking?.enabled ?? true,\r\n                prDetection: customizationConfig.repRecordTracking?.prDetection ?? true,\r\n                e1rmCalculation: customizationConfig.repRecordTracking?.e1rmCalculation ?? true,\r\n                historicalData: customizationConfig.repRecordTracking?.historicalData ?? true\r\n            },\r\n            autoRegulation: {\r\n                enabled: customizationConfig.autoRegulation?.enabled ?? false,\r\n                rpeIntegration: customizationConfig.autoRegulation?.rpeIntegration ?? false,\r\n                biofeedback: customizationConfig.autoRegulation?.biofeedback ?? false,\r\n                flexibleProgression: customizationConfig.autoRegulation?.flexibleProgression ?? false\r\n            },\r\n            specialization: {\r\n                enabled: customizationConfig.specialization?.enabled ?? false,\r\n                weakLiftFocus: customizationConfig.specialization?.weakLiftFocus || '',\r\n                pauseTraining: customizationConfig.specialization?.pauseTraining ?? false,\r\n                speedWork: customizationConfig.specialization?.speedWork ?? false\r\n            },\r\n            printableSheets: {\r\n                enabled: customizationConfig.printableSheets?.enabled ?? true,\r\n                includeWarmups: customizationConfig.printableSheets?.includeWarmups ?? true,\r\n                includeNotes: customizationConfig.printableSheets?.includeNotes ?? true,\r\n                weeklyFormat: customizationConfig.printableSheets?.weeklyFormat ?? true\r\n            },\r\n            progressVisualization: {\r\n                enabled: customizationConfig.progressVisualization?.enabled ?? true,\r\n                cycleComparison: customizationConfig.progressVisualization?.cycleComparison ?? true,\r\n                strengthTrends: customizationConfig.progressVisualization?.strengthTrends ?? true,\r\n                volumeTracking: customizationConfig.progressVisualization?.volumeTracking ?? true\r\n            }\r\n        };\r\n\r\n        updateData({\r\n            step18: { customizationConfig: normalized }\r\n        });\r\n    }, [customizationConfig, updateData]);\r\n\r\n    const goalConfigurations = {\r\n        raw_strength: {\r\n            name: 'Raw Strength Focus',\r\n            description: 'Maximize strength in competition lifts',\r\n            tmRecommendation: '90% for heavy singles practice',\r\n            assistanceApproach: 'Focus on competition commands and technique',\r\n            frequencyRecommendation: '2-3× per week per lift',\r\n            specificFeatures: [\r\n                'Competition command practice',\r\n                'Pause training integration',\r\n                'Heavy single preparation',\r\n                'Technique refinement focus'\r\n            ]\r\n        },\r\n        muscle_building: {\r\n            name: 'Muscle Building Focus',\r\n            description: 'Maximize muscle hypertrophy and size',\r\n            tmRecommendation: '85% for higher volume tolerance',\r\n            assistanceApproach: 'Emphasize bodybuilding accessories',\r\n            frequencyRecommendation: 'Higher total weekly volume',\r\n            specificFeatures: [\r\n                'Higher assistance volume',\r\n                'Hypertrophy rep ranges',\r\n                'Bodybuilding accessories',\r\n                'Volume progression focus'\r\n            ]\r\n        },\r\n        athletic_performance: {\r\n            name: 'Athletic Performance',\r\n            description: 'Enhance sport-specific performance',\r\n            tmRecommendation: '85-90% based on sport demands',\r\n            assistanceApproach: 'Sport-specific movement patterns',\r\n            frequencyRecommendation: 'Balanced with sport training',\r\n            specificFeatures: [\r\n                'Explosive movement training',\r\n                'Sport-specific conditioning',\r\n                'Power development focus',\r\n                'Recovery prioritization'\r\n            ]\r\n        }\r\n    };\r\n\r\n    const autoRegulationFeatures = [\r\n        {\r\n            id: 'rpeIntegration',\r\n            name: 'RPE Integration',\r\n            description: 'Stop AMRAP sets at RPE 8-9',\r\n            implementation: 'Use perceived exertion to guide set termination'\r\n        },\r\n        {\r\n            id: 'biofeedback',\r\n            name: 'Biofeedback Monitoring',\r\n            description: 'Adjust based on HRV, sleep, mood',\r\n            implementation: 'Daily readiness assessments guide training adjustments'\r\n        },\r\n        {\r\n            id: 'flexibleProgression',\r\n            name: 'Flexible Progression',\r\n            description: 'Skip increments if performance drops',\r\n            implementation: 'Maintain TM when performance indicators decline'\r\n        }\r\n    ];\r\n\r\n    const specializationOptions = [\r\n        {\r\n            id: 'weakLiftFocus',\r\n            name: 'Weak Lift Specialization',\r\n            description: 'Extra frequency or volume for lagging lift',\r\n            options: ['squat', 'bench', 'deadlift', 'overhead_press']\r\n        },\r\n        {\r\n            id: 'pauseTraining',\r\n            name: 'Pause Training',\r\n            description: 'Incorporate competition commands',\r\n            implementation: 'Add paused reps to build competition readiness'\r\n        },\r\n        {\r\n            id: 'speedWork',\r\n            name: 'Speed Work',\r\n            description: 'Dynamic effort percentages',\r\n            implementation: '50-60% for 8-10 sets of 3 reps with maximum speed'\r\n        }\r\n    ];\r\n\r\n    const handleGoalChange = (goal) => {\r\n        const next = { ...customizationConfig, primaryGoal: goal };\r\n        setCustomizationConfig(next);\r\n        updateStepData({ customizationConfig: next });\r\n    };\r\n\r\n    const handleFeatureToggle = (category, feature) => {\r\n        const next = {\r\n            ...customizationConfig,\r\n            [category]: {\r\n                ...customizationConfig[category],\r\n                [feature]: !customizationConfig[category][feature]\r\n            }\r\n        };\r\n        setCustomizationConfig(next);\r\n        updateStepData({ customizationConfig: next });\r\n    };\r\n\r\n    const handleSpecializationToggle = (feature) => {\r\n        if (feature === 'weakLiftFocus') return; // handled separately\r\n        const next = {\r\n            ...customizationConfig,\r\n            specialization: {\r\n                ...customizationConfig.specialization,\r\n                [feature]: !customizationConfig.specialization?.[feature]\r\n            }\r\n        };\r\n        setCustomizationConfig(next);\r\n        updateStepData({ customizationConfig: next });\r\n    };\r\n\r\n    const handleWeakLiftSelection = (lift) => {\r\n        const current = customizationConfig.specialization?.weakLiftFocus;\r\n        const next = {\r\n            ...customizationConfig,\r\n            specialization: {\r\n                ...customizationConfig.specialization,\r\n                weakLiftFocus: current === lift ? '' : lift\r\n            }\r\n        };\r\n        setCustomizationConfig(next);\r\n        updateStepData({ customizationConfig: next });\r\n    };\r\n\r\n    const updateStepData = (updates) => {\r\n        updateData({\r\n            customizationConfig,\r\n            ...updates\r\n        });\r\n    };\r\n\r\n    const isStepComplete = () => {\r\n        return customizationConfig.primaryGoal !== '' &&\r\n            (customizationConfig.repRecordTracking?.enabled ||\r\n                customizationConfig.printableSheets?.enabled ||\r\n                customizationConfig.progressVisualization?.enabled);\r\n    };\r\n\r\n    const liftNames = {\r\n        squat: 'Squat',\r\n        bench: 'Bench Press',\r\n        deadlift: 'Deadlift',\r\n        overhead_press: 'Overhead Press'\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div>\r\n                <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n                    Step 18: Program Customization and Advanced Considerations\r\n                </h3>\r\n                <p className=\"text-gray-400\">\r\n                    Advanced features, goal-specific adjustments, and progress tracking systems\r\n                </p>\r\n            </div>\r\n\r\n            {/* Philosophy Box */}\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-blue-300 font-medium mb-2\">Advanced 5/3/1 Philosophy</h4>\r\n                        <ul className=\"text-blue-200 text-sm space-y-1\">\r\n                            <li>• The basics work for 99% of lifters - use advanced features sparingly</li>\r\n                            <li>• Goal-specific adjustments should enhance, not complicate the program</li>\r\n                            <li>• Progress tracking and rep records are essential for long-term success</li>\r\n                            <li>• Auto-regulation can help but should not replace systematic progression</li>\r\n                            <li>• Specialization phases are temporary - return to balanced training</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Primary Goal Selection */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Target className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    Primary Training Goal\r\n                </h4>\r\n                <p className=\"text-gray-400 mb-4 text-sm\">\r\n                    Select your primary goal to customize program recommendations\r\n                </p>\r\n\r\n                <div className=\"space-y-4\">\r\n                    {Object.entries(goalConfigurations).map(([key, goal]) => (\r\n                        <div\r\n                            key={key}\r\n                            onClick={() => handleGoalChange(key)}\r\n                            className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${customizationConfig.primaryGoal === key\r\n                                ? 'border-red-500 bg-red-900/20'\r\n                                : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                }`}\r\n                        >\r\n                            <div className=\"flex items-center justify-between mb-2\">\r\n                                <h5 className=\"text-white font-medium\">{goal.name}</h5>\r\n                                {customizationConfig.primaryGoal === key && (\r\n                                    <CheckCircle className=\"w-5 h-5 text-red-400\" />\r\n                                )}\r\n                            </div>\r\n                            <p className=\"text-gray-400 text-sm mb-3\">{goal.description}</p>\r\n\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-xs\">\r\n                                <div>\r\n                                    <span className=\"text-gray-500 font-medium\">TM Recommendation:</span>\r\n                                    <p className=\"text-gray-300\">{goal.tmRecommendation}</p>\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"text-gray-500 font-medium\">Assistance Approach:</span>\r\n                                    <p className=\"text-gray-300\">{goal.assistanceApproach}</p>\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"text-gray-500 font-medium\">Frequency:</span>\r\n                                    <p className=\"text-gray-300\">{goal.frequencyRecommendation}</p>\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"text-gray-500 font-medium\">Features:</span>\r\n                                    <p className=\"text-gray-300\">{goal.specificFeatures.join(', ')}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Rep Record Tracking */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Award className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    Rep Record Tracking System\r\n                </h4>\r\n                <p className=\"text-gray-400 mb-4 text-sm\">\r\n                    Configure automatic tracking of personal records and progress metrics\r\n                </p>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    {Object.entries({\r\n                        prDetection: 'Automatic PR Detection',\r\n                        e1rmCalculation: 'Estimated 1RM Tracking',\r\n                        historicalData: 'Historical Data Comparison',\r\n                        enabled: 'Enable Rep Record System'\r\n                    }).map(([key, label]) => (\r\n                        <div\r\n                            key={key}\r\n                            onClick={() => handleFeatureToggle('repRecordTracking', key)}\r\n                            className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${(customizationConfig.repRecordTracking?.[key])\r\n                                ? 'border-red-500 bg-red-900/20'\r\n                                : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                }`}\r\n                        >\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <span className=\"text-white font-medium\">{label}</span>\r\n                                {(customizationConfig.repRecordTracking?.[key]) && (\r\n                                    <CheckCircle className=\"w-4 h-4 text-red-400\" />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Auto-Regulation Features */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Brain className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    Auto-Regulation Options (Advanced)\r\n                </h4>\r\n                <p className=\"text-gray-400 mb-4 text-sm\">\r\n                    Advanced features for experienced lifters to auto-regulate training\r\n                </p>\r\n\r\n                <div className=\"mb-4\">\r\n                    <div\r\n                        onClick={() => handleFeatureToggle('autoRegulation', 'enabled')}\r\n                        className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${(customizationConfig.autoRegulation?.enabled)\r\n                            ? 'border-red-500 bg-red-900/20'\r\n                            : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                            }`}\r\n                    >\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <span className=\"text-white font-medium\">Enable Auto-Regulation</span>\r\n                            {(customizationConfig.autoRegulation?.enabled) && (\r\n                                <CheckCircle className=\"w-4 h-4 text-red-400\" />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {(customizationConfig.autoRegulation?.enabled) && (\r\n                    <div className=\"space-y-3\">\r\n                        {autoRegulationFeatures.map((feature) => (\r\n                            <div\r\n                                key={feature.id}\r\n                                onClick={() => handleFeatureToggle('autoRegulation', feature.id)}\r\n                                className={`p-3 rounded-lg border cursor-pointer transition-all ${(customizationConfig.autoRegulation?.[feature.id])\r\n                                    ? 'border-red-500 bg-red-900/10'\r\n                                    : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                    }`}\r\n                            >\r\n                                <div className=\"flex items-center justify-between mb-1\">\r\n                                    <h6 className=\"text-white font-medium\">{feature.name}</h6>\r\n                                    {(customizationConfig.autoRegulation?.[feature.id]) && (\r\n                                        <CheckCircle className=\"w-4 h-4 text-red-400\" />\r\n                                    )}\r\n                                </div>\r\n                                <p className=\"text-gray-400 text-sm mb-1\">{feature.description}</p>\r\n                                <p className=\"text-gray-500 text-xs\">{feature.implementation}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Specialization Phases */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <Zap className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    Specialization Phases (Temporary)\r\n                </h4>\r\n                <p className=\"text-gray-400 mb-4 text-sm\">\r\n                    Temporary modifications to address specific weaknesses or goals\r\n                </p>\r\n\r\n                <div className=\"mb-4\">\r\n                    <div\r\n                        onClick={() => handleFeatureToggle('specialization', 'enabled')}\r\n                        className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${(customizationConfig.specialization?.enabled)\r\n                            ? 'border-red-500 bg-red-900/20'\r\n                            : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                            }`}\r\n                    >\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <span className=\"text-white font-medium\">Enable Specialization Phase</span>\r\n                            {(customizationConfig.specialization?.enabled) && (\r\n                                <CheckCircle className=\"w-4 h-4 text-red-400\" />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {(customizationConfig.specialization?.enabled) && (\r\n                    <div className=\"space-y-4\">\r\n                        {/* Weak Lift Focus */}\r\n                        <div className=\"p-4 bg-gray-800 rounded-lg\">\r\n                            <h6 className=\"text-white font-medium mb-3\">Weak Lift Focus</h6>\r\n                            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\r\n                                {Object.entries(liftNames).map(([key, name]) => (\r\n                                    <div\r\n                                        key={key}\r\n                                        onClick={() => handleWeakLiftSelection(key)}\r\n                                        className={`p-2 text-center rounded border cursor-pointer transition-all ${(customizationConfig.specialization?.weakLiftFocus) === key\r\n                                            ? 'border-red-500 bg-red-900/20 text-red-300'\r\n                                            : 'border-gray-600 bg-gray-700 text-gray-300 hover:border-gray-500'\r\n                                            }`}\r\n                                    >\r\n                                        <span className=\"text-sm\">{name}</span>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Other Specialization Options */}\r\n                        {specializationOptions.slice(1).map((option) => (\r\n                            <div\r\n                                key={option.id}\r\n                                onClick={() => handleSpecializationToggle(option.id)}\r\n                                className={`p-3 rounded-lg border cursor-pointer transition-all ${(customizationConfig.specialization?.[option.id])\r\n                                    ? 'border-red-500 bg-red-900/10'\r\n                                    : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                    }`}\r\n                            >\r\n                                <div className=\"flex items-center justify-between mb-1\">\r\n                                    <h6 className=\"text-white font-medium\">{option.name}</h6>\r\n                                    {(customizationConfig.specialization?.[option.id]) && (\r\n                                        <CheckCircle className=\"w-4 h-4 text-red-400\" />\r\n                                    )}\r\n                                </div>\r\n                                <p className=\"text-gray-400 text-sm\">{option.description}</p>\r\n                                {option.implementation && (\r\n                                    <p className=\"text-gray-500 text-xs mt-1\">{option.implementation}</p>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Progress Tracking Features */}\r\n            <div className=\"bg-gray-700 p-6 rounded-lg\">\r\n                <h4 className=\"text-lg font-medium text-white mb-4 flex items-center\">\r\n                    <BarChart3 className=\"w-5 h-5 mr-2 text-red-400\" />\r\n                    Progress Tracking & Visualization\r\n                </h4>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div className=\"space-y-3\">\r\n                        <h6 className=\"text-white font-medium\">Printable Workout Sheets</h6>\r\n                        {Object.entries({\r\n                            enabled: 'Enable Printable Sheets',\r\n                            includeWarmups: 'Include Warm-up Sets',\r\n                            includeNotes: 'Include Notes Section',\r\n                            weeklyFormat: 'Weekly Format Layout'\r\n                        }).map(([key, label]) => (\r\n                            <div\r\n                                key={key}\r\n                                onClick={() => handleFeatureToggle('printableSheets', key)}\r\n                                className={`p-3 rounded-lg border cursor-pointer transition-all ${(customizationConfig.printableSheets?.[key])\r\n                                    ? 'border-red-500 bg-red-900/10'\r\n                                    : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                    }`}\r\n                            >\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <span className=\"text-white text-sm\">{label}</span>\r\n                                    {(customizationConfig.printableSheets?.[key]) && (\r\n                                        <CheckCircle className=\"w-4 h-4 text-red-400\" />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className=\"space-y-3\">\r\n                        <h6 className=\"text-white font-medium\">Progress Visualization</h6>\r\n                        {Object.entries({\r\n                            enabled: 'Enable Progress Charts',\r\n                            cycleComparison: 'Cycle-to-Cycle Comparison',\r\n                            strengthTrends: 'Strength Trend Analysis',\r\n                            volumeTracking: 'Volume Load Tracking'\r\n                        }).map(([key, label]) => (\r\n                            <div\r\n                                key={key}\r\n                                onClick={() => handleFeatureToggle('progressVisualization', key)}\r\n                                className={`p-3 rounded-lg border cursor-pointer transition-all ${(customizationConfig.progressVisualization?.[key])\r\n                                    ? 'border-red-500 bg-red-900/10'\r\n                                    : 'border-gray-600 bg-gray-800 hover:border-gray-500'\r\n                                    }`}\r\n                            >\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <span className=\"text-white text-sm\">{label}</span>\r\n                                    {(customizationConfig.progressVisualization?.[key]) && (\r\n                                        <CheckCircle className=\"w-4 h-4 text-red-400\" />\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Advanced User Warning */}\r\n            <div className=\"bg-yellow-900/20 border border-yellow-600 p-4 rounded-lg\">\r\n                <div className=\"flex items-start space-x-2\">\r\n                    <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                    <div className=\"text-yellow-200 text-sm\">\r\n                        <h5 className=\"font-medium mb-2\">Advanced Feature Guidelines</h5>\r\n                        <ul className=\"space-y-1 text-xs\">\r\n                            <li>• Start with basic 5/3/1 before adding advanced features</li>\r\n                            <li>• Auto-regulation should enhance, not replace systematic progression</li>\r\n                            <li>• Specialization phases are temporary (3-6 weeks maximum)</li>\r\n                            <li>• Track progress consistently but don't overcomplicate</li>\r\n                            <li>• Most lifters need only basic program setup - advanced features are optional</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Completion Status */}\r\n            {isStepComplete() && (\r\n                <div className=\"bg-green-900/20 border border-green-500 p-4 rounded-lg\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <CheckCircle className=\"w-5 h-5 text-green-400\" />\r\n                        <span className=\"text-green-300 font-medium\">\r\n                            🎉 Complete 5/3/1 System Setup Finished!\r\n                            Your {goalConfigurations[customizationConfig.primaryGoal]?.name || 'custom'} program is ready with\r\n                            {customizationConfig.autoRegulation?.enabled ? ' auto-regulation' : ''}\r\n                            {customizationConfig.specialization?.enabled ? ' and specialization features' : ''} enabled.\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useCallback, useMemo, useEffect, useRef } from 'react';\r\nimport { ChevronLeft, ChevronRight, CheckCircle, Target, Calendar, TrendingUp, Zap, Settings, Play, RefreshCw, RotateCcw } from 'lucide-react';\r\nimport * as EngineModule from '../../lib/engines/FiveThreeOneEngine.js';\r\nimport { supabase } from '../../lib/api/supabaseClient';\r\nimport { syncToSupabase, loadFromSupabase } from '../../context/appHelpers';\r\nimport { toast } from 'react-toastify';\r\n\r\n// Import features from ProgramWizard531V2 for feature preservation\r\n// These are imported but might not be used immediately - kept for consolidation purposes\r\nimport { useProgramV2 } from '../../methods/531/contexts/ProgramContextV2.jsx';\r\n// Uncomment these if needed for implementation\r\n// import { loadPack531BBB } from '../../methods/531/loadPack.js';\r\n// import { buildSchedule, buildSchedule4Day, SPLIT_4DAY_A } from '../../methods/531/schedule.js';\r\nimport Step1MaxTesting from './steps/Step1MaxTesting';\r\nimport ScheduleSelectionStep from './steps/ScheduleSelectionStep';\r\nimport Step2CoreLifts from './steps/Step2CoreLifts';\r\nimport Step3ScheduleWarmup from './steps/Step3ScheduleWarmup';\r\nimport Step4CycleStructure from './steps/Step4CycleStructure';\r\nimport Step5Week1Execution from './steps/Step5Week1Execution';\r\nimport Step6Week2Execution from './steps/Step6Week2Execution';\r\nimport Step7Week3Execution from './steps/Step7Week3Execution';\r\nimport Step8DeloadWeek from './steps/Step8DeloadWeek';\r\nimport Step9CycleProgression from './steps/Step9CycleProgression';\r\nimport Step10StallingReset from './steps/Step10StallingReset';\r\nimport Step12BoringButBig from './steps/Step12BoringButBig';\r\nimport Step11AssistanceWork from './steps/Step11AssistanceWork';\r\nimport Step13Triumvirate from './steps/Step13Triumvirate';\r\nimport Step14PeriodizationBible from './steps/Step14PeriodizationBible';\r\nimport Step15Bodyweight from './steps/Step15Bodyweight';\r\nimport Step16JackShit from './steps/Step16JackShit';\r\nimport Step17ConditioningRecovery from './steps/Step17ConditioningRecovery';\r\nimport Step18ProgramCustomization from './steps/Step18ProgramCustomization';\r\n\r\nconst FiveThreeOneEngine = EngineModule.default ?? EngineModule.FiveThreeOneEngine;\r\n\r\n// Complete 5/3/1 workflow component - CONSOLIDATED VERSION\r\n// This combines the functionality of both FiveThreeOneWorkflow and ProgramWizard531V2\r\nexport default function FiveThreeOneWorkflow() {\r\n    const STORAGE_KEY = 'five_three_one_workflow';\r\n    const [currentStep, setCurrentStep] = useState(0);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Method pack integration (from ProgramWizard531V2)\r\n    const packRef = useRef(null);\r\n\r\n    const [programData, setProgramData] = useState({\r\n        // Maxes data\r\n        maxes: {\r\n            squat: null,\r\n            bench: null,\r\n            deadlift: null,\r\n            press: null\r\n        },\r\n        // Configuration\r\n        schedule: 'four_day',\r\n        percentageOption: 'option1',\r\n        assistanceTemplate: 'bbb',\r\n        assistanceLevel: 'intermediate',\r\n        deadliftStyle: 'touch_and_go',\r\n        includeConditioning: false,\r\n        conditioningType: 'prowler',\r\n        includeWarmup: true,\r\n        microProgression: false,\r\n        roundTo: 5,\r\n        // Generated program\r\n        generatedProgram: null\r\n    });\r\n\r\n    // Load any previously saved workflow (local) on mount\r\n    useEffect(() => {\r\n        try {\r\n            const raw = localStorage.getItem(STORAGE_KEY);\r\n            if (raw) {\r\n                const parsed = JSON.parse(raw);\r\n                // Basic shape guard\r\n                if (parsed && typeof parsed === 'object') {\r\n                    setProgramData(prev => ({ ...prev, ...parsed }));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.warn('Failed to load saved 5/3/1 workflow from localStorage:', e);\r\n        }\r\n    }, []);\r\n\r\n    // If logged in, try to load from Supabase (preferred); falls back to local if absent\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const { data: { user } } = await supabase.auth.getUser();\r\n                if (!user?.id) return;\r\n\r\n                const cloud = await loadFromSupabase('user_programs', user.id);\r\n                if (cloud?.five_three_one_workflow && typeof cloud.five_three_one_workflow === 'object') {\r\n                    setProgramData(prev => ({ ...prev, ...cloud.five_three_one_workflow }));\r\n                }\r\n            } catch (e) {\r\n                console.log('Cloud load skipped:', e?.message || e);\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n    // Method pack integration (from ProgramWizard531V2)\r\n    // This allows loading predefined templates and settings\r\n    useEffect(() => {\r\n        let cancelled = false;\r\n\r\n        async function loadMethodPack() {\r\n            try {\r\n                // Dynamic import to keep the bundle size smaller\r\n                const { loadPack531BBB } = await import('../../methods/531/loadPack.js');\r\n                const pack = await loadPack531BBB();\r\n\r\n                if (!cancelled && pack) {\r\n                    packRef.current = pack;\r\n                    console.log('Loaded 531 BBB pack:', pack);\r\n\r\n                    // Optionally apply pack settings to current state if needed\r\n                    // This is where you would integrate any unique features from ProgramWizard531V2\r\n                }\r\n            } catch (e) {\r\n                console.warn('Failed to load method pack:', e);\r\n            }\r\n        }\r\n\r\n        loadMethodPack();\r\n\r\n        return () => { cancelled = true; };\r\n    }, []);\r\n\r\n    // Lightweight local autosave on edits\r\n    useEffect(() => {\r\n        try {\r\n            localStorage.setItem(STORAGE_KEY, JSON.stringify(programData));\r\n        } catch (e) {\r\n            console.warn('Autosave failed (localStorage):', e);\r\n        }\r\n    }, [programData]);\r\n\r\n    // Error boundary\r\n    if (error) {\r\n        return (\r\n            <div className=\"bg-red-900 border border-red-700 rounded-lg p-6\">\r\n                <h3 className=\"text-red-300 font-bold mb-2\">Error in 5/3/1 Workflow</h3>\r\n                <p className=\"text-red-400\">{error.message}</p>\r\n                <button\r\n                    onClick={() => setError(null)}\r\n                    className=\"mt-4 bg-red-600 text-white px-4 py-2 rounded\"\r\n                >\r\n                    Reset\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const handleStartProgram = useCallback(() => {\r\n        console.log('🎯 Generating Complete 5/3/1 Program...');\r\n\r\n        try {\r\n            // Initialize the FiveThreeOneEngine\r\n            const engine = new FiveThreeOneEngine();\r\n\r\n            // Validate maxes first\r\n            const validationErrors = engine.validateMaxes(programData.maxes);\r\n            if (validationErrors.length > 0) {\r\n                throw new Error(`Validation failed: ${validationErrors.join(', ')}`);\r\n            }\r\n\r\n            // Generate the complete program with all configuration\r\n            const generatedProgram = engine.generateCycle(\r\n                engine.calculateAllTrainingMaxes(programData.maxes, programData.roundTo),\r\n                {\r\n                    schedule: programData.schedule,\r\n                    percentageOption: programData.percentageOption,\r\n                    assistanceTemplate: programData.assistanceTemplate,\r\n                    assistanceLevel: programData.assistanceLevel,\r\n                    roundTo: programData.roundTo,\r\n                    includeWarmup: programData.includeWarmup\r\n                }\r\n            );\r\n\r\n            // Update state with the generated program\r\n            setProgramData(prev => ({\r\n                ...prev,\r\n                generatedProgram: generatedProgram\r\n            }));\r\n\r\n            console.log('✅ Generated Complete Program:', generatedProgram);\r\n\r\n        } catch (error) {\r\n            console.error('❌ Error generating program:', error);\r\n            setError(error);\r\n        }\r\n    }, [programData.maxes, programData.schedule, programData.percentageOption, programData.assistanceTemplate, programData.assistanceLevel, programData.roundTo, programData.includeWarmup]);\r\n\r\n    // Comprehensive steps array with new components\r\n    const steps = useMemo(() => [\r\n        {\r\n            id: 'maxes',\r\n            title: 'Current Maxes',\r\n            description: 'Enter 1RMs or calculate from rep tests',\r\n            icon: Target,\r\n            component: Step1MaxTesting\r\n        },\r\n        {\r\n            id: 'core_lifts',\r\n            title: 'Core Lifts + Frequency',\r\n            description: 'Choose core lifts, equipment, injuries, and weekly frequency',\r\n            icon: Target,\r\n            component: Step2CoreLifts\r\n        },\r\n        {\r\n            id: 'schedule',\r\n            title: 'Training Schedule',\r\n            description: 'Choose 4/3/2/1 day schedule',\r\n            icon: Calendar,\r\n            component: ScheduleSelectionStep\r\n        },\r\n        {\r\n            id: 'warmup',\r\n            title: 'Warm-Up & Mobility',\r\n            description: 'Configure warm-up style and mobility work',\r\n            icon: Calendar,\r\n            component: Step3ScheduleWarmup\r\n        },\r\n        {\r\n            id: 'cycle',\r\n            title: '5/3/1 Cycle Structure',\r\n            description: 'Loading option, deadlift style, and multi-cycle preview',\r\n            icon: TrendingUp,\r\n            component: Step4CycleStructure\r\n        },\r\n        {\r\n            id: 'week1',\r\n            title: 'Week 1 – 3×5 Execution',\r\n            description: 'Rep targets, bad day protocol, rests, and cues',\r\n            icon: Play,\r\n            component: Step5Week1Execution\r\n        },\r\n        {\r\n            id: 'week2',\r\n            title: 'Week 2 – 5/3/1 Execution',\r\n            description: 'Heavier week with 3s; log AMRAP and notes',\r\n            icon: TrendingUp,\r\n            component: Step6Week2Execution\r\n        },\r\n        {\r\n            id: 'week3',\r\n            title: 'Week 3 – 1+ Execution',\r\n            description: 'Peak week; log singles and AMRAP',\r\n            icon: TrendingUp,\r\n            component: Step7Week3Execution\r\n        },\r\n        {\r\n            id: 'week4',\r\n            title: 'Week 4 – Deload',\r\n            description: 'Light week to recover; no AMRAP sets',\r\n            icon: RefreshCw,\r\n            component: Step8DeloadWeek\r\n        },\r\n        {\r\n            id: 'progression',\r\n            title: 'Cycle Progression',\r\n            description: 'Set new training maxes for next cycle',\r\n            icon: TrendingUp,\r\n            component: Step9CycleProgression\r\n        },\r\n        {\r\n            id: 'stalling',\r\n            title: 'Stalling & Reset',\r\n            description: 'Detect stalls and apply resets as needed',\r\n            icon: RotateCcw,\r\n            component: Step10StallingReset\r\n        },\r\n        {\r\n            id: 'percentages',\r\n            title: 'BBB Template',\r\n            description: 'Configure Boring But Big assistance (5x10 at 50-70% TM)',\r\n            icon: Zap,\r\n            component: Step12BoringButBig\r\n        },\r\n        {\r\n            id: 'triumvirate',\r\n            title: 'Triumvirate Template',\r\n            description: 'One main lift + one supplemental + one assistance per day (exact manual defaults, editable)',\r\n            icon: Zap,\r\n            component: Step13Triumvirate\r\n        },\r\n        {\r\n            id: 'assistance',\r\n            title: 'Assistance Work – Philosophy & Guidelines',\r\n            description: 'Select assistance exercises by main lift; follow principles for training economy and weak-point training',\r\n            icon: Zap,\r\n            component: Step11AssistanceWork\r\n        },\r\n        {\r\n            id: 'periodization_bible',\r\n            title: 'Periodization Bible Template',\r\n            description: 'High-volume template for advanced lifters with movement pattern selections and volume controls',\r\n            icon: Zap,\r\n            component: Step14PeriodizationBible\r\n        },\r\n        {\r\n            id: 'options',\r\n            title: 'Program Options',\r\n            description: 'Conditioning, warm-up, progression',\r\n            icon: Settings,\r\n            component: 'ProgramOptionsStep'\r\n        },\r\n        {\r\n            id: 'bodyweight',\r\n            title: 'Bodyweight Template',\r\n            description: 'Equipment-free assistance template with progression methods and rep schemes',\r\n            icon: Zap,\r\n            component: Step15Bodyweight\r\n        },\r\n        {\r\n            id: 'jack_shit',\r\n            title: 'Jack Shit Template',\r\n            description: 'Minimalist 5/3/1: main lifts only with optional brief conditioning',\r\n            icon: Zap,\r\n            component: Step16JackShit\r\n        },\r\n        {\r\n            id: 'conditioning_recovery',\r\n            title: 'Conditioning & Recovery Integration',\r\n            description: 'Configure conditioning frequency/methods and essential recovery protocols (sleep, stress, tissue)',\r\n            icon: Zap,\r\n            component: Step17ConditioningRecovery\r\n        },\r\n        {\r\n            id: 'program_customization',\r\n            title: 'Program Customization & Advanced',\r\n            description: 'Goal-based adjustments, PR tracking, auto-regulation, specialization, and visualization options',\r\n            icon: Settings,\r\n            component: Step18ProgramCustomization\r\n        },\r\n        {\r\n            id: 'generate',\r\n            title: 'Program Generation',\r\n            description: 'Generate complete 5/3/1 program',\r\n            icon: Play,\r\n            component: 'ProgramGenerationStep'\r\n        }\r\n    ], []);    // Optimized step handlers\r\n    const handleNext = useCallback(() => {\r\n        setCurrentStep(prev => Math.min(prev + 1, steps.length - 1));\r\n    }, [steps.length]);\r\n\r\n    const handlePrevious = useCallback(() => {\r\n        setCurrentStep(prev => Math.max(0, prev - 1));\r\n    }, []);\r\n\r\n    const handleStepChange = useCallback((stepIndex) => {\r\n        setCurrentStep(stepIndex);\r\n    }, []);\r\n\r\n    const renderStepContent = () => {\r\n        const step = steps[currentStep];\r\n        const StepComponent = step?.component;\r\n\r\n        if (typeof StepComponent === 'string') {\r\n            // Nicely formatted placeholder with clear title/description\r\n            return (\r\n                <div className=\"space-y-4\">\r\n                    <div className=\"bg-blue-900/20 border border-blue-600 rounded-lg p-4\">\r\n                        <h3 className=\"text-white font-semibold text-lg\">\r\n                            {step?.title || 'Upcoming Feature'}\r\n                        </h3>\r\n                        {step?.description && (\r\n                            <p className=\"text-gray-300 mt-1\">\r\n                                {step.description}\r\n                            </p>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"bg-gray-700 border border-gray-600 rounded-lg p-4 text-gray-300\">\r\n                        This step isn’t available yet in this build. You can still review previous steps or continue planning.\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (!StepComponent) return null;\r\n\r\n        switch (step.id) {\r\n            case 'maxes':\r\n                return (\r\n                    <Step1MaxTesting\r\n                        data={programData.step1 || {}}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step1: { ...(prev.step1 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            case 'core_lifts':\r\n                return (\r\n                    <Step2CoreLifts\r\n                        data={programData.step2 || {}}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step2: { ...(prev.step2 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            case 'schedule':\r\n                return (\r\n                    <ScheduleSelectionStep\r\n                        programData={programData}\r\n                        setProgramData={setProgramData}\r\n                    />\r\n                );\r\n            case 'warmup':\r\n                // Force all sections to show by providing complete stub data\r\n                return (\r\n                    <Step3ScheduleWarmup\r\n                        data={{\r\n                            trainingMaxes: programData?.step1?.trainingMaxes || {},\r\n                            schedule: { frequency: '4day' },\r\n                            warmup: { policy: 'standard' },\r\n                            supplemental: { type: 'fsl' },\r\n                            programmingApproach: 'basic',\r\n                            leaderAnchorPattern: '2+1',\r\n                            assistanceConfig: { mode: 'minimal' },\r\n                            equipmentMap: { barbell: true, plates: true, bench: true, squat_rack: true }\r\n                        }}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step3: { ...(prev.step3 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            case 'cycle':\r\n                return (\r\n                    <Step4CycleStructure\r\n                        data={programData.step4 || { trainingMaxes: programData?.step1?.trainingMaxes || {} }}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step4: { ...(prev.step4 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            case 'week1':\r\n                return (\r\n                    <Step5Week1Execution\r\n                        data={programData.step5 || {\r\n                            trainingMaxes: programData?.step1?.trainingMaxes || {},\r\n                            loadingOption: programData?.step4?.loadingOption || 1\r\n                        }}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step5: { ...(prev.step5 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            case 'week2':\r\n                return (\r\n                    <Step6Week2Execution\r\n                        data={programData.step6 || {\r\n                            trainingMaxes: programData?.step1?.trainingMaxes || {},\r\n                            loadingOption: programData?.step4?.loadingOption || 1,\r\n                            schedule: programData?.schedule || { frequency: '4day', liftOrder: ['overhead_press', 'deadlift', 'bench', 'squat'] },\r\n                            week1Results: programData?.step5 || {}\r\n                        }}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step6: { ...(prev.step6 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            case 'week3':\r\n                return (\r\n                    <Step7Week3Execution\r\n                        data={programData.step7 || {\r\n                            trainingMaxes: programData?.step1?.trainingMaxes || {},\r\n                            loadingOption: programData?.step4?.loadingOption || 1,\r\n                            schedule: programData?.schedule || { frequency: '4day', liftOrder: ['overhead_press', 'deadlift', 'bench', 'squat'] },\r\n                            week2Results: programData?.step6?.week2Results || {}\r\n                        }}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step7: { ...(prev.step7 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            case 'week4':\r\n                return (\r\n                    <Step8DeloadWeek\r\n                        data={programData.step8 || {\r\n                            trainingMaxes: programData?.step1?.trainingMaxes || {},\r\n                            schedule: programData?.schedule || { frequency: '4day', liftOrder: ['overhead_press', 'deadlift', 'bench', 'squat'] }\r\n                        }}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step8: { ...(prev.step8 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            case 'progression':\r\n                return (\r\n                    <Step9CycleProgression\r\n                        data={programData.step9 || {\r\n                            trainingMaxes: programData?.step1?.trainingMaxes || {},\r\n                            week3Results: programData?.step7?.week3Results || {},\r\n                            schedule: programData?.schedule || { frequency: '4day', liftOrder: ['overhead_press', 'deadlift', 'bench', 'squat'] }\r\n                        }}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step9: { ...(prev.step9 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            case 'stalling':\r\n                return (\r\n                    <Step10StallingReset\r\n                        data={programData.step10 || {\r\n                            trainingMaxes: programData?.step1?.trainingMaxes || {},\r\n                            week3Results: programData?.step7?.week3Results || {},\r\n                            previousCycles: programData?.previousCycles || [],\r\n                            schedule: programData?.schedule || { frequency: '4day', liftOrder: ['overhead_press', 'deadlift', 'bench', 'squat'] }\r\n                        }}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step10: { ...(prev.step10 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            case 'percentages':\r\n                return (\r\n                    <Step12BoringButBig\r\n                        data={programData.step12 || {\r\n                            trainingMaxes: programData?.step1?.trainingMaxes || {},\r\n                            bbbConfig: {},\r\n                            bbbPairings: {},\r\n                            bbbIntensity: 'beginner',\r\n                            bbbAdditionalAssistance: []\r\n                        }}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step12: { ...(prev.step12 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            case 'triumvirate':\r\n                return (\r\n                    <Step13Triumvirate\r\n                        data={programData.step13 || { triumvirateConfig: {}, triumvirateCustom: {} }}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step13: { ...(prev.step13 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            case 'assistance':\r\n                return (\r\n                    <Step11AssistanceWork\r\n                        data={programData.step11 || { assistanceWork: {}, customExercises: [] }}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step11: { ...(prev.step11 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            case 'periodization_bible':\r\n                return (\r\n                    <Step14PeriodizationBible\r\n                        data={programData.step14 || { bibleConfig: {}, bibleExercises: {}, bibleVolumeLevel: 'moderate', bibleExperience: 'intermediate' }}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step14: { ...(prev.step14 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            case 'bodyweight':\r\n                return (\r\n                    <Step15Bodyweight\r\n                        data={programData.step15 || { bodyweightConfig: { selectedExercises: { squat: [], bench: [], deadlift: [], overhead_press: [] }, progressionMethod: 'volume', repScheme: 'standard', frequency: 'daily' }, customExercises: {} }}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step15: { ...(prev.step15 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            case 'jack_shit':\r\n                return (\r\n                    <Step16JackShit\r\n                        data={programData.step16 || { jackShitConfig: { sessionDuration: '20-30', conditioningReplacement: false, conditioningType: 'low_impact', conditioningDuration: 15, focusAreas: [], additionalNotes: '' } }}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step16: { ...(prev.step16 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            case 'conditioning_recovery':\r\n                return (\r\n                    <Step17ConditioningRecovery\r\n                        data={programData.step17 || { conditioningConfig: {}, recoveryConfig: {} }}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step17: { ...(prev.step17 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            case 'program_customization':\r\n                return (\r\n                    <Step18ProgramCustomization\r\n                        data={programData.step18 || { customizationConfig: {} }}\r\n                        updateData={(partial) =>\r\n                            setProgramData(prev => ({\r\n                                ...prev,\r\n                                step18: { ...(prev.step18 || {}), ...partial }\r\n                            }))\r\n                        }\r\n                    />\r\n                );\r\n            default:\r\n                return <StepComponent programData={programData} setProgramData={setProgramData} />;\r\n        }\r\n    };\r\n\r\n    const isStepValid = useCallback(() => {\r\n        const currentStepId = steps[currentStep]?.id;\r\n        switch (currentStepId) {\r\n            case 'maxes':\r\n                {\r\n                    const tms = programData?.step1?.trainingMaxes;\r\n                    if (!tms) return false;\r\n                    const required = ['squat', 'bench', 'deadlift', 'overhead_press'];\r\n                    return required.every(k => typeof tms[k] === 'number' && tms[k] > 0);\r\n                }\r\n            case 'core_lifts':\r\n                {\r\n                    const s2 = programData?.step2 || {};\r\n                    const lifts = s2.coreLifts;\r\n                    if (!lifts) return false;\r\n                    const allSelected = ['squat', 'bench', 'deadlift', 'overhead_press'].every(k => typeof lifts[k] === 'string' && lifts[k] !== '');\r\n                    const customNamesOk = Object.entries(lifts).every(([k, v]) => v !== 'custom' ? true : !!(s2.customLifts && s2.customLifts[k] && s2.customLifts[k].trim()))\r\n                    const freqOk = typeof s2.trainingFrequency === 'string' && s2.trainingFrequency.length > 0;\r\n                    const schedOk = typeof s2.schedulePattern === 'string' && s2.schedulePattern.length > 0;\r\n                    return allSelected && customNamesOk && freqOk && schedOk;\r\n                }\r\n            case 'schedule':\r\n                return !!programData.schedule;\r\n            case 'warmup':\r\n                return !!programData?.step3?.warmUpStyle;\r\n            case 'cycle':\r\n                {\r\n                    const s4 = programData?.step4 || {};\r\n                    const hasTms = s4.trainingMaxes && Object.keys(s4.trainingMaxes).length > 0;\r\n                    const deadliftOk = typeof s4.deadliftStyle === 'string' && s4.deadliftStyle.length > 0;\r\n                    return !!hasTms && deadliftOk;\r\n                }\r\n            case 'week1':\r\n                {\r\n                    const s5 = programData?.step5 || {};\r\n                    const execOk = typeof s5.executionStrategy === 'string' && s5.executionStrategy.length > 0;\r\n                    const badDayOk = typeof s5.badDayProtocol === 'string' && s5.badDayProtocol.length > 0;\r\n                    return execOk && badDayOk;\r\n                }\r\n            case 'week2':\r\n                {\r\n                    const s6 = programData?.step6 || {};\r\n                    const sched = s6.schedule || { liftOrder: [] };\r\n                    const order = Array.isArray(sched.liftOrder) ? sched.liftOrder : [];\r\n                    if (order.length === 0) return false;\r\n                    const res = s6.week2Results || {};\r\n                    return order.every(l => res?.[l]?.completed);\r\n                }\r\n            case 'week3':\r\n                {\r\n                    const s7 = programData?.step7 || {};\r\n                    const sched = s7.schedule || programData?.schedule || { liftOrder: [] };\r\n                    const order = Array.isArray(sched.liftOrder) ? sched.liftOrder : [];\r\n                    if (order.length === 0) return false;\r\n                    const res = s7.week3Results || {};\r\n                    return order.every(l => res?.[l]?.completed);\r\n                }\r\n            case 'week4':\r\n                {\r\n                    const s8 = programData?.step8 || {};\r\n                    const sched = s8.schedule || programData?.schedule || { liftOrder: [] };\r\n                    const order = Array.isArray(sched.liftOrder) ? sched.liftOrder : [];\r\n                    if (order.length === 0) return false;\r\n                    const res = s8.deloadResults || {};\r\n                    return order.every(l => res?.[l]?.completed);\r\n                }\r\n            case 'progression':\r\n                {\r\n                    const s9 = programData?.step9 || {};\r\n                    const sched = s9.schedule || programData?.schedule || { liftOrder: [] };\r\n                    const order = Array.isArray(sched.liftOrder) ? sched.liftOrder : [];\r\n                    if (order.length === 0) return false;\r\n                    const tms = s9.newTrainingMaxes || {};\r\n                    return order.every(l => typeof tms?.[l] === 'number' && tms?.[l] > 0);\r\n                }\r\n            case 'stalling':\r\n                {\r\n                    const s10 = programData?.step10 || {};\r\n                    const sched = s10.schedule || programData?.schedule || { liftOrder: [] };\r\n                    const order = Array.isArray(sched.liftOrder) ? sched.liftOrder : [];\r\n                    if (order.length === 0) return false;\r\n                    const decisions = s10.resetDecisions || {};\r\n                    return order.every(l => decisions?.[l] !== undefined);\r\n                }\r\n            case 'assistance':\r\n                {\r\n                    const s11 = programData?.step11 || {};\r\n                    const aw = s11.assistanceWork || {};\r\n                    const counts = Object.values(aw).map((list) => (Array.isArray(list) ? list.length : 0));\r\n                    return counts.some((c) => c > 0);\r\n                }\r\n            case 'percentages':\r\n                {\r\n                    const s12 = programData?.step12 || {};\r\n                    const pairs = s12.bbbPairings || {};\r\n                    const intensity = s12.bbbIntensity || 'beginner';\r\n                    const required = ['squat', 'bench', 'deadlift', 'overhead_press'];\r\n                    const allPaired = required.every((k) => typeof pairs[k] === 'string' && pairs[k]);\r\n                    return allPaired && !!intensity;\r\n                }\r\n            case 'triumvirate':\r\n                {\r\n                    const s13 = programData?.step13 || {};\r\n                    const cfg = s13.triumvirateConfig || {};\r\n                    const dayKeys = ['press', 'deadlift', 'bench', 'squat'];\r\n                    if (Object.keys(cfg).length !== 4) return false;\r\n                    return dayKeys.every(d => cfg?.[d]?.supplemental && cfg?.[d]?.assistance);\r\n                }\r\n            case 'periodization_bible':\r\n                {\r\n                    const s14 = programData?.step14 || {};\r\n                    const ex = s14.bibleExercises || {};\r\n                    // Require each day to have minimum 4 exercises selected across categories\r\n                    const dayKeys = ['press', 'deadlift', 'bench', 'squat'];\r\n                    const getTotal = (day) => Object.values(ex[day] || {}).reduce((acc, arr) => acc + (Array.isArray(arr) ? arr.length : 0), 0);\r\n                    return dayKeys.every(day => getTotal(day) >= 4);\r\n                }\r\n            case 'bodyweight':\r\n                {\r\n                    const s15 = programData?.step15 || {};\r\n                    const cfg = s15.bodyweightConfig || { selectedExercises: {} };\r\n                    const anySelected = Object.values(cfg.selectedExercises || {}).some(arr => Array.isArray(arr) && arr.length > 0);\r\n                    return anySelected && !!cfg.progressionMethod && !!cfg.repScheme;\r\n                }\r\n            case 'jack_shit':\r\n                {\r\n                    const s16 = programData?.step16 || {};\r\n                    const cfg = s16.jackShitConfig || {};\r\n                    return !!cfg.sessionDuration && !!cfg.conditioningType && Array.isArray(cfg.focusAreas) && cfg.focusAreas.length > 0;\r\n                }\r\n            case 'conditioning_recovery':\r\n                {\r\n                    const s17 = programData?.step17 || {};\r\n                    const cond = s17.conditioningConfig || {};\r\n                    const rec = s17.recoveryConfig || {};\r\n                    const hi = cond?.highIntensity || { exercises: [] };\r\n                    const li = cond?.lowIntensity || { exercises: [] };\r\n                    const hasConditioning = (cond?.frequency ?? 0) >= 2 && !!cond?.primaryMethod && ((hi.exercises?.length || 0) > 0 || (li.exercises?.length || 0) > 0);\r\n                    const sleepTarget = rec?.sleep?.targetHours ?? 0;\r\n                    const hasRecovery = sleepTarget >= 7 && (rec?.stressManagement?.techniques?.length || 0) > 0 && (rec?.softTissue?.methods?.length || 0) > 0;\r\n                    return hasConditioning && hasRecovery;\r\n                }\r\n            case 'program_customization':\r\n                {\r\n                    const s18 = programData?.step18 || {};\r\n                    const cfg = s18.customizationConfig || {};\r\n                    const goalOk = typeof cfg.primaryGoal === 'string' && cfg.primaryGoal.length > 0;\r\n                    const trackingOk = (cfg.repRecordTracking?.enabled) || (cfg.printableSheets?.enabled) || (cfg.progressVisualization?.enabled);\r\n                    return !!goalOk && !!trackingOk;\r\n                }\r\n            // Add validation for other steps as they are implemented\r\n            default:\r\n                return true; // Default to true for unimplemented steps\r\n        }\r\n    }, [currentStep, programData, steps]);\r\n\r\n    // Persist the current workflow to the user's Supabase profile row\r\n    const handleSaveToProfile = useCallback(async () => {\r\n        try {\r\n            const { data: { user } } = await supabase.auth.getUser();\r\n            if (!user?.id) {\r\n                toast.info('Saved locally. Log in to sync with your profile.');\r\n                return;\r\n            }\r\n\r\n            const payload = {\r\n                program_type: 'five_three_one',\r\n                program_name: '5/3/1 Workflow',\r\n                five_three_one_workflow: programData,\r\n                version: 1\r\n            };\r\n\r\n            const result = await syncToSupabase('user_programs', payload, user.id);\r\n            if (result) {\r\n                toast.success('Program saved to your profile.');\r\n            } else {\r\n                toast.info('Saved locally (cloud table unavailable).');\r\n            }\r\n        } catch (e) {\r\n            console.error('Save to profile failed:', e);\r\n            toast.error('Could not save to profile. Data is saved locally.');\r\n        }\r\n    }, [programData]);\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Sticky Top Step Header */}\r\n            <div className=\"sticky top-0 z-20 bg-gray-900/95 backdrop-blur border-b border-gray-800 -mx-6 px-6 py-3\">\r\n                <div className=\"flex flex-col gap-2 md:flex-row md:items-center md:justify-between\">\r\n                    <div className=\"text-sm text-gray-300\">\r\n                        Step {currentStep + 1} of {steps.length}\r\n                        <span className=\"mx-2 text-gray-600\">|</span>\r\n                        <span className=\"text-white font-medium\">{steps[currentStep]?.title}</span>\r\n                    </div>\r\n                    <div className=\"flex flex-wrap items-center gap-2 max-w-full\">\r\n                        {steps.map((s, idx) => (\r\n                            <button\r\n                                key={s.id}\r\n                                onClick={() => handleStepChange(idx)}\r\n                                className={`text-xs px-2.5 py-1.5 rounded-full whitespace-nowrap border ${idx === currentStep\r\n                                    ? 'bg-red-600 text-white border-red-600'\r\n                                    : idx < currentStep\r\n                                        ? 'bg-green-700/30 text-green-300 border-green-700'\r\n                                        : 'bg-gray-800 text-gray-300 border-gray-700 hover:bg-gray-700'\r\n                                    }`}\r\n                                title={s.description}\r\n                            >\r\n                                {idx + 1}. {s.title}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                {/* Slim progress bar */}\r\n                <div className=\"mt-2 h-1 w-full bg-gray-800 rounded\">\r\n                    <div\r\n                        className=\"h-1 bg-red-600 rounded\"\r\n                        style={{ width: `${Math.round((currentStep / (steps.length - 1)) * 100)}%` }}\r\n                        aria-hidden=\"true\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            {/* Single navigation lives in sticky header above; progress pills removed to avoid duplication */}\r\n\r\n            {/* Step Content */}\r\n            <div className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n                <div className=\"mb-4\">\r\n                    <p className=\"text-gray-400 text-sm\">{steps[currentStep].description}</p>\r\n                </div>\r\n\r\n                {renderStepContent()}\r\n            </div>\r\n\r\n            {/* Navigation */}\r\n            <div className=\"flex justify-between items-center gap-2\">\r\n                <button\r\n                    onClick={handlePrevious}\r\n                    disabled={currentStep === 0}\r\n                    className=\"flex items-center gap-2 px-4 py-2 bg-gray-600 text-white rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-gray-700 transition-colors\"\r\n                >\r\n                    <ChevronLeft className=\"w-4 h-4\" />\r\n                    Previous\r\n                </button>\r\n\r\n                <div className=\"flex items-center gap-2\">\r\n                    <button\r\n                        onClick={handleSaveToProfile}\r\n                        className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\r\n                    >\r\n                        Save to Profile\r\n                    </button>\r\n\r\n                    <button\r\n                        onClick={handleNext}\r\n                        disabled={!isStepValid()}\r\n                        className=\"flex items-center gap-2 px-4 py-2 bg-red-600 text-white rounded-lg disabled:opacity-50 disabled:cursor-not-allowed hover:bg-red-700 transition-colors\"\r\n                    >\r\n                        Next\r\n                        <ChevronRight className=\"w-4 h-4\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","// src/hooks/useUnsavedChanges.js\r\nimport { useEffect } from 'react';\r\n\r\nexport function useUnsavedChanges(enabled) {\r\n    useEffect(() => {\r\n        if (!enabled) return;\r\n        const handler = (e) => {\r\n            e.preventDefault();\r\n            e.returnValue = '';\r\n            return '';\r\n        };\r\n        window.addEventListener('beforeunload', handler);\r\n        return () => window.removeEventListener('beforeunload', handler);\r\n    }, [enabled]);\r\n}\r\n","// src/components/program/BuilderCTA.jsx\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function BuilderCTA() {\r\n    return (\r\n        <div className=\"bg-gray-800/60 border border-gray-700 rounded-lg p-4 mb-4\">\r\n            <div className=\"flex items-center justify-between gap-3\">\r\n                <div>\r\n                    <div className=\"text-white font-semibold\">New 5/3/1 Program Builder</div>\r\n                    <div className=\"text-gray-400 text-sm\">Seven-step flow with templates first, then schedule, loading and assistance.</div>\r\n                </div>\r\n                <Link\r\n                    to=\"/program/builder/531\"\r\n                    className=\"px-4 py-2 rounded border border-red-500 hover:bg-red-600/10\"\r\n                >\r\n                    Open Builder\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { createContext, useContext, useReducer, useCallback, useEffect } from 'react';\r\nimport { useApp } from '../context';\r\n\r\n// Program state management\r\nconst ProgramContext = createContext();\r\n\r\n// Action types - Enhanced for methodology-first workflow\r\nexport const PROGRAM_ACTIONS = {\r\n    SET_ACTIVE_TAB: 'SET_ACTIVE_TAB',\r\n    SET_SELECTED_LEVEL: 'SET_SELECTED_LEVEL',\r\n    SET_PROGRAM_DATA: 'SET_PROGRAM_DATA',\r\n    SET_ASSESSMENT_DATA: 'SET_ASSESSMENT_DATA',\r\n    SET_TRAINING_MODEL: 'SET_TRAINING_MODEL',\r\n    SET_BLOCK_SEQUENCE: 'SET_BLOCK_SEQUENCE',\r\n    SET_BLOCK_PARAMETERS: 'SET_BLOCK_PARAMETERS',\r\n    SET_LOADING_RESULTS: 'SET_LOADING_RESULTS',\r\n    SET_GENERATED_PROGRAM: 'SET_GENERATED_PROGRAM',\r\n    SET_LOADING: 'SET_LOADING',\r\n    SET_ERROR: 'SET_ERROR',\r\n    UPDATE_BLOCK_PARAMETER: 'UPDATE_BLOCK_PARAMETER',\r\n    TOGGLE_PERIODIZATION_MODE: 'TOGGLE_PERIODIZATION_MODE',\r\n    SET_BRYANT_INTEGRATED: 'SET_BRYANT_INTEGRATED',\r\n    SET_LEGACY_MIGRATION_STATUS: 'SET_LEGACY_MIGRATION_STATUS',\r\n\r\n    // NEW: Methodology-first workflow actions\r\n    SET_CURRENT_STEP: 'SET_CURRENT_STEP',\r\n    SET_SELECTED_SYSTEM: 'SET_SELECTED_SYSTEM', // NOW STEP 1\r\n    SET_METHODOLOGY_CONTEXT: 'SET_METHODOLOGY_CONTEXT',\r\n    UPDATE_PRIMARY_GOAL: 'UPDATE_PRIMARY_GOAL', // NOW STEP 2 (methodology-aware)\r\n    UPDATE_EXPERIENCE_LEVEL: 'UPDATE_EXPERIENCE_LEVEL', // NOW STEP 3\r\n    UPDATE_TIMELINE: 'UPDATE_TIMELINE', // NOW STEP 4\r\n    UPDATE_METHODOLOGY_ASSESSMENT: 'UPDATE_METHODOLOGY_ASSESSMENT', // NOW STEP 5\r\n    UPDATE_INJURY_SCREEN: 'UPDATE_INJURY_SCREEN', // NOW STEP 6\r\n    VALIDATE_STEP_ACCESS: 'VALIDATE_STEP_ACCESS',\r\n    SET_OPT_PHASE: 'SET_OPT_PHASE', // Set OPT phase and details\r\n    // SET_METHODOLOGY_CONTEXT defined above\r\n\r\n    // NEW: Population modification actions\r\n    SET_POPULATION_TYPE: 'SET_POPULATION_TYPE'\r\n};\r\n\r\n// Initial state - Enhanced for methodology-first workflow\r\nconst initialState = {\r\n    // UI State - CHANGED: Start with methodology selection\r\n    activeTab: 'system-recommendation', // Start with Step 1: Methodology Selection\r\n    selectedLevel: null,\r\n\r\n    // NEW: Methodology-first workflow state\r\n    currentStep: 1, // Start with methodology selection\r\n    selectedSystem: '', // Primary methodology choice (Step 1)\r\n    methodologyContext: null, // Enhanced methodology information\r\n    selectedOPTPhase: null, // Selected NASM OPT phase\r\n    optPhaseDetails: {}, // OPT phase configuration details\r\n\r\n    // NEW: Methodology-aware state\r\n    primaryGoal: '',\r\n    methodologyAwareGoals: [], // Goals filtered by methodology\r\n    goalMethodologyMapping: null, // How goal relates to methodology\r\n    experienceLevel: null,\r\n    methodologyExperience: null, // Experience with specific methodology\r\n    timeline: null, // Enhanced timeline with methodology considerations\r\n    methodologyTimeline: null, // Methodology-specific timeline considerations\r\n    methodologyAssessment: {}, // Dynamic assessment data by methodology\r\n    injuryScreen: null, // Structured injury screening data\r\n    methodologyInjuryConsiderations: null,\r\n\r\n    isLoading: false,\r\n    error: null,\r\n    showPreview: false,\r\n    usePeriodization: true, // Controls which tab set to use\r\n\r\n    // Program Data - ENHANCED: Now methodology-aware\r\n    programData: {\r\n        name: '',\r\n        goal: 'hypertrophy',\r\n        duration: 12,\r\n        trainingDays: 4,\r\n        selectedTemplate: null,\r\n        methodology: null // NEW: methodology reference\r\n    },\r\n\r\n    // Assessment Data\r\n    assessmentData: null,\r\n    isLoadingAssessment: true,\r\n    assessmentError: null,\r\n\r\n    // Training Configuration\r\n    selectedTrainingModel: '',\r\n    blockSequence: [\r\n        {\r\n            id: 'accumulation',\r\n            name: 'Accumulation',\r\n            duration: 4,\r\n            color: '#dc2626',\r\n            phase: 'accumulation',\r\n            description: 'High volume phase for building work capacity and muscle growth'\r\n        },\r\n        {\r\n            id: 'intensification',\r\n            name: 'Intensification',\r\n            duration: 3,\r\n            color: '#b91c1c',\r\n            phase: 'intensification',\r\n            description: 'Moderate volume, higher intensity phase for strength development'\r\n        },\r\n        {\r\n            id: 'realization',\r\n            name: 'Realization',\r\n            duration: 2,\r\n            color: '#991b1b',\r\n            phase: 'realization',\r\n            description: 'Low volume, peak intensity phase for expressing maximum strength'\r\n        },\r\n        {\r\n            id: 'deload',\r\n            name: 'Deload',\r\n            duration: 1,\r\n            color: '#374151',\r\n            phase: 'deload',\r\n            description: 'Recovery phase with reduced volume and intensity for adaptation'\r\n        }\r\n    ],\r\n\r\n    // Block Parameters\r\n    blockParameters: {\r\n        accumulation: { loading: 60, movement: 'Bilateral', loadingResults: null },\r\n        intensification: { loading: 75, movement: 'Unilateral', loadingResults: null },\r\n        realization: { loading: 85, movement: 'Bilateral', loadingResults: null },\r\n        deload: { loading: 40, movement: 'Bilateral', loadingResults: null }\r\n    },\r\n    activeBlockTab: 'accumulation',\r\n\r\n    // Training Methods\r\n    selectedTrainingMethod: '',\r\n    methodSFR: '',\r\n\r\n    // Energy Systems\r\n    selectedEnergySystem: '',\r\n    energySystemNote: '',\r\n\r\n    // Recovery/Deload\r\n    selectedDeloadType: '',\r\n    deloadProtocol: '',\r\n\r\n    // Individual Considerations\r\n    trainingAge: '',\r\n    chronotype: '',\r\n    chronotypeNote: '',\r\n\r\n    // Tech Integration\r\n    selectedTechIntegration: '',\r\n    techNote: '',\r\n\r\n    // Bryant Periodization Integration\r\n    bryantIntegrated: false,\r\n    bryantFeatures: [],\r\n    bryantValidation: null,\r\n\r\n    // Legacy Migration\r\n    legacyMigrationStatus: null,\r\n    migrationReport: null,\r\n\r\n    // Results\r\n    loadingResults: null,\r\n    generatedProgram: null,\r\n\r\n    // Exercise Parameters\r\n    selectedExercise: '',\r\n    tempo: '3010',\r\n    rom: 'Full',\r\n\r\n    // Population modifications\r\n    populationType: null // 'pregnancy', 'elderly', 'injury', or null for general population\r\n};\r\n\r\n// Reducer function\r\nfunction programReducer(state, action) {\r\n    switch (action.type) {\r\n        case PROGRAM_ACTIONS.SET_ACTIVE_TAB:\r\n            return { ...state, activeTab: action.payload };\r\n\r\n        case PROGRAM_ACTIONS.SET_SELECTED_LEVEL:\r\n            return { ...state, selectedLevel: action.payload };\r\n\r\n        case PROGRAM_ACTIONS.SET_PROGRAM_DATA:\r\n            return { ...state, programData: { ...state.programData, ...action.payload } };\r\n\r\n        case PROGRAM_ACTIONS.SET_ASSESSMENT_DATA:\r\n            return { ...state, assessmentData: action.payload };\r\n\r\n        case PROGRAM_ACTIONS.SET_TRAINING_MODEL:\r\n            return { ...state, selectedTrainingModel: action.payload };\r\n\r\n        case PROGRAM_ACTIONS.SET_BLOCK_SEQUENCE:\r\n            return { ...state, blockSequence: action.payload };\r\n\r\n        case PROGRAM_ACTIONS.SET_BLOCK_PARAMETERS:\r\n            return { ...state, blockParameters: action.payload };\r\n\r\n        case PROGRAM_ACTIONS.UPDATE_BLOCK_PARAMETER:\r\n            return {\r\n                ...state,\r\n                blockParameters: {\r\n                    ...state.blockParameters,\r\n                    [action.payload.blockId]: {\r\n                        ...state.blockParameters[action.payload.blockId],\r\n                        ...action.payload.updates\r\n                    }\r\n                }\r\n            };\r\n\r\n        case PROGRAM_ACTIONS.SET_LOADING_RESULTS:\r\n            return { ...state, loadingResults: action.payload };\r\n\r\n        case PROGRAM_ACTIONS.SET_GENERATED_PROGRAM:\r\n            return { ...state, generatedProgram: action.payload };\r\n\r\n        case PROGRAM_ACTIONS.SET_LOADING:\r\n            return { ...state, isLoading: action.payload };\r\n\r\n        case PROGRAM_ACTIONS.SET_ERROR:\r\n            return { ...state, error: action.payload };\r\n\r\n        case PROGRAM_ACTIONS.TOGGLE_PERIODIZATION_MODE:\r\n            return {\r\n                ...state,\r\n                usePeriodization: action.payload,\r\n                activeTab: action.payload ? 'goals' : 'overview'\r\n            };\r\n\r\n        case PROGRAM_ACTIONS.SET_BRYANT_INTEGRATED:\r\n            return {\r\n                ...state,\r\n                bryantIntegrated: action.payload.integrated,\r\n                bryantFeatures: action.payload.features || [],\r\n                bryantValidation: action.payload.validation || null\r\n            };\r\n\r\n        case PROGRAM_ACTIONS.SET_LEGACY_MIGRATION_STATUS:\r\n            return {\r\n                ...state,\r\n                legacyMigrationStatus: action.payload.status,\r\n                migrationReport: action.payload.report || null\r\n            };\r\n\r\n        // Streamlined workflow cases\r\n        case PROGRAM_ACTIONS.SET_CURRENT_STEP:\r\n            return { ...state, currentStep: action.payload };\r\n\r\n        case PROGRAM_ACTIONS.UPDATE_PRIMARY_GOAL:\r\n            return { ...state, primaryGoal: action.payload };\r\n\r\n        case PROGRAM_ACTIONS.SET_SELECTED_SYSTEM:\r\n            return { ...state, selectedSystem: action.payload };\r\n\r\n        case PROGRAM_ACTIONS.UPDATE_TIMELINE:\r\n            return { ...state, timeline: { ...state.timeline, ...action.payload } };\r\n\r\n        case PROGRAM_ACTIONS.UPDATE_INJURY_SCREEN:\r\n            return { ...state, injuryScreen: { ...state.injuryScreen, ...action.payload } };\r\n\r\n        case PROGRAM_ACTIONS.SET_OPT_PHASE:\r\n            return {\r\n                ...state,\r\n                selectedOPTPhase: action.payload.phase,\r\n                optPhaseDetails: action.payload.details\r\n            };\r\n\r\n        case PROGRAM_ACTIONS.SET_METHODOLOGY_CONTEXT:\r\n            return {\r\n                ...state,\r\n                methodologyContext: action.payload\r\n            };\r\n\r\n        case PROGRAM_ACTIONS.SET_POPULATION_TYPE:\r\n            return { ...state, populationType: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Context Provider\r\nexport const ProgramProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(programReducer, initialState);\r\n\r\n    // Safe access to AppContext\r\n    let appContextData;\r\n    try {\r\n        appContextData = useApp();\r\n    } catch (error) {\r\n        console.warn('ProgramProvider: Unable to access AppContext:', error);\r\n        appContextData = { state: { assessment: null } };\r\n    }\r\n\r\n    const assessment = appContextData?.state?.assessment;\r\n\r\n    // Load assessment data when component mounts or when AppContext assessment changes\r\n    useEffect(() => {\r\n        const loadAssessmentData = () => {\r\n            try {\r\n                let assessmentData = null;\r\n\r\n                // First, try to get from AppContext\r\n                if (assessment) {\r\n                    assessmentData = assessment;\r\n                    console.log('Assessment loaded from AppContext:', assessmentData);\r\n                } else {\r\n                    // Fallback to localStorage\r\n                    const localProfile = localStorage.getItem('userProfile');\r\n                    if (localProfile) {\r\n                        const profile = JSON.parse(localProfile);\r\n                        assessmentData = {\r\n                            primaryGoal: profile.primaryGoal,\r\n                            trainingExperience: profile.trainingExperience,\r\n                            timeline: profile.timeline,\r\n                            recommendedSystem: profile.recommendedSystem,\r\n                            createdAt: profile.createdAt\r\n                        };\r\n                        console.log('Assessment loaded from localStorage:', assessmentData);\r\n                    }\r\n                }\r\n\r\n                if (assessmentData) {\r\n                    dispatch({\r\n                        type: PROGRAM_ACTIONS.SET_ASSESSMENT_DATA,\r\n                        payload: assessmentData\r\n                    });\r\n                } else {\r\n                    console.log('No assessment data found in AppContext or localStorage');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error loading assessment data:', error);\r\n                dispatch({\r\n                    type: PROGRAM_ACTIONS.SET_ERROR,\r\n                    payload: 'Failed to load assessment data'\r\n                });\r\n            }\r\n        };\r\n\r\n        loadAssessmentData();\r\n    }, [assessment]); // Re-run when AppContext assessment changes\r\n\r\n    // Action creators - simplified without nested useCallback\r\n    const setActiveTab = useCallback((tab) => dispatch({ type: PROGRAM_ACTIONS.SET_ACTIVE_TAB, payload: tab }), []);\r\n    const setSelectedLevel = useCallback((level) => dispatch({ type: PROGRAM_ACTIONS.SET_SELECTED_LEVEL, payload: level }), []);\r\n    const setProgramData = useCallback((data) => dispatch({ type: PROGRAM_ACTIONS.SET_PROGRAM_DATA, payload: data }), []);\r\n    const setAssessmentData = useCallback((data) => dispatch({ type: PROGRAM_ACTIONS.SET_ASSESSMENT_DATA, payload: data }), []);\r\n    const setTrainingModel = useCallback((model) => dispatch({ type: PROGRAM_ACTIONS.SET_TRAINING_MODEL, payload: model }), []);\r\n    const setBlockSequence = useCallback((sequence) => dispatch({ type: PROGRAM_ACTIONS.SET_BLOCK_SEQUENCE, payload: sequence }), []);\r\n    const setBlockParameters = useCallback((params) => dispatch({ type: PROGRAM_ACTIONS.SET_BLOCK_PARAMETERS, payload: params }), []);\r\n    const updateBlockParameter = useCallback((blockId, updates) => dispatch({\r\n        type: PROGRAM_ACTIONS.UPDATE_BLOCK_PARAMETER,\r\n        payload: { blockId, updates }\r\n    }), []);\r\n    const setLoadingResults = useCallback((results) => dispatch({ type: PROGRAM_ACTIONS.SET_LOADING_RESULTS, payload: results }), []);\r\n    const setGeneratedProgram = useCallback((program) => dispatch({ type: PROGRAM_ACTIONS.SET_GENERATED_PROGRAM, payload: program }), []);\r\n    const setLoading = useCallback((loading) => dispatch({ type: PROGRAM_ACTIONS.SET_LOADING, payload: loading }), []);\r\n    const setError = useCallback((error) => dispatch({ type: PROGRAM_ACTIONS.SET_ERROR, payload: error }), []);\r\n    const togglePeriodizationMode = useCallback((usePeriodization) => dispatch({ type: PROGRAM_ACTIONS.TOGGLE_PERIODIZATION_MODE, payload: usePeriodization }), []);\r\n    const setBryantIntegrated = useCallback((integrated, features, validation) => dispatch({\r\n        type: PROGRAM_ACTIONS.SET_BRYANT_INTEGRATED,\r\n        payload: { integrated, features, validation }\r\n    }), []);\r\n    const setLegacyMigrationStatus = useCallback((status, report) => dispatch({\r\n        type: PROGRAM_ACTIONS.SET_LEGACY_MIGRATION_STATUS,\r\n        payload: { status, report }\r\n    }), []);\r\n\r\n    // Streamlined workflow action creators\r\n    const setCurrentStep = useCallback((step) => dispatch({ type: PROGRAM_ACTIONS.SET_CURRENT_STEP, payload: step }), []);\r\n    const updatePrimaryGoal = useCallback((goal) => dispatch({ type: PROGRAM_ACTIONS.UPDATE_PRIMARY_GOAL, payload: goal }), []);\r\n    const setSelectedSystem = useCallback((system) => dispatch({ type: PROGRAM_ACTIONS.SET_SELECTED_SYSTEM, payload: system }), []);\r\n    const updateTimeline = useCallback((timeline) => dispatch({ type: PROGRAM_ACTIONS.UPDATE_TIMELINE, payload: timeline }), []);\r\n    const updateInjuryScreen = useCallback((injuryData) => dispatch({ type: PROGRAM_ACTIONS.UPDATE_INJURY_SCREEN, payload: injuryData }), []);\r\n    const setOPTPhase = useCallback((phase, details) => dispatch({\r\n        type: PROGRAM_ACTIONS.SET_OPT_PHASE,\r\n        payload: { phase, details }\r\n    }), []);\r\n    const setMethodologyContext = useCallback((context) => dispatch({\r\n        type: PROGRAM_ACTIONS.SET_METHODOLOGY_CONTEXT,\r\n        payload: context\r\n    }), []);\r\n    const setPopulationType = useCallback((populationType) => dispatch({ type: PROGRAM_ACTIONS.SET_POPULATION_TYPE, payload: populationType }), []);\r\n\r\n    const actions = {\r\n        setActiveTab,\r\n        setSelectedLevel,\r\n        setProgramData,\r\n        setAssessmentData,\r\n        setTrainingModel,\r\n        setBlockSequence,\r\n        setBlockParameters,\r\n        updateBlockParameter,\r\n        setLoadingResults,\r\n        setGeneratedProgram,\r\n        setLoading,\r\n        setError,\r\n        togglePeriodizationMode,\r\n        setBryantIntegrated,\r\n        setLegacyMigrationStatus,\r\n        // Streamlined workflow actions\r\n        setCurrentStep,\r\n        updatePrimaryGoal,\r\n        setSelectedSystem,\r\n        updateTimeline,\r\n        updateInjuryScreen,\r\n        setOPTPhase,\r\n        setMethodologyContext,\r\n        setPopulationType\r\n    };\r\n\r\n    return (\r\n        <ProgramContext.Provider value={{ state, actions }}>\r\n            {children}\r\n        </ProgramContext.Provider>\r\n    );\r\n};\r\n\r\n// Custom hook to use the context\r\nexport const useProgramContext = () => {\r\n    const context = useContext(ProgramContext);\r\n    if (!context) {\r\n        throw new Error('useProgramContext must be used within a ProgramProvider');\r\n    }\r\n    return context;\r\n};\r\n","import React from 'react';\r\n\r\n/**\r\n * Consistent page wrapper component for all pages\r\n * Provides sticky header, breadcrumbs, title section, and content area\r\n */\r\nexport default function PageLayout({\r\n    title,\r\n    subtitle,\r\n    breadcrumbs,\r\n    actions,\r\n    children,\r\n    className,\r\n    contentClassName,\r\n    glass = false,\r\n    fullWidth = false\r\n}) {\r\n    return (\r\n        <main className={`min-h-screen ${className || ''}`}>\r\n            {/* Sticky Header */}\r\n            <header className=\"sticky-header backdrop-blur-header py-4\">\r\n                <div className=\"container mx-auto flex items-center justify-between\">\r\n                    <div>\r\n                        {/* Breadcrumbs Navigation */}\r\n                        {breadcrumbs && (\r\n                            <nav className=\"breadcrumb-nav mb-2\">\r\n                                {breadcrumbs.map((crumb, index) => (\r\n                                    <React.Fragment key={index}>\r\n                                        {crumb.to ? (\r\n                                            <a\r\n                                                href={crumb.to}\r\n                                                className=\"text-gray-400 hover:text-white transition-colors\"\r\n                                            >\r\n                                                {crumb.label}\r\n                                            </a>\r\n                                        ) : (\r\n                                            <span className=\"text-white\">{crumb.label}</span>\r\n                                        )}\r\n                                        {index < breadcrumbs.length - 1 && (\r\n                                            <span className=\"text-gray-500 mx-2\">/</span>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                ))}\r\n                            </nav>\r\n                        )}\r\n\r\n                        {/* Page Title */}\r\n                        {title && (\r\n                            <h1 className=\"text-2xl md:text-3xl font-semibold text-white\">\r\n                                {title}\r\n                            </h1>\r\n                        )}\r\n\r\n                        {/* Page Subtitle */}\r\n                        {subtitle && (\r\n                            <p className=\"text-gray-400 mt-1\">\r\n                                {subtitle}\r\n                            </p>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Action Buttons */}\r\n                    {actions && (\r\n                        <div className=\"flex gap-2\">\r\n                            {actions}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </header>\r\n\r\n            {/* Content Section */}\r\n            <section className={`${fullWidth ? '' : 'container mx-auto'} py-6 md:py-8`}>\r\n                <div className={`space-y-6 ${glass ? 'glass-morphism-subtle' : ''} ${contentClassName || ''}`}>\r\n                    {children}\r\n                </div>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\n/**\r\n * Reusable section card component for content areas\r\n * Provides consistent styling for page sections\r\n */\r\nexport function PageSection({ title, children, className = '' }) {\r\n    return (\r\n        <section className={`card-powerhouse premium-card space-y-4 ${className}`}>\r\n            {title && (\r\n                <h2 className=\"text-xl font-semibold text-white\">\r\n                    {title}\r\n                </h2>\r\n            )}\r\n            <div>\r\n                {children}\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","/**\r\n * NASM OPT Model Implementation for 4-Phase PowerHouse Workflow\r\n * \r\n * Complete NASM Optimum Performance Training model including:\r\n * - Postural distortion patterns and muscle imbalances\r\n * - Movement assessment protocols (Overhead Squat, Single-leg, Push/Pull)\r\n * - Corrective exercise prescriptions\r\n * - OPT phase progressions with acute variables\r\n * - Population-specific modifications\r\n * - Performance testing protocols\r\n */\r\n\r\n// ===== POSTURAL DISTORTION PATTERNS (NASM Ch. 6) =====\r\n\r\nexport const nasmPosturalDistortions = {\r\n    'pronation_distortion': {\r\n        name: 'Pronation Distortion Syndrome',\r\n        description: 'Foot pronation leading to kinetic chain compensations',\r\n        shortOveractive: [\r\n            'gastrocnemius', 'soleus', 'peroneals', 'adductors',\r\n            'hip_flexor_complex', 'biceps_femoris_short_head'\r\n        ],\r\n        lengthenedUnderactive: [\r\n            'anterior_tibialis', 'posterior_tibialis', 'vastus_medialis',\r\n            'gluteus_medius', 'gluteus_maximus', 'hip_external_rotators'\r\n        ],\r\n        alteredMechanics: [\r\n            'foot_pronation', 'knee_adduction', 'knee_internal_rotation',\r\n            'foot_external_rotation', 'decreased_ankle_dorsiflexion', 'decreased_inversion'\r\n        ],\r\n        commonInjuries: [\r\n            'plantar_fasciitis', 'posterior_tibialis_tendonitis', 'shin_splints',\r\n            'patellar_tendonitis', 'low_back_pain'\r\n        ],\r\n        correctiveStrategy: {\r\n            smr: ['calves', 'peroneals', 'biceps_femoris'],\r\n            staticStretch: ['calf_stretch', 'standing_hip_flexor'],\r\n            activation: ['single_leg_balance_reach', 'tube_walking']\r\n        }\r\n    },\r\n\r\n    'lower_crossed': {\r\n        name: 'Lower Crossed Syndrome',\r\n        description: 'Hip flexor tightness and glute weakness pattern',\r\n        shortOveractive: [\r\n            'gastrocnemius', 'soleus', 'hip_flexor_complex', 'adductors',\r\n            'latissimus_dorsi', 'erector_spinae'\r\n        ],\r\n        lengthenedUnderactive: [\r\n            'anterior_tibialis', 'posterior_tibialis', 'gluteus_maximus',\r\n            'gluteus_medius', 'transversus_abdominis', 'internal_oblique'\r\n        ],\r\n        alteredMechanics: [\r\n            'increased_lumbar_extension', 'decreased_hip_extension'\r\n        ],\r\n        commonInjuries: [\r\n            'hamstring_strains', 'anterior_knee_pain', 'low_back_pain'\r\n        ],\r\n        correctiveStrategy: {\r\n            smr: ['hip_flexors', 'quads', 'lats'],\r\n            staticStretch: ['hip_flexor_stretch', 'lat_stretch_on_ball'],\r\n            activation: ['glute_bridges', 'quadruped_arm_opposite_leg']\r\n        }\r\n    },\r\n\r\n    'upper_crossed': {\r\n        name: 'Upper Crossed Syndrome',\r\n        description: 'Forward head posture and rounded shoulders',\r\n        shortOveractive: [\r\n            'upper_trapezius', 'levator_scapulae', 'sternocleidomastoid', 'scalenes',\r\n            'latissimus_dorsi', 'teres_major', 'subscapularis', 'pectorals'\r\n        ],\r\n        lengthenedUnderactive: [\r\n            'deep_cervical_flexors', 'serratus_anterior', 'rhomboids',\r\n            'mid_trapezius', 'lower_trapezius', 'teres_minor', 'infraspinatus'\r\n        ],\r\n        alteredMechanics: [\r\n            'increased_cervical_extension', 'scapular_protraction', 'scapular_elevation',\r\n            'decreased_shoulder_extension', 'decreased_external_rotation'\r\n        ],\r\n        commonInjuries: [\r\n            'headaches', 'biceps_tendonitis', 'rotator_cuff_impingement',\r\n            'thoracic_outlet_syndrome'\r\n        ],\r\n        correctiveStrategy: {\r\n            smr: ['upper_traps', 'lats', 'pectorals'],\r\n            staticStretch: ['upper_trap_stretch', 'pectoral_wall_stretch'],\r\n            activation: ['ball_cobra', 'chin_tuck', 'squat_to_row']\r\n        }\r\n    }\r\n};\r\n\r\n// ===== MOVEMENT ASSESSMENT PROTOCOLS =====\r\n\r\nexport const nasmMovementAssessments = {\r\n    'overhead_squat': {\r\n        name: 'Overhead Squat Assessment',\r\n        purpose: 'Assess dynamic flexibility, core strength, balance, and neuromuscular control',\r\n        procedure: {\r\n            setup: 'Feet shoulder-width apart, toes forward, shoes off preferred',\r\n            position: 'Arms overhead, elbows fully extended, arms bisect torso',\r\n            movement: 'Squat to chair height and return, perform 5 reps',\r\n            views: ['anterior', 'lateral', 'posterior']\r\n        },\r\n        compensations: {\r\n            'feet_flatten_turn_out': {\r\n                overactive: ['soleus', 'lateral_gastrocnemius', 'biceps_femoris_short'],\r\n                underactive: ['medial_gastrocnemius', 'medial_hamstrings', 'gracilis', 'sartorius'],\r\n                corrections: {\r\n                    smr: ['calves', 'biceps_femoris'],\r\n                    stretch: ['calf_stretch', 'hamstring_stretch'],\r\n                    activation: ['single_leg_balance_reach']\r\n                }\r\n            },\r\n            'knees_move_inward': {\r\n                overactive: ['adductors', 'tfl', 'vastus_lateralis', 'biceps_femoris_short'],\r\n                underactive: ['gluteus_medius', 'gluteus_maximus', 'vastus_medialis_oblique'],\r\n                corrections: {\r\n                    smr: ['adductors', 'tfl_it_band'],\r\n                    stretch: ['adductor_stretch', 'tfl_stretch'],\r\n                    activation: ['tube_walking_side_to_side', 'clamshells']\r\n                }\r\n            },\r\n            'excessive_forward_lean': {\r\n                overactive: ['soleus', 'gastrocnemius', 'hip_flexor_complex', 'abdominal_complex'],\r\n                underactive: ['anterior_tibialis', 'gluteus_maximus', 'erector_spinae'],\r\n                corrections: {\r\n                    smr: ['calves', 'quads'],\r\n                    stretch: ['calf_stretch', 'hip_flexor_stretch'],\r\n                    activation: ['quadruped_arm_opposite_leg', 'ball_wall_squat']\r\n                }\r\n            },\r\n            'low_back_arch': {\r\n                overactive: ['hip_flexor_complex', 'erector_spinae', 'latissimus_dorsi'],\r\n                underactive: ['gluteus_maximus', 'hamstrings', 'intrinsic_core_stabilizers'],\r\n                corrections: {\r\n                    smr: ['quads', 'lats'],\r\n                    stretch: ['hip_flexor_stretch', 'lat_stretch_on_ball'],\r\n                    activation: ['quadruped_arm_opposite_leg', 'ball_wall_squat']\r\n                }\r\n            },\r\n            'arms_fall_forward': {\r\n                overactive: ['latissimus_dorsi', 'teres_major', 'pectorals'],\r\n                underactive: ['mid_trapezius', 'lower_trapezius', 'rhomboids', 'rotator_cuff'],\r\n                corrections: {\r\n                    smr: ['thoracic_spine', 'lats'],\r\n                    stretch: ['lat_stretch_on_ball', 'pectoral_wall_stretch'],\r\n                    activation: ['squat_to_row']\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    'single_leg_squat': {\r\n        name: 'Single-Leg Squat Assessment',\r\n        purpose: 'Assess unilateral lower extremity strength and stability',\r\n        procedure: {\r\n            setup: 'Hands on hips, stance foot points straight, LPHC neutral',\r\n            movement: 'Squat to comfortable level and return, ≤5 reps per leg',\r\n            observation: 'Knee tracking and pelvic stability'\r\n        },\r\n        compensations: {\r\n            'knee_moves_inward': {\r\n                overactive: ['adductors', 'biceps_femoris_short', 'tfl', 'vastus_lateralis'],\r\n                underactive: ['gluteus_medius', 'gluteus_maximus', 'vastus_medialis_oblique'],\r\n                corrections: {\r\n                    smr: ['adductors', 'tfl_it_band'],\r\n                    stretch: ['adductor_stretch', 'tfl_stretch'],\r\n                    activation: ['tube_walking', 'single_leg_glute_bridge']\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    'pushing_assessment': {\r\n        name: 'Pushing Assessment',\r\n        purpose: 'Assess upper body pushing movement patterns',\r\n        procedure: {\r\n            setup: 'Split stance, abdomen drawn-in',\r\n            movement: 'Press cable/band handles forward up to 20 reps',\r\n            observation: 'Maintain neutral spine and level shoulders'\r\n        },\r\n        compensations: {\r\n            'low_back_arch': {\r\n                overactive: ['hip_flexors', 'erector_spinae'],\r\n                underactive: ['intrinsic_core_stabilizers'],\r\n                corrections: {\r\n                    smr: ['hip_flexors'],\r\n                    stretch: ['hip_flexor_stretch'],\r\n                    activation: ['planks', 'quadruped_arm_opposite_leg']\r\n                }\r\n            },\r\n            'shoulder_elevation': {\r\n                overactive: ['upper_trapezius', 'levator_scapulae'],\r\n                underactive: ['mid_trapezius', 'lower_trapezius'],\r\n                corrections: {\r\n                    smr: ['upper_trapezius'],\r\n                    stretch: ['upper_trap_stretch'],\r\n                    activation: ['ball_cobra']\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    'pulling_assessment': {\r\n        name: 'Pulling Assessment',\r\n        purpose: 'Assess upper body pulling movement patterns',\r\n        procedure: {\r\n            setup: 'Split stance, abdomen drawn-in',\r\n            movement: 'Row handles toward torso up to 20 reps',\r\n            observation: 'Spine alignment and scapular movement'\r\n        },\r\n        compensations: {\r\n            'low_back_arch': {\r\n                overactive: ['hip_flexors', 'latissimus_dorsi'],\r\n                underactive: ['intrinsic_core_stabilizers', 'gluteus_maximus'],\r\n                corrections: {\r\n                    smr: ['hip_flexors', 'lats'],\r\n                    stretch: ['hip_flexor_stretch', 'lat_stretch'],\r\n                    activation: ['planks', 'glute_bridges']\r\n                }\r\n            },\r\n            'head_forward': {\r\n                overactive: ['sternocleidomastoid', 'scalenes'],\r\n                underactive: ['deep_cervical_flexors'],\r\n                corrections: {\r\n                    smr: ['upper_traps'],\r\n                    stretch: ['levator_scapulae_stretch'],\r\n                    activation: ['chin_tuck']\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n// ===== POPULATION-SPECIFIC MODIFICATIONS =====\r\n\r\nexport const nasmPopulationModifications = {\r\n    'pregnancy_2nd_3rd_trimester': {\r\n        assessmentModifications: [\r\n            'avoid_power_speed_tests',\r\n            'modify_pushups_to_knees',\r\n            'substitute_balance_for_single_leg_squat',\r\n            'reduce_overhead_squat_depth'\r\n        ],\r\n        exerciseModifications: [\r\n            'avoid_supine_after_16_weeks',\r\n            'monitor_diastasis_recti',\r\n            'avoid_valsalva_maneuver',\r\n            'modify_core_exercises'\r\n        ]\r\n    },\r\n    'obesity': {\r\n        assessmentModifications: [\r\n            'use_rockport_walk_test',\r\n            'substitute_balance_for_single_leg_squat',\r\n            'pushups_on_bench_or_knees',\r\n            'monitor_joint_stress'\r\n        ],\r\n        exerciseModifications: [\r\n            'low_impact_cardio',\r\n            'supported_movements',\r\n            'avoid_high_intensity_initially'\r\n        ]\r\n    },\r\n    'low_back_pain_history': {\r\n        assessmentModifications: [\r\n            'monitor_pelvic_rotation',\r\n            'pushups_from_knees_or_bench',\r\n            'assess_movement_quality_first'\r\n        ],\r\n        exerciseModifications: [\r\n            'emphasize_core_stability',\r\n            'avoid_spinal_flexion_under_load',\r\n            'progress_conservatively'\r\n        ]\r\n    },\r\n    'shoulder_injury_history': {\r\n        assessmentModifications: [\r\n            'limit_overhead_rom',\r\n            'monitor_scapular_elevation',\r\n            'avoid_high_stress_positions'\r\n        ],\r\n        exerciseModifications: [\r\n            'emphasize_scapular_stability',\r\n            'avoid_behind_neck_movements',\r\n            'progress_overhead_gradually'\r\n        ]\r\n    }\r\n};\r\n\r\n// ===== PERFORMANCE ASSESSMENTS =====\r\n\r\nexport const nasmPerformanceTests = {\r\n    'pushup_test': {\r\n        name: 'Push-Up Test',\r\n        purpose: 'Measure upper-body muscular endurance',\r\n        procedure: {\r\n            setup: 'Standard or kneeling push-up position',\r\n            alignment: 'Ankles-knees-hips-shoulders aligned',\r\n            protocol: 'Lower chest to fist/floor, max reps in 60s or to fatigue'\r\n        },\r\n        scoring: 'Rep count with form standards',\r\n        retest: 'Expect increased rep count'\r\n    },\r\n\r\n    'davies_test': {\r\n        name: 'Davies Test',\r\n        purpose: 'Upper-extremity agility and stabilization',\r\n        procedure: {\r\n            setup: 'Two tape strips 36in/91cm apart, push-up plank position',\r\n            protocol: 'Alternate hand touches across gap for 15s, 3 trials'\r\n        },\r\n        contraindications: 'Limited shoulder stability',\r\n        scoring: 'Total touches recorded'\r\n    },\r\n\r\n    'shark_skill_test': {\r\n        name: 'Shark Skill Test',\r\n        purpose: 'Lower-extremity agility and neuromuscular control',\r\n        procedure: {\r\n            setup: 'Single-leg stance in center of 3x3 grid',\r\n            protocol: 'Hop through pattern, always return to center'\r\n        },\r\n        scoring: 'Time with 0.10s penalty per fault',\r\n        faults: ['non-hopping leg touch', 'hands off hips', 'wrong square']\r\n    },\r\n\r\n    'one_rm_estimation': {\r\n        'bench_press': {\r\n            purpose: 'Estimate upper-body max strength',\r\n            warmup: '8-10 reps light load',\r\n            progression: '+5-10%/10-20lb each set, 3-5 reps, 1-2min rest',\r\n            termination: 'At 2-10RM, use chart to predict 1RM'\r\n        },\r\n        'squat': {\r\n            purpose: 'Estimate lower-body max strength',\r\n            warmup: '8-10 reps light load',\r\n            progression: '+10-20%/30-40lb each set, 3-5 reps, 1-2min rest',\r\n            termination: 'At 2-10RM, use chart to predict 1RM'\r\n        }\r\n    }\r\n};\r\n\r\n// ===== FLEXIBILITY & CORRECTIVE EXERCISE PROTOCOLS =====\r\n\r\nexport const nasmFlexibilityProtocols = {\r\n    definitions: {\r\n        flexibility: 'Normal extensibility of soft tissue permitting full ROM',\r\n        dynamic_rom: 'Flexibility plus neuromuscular control through motion',\r\n        neuromuscular_efficiency: 'Nervous system coordination of agonists, antagonists, stabilizers'\r\n    },\r\n\r\n    mechanoreceptors: {\r\n        muscle_spindle: {\r\n            sensitive_to: 'Change and rate of length',\r\n            effect: 'Triggers stretch reflex, over-activity causes micro-spasms'\r\n        },\r\n        golgi_tendon_organ: {\r\n            sensitive_to: 'Tension and rate',\r\n            effect: 'Autogenic inhibition - prolonged tension >30s relaxes muscle'\r\n        }\r\n    },\r\n\r\n    continuum: {\r\n        corrective_phase1: {\r\n            type: 'SMR + Static stretching',\r\n            duration: '~30s per muscle',\r\n            purpose: 'Improve muscle imbalances and joint ROM'\r\n        },\r\n        active_phases2_4: {\r\n            type: 'SMR + Active-isolated stretching',\r\n            duration: '1-2s holds, 5-10 reps',\r\n            purpose: 'Improve neuromuscular efficiency through motor unit recruitment'\r\n        },\r\n        functional_phase5: {\r\n            type: 'SMR + Dynamic stretching',\r\n            duration: '10-15 reps sport-specific',\r\n            purpose: 'Prepare tissues for explosive movement'\r\n        }\r\n    }\r\n};\r\n\r\n// ===== UPDATED HRMAX FORMULA =====\r\nexport const nasmCardiorespiratoryFormulas = {\r\n    hrmax_updated: {\r\n        formula: 'HRmax = 208 - 0.7 × age',\r\n        note: 'Updated from 220 - age formula for improved accuracy'\r\n    }\r\n};\r\n\r\n// ===== NASM METHODOLOGY CONFIGURATION =====\r\n\r\nexport const nasmMethodologyConfig = {\r\n    name: 'NASM OPT Model',\r\n    description: 'Evidence-based periodization system with integrated movement assessment',\r\n    icon: 'nasm-logo',\r\n    features: [\r\n        'Movement assessment-driven program design',\r\n        '5-phase OPT model progression',\r\n        'Goal-specific pathways',\r\n        'Corrective exercise integration',\r\n        'Special population adaptations'\r\n    ],\r\n\r\n    systemConfiguration: {\r\n        assessmentProtocol: 'NASM Movement Screens',\r\n        programmingModel: 'OPT Periodization',\r\n        phaseStructure: '5-phase system',\r\n        acuteVariables: 'NASM-specific',\r\n        corrective: 'integrated',\r\n        progressionModels: ['linear', 'adaptive', 'rules_engine']\r\n    }\r\n};\r\n\r\n// ===== NASM GOAL PATHWAYS =====\r\n\r\nexport const nasmGoalPathways = {\r\n    'fat_loss': {\r\n        name: 'Body Fat Reduction',\r\n        description: 'Maximize caloric expenditure while preserving lean mass',\r\n        phases: ['Phase_1', 'Phase_2'],\r\n        cycling: 'alternating',\r\n        cardio: 'high_priority',\r\n        optional: ['Phase_3'],\r\n        timeline: 'Phase 1 (4 weeks) → Phase 2 (4 weeks) → repeat cycling',\r\n        expectedOutcomes: 'Steady fat loss, improved endurance, movement quality'\r\n    },\r\n\r\n    'hypertrophy': {\r\n        name: 'Muscle Hypertrophy',\r\n        description: 'Maximize muscle growth through progressive overload',\r\n        phases: ['Phase_1', 'Phase_2', 'Phase_3', 'Phase_4'],\r\n        cycling: 'progressive_with_cycles',\r\n        emphasis: 'Phase_3',\r\n        timeline: 'Phase 1 (4w) → Phase 2 (4w) → Phase 3 (4w) → Phase 4 (4w) → cycle 2-3-4',\r\n        expectedOutcomes: 'Increased muscle mass, strength, work capacity'\r\n    },\r\n\r\n    'max_strength': {\r\n        name: 'Maximal Strength',\r\n        description: 'Increase maximal force production and neural adaptations',\r\n        phases: ['Phase_1', 'Phase_2', 'Phase_4'],\r\n        cycling: 'strength_focused',\r\n        emphasis: 'Phase_4',\r\n        optional: ['Phase_3'],\r\n        timeline: 'Phase 1 (4w) → Phase 2 (4w) → Phase 4 (4w) → deload → repeat',\r\n        expectedOutcomes: 'Increased 1RM lifts, neural efficiency, power base'\r\n    },\r\n\r\n    'sports_performance': {\r\n        name: 'Athletic Performance',\r\n        description: 'Improve power, agility, and sport-specific performance',\r\n        phases: ['Phase_1', 'Phase_2', 'Phase_5'],\r\n        cycling: 'undulating',\r\n        emphasis: 'Phase_5',\r\n        optional: ['Phase_4'],\r\n        timeline: 'Linear first 2 months → undulating weekly (1,2,5) thereafter',\r\n        expectedOutcomes: 'Enhanced power, speed, agility, injury prevention'\r\n    },\r\n\r\n    'general_fitness': {\r\n        name: 'General Fitness & Health',\r\n        description: 'Overall health, functional movement, and fitness improvement',\r\n        phases: ['Phase_1', 'Phase_2'],\r\n        cycling: 'alternating',\r\n        cardio: 'moderate_priority',\r\n        optional: ['Phase_3'],\r\n        timeline: 'Phase 1 (4-6w) → Phase 2 (4w) → repeat with variations',\r\n        expectedOutcomes: 'Improved movement quality, endurance, strength, overall health'\r\n    }\r\n};\r\n\r\n// ===== NASM EXPERIENCE LEVEL MAPPING =====\r\n\r\nexport const nasmExperienceMapping = {\r\n    'beginner': {\r\n        startingPhase: 'Phase_1',\r\n        duration: '6-8 weeks in Phase 1',\r\n        progression: 'Extended stabilization focus',\r\n        modifications: 'More corrective work, slower progression',\r\n        assessmentFrequency: 'Every 2 weeks'\r\n    },\r\n\r\n    'intermediate': {\r\n        startingPhase: 'Phase_1',\r\n        duration: '4 weeks in Phase 1',\r\n        progression: 'Standard OPT progression',\r\n        modifications: 'Standard acute variables',\r\n        assessmentFrequency: 'Every 4 weeks'\r\n    },\r\n\r\n    'advanced': {\r\n        startingPhase: 'Phase_1_or_2',\r\n        duration: '2-4 weeks in Phase 1',\r\n        progression: 'May skip stabilization if excellent movement',\r\n        modifications: 'Can handle undulating models sooner',\r\n        assessmentFrequency: 'Every 4-6 weeks'\r\n    }\r\n};\r\n\r\n// ===== COMPLETE OPT PHASE SPECIFICATIONS =====\r\n\r\nexport const nasmOPTPhases = {\r\n    'Phase_1': {\r\n        name: 'Stabilization Endurance',\r\n        level: 'Stabilization',\r\n        acuteVariables: {\r\n            reps: '12-20',\r\n            sets: '1-3',\r\n            intensity: '50-70% 1RM',\r\n            tempo: '4/2/1 (slow)',\r\n            rest: '0-90 seconds',\r\n            frequency: '2-4 sessions/week'\r\n        },\r\n        focus: 'Improve stability, muscular endurance, neuromuscular coordination',\r\n        exerciseSelection: {\r\n            characteristics: 'Unstable yet controllable environments',\r\n            examples: ['stability_ball_exercises', 'single_leg_movements', 'balance_challenges'],\r\n            progression: 'Increase proprioceptive challenge before adding load'\r\n        },\r\n        duration: '4-6 weeks',\r\n        assessmentCriteria: ['improved_balance', 'reduced_compensations', 'form_mastery'],\r\n        cardio: {\r\n            type: 'Stage I - Aerobic Base',\r\n            intensity: '65-75% HRmax',\r\n            duration: '12-20 minutes',\r\n            progression: 'Increase duration before intensity'\r\n        }\r\n    },\r\n\r\n    'Phase_2': {\r\n        name: 'Strength Endurance',\r\n        level: 'Strength',\r\n        acuteVariables: {\r\n            reps: '8-12 (strength) + 12-20 (stability)',\r\n            sets: '2-4',\r\n            intensity: '70-80% 1RM (strength) + bodyweight (stability)',\r\n            tempo: '2/0/2 (strength) + 4/2/1 (stability)',\r\n            rest: '0-60 seconds',\r\n            frequency: '2-4 sessions/week'\r\n        },\r\n        focus: 'Enhance stabilization endurance and prime-mover strength',\r\n        exerciseSelection: {\r\n            characteristics: 'Supersets: strength exercise + stabilization exercise',\r\n            examples: ['bench_press + stability_ball_pushup', 'leg_press + single_leg_squat'],\r\n            progression: 'Increase weight on strength exercises, complexity on stability'\r\n        },\r\n        duration: '4 weeks',\r\n        assessmentCriteria: ['strength_endurance_improved', 'superset_completion', 'form_maintained'],\r\n        cardio: {\r\n            type: 'Stage II - Aerobic Efficiency',\r\n            intensity: '76-85% HRmax intervals',\r\n            duration: '20-30 minutes',\r\n            progression: 'Add interval complexity'\r\n        }\r\n    },\r\n\r\n    'Phase_3': {\r\n        name: 'Hypertrophy',\r\n        level: 'Strength',\r\n        acuteVariables: {\r\n            reps: '6-12',\r\n            sets: '3-5',\r\n            intensity: '75-85% 1RM',\r\n            tempo: '2/0/2 (moderate)',\r\n            rest: '0-60 seconds',\r\n            frequency: '3-6 sessions/week'\r\n        },\r\n        focus: 'Achieve maximal muscle growth through high volume',\r\n        exerciseSelection: {\r\n            characteristics: 'High volume, multiple exercises per muscle group',\r\n            examples: ['bodybuilding_splits', 'isolation_exercises', 'machine_work'],\r\n            progression: 'Increase volume (sets/exercises), then intensity'\r\n        },\r\n        duration: '4 weeks',\r\n        assessmentCriteria: ['muscle_growth', 'volume_tolerance', 'recovery_capacity'],\r\n        optional: true,\r\n        applicableGoals: ['hypertrophy'],\r\n        cardio: {\r\n            type: 'Stage II - Optional',\r\n            intensity: '76-85% HRmax',\r\n            duration: '20-30 minutes',\r\n            progression: 'Minimize to support recovery'\r\n        }\r\n    },\r\n\r\n    'Phase_4': {\r\n        name: 'Maximal Strength',\r\n        level: 'Strength',\r\n        acuteVariables: {\r\n            reps: '1-5',\r\n            sets: '4-6',\r\n            intensity: '85-100% 1RM',\r\n            tempo: 'X/X/X (explosive intent)',\r\n            rest: '3-5 minutes',\r\n            frequency: '2-4 sessions/week'\r\n        },\r\n        focus: 'Increase maximal force production and neural adaptations',\r\n        exerciseSelection: {\r\n            characteristics: 'Heavy compound lifts, maximal loads',\r\n            examples: ['barbell_squats', 'deadlifts', 'bench_press', 'overhead_press'],\r\n            progression: 'Increase load while maintaining form'\r\n        },\r\n        duration: '4 weeks',\r\n        assessmentCriteria: ['1rm_improvements', 'neural_efficiency', 'form_under_load'],\r\n        optional: true,\r\n        applicableGoals: ['max_strength', 'hypertrophy', 'sports_performance'],\r\n        cardio: {\r\n            type: 'Stage I - Recovery focused',\r\n            intensity: '65-75% HRmax',\r\n            duration: '12-20 minutes',\r\n            progression: 'Keep minimal to support strength gains'\r\n        }\r\n    },\r\n\r\n    'Phase_5': {\r\n        name: 'Power',\r\n        level: 'Power',\r\n        acuteVariables: {\r\n            reps: '1-5 (strength) + 8-10 (power)',\r\n            sets: '3-5',\r\n            intensity: '85-100% 1RM (strength) + 30-45% 1RM (power)',\r\n            tempo: 'X/X/X (explosive)',\r\n            rest: '1-2 min between exercises, 3-5 min between circuits',\r\n            frequency: '2-4 sessions/week'\r\n        },\r\n        focus: 'Enhance rate of force production (speed × strength)',\r\n        exerciseSelection: {\r\n            characteristics: 'Supersets: heavy strength + explosive power',\r\n            examples: ['squat + jump_squat', 'bench + med_ball_throw', 'deadlift + broad_jump'],\r\n            progression: 'Increase strength loads, power complexity/velocity'\r\n        },\r\n        duration: '4 weeks',\r\n        assessmentCriteria: ['power_output', 'explosive_capacity', 'speed_improvements'],\r\n        optional: true,\r\n        applicableGoals: ['sports_performance'],\r\n        cardio: {\r\n            type: 'Stage III - Anaerobic Power',\r\n            intensity: '86-95% HRmax intervals',\r\n            duration: '12-20 minutes',\r\n            progression: 'Sport-specific energy system training'\r\n        }\r\n    }\r\n};\r\n\r\n// ===== NASM PROGRESSION MODELS =====\r\n\r\nexport const nasmProgressionModels = {\r\n    'linear': {\r\n        name: 'Linear Progression',\r\n        description: 'Fixed 4-week phases in predetermined order',\r\n        implementation: {\r\n            phaseAdvancement: 'time_based',\r\n            duration: '4 weeks per phase',\r\n            flexibility: 'low',\r\n            structure: 'Phase 1 → Phase 2 → Phase 3 → etc.',\r\n            reassessment: 'end_of_phase',\r\n            bestFor: 'beginners, structured programs'\r\n        }\r\n    },\r\n\r\n    'adaptive': {\r\n        name: 'Adaptive Progression',\r\n        description: 'Criteria-based advancement when benchmarks are met',\r\n        implementation: {\r\n            phaseAdvancement: 'criteria_based',\r\n            duration: '2-8 weeks per phase (varies)',\r\n            flexibility: 'medium',\r\n            structure: 'Advance when ready, extend if needed',\r\n            reassessment: 'weekly_progress_checks',\r\n            bestFor: 'individualized training, varying fitness levels'\r\n        }\r\n    },\r\n\r\n    'rules_engine': {\r\n        name: 'Rules Engine Auto-Regulation',\r\n        description: 'Real-time adjustments based on performance and recovery',\r\n        implementation: {\r\n            phaseAdvancement: 'dynamic_auto_regulation',\r\n            duration: 'flexible_based_on_data',\r\n            flexibility: 'high',\r\n            structure: 'Continuous micro-adjustments',\r\n            reassessment: 'daily_readiness_continuous_monitoring',\r\n            bestFor: 'advanced athletes, coached programs'\r\n        }\r\n    }\r\n};\r\n\r\n// ===== CORE TRAINING PROTOCOLS (NASM Ch. 9) =====\r\n\r\nexport const nasmCoreTraining = {\r\n    purpose: 'LPHC stability to protect spine and transfer force between upper/lower extremities',\r\n\r\n    phases: {\r\n        stabilization_phase1: {\r\n            exercise_type: 'Core-stabilization',\r\n            exercises: '1-4',\r\n            sets: '1-4',\r\n            reps: '12-20',\r\n            tempo: 'Slow 4-2-1',\r\n            rest: '0-90s',\r\n            examples: ['marching', 'floor_bridge', 'floor_prone_cobra', 'prone_iso_ab_plank']\r\n        },\r\n        strength_phases2_4: {\r\n            exercise_type: 'Core-strength',\r\n            exercises: '0-4',\r\n            sets: '2-3',\r\n            reps: '8-12',\r\n            tempo: 'Medium',\r\n            rest: '0-60s',\r\n            examples: ['ball_crunch', 'back_extension', 'cable_rotation']\r\n        },\r\n        power_phase5: {\r\n            exercise_type: 'Core-power',\r\n            exercises: '0-2',\r\n            sets: '2-3',\r\n            reps: '8-12',\r\n            tempo: 'Explosive (hold landing 3-5s)',\r\n            rest: '0-60s',\r\n            examples: ['rotation_chest_pass', 'ball_mb_pullover_throw', 'front_mb_oblique_throw', 'soccer_throw']\r\n        }\r\n    },\r\n\r\n    programming_notes: [\r\n        'Core training precedes load & velocity work',\r\n        'Ensure proper stabilization first',\r\n        'Match exercise type to client OPT phase'\r\n    ]\r\n};\r\n\r\n// ===== BALANCE TRAINING PROTOCOLS (NASM Ch. 10) =====\r\n\r\nexport const nasmBalanceTraining = {\r\n    definitions: {\r\n        balance: 'Body in equilibrium with no linear or angular motion',\r\n        dynamic_balance: 'Ability to move and change direction without loss of postural control',\r\n        limit_of_stability: 'Furthest distance client can control COG over BOS'\r\n    },\r\n\r\n    benefits: [\r\n        'Corrects altered joint mechanics',\r\n        'Reduces injury risk (ankle sprain, ACL, low-back pain)',\r\n        'Improves neuromuscular efficiency',\r\n        'Reduces ground-contact time in sport movements'\r\n    ],\r\n\r\n    progression_variables: [\r\n        'stable → unstable surface',\r\n        'eyes open → closed',\r\n        'bilateral → unilateral',\r\n        'slow → fast'\r\n    ],\r\n\r\n    surfaces: ['floor', 'balance_beam', 'half_foam_roll', 'foam_pad', 'balance_disc', 'wobble_board', 'bosu'],\r\n\r\n    phases: {\r\n        stabilization_phase1: {\r\n            exercise_type: 'Balance-stabilization',\r\n            exercises: '1-3',\r\n            sets: '1-3',\r\n            reps: '12-20 / 6-10 single-leg',\r\n            tempo: 'Slow 4-2-1',\r\n            rest: '0-90s',\r\n            examples: ['single_leg_balance', 'balance_reach', 'hip_rotation', 'lift_and_chop', 'throw_and_catch']\r\n        },\r\n        strength_phases2_4: {\r\n            exercise_type: 'Balance-strength',\r\n            exercises: '0-4',\r\n            sets: '2-3',\r\n            reps: '8-12',\r\n            tempo: 'Medium',\r\n            rest: '0-60s',\r\n            examples: ['single_leg_squat', 'squat_touchdown', 'romanian_deadlift', 'multiplanar_step_up_to_balance', 'multiplanar_lunge_to_balance']\r\n        },\r\n        power_phase5: {\r\n            exercise_type: 'Balance-power',\r\n            exercises: '0-2',\r\n            sets: '2-3',\r\n            reps: '8-12',\r\n            tempo: 'Controlled: stick 3-5s',\r\n            rest: '0-60s',\r\n            examples: ['multiplanar_hop_with_stabilization', 'single_leg_box_hop_up', 'single_leg_box_hop_down']\r\n        }\r\n    },\r\n\r\n    implementation_tips: [\r\n        'Introduce in Core/Balance/Plyometric block',\r\n        'Progress surface OR visual challenge, not both simultaneously',\r\n        'Maintain knee alignment over 2nd/3rd toe during single-leg tasks',\r\n        'Use as active recovery between strength sets for general fitness'\r\n    ]\r\n};\r\n\r\n// ===== WARM-UP & COOL-DOWN TEMPLATES =====\r\n\r\nexport const nasmWarmUpCoolDown = {\r\n    warmup_templates: {\r\n        stabilization_phase1: 'SMR + static stretch tight muscles → 5-10 min cardio low-moderate intensity',\r\n        strength_phases2_4: 'SMR + active-isolated stretch → 5-10 min cardio',\r\n        power_phase5: 'SMR + dynamic stretch circuit → may substitute for separate cardio'\r\n    },\r\n\r\n    cooldown_template: '5-10 min light cardio → SMR → static stretch prime movers',\r\n\r\n    cardio_warmup: {\r\n        goals: 'Increase HR & respiration, tissue temperature, psychological preparation',\r\n        general: 'Non-specific rhythmic movement (treadmill walk)',\r\n        specific: 'Dynamic movements mimicking activity',\r\n        duration_intensity: '5-10 min at <60% VO2R'\r\n    }\r\n};\r\n\r\n// ===== FITTE PRINCIPLE FOR CARDIO =====\r\n\r\nexport const nasmFITTEPrinciple = {\r\n    frequency: '3-5 days/week moderate-vigorous; daily low-moderate for basic health',\r\n    intensity: {\r\n        methods: ['VO2R', 'HRR', '%HRmax', 'METs', 'RPE', 'Talk_test'],\r\n        hrmax_formula: 'HRmax = 208 - 0.7 × age',\r\n        rpe_guidelines: {\r\n            moderate: '12-13 RPE',\r\n            hard: '14-16 RPE'\r\n        }\r\n    },\r\n    time: '≥150 min/week moderate OR 75 min vigorous; can be ≥10 min bouts',\r\n    type: 'Rhythmic, large-muscle, continuous activities matched to OPT phase',\r\n    enjoyment: 'Align mode with client preferences for adherence'\r\n};\r\n\r\n// ===== INTEGRATION TEMPLATES FOR OPT PHASES =====\r\n\r\nexport const nasmSessionTemplates = {\r\n    phase1_example: {\r\n        core: ['floor_bridge', 'prone_cobra'],\r\n        balance: 'single_leg_balance_reach (2 × 12 reps)',\r\n        flexibility: 'SMR + static stretch based on assessment findings'\r\n    },\r\n\r\n    phase3_example: {\r\n        core: 'cable_rotations (3 × 10)',\r\n        balance: 'single_leg_romanian_deadlift (2 × 10)',\r\n        flexibility: 'SMR + active-isolated stretch'\r\n    },\r\n\r\n    phase5_example: {\r\n        core_power: 'rotation_chest_pass (2 × 8)',\r\n        balance_power: 'multiplanar_hop_to_stick (2 × 6 each plane)',\r\n        flexibility: 'SMR + dynamic stretch circuit'\r\n    }\r\n};\r\n\r\n// ===== PLYOMETRIC (REACTIVE) TRAINING CONCEPTS (NASM Ch. 11) =====\r\n\r\nexport const nasmPlyometricTraining = {\r\n    purpose: 'Enhance rate of force production and neuromuscular control through stretch-shortening cycle',\r\n\r\n    phases: {\r\n        stabilization_phase1: {\r\n            focus: 'Establish landing mechanics and postural control',\r\n            exercises: '0-2',\r\n            sets: '1-3',\r\n            reps: '5-8',\r\n            tempo: '3-5s hold on landing',\r\n            rest: '0-90s',\r\n            examples: [\r\n                'squat_jump_to_stabilize',\r\n                'box_jump_down_with_stabilization',\r\n                'multiplanar_jump_to_stabilization'\r\n            ],\r\n            emphasis: 'Perfect landing mechanics, joint stability'\r\n        },\r\n        strength_phases2_4: {\r\n            focus: 'Repetitive jumps with short ground contact time',\r\n            exercises: '0-4',\r\n            sets: '2-3',\r\n            reps: '8-10',\r\n            tempo: 'Repeating (minimize ground contact)',\r\n            rest: '0-60s',\r\n            examples: [\r\n                'tuck_jumps',\r\n                'butt_kicks',\r\n                'power_step_ups',\r\n                'ice_skaters',\r\n                'single_leg_hops'\r\n            ],\r\n            emphasis: 'Force production, reactive strength'\r\n        },\r\n        power_phase5: {\r\n            focus: 'Explosive, multidirectional movements',\r\n            exercises: '0-2',\r\n            sets: '2-3',\r\n            reps: '8-12',\r\n            tempo: 'Explosive',\r\n            rest: '0-60s',\r\n            examples: [\r\n                'single_leg_box_hop_up',\r\n                'depth_jumps',\r\n                'multiplanar_bounds',\r\n                'medicine_ball_explosive_throws'\r\n            ],\r\n            emphasis: 'Maximal power output, sport-specific patterns'\r\n        }\r\n    },\r\n\r\n    safety_guidelines: {\r\n        depth_jump_prerequisite: 'Client must squat ≥1.5× body weight',\r\n        recovery_time: '48-72h between same muscle group power plyometrics',\r\n        surface_progression: 'Stable → unstable surface progression',\r\n        landing_technique: 'Soft landing, heel-to-toe, knees aligned'\r\n    }\r\n};\r\n\r\n// ===== SPEED, AGILITY & QUICKNESS (SAQ) TRAINING (NASM Ch. 12) =====\r\n\r\nexport const nasmSAQTraining = {\r\n    definitions: {\r\n        speed: 'Distance ÷ time = stride rate × stride length',\r\n        agility: 'Ability to accelerate, decelerate, stabilize & change direction quickly',\r\n        quickness: 'Ability to react & change body position with maximal rate of force',\r\n        frontside_mechanics: 'Triple flexion (ankle, knee, hip) during drive phase',\r\n        backside_mechanics: 'Triple extension during support/recovery phase'\r\n    },\r\n\r\n    program_design: {\r\n        stabilization_phase1: {\r\n            drills: '4-6 low-inertia',\r\n            sets: '1-2',\r\n            reps: '2-3 each',\r\n            rest: '0-60s',\r\n            examples: [\r\n                'marching_in_place',\r\n                'heel_kicks',\r\n                'straight_leg_march',\r\n                'side_shuffle',\r\n                'carioca'\r\n            ]\r\n        },\r\n        strength_phases2_4: {\r\n            drills: '6-8 moderate intensity',\r\n            sets: '3-4',\r\n            reps: '3-5 each',\r\n            rest: '0-60s',\r\n            examples: [\r\n                'high_knees',\r\n                'butt_kicks',\r\n                'power_skips',\r\n                '5-10-5_drill',\r\n                'T_drill',\r\n                'ladder_drills'\r\n            ]\r\n        },\r\n        power_phase5: {\r\n            drills: '6-10 high-velocity',\r\n            sets: '3-5',\r\n            reps: '3-5 each',\r\n            rest: '0-90s',\r\n            examples: [\r\n                'flying_sprints',\r\n                'resisted_sprints',\r\n                'reaction_drills',\r\n                'sport_specific_patterns',\r\n                'plyometric_bounds'\r\n            ]\r\n        }\r\n    },\r\n\r\n    technique_checkpoints: {\r\n        feet: 'Dorsiflexed and straight',\r\n        knees: 'Track in line with toes',\r\n        pelvis: 'Neutral position',\r\n        head: 'In line with LPHC',\r\n        arms: 'Reciprocal swing, 90-degree elbow angle'\r\n    },\r\n\r\n    population_applications: {\r\n        youth: ['red_light_green_light', 'follow_the_snake', 'animal_movements'],\r\n        weight_loss: ['jump_rope_cone_shuttle_circuits', 'ladder_combinations'],\r\n        seniors: ['cone_step_overs', 'stand_up_to_figure_8', 'reaction_drills']\r\n    }\r\n};\r\n\r\n// ===== RESISTANCE TRAINING CONCEPTS (NASM Ch. 13) =====\r\n\r\nexport const nasmResistanceTraining = {\r\n    adaptation_principles: {\r\n        general_adaptation_syndrome: {\r\n            alarm: 'Initial shock/stress response to training',\r\n            resistance_development: 'Body adapts and becomes stronger',\r\n            exhaustion: 'Overtraining - performance decreases'\r\n        },\r\n        SAID_principle: {\r\n            mechanical_specificity: 'Weight and movement pattern',\r\n            neuromuscular_specificity: 'Contraction speed and exercise selection',\r\n            metabolic_specificity: 'Work/rest ratios and energy system training'\r\n        }\r\n    },\r\n\r\n    key_adaptations: {\r\n        stabilization: {\r\n            focus: 'Joint alignment and postural control',\r\n            characteristics: 'High reps, low-moderate load, slow tempo'\r\n        },\r\n        muscular_endurance: {\r\n            focus: 'Sustain force production',\r\n            characteristics: 'High reps (12-20), moderate load (50-70%)'\r\n        },\r\n        hypertrophy: {\r\n            focus: 'Increase cross-sectional area',\r\n            characteristics: 'Moderate reps (6-12), progressive overload (75-85%)'\r\n        },\r\n        strength: {\r\n            focus: 'Maximal force production',\r\n            characteristics: 'Low reps (1-5), high load (85-100%)'\r\n        },\r\n        power: {\r\n            focus: 'Force × velocity',\r\n            characteristics: 'Heavy/light supersets, explosive movement'\r\n        }\r\n    },\r\n\r\n    training_systems: {\r\n        single_set: 'One set per exercise',\r\n        multiple_set: 'Multiple sets per exercise',\r\n        pyramid: 'Light→heavy or heavy→light progression',\r\n        superset: 'Same or antagonist muscle pairs back-to-back',\r\n        drop_set: 'Reduce weight and continue reps to failure',\r\n        circuit: 'Multiple exercises with minimal rest',\r\n        peripheral_heart_action: 'Upper/lower body alternating exercises',\r\n        split_routine: 'Different body parts on different days',\r\n        vertical_loading: 'Cycle through different exercises/body parts',\r\n        horizontal_loading: 'Complete all sets of one exercise before moving'\r\n    }\r\n};\r\n\r\n// ===== ACUTE TRAINING VARIABLES & PROGRAM DESIGN (NASM Ch. 14) =====\r\n\r\nexport const nasmAcuteVariables = {\r\n    variable_definitions: {\r\n        repetitions: {\r\n            role: 'Time-under-tension; dictates energy system & motor unit recruitment',\r\n            manipulation: '1-5 (max strength), 6-12 (hypertrophy), 12-20 (endurance)'\r\n        },\r\n        sets: {\r\n            role: 'Total exposure to stimulus',\r\n            manipulation: 'Inversely related to reps/intensity'\r\n        },\r\n        intensity: {\r\n            role: '% of 1RM or load relative to effort',\r\n            manipulation: '50-70% (endurance), 75-85% (hypertrophy), 85-100% (max strength)'\r\n        },\r\n        tempo: {\r\n            role: 'Controls muscle action emphasis',\r\n            manipulation: '4/2/1 (stabilization), 2/0/2 (hypertrophy), x/x/x (strength/power)'\r\n        },\r\n        rest: {\r\n            role: 'ATP-PC recovery & hormonal response',\r\n            manipulation: '0-90s (endurance), 0-60s (hypertrophy), 3-5min (strength/power)'\r\n        }\r\n    },\r\n\r\n    program_design_continuum: {\r\n        endurance_stabilization: {\r\n            reps: '12-20',\r\n            sets: '1-3',\r\n            intensity: '50-70%',\r\n            tempo: '4-2-1',\r\n            rest: '0-90s'\r\n        },\r\n        hypertrophy: {\r\n            reps: '6-12',\r\n            sets: '3-5',\r\n            intensity: '75-85%',\r\n            tempo: '2-0-2',\r\n            rest: '0-60s'\r\n        },\r\n        max_strength: {\r\n            reps: '1-5',\r\n            sets: '4-6',\r\n            intensity: '85-100%',\r\n            tempo: 'x/x/x',\r\n            rest: '3-5min'\r\n        },\r\n        power: {\r\n            reps: '1-10',\r\n            sets: '3-6',\r\n            intensity: '30-45% (weight) / 10% BW (medicine ball)',\r\n            tempo: 'explosive',\r\n            rest: '3-5min'\r\n        }\r\n    },\r\n\r\n    atp_pc_recovery: {\r\n        '20-30s': '50% restoration',\r\n        '40s': '75% restoration',\r\n        '60s': '85-90% restoration',\r\n        '3min': '100% restoration'\r\n    }\r\n};\r\n\r\n// ===== PERIODIZATION & PROGRAM PLANNING =====\r\n\r\nexport const nasmPeriodization = {\r\n    macrocycle: {\r\n        definition: 'Annual plan (12 months)',\r\n        structure: 'Stabilization → Strength → Power blocks',\r\n        example: '4wk Ph1 → 8wk Ph2-3 → 6wk Ph4, deload, 4wk Ph5'\r\n    },\r\n    mesocycle: {\r\n        definition: 'Monthly plan (4 weeks)',\r\n        structure: 'Phase-specific focus',\r\n        example: 'Ph1 Stabilization Endurance → Ph2 Strength Endurance'\r\n    },\r\n    microcycle: {\r\n        definition: 'Weekly plan',\r\n        structure: 'Day-to-day phase distribution',\r\n        example: 'M Ph2; T Cardio & Core; W Ph2; F Ph1 recovery'\r\n    },\r\n    undulating: {\r\n        definition: 'Integrate Ph1/3/5 within same week after base established',\r\n        application: 'Advanced clients, variety, avoid plateaus'\r\n    }\r\n};\r\n\r\n// ===== STABILIZATION & SURFACE PROGRESSION =====\r\n\r\nexport const nasmProgressionProtocols = {\r\n    lower_body_surfaces: [\r\n        'floor',\r\n        'sport_beam',\r\n        'half_foam_roll',\r\n        'foam_pad',\r\n        'balance_disc',\r\n        'wobble_board',\r\n        'bosu'\r\n    ],\r\n    upper_body_grip_progression: [\r\n        'two_arm',\r\n        'alternating_arms',\r\n        'single_arm',\r\n        'single_arm_with_trunk_rotation'\r\n    ],\r\n    programming_checklist: [\r\n        'assess_goals_readiness_movement',\r\n        'select_phase_per_opt_hierarchy',\r\n        'choose_exercises_matching_phase_compensations',\r\n        'dial_acute_variables',\r\n        'layout_micro_to_macro_cycles',\r\n        'monitor_and_reassess_every_4_6_weeks'\r\n    ]\r\n};\r\n\r\n// ===== INTEGRATION TEMPLATES FOR COMPLETE OPT SESSIONS =====\r\n\r\nexport const nasmCompleteSessionTemplates = {\r\n    phase1_stabilization: {\r\n        warmup: {\r\n            cardio: '5-10min low-moderate intensity',\r\n            flexibility: 'SMR + static stretch tight muscles',\r\n            activation: 'corrective exercises based on assessment'\r\n        },\r\n        core_balance_plyometric: {\r\n            core: 'stabilization exercises (1-4 exercises, 1-4 sets, 12-20 reps)',\r\n            balance: 'stabilization exercises (1-3 exercises, 1-3 sets, 12-20 reps)',\r\n            plyometric: 'stabilization exercises (0-2 exercises, 1-3 sets, 5-8 reps)'\r\n        },\r\n        saq: 'low-inertia drills (4-6 drills, 1-2 sets, 2-3 reps each)',\r\n        resistance: {\r\n            total_body: 'stabilization exercises',\r\n            chest: 'stabilization exercises',\r\n            back: 'stabilization exercises',\r\n            shoulders: 'stabilization exercises',\r\n            biceps: 'stabilization exercises',\r\n            triceps: 'stabilization exercises',\r\n            legs: 'stabilization exercises'\r\n        },\r\n        cooldown: {\r\n            cardio: '5-10min light activity',\r\n            flexibility: 'SMR + static stretch prime movers'\r\n        }\r\n    },\r\n\r\n    phase3_hypertrophy: {\r\n        warmup: {\r\n            cardio: '5-10min moderate intensity',\r\n            flexibility: 'SMR + active-isolated stretch',\r\n            activation: 'movement preparation exercises'\r\n        },\r\n        core_balance_plyometric: {\r\n            core: 'strength exercises (0-4 exercises, 2-3 sets, 8-12 reps)',\r\n            balance: 'strength exercises (0-4 exercises, 2-3 sets, 8-12 reps)',\r\n            plyometric: 'strength exercises (0-4 exercises, 2-3 sets, 8-10 reps)'\r\n        },\r\n        saq: 'moderate intensity drills (6-8 drills, 3-4 sets, 3-5 reps each)',\r\n        resistance: {\r\n            structure: 'strength superset (strength + stabilization)',\r\n            chest: 'strength + stabilization superset',\r\n            back: 'strength + stabilization superset',\r\n            shoulders: 'strength + stabilization superset',\r\n            biceps: 'strength + stabilization superset',\r\n            triceps: 'strength + stabilization superset',\r\n            legs: 'strength + stabilization superset'\r\n        },\r\n        cooldown: {\r\n            cardio: '5-10min light activity',\r\n            flexibility: 'SMR + static stretch prime movers'\r\n        }\r\n    },\r\n\r\n    phase5_power: {\r\n        warmup: {\r\n            cardio: '5-10min sport-specific movements',\r\n            flexibility: 'SMR + dynamic stretch circuit',\r\n            activation: 'movement preparation + neural activation'\r\n        },\r\n        core_balance_plyometric: {\r\n            core: 'power exercises (0-2 exercises, 2-3 sets, 8-12 reps)',\r\n            balance: 'power exercises (0-2 exercises, 2-3 sets, 8-12 reps)',\r\n            plyometric: 'power exercises (0-2 exercises, 2-3 sets, 8-12 reps)'\r\n        },\r\n        saq: 'high-velocity drills (6-10 drills, 3-5 sets, 3-5 reps each)',\r\n        resistance: {\r\n            structure: 'power superset (strength + power)',\r\n            chest: 'strength + power superset',\r\n            back: 'strength + power superset',\r\n            shoulders: 'strength + power superset',\r\n            legs: 'strength + power superset'\r\n        },\r\n        cooldown: {\r\n            cardio: '5-10min light activity',\r\n            flexibility: 'SMR + static stretch prime movers'\r\n        }\r\n    }\r\n};\r\n\r\n// ===== STARTING PHASE DETERMINATION =====\r\n\r\nexport const determineNASMStartingPhase = (assessmentResults, experienceLevel) => {\r\n    if (!assessmentResults) {\r\n        return {\r\n            phase: 'Phase_1',\r\n            duration: '4 weeks',\r\n            focus: 'Foundation building',\r\n            reason: 'No assessment data - default to Phase 1'\r\n        };\r\n    }\r\n\r\n    const compensationCount = assessmentResults.compensationCount || 0;\r\n    const riskLevel = assessmentResults.riskLevel || 'Low';\r\n\r\n    // Rules for starting phase based on movement assessment\r\n    if (compensationCount >= 3 || riskLevel === 'High') {\r\n        return {\r\n            phase: 'Phase_1',\r\n            duration: '6-8 weeks',\r\n            focus: 'Extensive corrective work',\r\n            reason: 'Multiple significant compensations detected'\r\n        };\r\n    }\r\n\r\n    if (compensationCount >= 1 || riskLevel === 'Moderate' || experienceLevel === 'beginner') {\r\n        return {\r\n            phase: 'Phase_1',\r\n            duration: '4-6 weeks',\r\n            focus: 'Standard stabilization with correctives',\r\n            reason: 'Movement compensations present or new to training'\r\n        };\r\n    }\r\n\r\n    if (experienceLevel === 'advanced' && compensationCount === 0 && riskLevel === 'Low') {\r\n        return {\r\n            phase: 'Phase_2',\r\n            duration: '4 weeks',\r\n            focus: 'Strength endurance with movement validation',\r\n            reason: 'Excellent movement quality and training experience'\r\n        };\r\n    }\r\n\r\n    // Default\r\n    return {\r\n        phase: 'Phase_1',\r\n        duration: '4 weeks',\r\n        focus: 'Foundation building',\r\n        reason: 'Standard OPT model entry point'\r\n    };\r\n};\r\n\r\n// ===== NASM TIMELINE PLANNING =====\r\n\r\nexport const nasmTimelinePlanning = {\r\n    macrocycle: {\r\n        duration: '12 months',\r\n        structure: 'Annual periodization plan',\r\n        phases: 'Mapped across year based on goal'\r\n    },\r\n\r\n    mesocycle: {\r\n        duration: '4-6 weeks',\r\n        structure: 'Individual OPT phases',\r\n        focus: 'Single adaptation emphasis'\r\n    },\r\n\r\n    microcycle: {\r\n        duration: '1 week',\r\n        structure: '2-6 sessions per week',\r\n        planning: 'Daily workout scheduling'\r\n    },\r\n\r\n    // Goal-specific annual plans\r\n    annualPlans: {\r\n        fat_loss: 'Jan(P1) → Feb(P2) → Mar(P1) → Apr(P2) → repeat alternating',\r\n        hypertrophy: 'Jan(P1) → Feb(P2) → Mar(P3) → Apr(P4) → May(P2) → Jun(P3) → Jul(P4)',\r\n        max_strength: 'Jan(P1) → Feb(P2) → Mar(P4) → Apr(P1) → May(P2) → Jun(P4)',\r\n        sports_performance: 'Jan(P1) → Feb(P2) → Mar(P5) → Apr+(undulating P1,P2,P5 weekly)',\r\n        general_fitness: 'Jan(P1) → Feb(P2) → Mar(P1) → Apr(P2) → May(variation) → repeat'\r\n    }\r\n};\r\n\r\n// ===== NASM PROGRAM GENERATION ENGINE =====\r\n\r\nexport const generateNASMProgram = (clientData) => {\r\n    const {\r\n        goal,\r\n        assessmentResults,\r\n        experienceLevel,\r\n        timeline,\r\n        progressionModel = 'linear',\r\n        populationType = null\r\n    } = clientData;\r\n\r\n    // Step 1: Determine goal pathway\r\n    const pathway = nasmGoalPathways[goal] || nasmGoalPathways['general_fitness'];\r\n\r\n    // Step 2: Determine starting phase from assessments\r\n    const startingPhase = determineNASMStartingPhase(assessmentResults, experienceLevel);\r\n\r\n    // Step 3: Generate corrective strategies from existing muscle lookup\r\n    const correctiveStrategies = assessmentResults?.analysis ?\r\n        generateCorrectiveStrategies(assessmentResults.analysis) : null;\r\n\r\n    // Step 4: Create phase progression plan\r\n    const phasePlan = createNASMPhasePlan({\r\n        pathway,\r\n        startingPhase,\r\n        timeline,\r\n        progressionModel,\r\n        populationType\r\n    });\r\n\r\n    // Step 5: Generate workouts with OPT acute variables\r\n    const workouts = generateNASMWorkouts({\r\n        phasePlan,\r\n        correctiveStrategies,\r\n        pathway,\r\n        populationType\r\n    });\r\n\r\n    // Step 6: Create reassessment schedule\r\n    const reassessmentSchedule = generateReassessmentPlan(phasePlan);\r\n\r\n    return {\r\n        methodology: 'NASM',\r\n        goal,\r\n        pathway,\r\n        startingPhase,\r\n        correctiveStrategies,\r\n        phasePlan,\r\n        workouts,\r\n        reassessmentSchedule,\r\n        progressionModel,\r\n        populationType\r\n    };\r\n};\r\n\r\n// ===== HELPER FUNCTIONS =====\r\n\r\nconst generateCorrectiveStrategies = (analysis) => {\r\n    if (!analysis || (!analysis.overactive && !analysis.underactive)) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        overactive: analysis.overactive || [],\r\n        underactive: analysis.underactive || [],\r\n        priority: analysis.priority || [],\r\n        warmupCorrectives: generateWarmupCorrectives(analysis),\r\n        cooldownCorrectives: generateCooldownCorrectives(analysis)\r\n    };\r\n};\r\n\r\nconst generateWarmupCorrectives = (analysis) => {\r\n    const warmup = [];\r\n\r\n    // Add inhibition exercises for overactive muscles\r\n    if (analysis.overactive) {\r\n        analysis.overactive.forEach(muscle => {\r\n            warmup.push({\r\n                type: 'inhibition',\r\n                exercise: `${muscle.muscle} SMR`,\r\n                duration: '30-60 seconds',\r\n                reason: muscle.reason\r\n            });\r\n        });\r\n    }\r\n\r\n    // Add activation exercises for underactive muscles\r\n    if (analysis.underactive) {\r\n        analysis.underactive.forEach(muscle => {\r\n            warmup.push({\r\n                type: 'activation',\r\n                exercise: `${muscle.muscle} activation`,\r\n                duration: '10-15 reps',\r\n                reason: muscle.reason\r\n            });\r\n        });\r\n    }\r\n\r\n    return warmup;\r\n};\r\n\r\nconst generateCooldownCorrectives = (analysis) => {\r\n    const cooldown = [];\r\n\r\n    // Add lengthening exercises for overactive muscles\r\n    if (analysis.overactive) {\r\n        analysis.overactive.forEach(muscle => {\r\n            cooldown.push({\r\n                type: 'lengthening',\r\n                exercise: `${muscle.muscle} static stretch`,\r\n                duration: '30 seconds',\r\n                reason: muscle.reason\r\n            });\r\n        });\r\n    }\r\n\r\n    return cooldown;\r\n};\r\n\r\nconst createNASMPhasePlan = ({ pathway, startingPhase, timeline, progressionModel, populationType }) => {\r\n    const plan = {\r\n        totalDuration: timeline?.weeks || 12,\r\n        progression: progressionModel,\r\n        startingPhase: startingPhase.phase,\r\n        phases: [],\r\n        populationModifications: populationType ? getPopulationModifications(populationType) : null\r\n    };\r\n\r\n    // Create phase sequence based on goal pathway\r\n    let currentWeek = 1;\r\n    const phaseSequence = pathway.phases;\r\n\r\n    phaseSequence.forEach((phaseId, index) => {\r\n        const phase = nasmOPTPhases[phaseId];\r\n        const duration = index === 0 ? parseInt(startingPhase.duration.split(' ')[0]) : 4;\r\n\r\n        plan.phases.push({\r\n            id: phaseId,\r\n            name: phase.name,\r\n            startWeek: currentWeek,\r\n            endWeek: currentWeek + duration - 1,\r\n            duration,\r\n            focus: phase.focus,\r\n            acuteVariables: phase.acuteVariables,\r\n            assessmentCriteria: phase.assessmentCriteria\r\n        });\r\n\r\n        currentWeek += duration;\r\n    });\r\n\r\n    return plan;\r\n};\r\n\r\nconst generateNASMWorkouts = ({ phasePlan, correctiveStrategies, pathway, populationType }) => {\r\n    const workouts = [];\r\n\r\n    phasePlan.phases.forEach(phase => {\r\n        const phaseSpec = nasmOPTPhases[phase.id];\r\n\r\n        // Generate weekly workout structure\r\n        for (let week = phase.startWeek; week <= phase.endWeek; week++) {\r\n            const weeklyWorkouts = generateWeeklyNASMWorkouts({\r\n                phase: phaseSpec,\r\n                week,\r\n                correctiveStrategies,\r\n                populationType\r\n            });\r\n\r\n            workouts.push({\r\n                week,\r\n                phase: phase.id,\r\n                workouts: weeklyWorkouts\r\n            });\r\n        }\r\n    });\r\n\r\n    return workouts;\r\n};\r\n\r\nconst generateWeeklyNASMWorkouts = ({ phase, week, correctiveStrategies, populationType }) => {\r\n    const frequency = parseInt(phase.acuteVariables.frequency.split('-')[0]) || 3;\r\n    const workouts = [];\r\n\r\n    for (let day = 1; day <= frequency; day++) {\r\n        const workout = {\r\n            day,\r\n            phase: phase.name,\r\n            warmup: generateNASMWarmup(correctiveStrategies, populationType),\r\n            main: generateNASMMainWorkout(phase, populationType),\r\n            cooldown: generateNASMCooldown(correctiveStrategies, populationType)\r\n        };\r\n\r\n        workouts.push(workout);\r\n    }\r\n\r\n    return workouts;\r\n};\r\n\r\nconst generateNASMWarmup = (correctiveStrategies, populationType) => {\r\n    const warmup = [\r\n        { exercise: 'General warm-up', duration: '5-10 minutes', type: 'cardio' }\r\n    ];\r\n\r\n    if (correctiveStrategies?.warmupCorrectives) {\r\n        warmup.push(...correctiveStrategies.warmupCorrectives);\r\n    }\r\n\r\n    // Add population-specific warm-up modifications\r\n    if (populationType) {\r\n        warmup.push(...getPopulationWarmupModifications(populationType));\r\n    }\r\n\r\n    return warmup;\r\n};\r\n\r\nconst generateNASMMainWorkout = (phase, populationType) => {\r\n    // This would contain the main workout based on phase specifications\r\n    // For now, return basic structure\r\n    return {\r\n        type: 'main_workout',\r\n        phase: phase.name,\r\n        acuteVariables: phase.acuteVariables,\r\n        exerciseSelection: phase.exerciseSelection,\r\n        populationModifications: populationType ? getPopulationExerciseModifications(populationType) : null\r\n    };\r\n};\r\n\r\nconst generateNASMCooldown = (correctiveStrategies, populationType) => {\r\n    const cooldown = [\r\n        { exercise: 'Cool-down cardio', duration: '5-10 minutes', type: 'cardio' }\r\n    ];\r\n\r\n    if (correctiveStrategies?.cooldownCorrectives) {\r\n        cooldown.push(...correctiveStrategies.cooldownCorrectives);\r\n    }\r\n\r\n    return cooldown;\r\n};\r\n\r\nconst generateReassessmentPlan = (phasePlan) => {\r\n    const schedule = [];\r\n\r\n    phasePlan.phases.forEach(phase => {\r\n        schedule.push({\r\n            week: phase.endWeek,\r\n            type: 'phase_completion_assessment',\r\n            assessments: ['movement_screen', 'performance_metrics'],\r\n            criteria: phase.assessmentCriteria\r\n        });\r\n    });\r\n\r\n    return schedule;\r\n};\r\n\r\n// ===== POPULATION MODIFICATIONS =====\r\n\r\nconst getPopulationModifications = (populationType) => {\r\n    const modifications = {\r\n        'pregnancy': {\r\n            restrictions: ['supine_exercises_after_first_trimester', 'high_impact_movements'],\r\n            modifications: ['avoid_valsalva_maneuver', 'monitor_heart_rate', 'pelvic_floor_focus'],\r\n            specialConsiderations: ['hydration_emphasis', 'temperature_regulation']\r\n        },\r\n        'elderly': {\r\n            restrictions: ['high_impact_plyometrics', 'maximal_loads'],\r\n            modifications: ['extended_warm_up', 'balance_emphasis', 'fall_prevention_focus'],\r\n            specialConsiderations: ['medication_interactions', 'bone_density_considerations']\r\n        },\r\n        'injury': {\r\n            restrictions: ['depends_on_injury_type'],\r\n            modifications: ['pain_free_range_of_motion', 'progressive_loading'],\r\n            specialConsiderations: ['clearance_from_healthcare_provider', 'symptom_monitoring']\r\n        }\r\n    };\r\n\r\n    return modifications[populationType] || null;\r\n};\r\n\r\nconst getPopulationWarmupModifications = (populationType) => {\r\n    const modifications = {\r\n        'pregnancy': [\r\n            { exercise: 'Pelvic tilts', duration: '10 reps', type: 'mobility' },\r\n            { exercise: 'Cat-cow stretches', duration: '10 reps', type: 'mobility' }\r\n        ],\r\n        'elderly': [\r\n            { exercise: 'Joint mobility sequence', duration: '5 minutes', type: 'mobility' },\r\n            { exercise: 'Balance challenges', duration: '3 minutes', type: 'stability' }\r\n        ],\r\n        'injury': [\r\n            { exercise: 'Specific injury warm-up', duration: 'as tolerated', type: 'therapeutic' }\r\n        ]\r\n    };\r\n\r\n    return modifications[populationType] || [];\r\n};\r\n\r\nconst getPopulationExerciseModifications = (populationType) => {\r\n    const modifications = {\r\n        'pregnancy': {\r\n            avoid: ['prone_exercises', 'supine_exercises_after_16_weeks', 'contact_sports'],\r\n            modify: ['reduce_intensity_as_pregnancy_progresses', 'focus_on_functional_movements'],\r\n            add: ['pelvic_floor_exercises', 'postural_exercises']\r\n        },\r\n        'elderly': {\r\n            avoid: ['high_impact_exercises', 'ballistic_movements'],\r\n            modify: ['slower_movement_speeds', 'assisted_exercises_if_needed'],\r\n            add: ['balance_training', 'fall_prevention_exercises', 'bone_loading_exercises']\r\n        },\r\n        'injury': {\r\n            avoid: ['pain_provoking_movements', 'exercises_contradicted_by_healthcare_provider'],\r\n            modify: ['pain_free_range_of_motion', 'reduced_loads_initially'],\r\n            add: ['corrective_exercises', 'therapeutic_exercises']\r\n        }\r\n    };\r\n\r\n    return modifications[populationType] || null;\r\n};\r\n\r\nexport default {\r\n    nasmMethodologyConfig,\r\n    nasmGoalPathways,\r\n    nasmExperienceMapping,\r\n    nasmOPTPhases,\r\n    nasmProgressionModels,\r\n    determineNASMStartingPhase,\r\n    nasmTimelinePlanning,\r\n    generateNASMProgram\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useProgramContext } from '../../../contexts/ProgramContext';\r\nimport { nasmMethodologyConfig } from '../../assessment/nasm/shared/nasmOPTModel';\r\nimport './SystemRecommendationStep.css';\r\n\r\nconst SystemRecommendationStep = () => {\r\n  const { state, actions } = useProgramContext();\r\n\r\n  const systems = [\r\n    {\r\n      id: 'NASM',\r\n      name: nasmMethodologyConfig.name,\r\n      description: nasmMethodologyConfig.description,\r\n      bromleyIntegration: 'Comprehensive movement assessment and corrective exercise integration',\r\n      goals: ['corrective_exercise', 'movement_quality', 'injury_prevention', 'general_fitness', 'hypertrophy', 'sports_performance'],\r\n      movementConsiderations: 'Evidence-based movement assessment with 5-phase OPT model progression',\r\n      features: nasmMethodologyConfig.features,\r\n      systemConfiguration: nasmMethodologyConfig.systemConfiguration\r\n    },\r\n    {\r\n      id: 'RP',\r\n      name: 'Renaissance Periodization',\r\n      description: 'Volume-based hypertrophy and weight loss',\r\n      bromleyIntegration: 'Enhanced with wave progression',\r\n      goals: ['hypertrophy', 'weight_loss'],\r\n      movementConsiderations: 'Best with good movement quality; includes corrective work in warm-up'\r\n    },\r\n    {\r\n      id: 'linear',\r\n      name: 'Linear Periodization',\r\n      description: 'Motor control and general fitness',\r\n      bromleyIntegration: 'Movement quality waves',\r\n      goals: ['motor_control', 'general_fitness'],\r\n      movementConsiderations: 'Ideal for addressing movement compensations with progressive overload'\r\n    },\r\n    {\r\n      id: '5/3/1',\r\n      name: '5/3/1 Method',\r\n      description: 'Strength and powerlifting focus',\r\n      bromleyIntegration: 'AMRAP testing protocols',\r\n      goals: ['strength', 'powerlifting'],\r\n      movementConsiderations: 'Requires good movement foundation; may need corrective phase first'\r\n    },\r\n    {\r\n      id: 'josh-bryant',\r\n      name: 'Josh Bryant Method',\r\n      description: 'Tactical and strongman training',\r\n      bromleyIntegration: 'Specificity optimization',\r\n      goals: ['tactical', 'strongman'],\r\n      movementConsiderations: 'Emphasizes functional movement patterns and injury prevention'\r\n    }\r\n  ];\r\n\r\n  const handleSystemSelect = (systemId) => {\r\n    // Set the selected system in the context\r\n    actions.setSelectedSystem(systemId);\r\n    // Do NOT automatically advance the step - let the user click \"Next\"\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (state.selectedSystem) {\r\n      // Move to the next step in the methodology-first workflow (User Info Phase)\r\n      actions.setCurrentStep(2);\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    actions.setCurrentStep(1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"system-recommendation-step\">\r\n      <div className=\"step-header\">\r\n        <h2>🤖 System Recommendation</h2>\r\n        <p className=\"step-description\">\r\n          Movement assessment and goal-based system selection with Bromley integration\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"content-section\">\r\n        <h3>📋 Training Systems</h3>\r\n        <p className=\"recommendation-note\">\r\n          Based on your goal: <strong>{state.primaryGoal || state.programData?.goal || 'Not selected'}</strong>\r\n        </p>\r\n\r\n        <div className=\"systems-grid\">\r\n          {systems.map((system) => (\r\n            <div\r\n              key={system.id}\r\n              className={`system-card ${state.selectedSystem === system.id ? 'selected' : ''}`}\r\n              onClick={() => handleSystemSelect(system.id)}\r\n            >\r\n              <h4>{system.name}</h4>\r\n              <p className=\"system-description\">{system.description}</p>\r\n              <div className=\"system-details\">\r\n                <div className=\"bromley-integration\">\r\n                  <strong>Bromley Integration:</strong> {system.bromleyIntegration}\r\n                </div>\r\n                <div className=\"movement-considerations\">\r\n                  <strong>Movement Focus:</strong> {system.movementConsiderations}\r\n                </div>\r\n                {system.goals && (\r\n                  <div className=\"applicable-goals\">\r\n                    <strong>Best for:</strong> {system.goals.join(', ')}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Navigation */}\r\n        <div className=\"navigation-section\">\r\n          <div className=\"nav-buttons\">\r\n            <button\r\n              onClick={handlePrevious}\r\n              className=\"btn-secondary\"\r\n            >\r\n              ← Previous\r\n            </button>\r\n\r\n            {state.selectedSystem && (\r\n              <button\r\n                onClick={handleNext}\r\n                className=\"btn-primary\"\r\n              >\r\n                Continue to User Information →\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SystemRecommendationStep;\r\n","import React, { useState } from 'react';\r\nimport { useProgramContext } from '../../../contexts/ProgramContext';\r\nimport { nasmGoalPathways } from '../../assessment/nasm/shared/nasmOPTModel';\r\n\r\nconst PrimaryGoalStep = () => {\r\n    const { state, actions } = useProgramContext();\r\n    const [selectedGoal, setSelectedGoal] = useState(state.programData?.goal || '');\r\n\r\n    // Check if NASM is selected methodology to provide NASM-specific goals\r\n    const isNASMSelected = state.selectedSystem === 'NASM';\r\n\r\n    const goals = [\r\n        {\r\n            id: 'bodybuilding',\r\n            name: 'Bodybuilding/Physique',\r\n            icon: '💪',\r\n            description: 'Build muscle mass and aesthetic physique',\r\n            details: 'Focus on hypertrophy, muscle symmetry, and body composition',\r\n            repRanges: '6-15 reps',\r\n            focus: 'Muscle growth, aesthetics',\r\n            nasmPathway: isNASMSelected ? nasmGoalPathways.hypertrophy : null\r\n        },\r\n        {\r\n            id: 'powerlifting',\r\n            name: 'Powerlifting/Strength',\r\n            icon: '🏋️',\r\n            description: 'Maximize squat, bench, deadlift strength',\r\n            details: 'Competition preparation and maximal strength development',\r\n            repRanges: '1-6 reps',\r\n            focus: 'Maximal strength, competition',\r\n            nasmPathway: isNASMSelected ? nasmGoalPathways.max_strength : null\r\n        },\r\n        {\r\n            id: 'athletic',\r\n            name: 'Athletic Performance',\r\n            icon: '⚡',\r\n            description: 'Sport-specific strength and conditioning',\r\n            details: 'Power, speed, agility, and sport-specific movements',\r\n            repRanges: '1-8 reps',\r\n            focus: 'Power, speed, athleticism',\r\n            nasmPathway: isNASMSelected ? nasmGoalPathways.sports_performance : null\r\n        },\r\n        {\r\n            id: 'general',\r\n            name: 'General Fitness',\r\n            icon: '🏃',\r\n            description: 'Overall health and wellness',\r\n            details: 'Balanced approach to strength, cardio, and mobility',\r\n            repRanges: '8-15 reps',\r\n            focus: 'Health, longevity, balance',\r\n            nasmPathway: isNASMSelected ? nasmGoalPathways.general_fitness : null\r\n        },\r\n        {\r\n            id: 'endurance',\r\n            name: 'Endurance/Conditioning',\r\n            icon: '🏃‍♂️',\r\n            description: 'Cardiovascular fitness and endurance',\r\n            details: 'Aerobic capacity, muscular endurance, work capacity',\r\n            repRanges: '12-20+ reps',\r\n            focus: 'Endurance, work capacity',\r\n            nasmPathway: isNASMSelected ? nasmGoalPathways.general_fitness : null\r\n        },\r\n        {\r\n            id: 'fat_loss',\r\n            name: 'Fat Loss/Weight Management',\r\n            icon: '🔥',\r\n            description: 'Body fat reduction and weight management',\r\n            details: 'Maximize caloric expenditure while preserving lean mass',\r\n            repRanges: '12-20 reps',\r\n            focus: 'Fat loss, body composition',\r\n            nasmPathway: isNASMSelected ? nasmGoalPathways.fat_loss : null\r\n        },\r\n        {\r\n            id: 'hybrid',\r\n            name: 'Hybrid/Multiple Goals',\r\n            icon: '🎯',\r\n            description: 'Combination of multiple training objectives',\r\n            details: 'Balanced approach combining strength, size, and conditioning',\r\n            repRanges: 'Variable',\r\n            focus: 'Multiple objectives',\r\n            nasmPathway: isNASMSelected ? nasmGoalPathways.general_fitness : null\r\n        },\r\n        {\r\n            id: 'motor_control',\r\n            name: 'Motor Control/Movement Quality',\r\n            icon: '🧘',\r\n            description: 'Movement quality and motor control development',\r\n            details: 'Focus on perfect movement patterns, stability, and coordination',\r\n            repRanges: '8-15 reps',\r\n            focus: 'Movement quality, coordination',\r\n            nasmPathway: isNASMSelected ? nasmGoalPathways.general_fitness : null\r\n        }\r\n    ];\r\n\r\n    const handleGoalSelect = (goalId) => {\r\n        setSelectedGoal(goalId);\r\n        // Update both the legacy and new context structures\r\n        actions.setProgramData({ goal: goalId });\r\n        if (actions.updatePrimaryGoal) {\r\n            actions.updatePrimaryGoal(goalId);\r\n        }\r\n    };\r\n\r\n    // NEW: Population modification handler\r\n    const handlePopulationSelect = (populationType) => {\r\n        actions.setPopulationType(populationType === state.populationType ? null : populationType);\r\n    };\r\n\r\n    const handleNext = () => {\r\n        if (selectedGoal) {\r\n            // For streamlined workflow\r\n            if (actions.setCurrentStep) {\r\n                actions.setCurrentStep(2);\r\n            } else {\r\n                // Legacy workflow\r\n                actions.setActiveTab('experience-level');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\r\n                <h3 className=\"text-blue-400 font-semibold mb-2 flex items-center gap-2\">\r\n                    🎯 Step 1: Primary Goal\r\n                </h3>\r\n                <p className=\"text-blue-300 text-sm\">\r\n                    Define your main training objective. This will guide all subsequent program decisions.\r\n                </p>\r\n            </div>\r\n\r\n            {/* Goal Selection */}\r\n            <div className=\"bg-gray-800 rounded-lg p-6\">\r\n                <h4 className=\"text-lg font-semibold text-white mb-4\">What is your primary training goal?</h4>\r\n                <p className=\"text-gray-400 mb-6\">\r\n                    Select the goal that best represents your main training focus. This will determine your program structure,\r\n                    rep ranges, and training methods.\r\n                </p>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    {goals.map((goal) => (\r\n                        <button\r\n                            key={goal.id}\r\n                            onClick={() => handleGoalSelect(goal.id)}\r\n                            className={`p-4 rounded-lg border-2 text-left transition-all ${selectedGoal === goal.id\r\n                                ? 'border-blue-500 bg-blue-900/20'\r\n                                : 'border-gray-600 hover:border-gray-500 bg-gray-700'\r\n                                }`}\r\n                        >\r\n                            <div className=\"flex items-start gap-3\">\r\n                                <div className=\"text-2xl\">{goal.icon}</div>\r\n                                <div className=\"flex-1\">\r\n                                    <h5 className=\"text-white font-semibold mb-1\">{goal.name}</h5>\r\n                                    <p className=\"text-gray-300 text-sm mb-2\">{goal.description}</p>\r\n                                    <p className=\"text-gray-400 text-xs mb-2\">{goal.details}</p>\r\n                                    <div className=\"flex justify-between text-xs\">\r\n                                        <span className=\"text-blue-400\">Rep Ranges: {goal.repRanges}</span>\r\n                                        <span className=\"text-green-400\">Focus: {goal.focus}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Goal Summary */}\r\n            {selectedGoal && (\r\n                <div className=\"bg-green-900/20 border border-green-500/30 rounded-lg p-4\">\r\n                    <h4 className=\"text-green-400 font-semibold mb-2\">Goal Selected</h4>\r\n                    <div className=\"text-green-300 text-sm space-y-1\">\r\n                        <p><strong>Primary Goal:</strong> {goals.find(g => g.id === selectedGoal)?.name}</p>\r\n                        <p><strong>Focus:</strong> {goals.find(g => g.id === selectedGoal)?.focus}</p>\r\n                        <p><strong>Rep Ranges:</strong> {goals.find(g => g.id === selectedGoal)?.repRanges}</p>\r\n\r\n                        {/* NASM-specific pathway information */}\r\n                        {isNASMSelected && goals.find(g => g.id === selectedGoal)?.nasmPathway && (\r\n                            <div className=\"mt-3 pt-3 border-t border-green-500/30\">\r\n                                <p className=\"text-green-400 font-medium\">NASM OPT Pathway:</p>\r\n                                <p><strong>Pathway:</strong> {goals.find(g => g.id === selectedGoal)?.nasmPathway.name}</p>\r\n                                <p><strong>Phases:</strong> {goals.find(g => g.id === selectedGoal)?.nasmPathway.phases.join(' → ')}</p>\r\n                                <p><strong>Timeline:</strong> {goals.find(g => g.id === selectedGoal)?.nasmPathway.timeline}</p>\r\n                                <p><strong>Expected Outcomes:</strong> {goals.find(g => g.id === selectedGoal)?.nasmPathway.expectedOutcomes}</p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* NEW: Population Considerations */}\r\n            <div className=\"bg-gray-800 rounded-lg p-6\">\r\n                <h4 className=\"text-lg font-semibold text-white mb-4\">Special Population Considerations</h4>\r\n                <p className=\"text-gray-400 mb-6\">\r\n                    Select any special considerations that apply to ensure safe and effective assessment modifications.\r\n                </p>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    <button\r\n                        onClick={() => handlePopulationSelect('pregnancy')}\r\n                        className={`p-4 rounded-lg border-2 text-left transition-all ${state.populationType === 'pregnancy'\r\n                                ? 'border-pink-500 bg-pink-900/20'\r\n                                : 'border-gray-600 hover:border-gray-500 bg-gray-700'\r\n                            }`}\r\n                    >\r\n                        <div className=\"text-2xl mb-2\">🤰</div>\r\n                        <h5 className=\"text-white font-semibold mb-1\">Pregnancy</h5>\r\n                        <p className=\"text-gray-300 text-sm\">\r\n                            Prenatal/postnatal modifications\r\n                        </p>\r\n                        <p className=\"text-gray-400 text-xs mt-2\">\r\n                            Assessment adaptations for safety\r\n                        </p>\r\n                    </button>\r\n\r\n                    <button\r\n                        onClick={() => handlePopulationSelect('elderly')}\r\n                        className={`p-4 rounded-lg border-2 text-left transition-all ${state.populationType === 'elderly'\r\n                                ? 'border-purple-500 bg-purple-900/20'\r\n                                : 'border-gray-600 hover:border-gray-500 bg-gray-700'\r\n                            }`}\r\n                    >\r\n                        <div className=\"text-2xl mb-2\">👴</div>\r\n                        <h5 className=\"text-white font-semibold mb-1\">Elderly (65+)</h5>\r\n                        <p className=\"text-gray-300 text-sm\">\r\n                            Age-related considerations\r\n                        </p>\r\n                        <p className=\"text-gray-400 text-xs mt-2\">\r\n                            Balance and mobility focus\r\n                        </p>\r\n                    </button>\r\n\r\n                    <button\r\n                        onClick={() => handlePopulationSelect('injury')}\r\n                        className={`p-4 rounded-lg border-2 text-left transition-all ${state.populationType === 'injury'\r\n                                ? 'border-orange-500 bg-orange-900/20'\r\n                                : 'border-gray-600 hover:border-gray-500 bg-gray-700'\r\n                            }`}\r\n                    >\r\n                        <div className=\"text-2xl mb-2\">🩹</div>\r\n                        <h5 className=\"text-white font-semibold mb-1\">Injury History</h5>\r\n                        <p className=\"text-gray-300 text-sm\">\r\n                            Previous injury considerations\r\n                        </p>\r\n                        <p className=\"text-gray-400 text-xs mt-2\">\r\n                            Modified movement patterns\r\n                        </p>\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Population-Specific Information */}\r\n                {state.populationType && (\r\n                    <div className=\"mt-6 p-4 bg-blue-900/20 border border-blue-500/30 rounded-lg\">\r\n                        <h5 className=\"text-blue-400 font-semibold mb-2\">Assessment Modifications for {state.populationType === 'pregnancy' ? 'Pregnancy' : state.populationType === 'elderly' ? 'Elderly' : 'Injury History'}</h5>\r\n                        {state.populationType === 'pregnancy' && (\r\n                            <div className=\"text-blue-300 text-sm\">\r\n                                <p>• Overhead Squat: Reduce depth, use chair support if needed</p>\r\n                                <p>• Single-Leg Squat: Shallow range, seated/supported position</p>\r\n                                <p>• Push/Pull: Emphasize scapular stability, avoid heavy overhead</p>\r\n                                <p>• Monitor for excessive lordosis and diastasis recti</p>\r\n                            </div>\r\n                        )}\r\n                        {state.populationType === 'elderly' && (\r\n                            <div className=\"text-blue-300 text-sm\">\r\n                                <p>• Overhead Squat: Chair-supported squat, elevated heels if needed</p>\r\n                                <p>• Single-Leg Squat: Start with balance only, progress carefully</p>\r\n                                <p>• Push/Pull: Seated positions if balance concerns</p>\r\n                                <p>• Focus on fall prevention and functional movements</p>\r\n                            </div>\r\n                        )}\r\n                        {state.populationType === 'injury' && (\r\n                            <div className=\"text-blue-300 text-sm\">\r\n                                <p>• Assess pain-free range of motion only</p>\r\n                                <p>• Modify assessments based on injury location</p>\r\n                                <p>• Use unilateral variations if appropriate</p>\r\n                                <p>• Start with functional baseline movements</p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Training Focus Guidelines */}\r\n            <div className=\"bg-gray-800 rounded-lg p-6\">\r\n                <h4 className=\"text-lg font-semibold text-white mb-4\">Training Focus Guidelines</h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <div>\r\n                        <h5 className=\"text-blue-400 font-medium mb-2\">Strength-Focused Goals</h5>\r\n                        <ul className=\"text-gray-300 text-sm space-y-1\">\r\n                            <li>• <strong>Powerlifting:</strong> Max strength, 1-6 reps, competition prep</li>\r\n                            <li>• <strong>Athletic:</strong> Power development, 1-8 reps, explosive training</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div>\r\n                        <h5 className=\"text-green-400 font-medium mb-2\">Hypertrophy-Focused Goals</h5>\r\n                        <ul className=\"text-gray-300 text-sm space-y-1\">\r\n                            <li>• <strong>Bodybuilding:</strong> Muscle growth, 6-15 reps, aesthetic focus</li>\r\n                            <li>• <strong>General Fitness:</strong> Balanced approach, 8-15 reps</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div>\r\n                        <h5 className=\"text-yellow-400 font-medium mb-2\">Endurance-Focused Goals</h5>\r\n                        <ul className=\"text-gray-300 text-sm space-y-1\">\r\n                            <li>• <strong>Conditioning:</strong> Work capacity, 12-20+ reps</li>\r\n                            <li>• <strong>Endurance:</strong> Aerobic capacity, high volume</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div>\r\n                        <h5 className=\"text-purple-400 font-medium mb-2\">Hybrid Goals</h5>\r\n                        <ul className=\"text-gray-300 text-sm space-y-1\">\r\n                            <li>• <strong>Multiple Objectives:</strong> Variable rep ranges</li>\r\n                            <li>• <strong>Balanced Training:</strong> Strength + size + conditioning</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Navigation */}\r\n            <div className=\"flex justify-between\">\r\n                <button\r\n                    disabled\r\n                    className=\"bg-gray-600 text-gray-400 px-6 py-2 rounded-lg cursor-not-allowed\"\r\n                >\r\n                    Previous\r\n                </button>\r\n                <button\r\n                    onClick={handleNext}\r\n                    disabled={!selectedGoal}\r\n                    className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 disabled:cursor-not-allowed text-white px-6 py-2 rounded-lg transition-colors\"\r\n                >\r\n                    Continue to Experience Level →\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PrimaryGoalStep;\r\n","import React, { useState } from 'react';\r\nimport { useProgramContext } from '../../../contexts/ProgramContext';\r\nimport { nasmExperienceMapping } from '../../assessment/nasm/shared/nasmOPTModel';\r\n\r\nconst ExperienceLevelStep = () => {\r\n    const { state, actions } = useProgramContext();\r\n    const [selectedExperience, setSelectedExperience] = useState(state.assessmentData?.trainingExperience || '');\r\n\r\n    // Check if NASM is selected methodology\r\n    const isNASMSelected = state.selectedSystem === 'NASM';\r\n\r\n    const experienceLevels = [\r\n        {\r\n            id: 'beginner',\r\n            name: 'Beginner',\r\n            duration: '0-1 year',\r\n            icon: '🌱',\r\n            description: 'New to structured training',\r\n            characteristics: [\r\n                'Learning basic movement patterns',\r\n                'Building foundational strength',\r\n                'High adaptation potential',\r\n                'Needs simple programming'\r\n            ],\r\n            recommendations: [\r\n                'Full-body routines 3x/week',\r\n                'Focus on compound movements',\r\n                'Linear progression',\r\n                'Emphasis on form and technique'\r\n            ],\r\n            complexity: 'Low',\r\n            volume: 'Low-Moderate',\r\n            nasmMapping: isNASMSelected ? nasmExperienceMapping.beginner : null\r\n        },\r\n        {\r\n            id: 'intermediate',\r\n            name: 'Intermediate',\r\n            duration: '1-3 years',\r\n            icon: '📈',\r\n            description: 'Some training experience',\r\n            characteristics: [\r\n                'Familiar with basic exercises',\r\n                'Can handle moderate volume',\r\n                'Understands training principles',\r\n                'Needs progression variety'\r\n            ],\r\n            recommendations: [\r\n                'Upper/lower or push/pull/legs',\r\n                'Periodization introduction',\r\n                'Progressive overload focus',\r\n                'Exercise variation'\r\n            ],\r\n            complexity: 'Moderate',\r\n            volume: 'Moderate',\r\n            nasmMapping: isNASMSelected ? nasmExperienceMapping.intermediate : null\r\n        },\r\n        {\r\n            id: 'advanced',\r\n            name: 'Advanced',\r\n            duration: '3-5 years',\r\n            icon: '🏆',\r\n            description: 'Experienced with various methods',\r\n            characteristics: [\r\n                'Mastered movement patterns',\r\n                'Handles high training volumes',\r\n                'Understands periodization',\r\n                'Needs specialized programming'\r\n            ],\r\n            recommendations: [\r\n                'Body part splits or specialization',\r\n                'Advanced periodization models',\r\n                'Intensity techniques',\r\n                'Precise load management'\r\n            ],\r\n            complexity: 'High',\r\n            volume: 'High',\r\n            nasmMapping: isNASMSelected ? nasmExperienceMapping.advanced : null\r\n        },\r\n        {\r\n            id: 'expert',\r\n            name: 'Expert/Elite',\r\n            duration: '5+ years',\r\n            icon: '👑',\r\n            description: 'Highly experienced athlete',\r\n            characteristics: [\r\n                'Elite-level performance',\r\n                'Maximum volume tolerance',\r\n                'Advanced technique mastery',\r\n                'Competition experience'\r\n            ],\r\n            recommendations: [\r\n                'Highly specialized programs',\r\n                'Competition periodization',\r\n                'Advanced recovery methods',\r\n                'Individual optimization'\r\n            ],\r\n            complexity: 'Very High',\r\n            volume: 'Very High'\r\n        }\r\n    ];\r\n\r\n    const handleExperienceSelect = (experienceId) => {\r\n        setSelectedExperience(experienceId);\r\n        actions.setAssessmentData({\r\n            ...state.assessmentData,\r\n            trainingExperience: experienceId\r\n        });\r\n    };\r\n\r\n    const handleNext = () => {\r\n        if (selectedExperience) {\r\n            // For streamlined workflow\r\n            if (actions.setCurrentStep) {\r\n                actions.setCurrentStep(3);\r\n            } else {\r\n                // Legacy workflow\r\n                actions.setActiveTab('timeline');\r\n            }\r\n        }\r\n    };\r\n\r\n    const handlePrevious = () => {\r\n        // For streamlined workflow\r\n        if (actions.setCurrentStep) {\r\n            actions.setCurrentStep(1);\r\n        } else {\r\n            // Legacy workflow\r\n            actions.setActiveTab('primary-goal');\r\n        }\r\n    };\r\n\r\n    const selectedLevel = experienceLevels.find(level => level.id === selectedExperience);\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4\">\r\n                <h3 className=\"text-blue-400 font-semibold mb-2 flex items-center gap-2\">\r\n                    📈 Step 2: Experience Level\r\n                </h3>\r\n                <p className=\"text-blue-300 text-sm\">\r\n                    Your training experience determines program complexity and appropriate training methods.\r\n                </p>\r\n            </div>\r\n\r\n            {/* Experience Level Selection */}\r\n            <div className=\"bg-gray-800 rounded-lg p-6\">\r\n                <h4 className=\"text-lg font-semibold text-white mb-4\">How long have you been training consistently?</h4>\r\n                <p className=\"text-gray-400 mb-6\">\r\n                    Select the level that best describes your training experience. This affects exercise selection,\r\n                    program complexity, and training volume.\r\n                </p>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    {experienceLevels.map((level) => (\r\n                        <button\r\n                            key={level.id}\r\n                            onClick={() => handleExperienceSelect(level.id)}\r\n                            className={`p-4 rounded-lg border-2 text-left transition-all ${selectedExperience === level.id\r\n                                ? 'border-blue-500 bg-blue-900/20'\r\n                                : 'border-gray-600 hover:border-gray-500 bg-gray-700'\r\n                                }`}\r\n                        >\r\n                            <div className=\"flex items-start gap-3\">\r\n                                <div className=\"text-2xl\">{level.icon}</div>\r\n                                <div className=\"flex-1\">\r\n                                    <h5 className=\"text-white font-semibold mb-1\">{level.name}</h5>\r\n                                    <p className=\"text-blue-400 text-sm mb-1\">{level.duration}</p>\r\n                                    <p className=\"text-gray-300 text-sm mb-2\">{level.description}</p>\r\n                                    <div className=\"flex justify-between text-xs\">\r\n                                        <span className=\"text-yellow-400\">Complexity: {level.complexity}</span>\r\n                                        <span className=\"text-green-400\">Volume: {level.volume}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Detailed Information */}\r\n            {selectedLevel && (\r\n                <div className=\"bg-gray-800 rounded-lg p-6\">\r\n                    <h4 className=\"text-lg font-semibold text-white mb-4\">\r\n                        {selectedLevel.name} Level Details\r\n                    </h4>\r\n\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                        <div>\r\n                            <h5 className=\"text-blue-400 font-medium mb-3\">Characteristics</h5>\r\n                            <ul className=\"text-gray-300 text-sm space-y-1\">\r\n                                {selectedLevel.characteristics.map((char, index) => (\r\n                                    <li key={index}>• {char}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <h5 className=\"text-green-400 font-medium mb-3\">Programming Recommendations</h5>\r\n                            <ul className=\"text-gray-300 text-sm space-y-1\">\r\n                                {selectedLevel.recommendations.map((rec, index) => (\r\n                                    <li key={index}>• {rec}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Experience Guidelines */}\r\n            <div className=\"bg-gray-800 rounded-lg p-6\">\r\n                <h4 className=\"text-lg font-semibold text-white mb-4\">Training Experience Guidelines</h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <div>\r\n                        <h5 className=\"text-blue-400 font-medium mb-2\">Program Complexity</h5>\r\n                        <ul className=\"text-gray-300 text-sm space-y-1\">\r\n                            <li>• <strong>Beginner:</strong> Simple, linear progressions</li>\r\n                            <li>• <strong>Intermediate:</strong> Basic periodization</li>\r\n                            <li>• <strong>Advanced:</strong> Complex periodization models</li>\r\n                            <li>• <strong>Expert:</strong> Highly specialized programs</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div>\r\n                        <h5 className=\"text-yellow-400 font-medium mb-2\">Volume Tolerance</h5>\r\n                        <ul className=\"text-gray-300 text-sm space-y-1\">\r\n                            <li>• <strong>Beginner:</strong> 8-12 sets per week per muscle</li>\r\n                            <li>• <strong>Intermediate:</strong> 12-16 sets per week per muscle</li>\r\n                            <li>• <strong>Advanced:</strong> 16-22 sets per week per muscle</li>\r\n                            <li>• <strong>Expert:</strong> 20+ sets per week per muscle</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Experience Summary */}\r\n            {selectedExperience && (\r\n                <div className=\"bg-green-900/20 border border-green-500/30 rounded-lg p-4\">\r\n                    <h4 className=\"text-green-400 font-semibold mb-2\">Experience Level Selected</h4>\r\n                    <div className=\"text-green-300 text-sm space-y-1\">\r\n                        <p><strong>Level:</strong> {selectedLevel.name} ({selectedLevel.duration})</p>\r\n                        <p><strong>Complexity:</strong> {selectedLevel.complexity}</p>\r\n                        <p><strong>Volume Tolerance:</strong> {selectedLevel.volume}</p>\r\n\r\n                        {/* NASM-specific experience mapping */}\r\n                        {isNASMSelected && selectedLevel.nasmMapping && (\r\n                            <div className=\"mt-3 pt-3 border-t border-green-500/30\">\r\n                                <p className=\"text-green-400 font-medium\">NASM OPT Approach:</p>\r\n                                <p><strong>Starting Phase:</strong> {selectedLevel.nasmMapping.startingPhase}</p>\r\n                                <p><strong>Phase 1 Duration:</strong> {selectedLevel.nasmMapping.duration}</p>\r\n                                <p><strong>Progression:</strong> {selectedLevel.nasmMapping.progression}</p>\r\n                                <p><strong>Assessment Frequency:</strong> {selectedLevel.nasmMapping.assessmentFrequency}</p>\r\n                                <p><strong>Modifications:</strong> {selectedLevel.nasmMapping.modifications}</p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Navigation */}\r\n            <div className=\"flex justify-between\">\r\n                <button\r\n                    onClick={handlePrevious}\r\n                    className=\"bg-gray-600 hover:bg-gray-700 text-white px-6 py-2 rounded-lg transition-colors\"\r\n                >\r\n                    Previous: Primary Goal\r\n                </button>\r\n                <button\r\n                    onClick={handleNext}\r\n                    disabled={!selectedExperience}\r\n                    className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 disabled:cursor-not-allowed text-white px-6 py-2 rounded-lg transition-colors\"\r\n                >\r\n                    Next: Timeline\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExperienceLevelStep;\r\n","import React, { useState } from 'react';\r\nimport { useProgramContext } from '../../../contexts/ProgramContext';\r\n\r\nconst TimelineStep = () => {\r\n  const { state, actions } = useProgramContext();\r\n  const [selectedCategory, setSelectedCategory] = useState('mesocycle');\r\n\r\n  // Timeline categories with comprehensive options\r\n  const timelineCategories = {\r\n    mesocycle: {\r\n      name: 'Mesocycles',\r\n      description: 'Short-term focused training blocks (2-8 weeks)',\r\n      icon: '🔄',\r\n      options: [\r\n        { weeks: 2, label: '2 weeks', description: 'Deload/Taper block' },\r\n        { weeks: 3, label: '3 weeks', description: 'Intensity focus block' },\r\n        { weeks: 4, label: '4 weeks', description: 'Standard mesocycle' },\r\n        { weeks: 6, label: '6 weeks', description: 'Extended volume block' },\r\n        { weeks: 8, label: '8 weeks', description: 'Strength/Power block' }\r\n      ]\r\n    },\r\n    macrocycle: {\r\n      name: 'Macrocycles (Medium)',\r\n      description: 'Medium-term training phases (8-24 weeks)',\r\n      icon: '📅',\r\n      options: [\r\n        { weeks: 8, label: '8 weeks', description: 'Competition prep cycle' },\r\n        { weeks: 12, label: '12 weeks', description: 'Standard training cycle' },\r\n        { weeks: 16, label: '16 weeks', description: 'Extended development' },\r\n        { weeks: 20, label: '20 weeks', description: 'Comprehensive preparation' },\r\n        { weeks: 24, label: '24 weeks', description: 'Long-term development' }\r\n      ]\r\n    },\r\n    macrocycle_long: {\r\n      name: 'Macrocycles (Long-term)',\r\n      description: 'Long-term athletic development (6 months - 2 years)',\r\n      icon: '🎯',\r\n      options: [\r\n        { weeks: 26, label: '6 months', description: 'Seasonal preparation' },\r\n        { weeks: 39, label: '9 months', description: 'Extended season' },\r\n        { weeks: 52, label: '1 year', description: 'Annual training plan' },\r\n        { weeks: 78, label: '18 months', description: 'Olympic cycle (partial)' },\r\n        { weeks: 104, label: '2 years', description: 'Full Olympic cycle' }\r\n      ]\r\n    },\r\n    custom: {\r\n      name: 'Custom Duration',\r\n      description: 'Set your own specific timeline',\r\n      icon: '⚙️',\r\n      options: []\r\n    }\r\n  };\r\n\r\n  const handleCategoryChange = (category) => {\r\n    setSelectedCategory(category);\r\n    // Clear current selection when switching categories\r\n    if (state.timeline?.category !== category) {\r\n      actions.updateTimeline({ category, weeks: null, customWeeks: null });\r\n    }\r\n  };\r\n\r\n  const handleDurationSelect = (weeks, description) => {\r\n    actions.updateTimeline({\r\n      category: selectedCategory,\r\n      weeks,\r\n      description,\r\n      customWeeks: null\r\n    });\r\n  };\r\n\r\n  const handleCustomWeeksChange = (customWeeks) => {\r\n    actions.updateTimeline({\r\n      category: 'custom',\r\n      weeks: parseInt(customWeeks),\r\n      customWeeks: parseInt(customWeeks),\r\n      description: `Custom ${customWeeks} week program`\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"timeline-step\">\r\n      <div className=\"step-header\">\r\n        <h2>⏱️ Timeline & Duration</h2>\r\n        <p className=\"step-description\">\r\n          Choose your program duration and periodization timeline\r\n        </p>\r\n      </div>\r\n\r\n      {/* Timeline Category Selection */}\r\n      <div className=\"content-section\">\r\n        <h3>Program Timeline Category</h3>\r\n        <div className=\"category-selector\">\r\n          {Object.entries(timelineCategories).map(([key, category]) => (\r\n            <div\r\n              key={key}\r\n              className={`category-option ${selectedCategory === key ? 'active' : ''}`}\r\n              onClick={() => handleCategoryChange(key)}\r\n            >\r\n              <div className=\"category-icon\">{category.icon}</div>\r\n              <div className=\"category-content\">\r\n                <h4>{category.name}</h4>\r\n                <p>{category.description}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Duration Options for Selected Category */}\r\n      {selectedCategory !== 'custom' && (\r\n        <div className=\"content-section\">\r\n          <h3>{timelineCategories[selectedCategory].name} Options</h3>\r\n          <div className=\"duration-grid\">\r\n            {timelineCategories[selectedCategory].options.map(option => (\r\n              <div\r\n                key={option.weeks}\r\n                className={`duration-option ${state.timeline?.weeks === option.weeks ? 'active' : ''}`}\r\n                onClick={() => handleDurationSelect(option.weeks, option.description)}\r\n              >\r\n                <div className=\"duration-label\">{option.label}</div>\r\n                <div className=\"duration-description\">{option.description}</div>\r\n                <div className=\"duration-weeks\">{option.weeks} weeks</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Custom Duration Input */}\r\n      {selectedCategory === 'custom' && (\r\n        <div className=\"content-section\">\r\n          <h3>Custom Duration</h3>\r\n          <div className=\"custom-duration\">\r\n            <label htmlFor=\"customWeeks\">Number of weeks:</label>\r\n            <input\r\n              id=\"customWeeks\"\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"208\"\r\n              value={state.timeline?.customWeeks || ''}\r\n              onChange={(e) => handleCustomWeeksChange(e.target.value)}\r\n              placeholder=\"Enter weeks (1-208)\"\r\n            />\r\n            <span className=\"custom-note\">Maximum: 4 years (208 weeks)</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Selected Timeline Summary */}\r\n      {state.timeline?.weeks && (\r\n        <div className=\"content-section\">\r\n          <h3>Selected Timeline</h3>\r\n          <div className=\"timeline-summary\">\r\n            <div className=\"summary-item\">\r\n              <strong>Duration:</strong> {state.timeline.weeks} weeks\r\n            </div>\r\n            <div className=\"summary-item\">\r\n              <strong>Category:</strong> {timelineCategories[state.timeline.category || selectedCategory].name}\r\n            </div>\r\n            <div className=\"summary-item\">\r\n              <strong>Description:</strong> {state.timeline.description}\r\n            </div>\r\n            <div className=\"summary-item\">\r\n              <strong>Approximate Phases:</strong>\r\n              {state.timeline.weeks <= 4 && ' Single focused block'}\r\n              {state.timeline.weeks > 4 && state.timeline.weeks <= 12 && ' 2-3 training phases'}\r\n              {state.timeline.weeks > 12 && state.timeline.weeks <= 24 && ' 3-4 training phases'}\r\n              {state.timeline.weeks > 24 && state.timeline.weeks <= 52 && ' 4-6 training phases'}\r\n              {state.timeline.weeks > 52 && ' Multiple seasonal phases'}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"step-navigation\">\r\n        <button\r\n          className=\"btn-secondary\"\r\n          onClick={() => actions.setCurrentStep(2)}\r\n        >\r\n          ← Back\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn-primary\"\r\n          disabled={!state.timeline?.weeks}\r\n          onClick={() => actions.setCurrentStep(4)}\r\n        >\r\n          Continue →\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimelineStep;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useProgramContext } from '../../../contexts/ProgramContext';\r\n\r\nconst InjuryScreeningStep = () => {\r\n  const { state, actions } = useProgramContext();\r\n  const [responses, setResponses] = useState(state.injuryScreen?.responses || {});\r\n\r\n  // ============================================\r\n  // ENHANCED INJURY-EXERCISE MAPPING MATRIX\r\n  // ============================================\r\n  const injuryExerciseMatrix = {\r\n    // Shoulder Injuries\r\n    shoulder_impingement: {\r\n      exclude: ['barbell_ohp', 'behind_neck_press', 'upright_row', 'lateral_raise_above_90'],\r\n      modify: {\r\n        'db_shoulder_press': {\r\n          modification: 'neutral_grip_45_degree',\r\n          romLimit: '90_degrees',\r\n          tempoAdjust: '3-0-1-0'\r\n        },\r\n        'bench_press': {\r\n          modification: 'reduce_rom_2_inches',\r\n          gripWidth: 'narrow_1.5x_shoulder',\r\n          angleAdjust: 'slight_decline'\r\n        }\r\n      },\r\n      volumeReduction: 0.7,\r\n      intensityCap: 0.85,\r\n      frequencyMax: 2,\r\n      warmupProtocol: 'extended_shoulder_specific',\r\n      adaptability: { rp: 'excellent', '531': 'moderate', linear: 'good', josh_bryant: 'good' }\r\n    },\r\n\r\n    shoulder_instability: {\r\n      exclude: ['dips', 'wide_grip_bench', 'behind_neck_anything', 'flyes'],\r\n      modify: {\r\n        'all_pressing': {\r\n          modification: 'floor_press_variation',\r\n          stabilityFocus: true,\r\n          tempoAdjust: '2-2-1-0'\r\n        }\r\n      },\r\n      volumeReduction: 0.6,\r\n      intensityCap: 0.75,\r\n      frequencyMax: 2,\r\n      adaptability: { rp: 'excellent', linear: 'excellent', '531': 'poor', josh_bryant: 'moderate' }\r\n    },\r\n\r\n    // Lower Back Injuries\r\n    lower_back_flexion_intolerant: {\r\n      exclude: ['conventional_deadlift', 'goodmorning', 'jefferson_curl', 'situps'],\r\n      modify: {\r\n        'deadlift': {\r\n          modification: 'trap_bar_high_handle',\r\n          startPosition: 'elevated_blocks',\r\n          braceProtocol: 'mcgill_enhanced'\r\n        },\r\n        'squat': {\r\n          modification: 'box_squat',\r\n          depth: 'above_parallel',\r\n          stance: 'wider_reduced_flexion'\r\n        }\r\n      },\r\n      volumeReduction: 0.65,\r\n      intensityCap: 0.8,\r\n      coreProtocol: 'mcgill_big_3',\r\n      adaptability: { rp: 'excellent', linear: 'excellent', '531': 'poor', josh_bryant: 'moderate' }\r\n    },\r\n\r\n    lower_back_extension_intolerant: {\r\n      exclude: ['overhead_press', 'back_extensions', 'superman'],\r\n      modify: {\r\n        'all_overhead': {\r\n          modification: 'seated_supported',\r\n          angleLimit: '75_degrees',\r\n          supportType: 'high_back'\r\n        }\r\n      },\r\n      volumeReduction: 0.7,\r\n      intensityCap: 0.85,\r\n      adaptability: { rp: 'excellent', linear: 'good', '531': 'moderate', josh_bryant: 'good' }\r\n    },\r\n\r\n    // Knee Injuries\r\n    knee_patellofemoral: {\r\n      exclude: ['full_depth_squat', 'lunges_forward', 'leg_extension', 'plyometrics'],\r\n      modify: {\r\n        'squat': {\r\n          modification: 'box_squat_above_90',\r\n          stance: 'wide_toes_out',\r\n          kneeTracking: 'band_assisted'\r\n        },\r\n        'single_leg': {\r\n          modification: 'reverse_lunge_only',\r\n          elevation: 'deficit_for_reduced_flexion'\r\n        }\r\n      },\r\n      volumeReduction: 0.75,\r\n      intensityCap: 0.8,\r\n      vmoPrehab: true,\r\n      adaptability: { rp: 'excellent', linear: 'excellent', '531': 'good', josh_bryant: 'moderate' }\r\n    },\r\n\r\n    // Hip Injuries\r\n    hip_impingement: {\r\n      exclude: ['deep_squats', 'sumo_deadlift', 'leg_press_deep', 'butterfly_stretch'],\r\n      modify: {\r\n        'squat': {\r\n          modification: 'high_box_squat',\r\n          stance: 'narrow_parallel',\r\n          toeAngle: 'minimal_15_degrees'\r\n        },\r\n        'deadlift': {\r\n          modification: 'romanian_partial',\r\n          rangeLimit: 'knee_to_mid_shin'\r\n        }\r\n      },\r\n      volumeReduction: 0.7,\r\n      intensityCap: 0.85,\r\n      mobilityFocus: 'capsule_not_stretch',\r\n      adaptability: { rp: 'excellent', linear: 'good', '531': 'moderate', josh_bryant: 'good' }\r\n    },\r\n\r\n    // Elbow/Wrist\r\n    tennis_elbow: {\r\n      exclude: ['straight_bar_curls', 'close_grip_bench', 'heavy_rows'],\r\n      modify: {\r\n        'all_curls': {\r\n          modification: 'hammer_or_neutral',\r\n          loadReduction: 0.7,\r\n          repIncrease: 1.5\r\n        },\r\n        'pressing': {\r\n          modification: 'neutral_grip_preferred',\r\n          wristPosition: 'neutral_maintained'\r\n        }\r\n      },\r\n      volumeReduction: 0.8,\r\n      intensityCap: 0.75,\r\n      eccentric_protocol: true,\r\n      adaptability: { rp: 'excellent', linear: 'good', '531': 'moderate', josh_bryant: 'good' }\r\n    }\r\n  };\r\n\r\n  // ============================================\r\n  // PROGRESSIVE RETURN PROTOCOL\r\n  // ============================================\r\n  const returnToTrainingProtocol = {\r\n    phases: {\r\n      phase1_foundation: {\r\n        weeks: '1-4',\r\n        volume: 0.4,\r\n        intensity: 0.6,\r\n        complexity: 'basic',\r\n        exercisePool: 'fundamental_only',\r\n        setsPerMuscle: '6-10',\r\n        repsRange: '12-20',\r\n        progression: 'reps_before_weight',\r\n        focusAreas: ['movement_quality', 'pain_free_rom', 'base_conditioning']\r\n      },\r\n\r\n      phase2_rebuilding: {\r\n        weeks: '5-8',\r\n        volume: 0.6,\r\n        intensity: 0.75,\r\n        complexity: 'moderate',\r\n        exercisePool: 'add_compounds',\r\n        setsPerMuscle: '10-16',\r\n        repsRange: '8-15',\r\n        progression: 'small_load_increases',\r\n        focusAreas: ['strength_endurance', 'movement_confidence', 'volume_tolerance']\r\n      },\r\n\r\n      phase3_strengthening: {\r\n        weeks: '9-12',\r\n        volume: 0.8,\r\n        intensity: 0.85,\r\n        complexity: 'advanced',\r\n        exercisePool: 'near_full',\r\n        setsPerMuscle: '16-20',\r\n        repsRange: '6-12',\r\n        progression: 'normal_progression',\r\n        focusAreas: ['strength_return', 'power_reintroduction', 'sport_specific']\r\n      },\r\n\r\n      phase4_optimization: {\r\n        weeks: '13+',\r\n        volume: 1.0,\r\n        intensity: 1.0,\r\n        complexity: 'full',\r\n        exercisePool: 'unrestricted',\r\n        setsPerMuscle: 'goal_dependent',\r\n        repsRange: 'goal_dependent',\r\n        progression: 'full_progression',\r\n        focusAreas: ['performance', 'prevention', 'optimization']\r\n      }\r\n    }\r\n  };\r\n\r\n  // ============================================\r\n  // SYSTEM-INJURY COMPATIBILITY MATRIX\r\n  // ============================================\r\n  const systemInjuryCompatibility = {\r\n    'rp': {\r\n      injuryAdaptability: 'excellent',\r\n      volumeControl: true,\r\n      exerciseFlexibility: 'high',\r\n      intensityControl: true,\r\n      pros: [\r\n        'Volume landmarks allow precise load management',\r\n        'MEV/MRV concepts perfect for reduced capacity',\r\n        'Flexible exercise selection',\r\n        'Built-in fatigue management'\r\n      ],\r\n      cons: [\r\n        'Requires good self-awareness',\r\n        'Complex for beginners'\r\n      ],\r\n      injuryModifications: {\r\n        useMinimalVolume: true,\r\n        startAtMEV: true,\r\n        extendedDeloads: true,\r\n        reducedFrequency: true\r\n      }\r\n    },\r\n\r\n    'linear': {\r\n      injuryAdaptability: 'excellent',\r\n      volumeControl: true,\r\n      exerciseFlexibility: 'high',\r\n      intensityControl: true,\r\n      pros: [\r\n        'Simple progression model',\r\n        'Easy to modify loads',\r\n        'Great for rehab transitions',\r\n        'Predictable programming'\r\n      ],\r\n      cons: [\r\n        'May progress too slowly for some',\r\n        'Less variety'\r\n      ],\r\n      injuryModifications: {\r\n        microLoading: true,\r\n        extendedPhases: true,\r\n        regressionProtocol: true\r\n      }\r\n    },\r\n\r\n    '531': {\r\n      injuryAdaptability: 'moderate',\r\n      volumeControl: false,\r\n      exerciseFlexibility: 'moderate',\r\n      intensityControl: false,\r\n      pros: [\r\n        'SubMax training good for injuries',\r\n        'Flexible assistance work',\r\n        'Built-in progression'\r\n      ],\r\n      cons: [\r\n        'Fixed percentages difficult to modify',\r\n        'May be too much volume',\r\n        'Limited exercise substitution for main lifts'\r\n      ],\r\n      injuryModifications: {\r\n        trainingMaxReduction: 0.8,\r\n        limitedJokerSets: true,\r\n        modifiedTemplates: ['5s_PRO', 'FSL_reduced'],\r\n        assistanceOnly: 'option_for_severe'\r\n      }\r\n    },\r\n\r\n    'josh_bryant': {\r\n      injuryAdaptability: 'good',\r\n      volumeControl: true,\r\n      exerciseFlexibility: 'high',\r\n      intensityControl: true,\r\n      pros: [\r\n        'PHA reduces local fatigue',\r\n        'Flexible programming',\r\n        'Body composition focus good for deload'\r\n      ],\r\n      cons: [\r\n        'High volume might be problematic',\r\n        'Intensity techniques risky'\r\n      ],\r\n      injuryModifications: {\r\n        reducedIntensityTechniques: true,\r\n        modifiedPHA: true,\r\n        extendedRest: true\r\n      }\r\n    }\r\n  };\r\n\r\n  // Comprehensive injury screening questionnaire for algorithmic processing\r\n  const injuryQuestions = {\r\n    // 1️⃣ GENERAL INJURY STATUS\r\n    generalStatus: {\r\n      question: \"Current Injury Status:\",\r\n      type: \"radio\",\r\n      options: [\r\n        { value: \"none\", label: \"No current injuries\", intensityCap: 100, volumeMultiplier: 1.0 },\r\n        { value: \"minor\", label: \"Minor discomfort (can train with modifications)\", intensityCap: 85, volumeMultiplier: 0.9 },\r\n        { value: \"active\", label: \"Active injury (under professional care)\", intensityCap: 60, volumeMultiplier: 0.6 },\r\n        { value: \"post_rehab\", label: \"Post-rehab (cleared with restrictions)\", intensityCap: 75, volumeMultiplier: 0.7 },\r\n        { value: \"chronic\", label: \"Chronic condition (ongoing management)\", intensityCap: 80, volumeMultiplier: 0.8 }\r\n      ]\r\n    },\r\n\r\n    // 2️⃣ INJURY LOCATION MATRIX (Enhanced)\r\n    injuryLocations: {\r\n      question: \"Select ALL current/recent injury areas:\",\r\n      type: \"checkbox\",\r\n      options: [\r\n        {\r\n          value: \"neck\",\r\n          label: \"Neck/Cervical\",\r\n          injuryType: 'cervical_dysfunction',\r\n          excludes: [\"overhead_press\", \"heavy_shrugs\", \"behind_neck_movements\"],\r\n          modifications: { 'shoulder_press': 'seated_support', 'rows': 'light_weight_only' }\r\n        },\r\n        {\r\n          value: \"shoulder_left\",\r\n          label: \"Shoulder (Left)\",\r\n          injuryType: 'shoulder_impingement',\r\n          excludes: [\"overhead_press\", \"lateral_raises\", \"behind_neck_press\"],\r\n          modifications: { 'bench_press': 'reduce_rom', 'shoulder_press': 'neutral_grip_45deg' }\r\n        },\r\n        {\r\n          value: \"shoulder_right\",\r\n          label: \"Shoulder (Right)\",\r\n          injuryType: 'shoulder_impingement',\r\n          excludes: [\"overhead_press\", \"lateral_raises\", \"behind_neck_press\"],\r\n          modifications: { 'bench_press': 'reduce_rom', 'shoulder_press': 'neutral_grip_45deg' }\r\n        },\r\n        {\r\n          value: \"lower_back\",\r\n          label: \"Lower Back\",\r\n          injuryType: 'lower_back_flexion',\r\n          excludes: [\"conventional_deadlift\", \"good_mornings\", \"bent_over_rows\"],\r\n          modifications: { 'deadlift': 'sumo_or_trap_bar', 'rows': 'chest_supported', 'squats': 'high_bar' }\r\n        },\r\n        {\r\n          value: \"knee_left\",\r\n          label: \"Knee (Left)\",\r\n          injuryType: 'knee_patellofemoral',\r\n          excludes: [\"deep_squats\", \"lunges\", \"jumping\"],\r\n          modifications: { 'squats': 'partial_rom_90deg', 'leg_press': 'limited_flexion' }\r\n        },\r\n        {\r\n          value: \"knee_right\",\r\n          label: \"Knee (Right)\",\r\n          injuryType: 'knee_patellofemoral',\r\n          excludes: [\"deep_squats\", \"lunges\", \"jumping\"],\r\n          modifications: { 'squats': 'partial_rom_90deg', 'leg_press': 'limited_flexion' }\r\n        }\r\n      ]\r\n    },\r\n\r\n    // 3️⃣ PAIN SCALE ASSESSMENT (Enhanced)\r\n    painScale: {\r\n      question: \"Rate pain during training (0-10):\",\r\n      type: \"radio\",\r\n      options: [\r\n        { value: \"0-1\", label: \"0-1 (No pain)\", modifier: 1.0, action: \"proceed\", monitoring: \"standard\" },\r\n        { value: \"2-3\", label: \"2-3 (Mild discomfort)\", modifier: 0.95, action: \"proceed_caution\", monitoring: \"weekly\" },\r\n        { value: \"4-5\", label: \"4-5 (Moderate, manageable)\", modifier: 0.7, action: \"modify_load\", monitoring: \"daily\" },\r\n        { value: \"6-7\", label: \"6-7 (Significant, limiting)\", modifier: 0.5, action: \"refer_out\", monitoring: \"session\" },\r\n        { value: \"8-10\", label: \"8-10 (Severe, stop training)\", modifier: 0.0, action: \"medical_clearance\", monitoring: \"continuous\" }\r\n      ]\r\n    },\r\n\r\n    // 4️⃣ MOVEMENT LIMITATIONS (Enhanced)\r\n    movementLimitations: {\r\n      question: \"Which movements cause discomfort?\",\r\n      type: \"checkbox\",\r\n      options: [\r\n        { value: \"overhead_pressing\", label: \"Overhead pressing\", pattern: \"vertical_push\", severity: 'moderate' },\r\n        { value: \"horizontal_pressing\", label: \"Horizontal pressing\", pattern: \"horizontal_push\", severity: 'mild' },\r\n        { value: \"vertical_pulling\", label: \"Vertical pulling\", pattern: \"vertical_pull\", severity: 'mild' },\r\n        { value: \"horizontal_pulling\", label: \"Horizontal pulling\", pattern: \"horizontal_pull\", severity: 'mild' },\r\n        { value: \"squatting\", label: \"Squatting\", pattern: \"squat\", severity: 'moderate' },\r\n        { value: \"hip_hinging\", label: \"Hip hinging\", pattern: \"hinge\", severity: 'moderate' },\r\n        { value: \"lunging\", label: \"Lunging\", pattern: \"lunge\", severity: 'mild' },\r\n        { value: \"rotation\", label: \"Rotation\", pattern: \"rotation\", severity: 'moderate' },\r\n        { value: \"loaded_carries\", label: \"Loaded carries\", pattern: \"carry\", severity: 'mild' }\r\n      ]\r\n    },\r\n\r\n    // 5️⃣ INJURY TIMELINE (Enhanced)\r\n    injuryTimeline: {\r\n      question: \"When did injury occur?\",\r\n      type: \"radio\",\r\n      options: [\r\n        { value: \"current\", label: \"Current (0-2 weeks)\", progressionRate: 0.5, phase: 'acute', protocol: 'week1_4' },\r\n        { value: \"recent\", label: \"Recent (2-6 weeks)\", progressionRate: 0.7, phase: 'subacute', protocol: 'week5_8' },\r\n        { value: \"subacute\", label: \"Subacute (6-12 weeks)\", progressionRate: 0.85, phase: 'chronic', protocol: 'week9_12' },\r\n        { value: \"chronic\", label: \"Chronic (3+ months)\", progressionRate: 0.9, phase: 'stable', protocol: 'week13_plus' },\r\n        { value: \"historical\", label: \"Historical (fully resolved)\", progressionRate: 1.0, phase: 'resolved', protocol: 'week13_plus' }\r\n      ]\r\n    },\r\n\r\n    // 6️⃣ PROFESSIONAL CLEARANCE\r\n    professionalClearance: {\r\n      question: \"Medical professional status:\",\r\n      type: \"radio\",\r\n      options: [\r\n        { value: \"not_seen\", label: \"Not seen\", clearance: \"self_managed\", systemRestrictions: [] },\r\n        { value: \"in_treatment\", label: \"Currently in treatment\", clearance: \"restricted\", systemRestrictions: ['high_intensity'] },\r\n        { value: \"cleared_restricted\", label: \"Cleared with restrictions\", clearance: \"modified\", systemRestrictions: ['full_intensity'] },\r\n        { value: \"fully_cleared\", label: \"Fully cleared\", clearance: \"full\", systemRestrictions: [] },\r\n        { value: \"awaiting\", label: \"Awaiting clearance\", clearance: \"hold\", systemRestrictions: ['all_systems'] }\r\n      ]\r\n    },\r\n\r\n    // 7️⃣ RECOVERY STATUS (Enhanced) — duplicate removed below\r\n\r\n    // 7️⃣ LOWER BACK SPECIFIC\r\n    lowerBackSpecific: {\r\n      question: \"Lower back symptoms:\",\r\n      type: \"radio\",\r\n      condition: \"lower_back\", // Only show if lower back selected\r\n      options: [\r\n        { value: \"no_issues\", label: \"No issues\", restrictions: [] },\r\n        { value: \"morning_stiffness\", label: \"Morning stiffness only\", restrictions: [\"extended_warmup\"] },\r\n        { value: \"flexion_pain\", label: \"Pain with flexion\", restrictions: [\"deadlifts\", \"rows\"] },\r\n        { value: \"extension_pain\", label: \"Pain with extension\", restrictions: [\"overhead\", \"back_extensions\"] },\r\n        { value: \"radiating\", label: \"Radiating symptoms\", restrictions: [\"all_spinal_loading\"] }\r\n      ]\r\n    },\r\n\r\n    // 8️⃣ SHOULDER SPECIFIC\r\n    shoulderSpecific: {\r\n      question: \"Shoulder symptoms:\",\r\n      type: \"radio\",\r\n      condition: \"shoulder\", // Only show if shoulder selected\r\n      options: [\r\n        { value: \"no_issues\", label: \"No issues\", restrictions: [] },\r\n        { value: \"front_pain\", label: \"Front of shoulder pain\", restrictions: [\"bench_press\", \"dips\"] },\r\n        { value: \"side_pain\", label: \"Side (impingement) pain\", restrictions: [\"lateral_raises\", \"overhead\"] },\r\n        { value: \"instability\", label: \"Instability feeling\", restrictions: [\"heavy_pressing\", \"unstable_surface\"] },\r\n        { value: \"frozen\", label: \"Frozen/restricted ROM\", restrictions: [\"full_rom\", \"overhead\"] }\r\n      ]\r\n    },\r\n\r\n    // 9️⃣ KNEE SPECIFIC\r\n    kneeSpecific: {\r\n      question: \"Knee symptoms:\",\r\n      type: \"radio\",\r\n      condition: \"knee\", // Only show if knee selected\r\n      options: [\r\n        { value: \"no_issues\", label: \"No issues\", restrictions: [] },\r\n        { value: \"under_kneecap\", label: \"Pain under kneecap\", restrictions: [\"deep_squats\", \"lunges\"] },\r\n        { value: \"inside_knee\", label: \"Inside knee pain\", restrictions: [\"wide_stance\", \"lateral_movements\"] },\r\n        { value: \"outside_knee\", label: \"Outside knee pain\", restrictions: [\"narrow_stance\", \"adduction\"] },\r\n        { value: \"behind_knee\", label: \"Behind knee pain\", restrictions: [\"hamstring_work\", \"deep_flexion\"] },\r\n        { value: \"instability\", label: \"Instability/giving way\", restrictions: [\"single_leg\", \"plyometrics\"] }\r\n      ]\r\n    },\r\n\r\n    // 🔟 RECOVERY STATUS\r\n    recoveryStatus: {\r\n      question: \"Recovery from injury:\",\r\n      type: \"radio\",\r\n      options: [\r\n        { value: \"0-25\", label: \"0-25% recovered\", volumeMultiplier: 0.4 },\r\n        { value: \"25-50\", label: \"25-50% recovered\", volumeMultiplier: 0.5 },\r\n        { value: \"50-75\", label: \"50-75% recovered\", volumeMultiplier: 0.6 },\r\n        { value: \"75-90\", label: \"75-90% recovered\", volumeMultiplier: 0.8 },\r\n        { value: \"90-100\", label: \"90-100% recovered\", volumeMultiplier: 1.0 }\r\n      ]\r\n    }\r\n  };\r\n\r\n  const handleResponseChange = (questionKey, value, isMultiple = false) => {\r\n    let newResponses = { ...responses };\r\n\r\n    if (isMultiple) {\r\n      // Handle checkbox (multiple selection)\r\n      if (!newResponses[questionKey]) {\r\n        newResponses[questionKey] = [];\r\n      }\r\n\r\n      if (newResponses[questionKey].includes(value)) {\r\n        newResponses[questionKey] = newResponses[questionKey].filter(v => v !== value);\r\n      } else {\r\n        newResponses[questionKey] = [...newResponses[questionKey], value];\r\n      }\r\n    } else {\r\n      // Handle radio (single selection)\r\n      newResponses[questionKey] = value;\r\n    }\r\n\r\n    setResponses(newResponses);\r\n    updateAlgorithmicResults(newResponses);\r\n  };\r\n\r\n  const updateAlgorithmicResults = (currentResponses) => {\r\n    const algorithmicResults = generateAlgorithmicResults(currentResponses);\r\n\r\n    actions.updateInjuryScreen({\r\n      responses: currentResponses,\r\n      algorithmicResults,\r\n      timestamp: new Date().toISOString()\r\n    });\r\n  };\r\n\r\n  const generateAlgorithmicResults = (responses) => {\r\n    // Initialize base results\r\n    const results = {\r\n      volumeMultiplier: 1.0,\r\n      intensityCap: 100,\r\n      excludedPatterns: [],\r\n      excludedExercises: [],\r\n      exerciseModifications: {},\r\n      progressionRate: 1.0,\r\n      warmupExtension: 0,\r\n      restMultiplier: 1.0,\r\n      specialRestrictions: [],\r\n      clearanceLevel: \"full\",\r\n      overallRisk: \"low\",\r\n      returnToTrainingPhase: \"phase4_optimization\",\r\n      systemCompatibility: {},\r\n      monitoringProtocol: \"standard\"\r\n    };\r\n\r\n    // ============================================\r\n    // MULTI-INJURY COMPOUND ALGORITHM\r\n    // ============================================\r\n\r\n    // Collect active injuries based on responses\r\n    const activeInjuries = [];\r\n\r\n    // Map injury locations to injury types\r\n    if (responses.injuryLocations && responses.injuryLocations.length > 0) {\r\n      responses.injuryLocations.forEach(location => {\r\n        const injuryOption = injuryQuestions.injuryLocations.options.find(opt => opt.value === location);\r\n        if (injuryOption && injuryOption.injuryType) {\r\n          activeInjuries.push(injuryOption.injuryType);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Add specific condition injuries\r\n    if (responses.lowerBackSpecific && responses.lowerBackSpecific !== 'no_issues') {\r\n      if (responses.lowerBackSpecific === 'flexion_pain') {\r\n        activeInjuries.push('lower_back_flexion_intolerant');\r\n      } else if (responses.lowerBackSpecific === 'extension_pain') {\r\n        activeInjuries.push('lower_back_extension_intolerant');\r\n      }\r\n    }\r\n\r\n    if (responses.shoulderSpecific && responses.shoulderSpecific !== 'no_issues') {\r\n      if (responses.shoulderSpecific === 'side_pain') {\r\n        activeInjuries.push('shoulder_impingement');\r\n      } else if (responses.shoulderSpecific === 'instability') {\r\n        activeInjuries.push('shoulder_instability');\r\n      }\r\n    }\r\n\r\n    if (responses.kneeSpecific && responses.kneeSpecific !== 'no_issues') {\r\n      if (responses.kneeSpecific === 'under_kneecap') {\r\n        activeInjuries.push('knee_patellofemoral');\r\n      }\r\n    }\r\n\r\n    // Process multiple injuries using most restrictive approach\r\n    if (activeInjuries.length > 0) {\r\n      const injuryData = activeInjuries.map(injury => injuryExerciseMatrix[injury]).filter(Boolean);\r\n\r\n      if (injuryData.length > 0) {\r\n        // Take most restrictive for safety\r\n        results.volumeMultiplier = Math.min(...injuryData.map(i => i.volumeReduction || 1.0));\r\n        results.intensityCap = Math.min(...injuryData.map(i => i.intensityCap || 100));\r\n\r\n        // Combine all exclusions\r\n        const allExclusions = injuryData.flatMap(i => i.exclude || []);\r\n        results.excludedExercises = [...new Set(allExclusions)];\r\n\r\n        // Merge exercise modifications (most restrictive wins)\r\n        injuryData.forEach(injury => {\r\n          if (injury.modify) {\r\n            Object.entries(injury.modify).forEach(([exercise, modification]) => {\r\n              if (!results.exerciseModifications[exercise] ||\r\n                (injury.volumeReduction < (results.exerciseModifications[exercise].sourceInjuryVolumeReduction || 1.0))) {\r\n                results.exerciseModifications[exercise] = {\r\n                  ...modification,\r\n                  sourceInjury: injury,\r\n                  sourceInjuryVolumeReduction: injury.volumeReduction\r\n                };\r\n              }\r\n            });\r\n          }\r\n        });\r\n\r\n        // Calculate compound risk\r\n        const riskScore = activeInjuries.length * 0.3 +\r\n          (activeInjuries.includes('lower_back_flexion_intolerant') ? 0.3 : 0) +\r\n          (activeInjuries.includes('shoulder_instability') ? 0.2 : 0);\r\n\r\n        if (riskScore >= 0.7) results.overallRisk = 'high';\r\n        else if (riskScore >= 0.4) results.overallRisk = 'moderate';\r\n        else results.overallRisk = 'low';\r\n\r\n        // System compatibility analysis\r\n        ['rp', 'linear', '531', 'josh_bryant'].forEach(system => {\r\n          const compatibilityScores = injuryData.map(injury => {\r\n            const adaptability = injury.adaptability?.[system] || 'moderate';\r\n            return adaptability === 'excellent' ? 3 : adaptability === 'good' ? 2 : adaptability === 'moderate' ? 1 : 0;\r\n          });\r\n\r\n          const avgScore = compatibilityScores.reduce((a, b) => a + b, 0) / compatibilityScores.length;\r\n          results.systemCompatibility[system] = {\r\n            score: avgScore,\r\n            rating: avgScore >= 2.5 ? 'excellent' : avgScore >= 1.5 ? 'good' : avgScore >= 0.5 ? 'moderate' : 'poor',\r\n            modifications: systemInjuryCompatibility[system]?.injuryModifications || {}\r\n          };\r\n        });\r\n      }\r\n    }\r\n\r\n    // ============================================\r\n    // ENHANCED RESPONSE PROCESSING\r\n    // ============================================\r\n\r\n    // Process General Status with enhanced logic\r\n    if (responses.generalStatus) {\r\n      const option = injuryQuestions.generalStatus.options.find(opt => opt.value === responses.generalStatus);\r\n      if (option) {\r\n        results.intensityCap = Math.min(results.intensityCap, option.intensityCap);\r\n        results.volumeMultiplier *= option.volumeMultiplier;\r\n      }\r\n    }\r\n\r\n    // Process Pain Scale with monitoring protocol\r\n    if (responses.painScale) {\r\n      const option = injuryQuestions.painScale.options.find(opt => opt.value === responses.painScale);\r\n      if (option) {\r\n        results.volumeMultiplier *= option.modifier;\r\n        results.monitoringProtocol = option.monitoring || 'standard';\r\n\r\n        if (option.action === \"refer_out\" || option.action === \"medical_clearance\") {\r\n          results.clearanceLevel = \"medical_required\";\r\n        }\r\n      }\r\n    }\r\n\r\n    // Process Movement Limitations\r\n    if (responses.movementLimitations && responses.movementLimitations.length > 0) {\r\n      responses.movementLimitations.forEach(movement => {\r\n        const option = injuryQuestions.movementLimitations.options.find(opt => opt.value === movement);\r\n        if (option) {\r\n          results.excludedPatterns.push(option.pattern);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Process Timeline for return protocol\r\n    if (responses.injuryTimeline) {\r\n      const option = injuryQuestions.injuryTimeline.options.find(opt => opt.value === responses.injuryTimeline);\r\n      if (option) {\r\n        results.progressionRate = option.progressionRate;\r\n        results.returnToTrainingPhase = option.protocol || 'phase4_optimization';\r\n      }\r\n    }\r\n\r\n    // Process Professional Clearance\r\n    if (responses.professionalClearance) {\r\n      const option = injuryQuestions.professionalClearance.options.find(opt => opt.value === responses.professionalClearance);\r\n      if (option) {\r\n        results.clearanceLevel = option.clearance;\r\n        if (option.systemRestrictions) {\r\n          results.specialRestrictions.push(...option.systemRestrictions);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Process Recovery Status with return protocol\r\n    if (responses.recoveryStatus) {\r\n      const option = injuryQuestions.recoveryStatus.options.find(opt => opt.value === responses.recoveryStatus);\r\n      if (option) {\r\n        results.volumeMultiplier *= option.volumeMultiplier;\r\n        results.returnToTrainingPhase = option.returnProtocol || 'phase4_optimization';\r\n      }\r\n    }\r\n\r\n    // ============================================\r\n    // FINAL RISK AND PROTOCOL CALCULATIONS\r\n    // ============================================\r\n\r\n    // Recalculate overall risk considering all factors\r\n    if (results.intensityCap < 70 || results.volumeMultiplier < 0.6 || results.clearanceLevel === 'medical_required') {\r\n      results.overallRisk = \"high\";\r\n    } else if (results.intensityCap < 85 || results.volumeMultiplier < 0.8) {\r\n      results.overallRisk = \"moderate\";\r\n    }\r\n\r\n    // Adjust protocols based on risk\r\n    if (results.overallRisk === \"high\") {\r\n      results.warmupExtension = 15;\r\n      results.restMultiplier = 1.5;\r\n      results.monitoringProtocol = \"daily\";\r\n    } else if (results.overallRisk === \"moderate\") {\r\n      results.warmupExtension = 10;\r\n      results.restMultiplier = 1.25;\r\n      results.monitoringProtocol = \"weekly\";\r\n    }\r\n\r\n    // Add return to training phase details\r\n    if (returnToTrainingProtocol.phases[results.returnToTrainingPhase]) {\r\n      results.returnToTrainingDetails = returnToTrainingProtocol.phases[results.returnToTrainingPhase];\r\n    }\r\n\r\n    // Ensure minimum values\r\n    results.volumeMultiplier = Math.max(results.volumeMultiplier, 0.2);\r\n    results.intensityCap = Math.max(results.intensityCap, 40);\r\n\r\n    return results;\r\n  };\r\n\r\n  const shouldShowQuestion = (questionKey) => {\r\n    const question = injuryQuestions[questionKey];\r\n    if (!question.condition) return true;\r\n\r\n    // Check if condition is met (e.g., only show lower back specific if lower back is selected)\r\n    if (question.condition === \"lower_back\") {\r\n      return responses.injuryLocations && responses.injuryLocations.includes(\"lower_back\");\r\n    }\r\n    if (question.condition === \"shoulder\") {\r\n      return responses.injuryLocations && (\r\n        responses.injuryLocations.includes(\"shoulder_left\") ||\r\n        responses.injuryLocations.includes(\"shoulder_right\")\r\n      );\r\n    }\r\n    if (question.condition === \"knee\") {\r\n      return responses.injuryLocations && (\r\n        responses.injuryLocations.includes(\"knee_left\") ||\r\n        responses.injuryLocations.includes(\"knee_right\")\r\n      );\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const renderQuestion = (questionKey, question) => {\r\n    return (\r\n      <div key={questionKey} className=\"injury-question\">\r\n        <h4 className=\"question-title\">{question.question}</h4>\r\n        <div className={`question-options ${question.type === \"checkbox\" ? \"checkbox-grid\" : \"radio-list\"}`}>\r\n          {question.options.map((option, index) => (\r\n            <label key={option.value} className=\"option-label\">\r\n              <input\r\n                type={question.type}\r\n                name={questionKey}\r\n                value={option.value}\r\n                checked={\r\n                  question.type === \"checkbox\"\r\n                    ? (responses[questionKey] || []).includes(option.value)\r\n                    : responses[questionKey] === option.value\r\n                }\r\n                onChange={(e) => handleResponseChange(questionKey, option.value, question.type === \"checkbox\")}\r\n              />\r\n              <span className=\"option-text\">{option.label}</span>\r\n            </label>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"injury-screening-step\">\r\n      <div className=\"step-header\">\r\n        <h2>🏥 Algorithmic Injury Screening</h2>\r\n        <p className=\"step-description\">\r\n          Structured assessment for automated program modification\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"injury-questionnaire\">\r\n        {Object.entries(injuryQuestions).map(([questionKey, question]) =>\r\n          shouldShowQuestion(questionKey) && renderQuestion(questionKey, question)\r\n        )}\r\n      </div>\r\n\r\n      {/* Algorithmic Results Summary */}\r\n      {state.injuryScreen?.algorithmicResults && (\r\n        <div className=\"content-section\">\r\n          <h3>💻 Algorithm Output</h3>\r\n          <div className=\"algorithm-results\">\r\n\r\n            <div className=\"results-grid\">\r\n              <div className=\"result-section risk-overview\">\r\n                <h5>Risk Assessment</h5>\r\n                <div className={`risk-level ${state.injuryScreen.algorithmicResults.overallRisk}`}>\r\n                  Risk Level: {state.injuryScreen.algorithmicResults.overallRisk.charAt(0).toUpperCase() + state.injuryScreen.algorithmicResults.overallRisk.slice(1)}\r\n                </div>\r\n                <div className=\"clearance-level\">\r\n                  Clearance: {state.injuryScreen.algorithmicResults.clearanceLevel}\r\n                </div>\r\n                <div className=\"monitoring-protocol\">\r\n                  Monitoring: {state.injuryScreen.algorithmicResults.monitoringProtocol}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"result-section training-parameters\">\r\n                <h5>Training Parameters</h5>\r\n                <div className=\"parameter\">\r\n                  <span>Volume Multiplier:</span>\r\n                  <span className=\"value\">{(state.injuryScreen.algorithmicResults.volumeMultiplier * 100).toFixed(0)}%</span>\r\n                </div>\r\n                <div className=\"parameter\">\r\n                  <span>Intensity Cap:</span>\r\n                  <span className=\"value\">{state.injuryScreen.algorithmicResults.intensityCap}%</span>\r\n                </div>\r\n                <div className=\"parameter\">\r\n                  <span>Progression Rate:</span>\r\n                  <span className=\"value\">{(state.injuryScreen.algorithmicResults.progressionRate * 100).toFixed(0)}%</span>\r\n                </div>\r\n                <div className=\"parameter\">\r\n                  <span>Rest Multiplier:</span>\r\n                  <span className=\"value\">{state.injuryScreen.algorithmicResults.restMultiplier}x</span>\r\n                </div>\r\n                <div className=\"parameter\">\r\n                  <span>Warmup Extension:</span>\r\n                  <span className=\"value\">+{state.injuryScreen.algorithmicResults.warmupExtension} min</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"result-section return-protocol\">\r\n                <h5>Return to Training Protocol</h5>\r\n                <div className=\"protocol-phase\">\r\n                  <strong>Current Phase: {state.injuryScreen.algorithmicResults.returnToTrainingPhase?.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}</strong>\r\n                </div>\r\n                {state.injuryScreen.algorithmicResults.returnToTrainingDetails && (\r\n                  <div className=\"protocol-details\">\r\n                    <div className=\"parameter\">\r\n                      <span>Duration:</span>\r\n                      <span className=\"value\">{state.injuryScreen.algorithmicResults.returnToTrainingDetails.duration}</span>\r\n                    </div>\r\n                    <div className=\"parameter\">\r\n                      <span>Volume Target:</span>\r\n                      <span className=\"value\">{state.injuryScreen.algorithmicResults.returnToTrainingDetails.volumeRange}</span>\r\n                    </div>\r\n                    <div className=\"parameter\">\r\n                      <span>Intensity Target:</span>\r\n                      <span className=\"value\">{state.injuryScreen.algorithmicResults.returnToTrainingDetails.intensityRange}</span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {state.injuryScreen.algorithmicResults.systemCompatibility && Object.keys(state.injuryScreen.algorithmicResults.systemCompatibility).length > 0 && (\r\n                <div className=\"result-section system-compatibility\">\r\n                  <h5>System Compatibility</h5>\r\n                  {Object.entries(state.injuryScreen.algorithmicResults.systemCompatibility).map(([system, data]) => (\r\n                    <div key={system} className=\"compatibility-item\">\r\n                      <span className=\"system-name\">{system.toUpperCase()}:</span>\r\n                      <span className={`compatibility-rating ${data.rating}`}>\r\n                        {data.rating} ({data.score.toFixed(1)}/3.0)\r\n                      </span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n\r\n              {state.injuryScreen.algorithmicResults.excludedExercises && state.injuryScreen.algorithmicResults.excludedExercises.length > 0 && (\r\n                <div className=\"result-section excluded-exercises\">\r\n                  <h5>Exercise Exclusions</h5>\r\n                  <div className=\"exclusion-list\">\r\n                    {state.injuryScreen.algorithmicResults.excludedExercises.map((exercise, index) => (\r\n                      <span key={index} className=\"exclusion-tag\">{exercise}</span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {state.injuryScreen.algorithmicResults.exerciseModifications && Object.keys(state.injuryScreen.algorithmicResults.exerciseModifications).length > 0 && (\r\n                <div className=\"result-section exercise-modifications\">\r\n                  <h5>Exercise Modifications</h5>\r\n                  {Object.entries(state.injuryScreen.algorithmicResults.exerciseModifications).map(([exercise, mod]) => (\r\n                    <div key={exercise} className=\"modification-item\">\r\n                      <strong>{exercise}:</strong>\r\n                      <div className=\"modification-details\">\r\n                        {mod.rom_restriction && <span className=\"mod-tag\">ROM: {mod.rom_restriction}</span>}\r\n                        {mod.load_restriction && <span className=\"mod-tag\">Load: {mod.load_restriction}</span>}\r\n                        {mod.volume_reduction && <span className=\"mod-tag\">Volume: -{((1 - mod.volume_reduction) * 100).toFixed(0)}%</span>}\r\n                        {mod.tempo_modification && <span className=\"mod-tag\">Tempo: {mod.tempo_modification}</span>}\r\n                        {mod.special_equipment && <span className=\"mod-tag\">Equipment: {mod.special_equipment}</span>}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n\r\n              {state.injuryScreen.algorithmicResults.excludedPatterns && state.injuryScreen.algorithmicResults.excludedPatterns.length > 0 && (\r\n                <div className=\"result-section excluded-patterns\">\r\n                  <h5>Movement Pattern Restrictions</h5>\r\n                  <div className=\"pattern-list\">\r\n                    {state.injuryScreen.algorithmicResults.excludedPatterns.map((pattern, index) => (\r\n                      <span key={index} className=\"pattern-tag\">{pattern}</span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {state.injuryScreen.algorithmicResults.specialRestrictions && state.injuryScreen.algorithmicResults.specialRestrictions.length > 0 && (\r\n                <div className=\"result-section special-restrictions\">\r\n                  <h5>Special Restrictions</h5>\r\n                  <div className=\"restriction-list\">\r\n                    {state.injuryScreen.algorithmicResults.specialRestrictions.map((restriction, index) => (\r\n                      <div key={index} className=\"restriction-item\">{restriction}</div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"step-navigation\">\r\n        <button\r\n          className=\"btn-secondary\"\r\n          onClick={() => actions.setCurrentStep(3)}\r\n        >\r\n          ← Back\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn-primary\"\r\n          onClick={() => actions.setCurrentStep(5)}\r\n        >\r\n          Continue →\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InjuryScreeningStep;\r\n","import React, { useState } from 'react';\r\nimport { useProgramContext } from '../../../contexts/ProgramContext';\r\n\r\n/**\r\n * PHA Health Screen Step Component\r\n * Step 5 of 12-step workflow - Bryant-specific health screening\r\n * Based on ACSM guidelines and Bryant Periodization requirements\r\n */\r\nconst PHAHealthScreenStep = ({ onNext, onPrevious, canGoNext, canGoPrevious }) => {\r\n    const { state, actions } = useProgramContext();\r\n    const [responses, setResponses] = useState({\r\n        // Cardiovascular Questions\r\n        chestPain: '',\r\n        shortBreath: '',\r\n        dizziness: '',\r\n        heartMurmur: '',\r\n        bloodPressure: '',\r\n        medications: '',\r\n\r\n        // Orthopedic Questions\r\n        boneJointProblems: '',\r\n        currentInjuries: '',\r\n        recentSurgery: '',\r\n        chronicPain: '',\r\n\r\n        // Bryant-Specific Questions\r\n        tacticalExperience: '',\r\n        intensityTolerance: '',\r\n        equipmentAccess: '',\r\n        trainingEnvironment: ''\r\n    });\r\n\r\n    const [riskAssessment, setRiskAssessment] = useState(null);\r\n\r\n    // PHA Health Screening Questions based on Bryant requirements\r\n    const phaQuestions = [\r\n        {\r\n            category: 'Cardiovascular Health',\r\n            icon: '❤️',\r\n            questions: [\r\n                {\r\n                    id: 'chestPain',\r\n                    question: 'Have you ever experienced chest pain during or after exercise?',\r\n                    type: 'yesno',\r\n                    risk: 'high'\r\n                },\r\n                {\r\n                    id: 'shortBreath',\r\n                    question: 'Do you experience unusual shortness of breath during mild exertion?',\r\n                    type: 'yesno',\r\n                    risk: 'medium'\r\n                },\r\n                {\r\n                    id: 'dizziness',\r\n                    question: 'Have you experienced dizziness or fainting during exercise?',\r\n                    type: 'yesno',\r\n                    risk: 'high'\r\n                },\r\n                {\r\n                    id: 'heartMurmur',\r\n                    question: 'Has a doctor ever told you that you have a heart murmur?',\r\n                    type: 'yesno',\r\n                    risk: 'medium'\r\n                },\r\n                {\r\n                    id: 'bloodPressure',\r\n                    question: 'Has a doctor ever told you that your blood pressure is too high?',\r\n                    type: 'yesno',\r\n                    risk: 'medium'\r\n                },\r\n                {\r\n                    id: 'medications',\r\n                    question: 'Are you currently taking any medications for heart conditions?',\r\n                    type: 'yesno',\r\n                    risk: 'medium'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            category: 'Musculoskeletal Health',\r\n            icon: '🦴',\r\n            questions: [\r\n                {\r\n                    id: 'boneJointProblems',\r\n                    question: 'Do you have any bone or joint problems that might worsen with activity?',\r\n                    type: 'yesno',\r\n                    risk: 'medium'\r\n                },\r\n                {\r\n                    id: 'currentInjuries',\r\n                    question: 'Do you have any current injuries affecting your movement?',\r\n                    type: 'yesno',\r\n                    risk: 'medium'\r\n                },\r\n                {\r\n                    id: 'recentSurgery',\r\n                    question: 'Have you had any surgery in the past 6 months?',\r\n                    type: 'yesno',\r\n                    risk: 'medium'\r\n                },\r\n                {\r\n                    id: 'chronicPain',\r\n                    question: 'Do you experience chronic pain that affects daily activities?',\r\n                    type: 'yesno',\r\n                    risk: 'medium'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            category: 'Bryant Training Readiness',\r\n            icon: '🎯',\r\n            questions: [\r\n                {\r\n                    id: 'tacticalExperience',\r\n                    question: 'Do you have experience with tactical or military-style training?',\r\n                    type: 'select',\r\n                    options: ['None', 'Some', 'Moderate', 'Extensive'],\r\n                    risk: 'info'\r\n                },\r\n                {\r\n                    id: 'intensityTolerance',\r\n                    question: 'How well do you tolerate high-intensity training?',\r\n                    type: 'select',\r\n                    options: ['Poor', 'Fair', 'Good', 'Excellent'],\r\n                    risk: 'info'\r\n                },\r\n                {\r\n                    id: 'equipmentAccess',\r\n                    question: 'Do you have access to specialized equipment (sleds, ropes, etc.)?',\r\n                    type: 'yesno',\r\n                    risk: 'info'\r\n                },\r\n                {\r\n                    id: 'trainingEnvironment',\r\n                    question: 'What is your primary training environment?',\r\n                    type: 'select',\r\n                    options: ['Home gym', 'Commercial gym', 'Outdoor space', 'Tactical facility'],\r\n                    risk: 'info'\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n\r\n    // Assess risk level based on responses\r\n    const assessRisk = () => {\r\n        let highRiskCount = 0;\r\n        let mediumRiskCount = 0;\r\n        let totalAnswered = 0;\r\n\r\n        phaQuestions.forEach(category => {\r\n            category.questions.forEach(q => {\r\n                const response = responses[q.id];\r\n                if (response) {\r\n                    totalAnswered++;\r\n                    if (q.type === 'yesno' && response === 'yes') {\r\n                        if (q.risk === 'high') highRiskCount++;\r\n                        else if (q.risk === 'medium') mediumRiskCount++;\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        let riskLevel = 'low';\r\n        let recommendations = [];\r\n        let restrictions = [];\r\n\r\n        if (highRiskCount > 0) {\r\n            riskLevel = 'high';\r\n            recommendations.push('Medical clearance required before starting any exercise program');\r\n            recommendations.push('Consult with physician before Bryant-specific training');\r\n            restrictions.push('No high-intensity training until cleared');\r\n            restrictions.push('No tactical applications until medical approval');\r\n        } else if (mediumRiskCount >= 2) {\r\n            riskLevel = 'medium';\r\n            recommendations.push('Consider medical consultation');\r\n            recommendations.push('Start with lower intensity and progress gradually');\r\n            restrictions.push('Modified Bryant protocols may be needed');\r\n        } else {\r\n            riskLevel = 'low';\r\n            recommendations.push('Cleared for Bryant periodization training');\r\n            recommendations.push('Can progress to full intensity protocols');\r\n        }\r\n\r\n        // Bryant-specific recommendations\r\n        const tacticalExp = responses.tacticalExperience;\r\n        const intensityTol = responses.intensityTolerance;\r\n\r\n        if (tacticalExp === 'None' || intensityTol === 'Poor') {\r\n            recommendations.push('Recommend preparatory phase before Bryant methods');\r\n            recommendations.push('Focus on movement quality and conditioning base');\r\n        } else if (tacticalExp === 'Extensive' && intensityTol === 'Excellent') {\r\n            recommendations.push('Excellent candidate for full Bryant protocols');\r\n            recommendations.push('Can implement advanced tactical applications');\r\n        }\r\n\r\n        const assessment = {\r\n            riskLevel,\r\n            recommendations,\r\n            restrictions,\r\n            highRiskCount,\r\n            mediumRiskCount,\r\n            totalAnswered,\r\n            bryantCleared: riskLevel === 'low' && highRiskCount === 0,\r\n            completeness: totalAnswered / phaQuestions.reduce((acc, cat) => acc + cat.questions.length, 0)\r\n        };\r\n\r\n        setRiskAssessment(assessment);\r\n        return assessment;\r\n    };\r\n\r\n    const handleResponseChange = (questionId, value) => {\r\n        setResponses(prev => ({\r\n            ...prev,\r\n            [questionId]: value\r\n        }));\r\n    };\r\n\r\n    const handleComplete = () => {\r\n        const assessment = assessRisk();\r\n\r\n        // Save PHA results to program context\r\n        actions.setProgramData({\r\n            phaHealthScreen: {\r\n                responses,\r\n                assessment,\r\n                completedAt: new Date().toISOString()\r\n            }\r\n        });\r\n\r\n        if (onNext) onNext();\r\n    };\r\n\r\n    // Check if assessment is complete enough to proceed\r\n    const isComplete = Object.keys(responses).filter(key => responses[key]).length >= 8;\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div className=\"bg-red-900/20 border border-red-500/30 rounded-lg p-4\">\r\n                <h2 className=\"text-xl font-bold text-red-400 mb-2\">\r\n                    ❤️ PHA Health Screen - Bryant Training Readiness\r\n                </h2>\r\n                <p className=\"text-red-300 text-sm\">\r\n                    Physical Health Assessment to ensure safe participation in Bryant periodization training.\r\n                    This screening is required before beginning high-intensity tactical protocols.\r\n                </p>\r\n            </div>\r\n\r\n            {/* Screening Questions */}\r\n            {phaQuestions.map((category, categoryIndex) => (\r\n                <div key={categoryIndex} className=\"bg-gray-800 rounded-lg p-6\">\r\n                    <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\r\n                        <span className=\"mr-2\">{category.icon}</span>\r\n                        {category.category}\r\n                    </h3>\r\n\r\n                    <div className=\"space-y-4\">\r\n                        {category.questions.map((question, questionIndex) => (\r\n                            <div key={question.id} className=\"bg-gray-700 rounded-lg p-4\">\r\n                                <label className=\"block text-white font-medium mb-2\">\r\n                                    {question.question}\r\n                                    {question.risk === 'high' && (\r\n                                        <span className=\"ml-2 text-xs bg-red-600 text-white px-2 py-1 rounded\">\r\n                                            HIGH RISK\r\n                                        </span>\r\n                                    )}\r\n                                </label>\r\n\r\n                                {question.type === 'yesno' ? (\r\n                                    <div className=\"flex space-x-4\">\r\n                                        <label className=\"flex items-center\">\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                name={question.id}\r\n                                                value=\"yes\"\r\n                                                checked={responses[question.id] === 'yes'}\r\n                                                onChange={(e) => handleResponseChange(question.id, e.target.value)}\r\n                                                className=\"mr-2\"\r\n                                            />\r\n                                            <span className=\"text-gray-300\">Yes</span>\r\n                                        </label>\r\n                                        <label className=\"flex items-center\">\r\n                                            <input\r\n                                                type=\"radio\"\r\n                                                name={question.id}\r\n                                                value=\"no\"\r\n                                                checked={responses[question.id] === 'no'}\r\n                                                onChange={(e) => handleResponseChange(question.id, e.target.value)}\r\n                                                className=\"mr-2\"\r\n                                            />\r\n                                            <span className=\"text-gray-300\">No</span>\r\n                                        </label>\r\n                                    </div>\r\n                                ) : (\r\n                                    <select\r\n                                        value={responses[question.id] || ''}\r\n                                        onChange={(e) => handleResponseChange(question.id, e.target.value)}\r\n                                        className=\"w-full p-2 rounded bg-gray-600 text-white border border-gray-500\"\r\n                                    >\r\n                                        <option value=\"\">Select...</option>\r\n                                        {question.options.map((option, optionIndex) => (\r\n                                            <option key={optionIndex} value={option.toLowerCase()}>\r\n                                                {option}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            ))}\r\n\r\n            {/* Risk Assessment Results */}\r\n            {riskAssessment && (\r\n                <div className={`rounded-lg p-4 border ${riskAssessment.riskLevel === 'high'\r\n                        ? 'bg-red-900/20 border-red-500/30'\r\n                        : riskAssessment.riskLevel === 'medium'\r\n                            ? 'bg-yellow-900/20 border-yellow-500/30'\r\n                            : 'bg-green-900/20 border-green-500/30'\r\n                    }`}>\r\n                    <h3 className={`text-lg font-semibold mb-3 ${riskAssessment.riskLevel === 'high'\r\n                            ? 'text-red-400'\r\n                            : riskAssessment.riskLevel === 'medium'\r\n                                ? 'text-yellow-400'\r\n                                : 'text-green-400'\r\n                        }`}>\r\n                        Risk Assessment: {riskAssessment.riskLevel.toUpperCase()} RISK\r\n                    </h3>\r\n\r\n                    <div className=\"space-y-3\">\r\n                        <div>\r\n                            <h4 className=\"font-medium text-white mb-2\">Recommendations:</h4>\r\n                            <ul className=\"list-disc list-inside space-y-1\">\r\n                                {riskAssessment.recommendations.map((rec, index) => (\r\n                                    <li key={index} className=\"text-gray-300 text-sm\">{rec}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n\r\n                        {riskAssessment.restrictions.length > 0 && (\r\n                            <div>\r\n                                <h4 className=\"font-medium text-white mb-2\">Restrictions:</h4>\r\n                                <ul className=\"list-disc list-inside space-y-1\">\r\n                                    {riskAssessment.restrictions.map((restriction, index) => (\r\n                                        <li key={index} className=\"text-red-300 text-sm\">{restriction}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"text-sm text-gray-400\">\r\n                            Bryant Training Cleared: {riskAssessment.bryantCleared ? '✅ Yes' : '❌ No'}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Assess Risk Button */}\r\n            {!riskAssessment && isComplete && (\r\n                <button\r\n                    onClick={assessRisk}\r\n                    className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-4 rounded-lg transition-colors\"\r\n                >\r\n                    Assess Health Risk\r\n                </button>\r\n            )}\r\n\r\n            {/* Navigation */}\r\n            <div className=\"flex justify-between pt-6\">\r\n                <button\r\n                    onClick={onPrevious}\r\n                    disabled={!canGoPrevious}\r\n                    className=\"px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                    Previous: Injury Screening\r\n                </button>\r\n\r\n                <button\r\n                    onClick={handleComplete}\r\n                    disabled={!riskAssessment || !canGoNext}\r\n                    className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                    Next: Gainer Type\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PHAHealthScreenStep;\r\n","import { useState, useEffect } from 'react';\r\nimport { useApp } from '../context';\r\nimport { APP_ACTIONS } from '../context/appActions';\r\n// Note: Adjust this import path based on your Supabase client location\r\n// import { supabase } from '../lib/supabaseClient';\r\n\r\nexport const useAssessment = () => {\r\n    // Safe context access\r\n    let state, dispatch;\r\n    try {\r\n        const context = useApp();\r\n        state = context?.state;\r\n        dispatch = context?.dispatch;\r\n\r\n        console.log('useAssessment - Context check:', {\r\n            hasContext: !!context,\r\n            hasState: !!state,\r\n            hasDispatch: !!dispatch\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('useAssessment: Error accessing context:', error);\r\n        // Provide fallback values\r\n        state = { assessment: null };\r\n        dispatch = () => console.warn('Dispatch not available');\r\n    }\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n\r\n    // Gainer type classification based on reps at 80% 1RM\r\n    const classifyGainerType = (reps) => {\r\n        if (!reps || reps < 1) return null;\r\n\r\n        const repsNum = parseInt(reps);\r\n\r\n        if (repsNum <= 3) {\r\n            return {\r\n                type: 'Very Fast Gainer',\r\n                characteristics: 'High neural efficiency, low fatigue resistance',\r\n                recommendations: [\r\n                    'Very low volume training (8-12 sets per week)',\r\n                    'Heavy loads (85-95% 1RM)',\r\n                    'Low rep ranges (1-3 reps)',\r\n                    'Long rest periods (3-5 minutes)',\r\n                    'Focus on neural adaptations'\r\n                ]\r\n            };\r\n        } else if (repsNum <= 8) {\r\n            return {\r\n                type: 'Fast Gainer',\r\n                characteristics: 'Good neural drive, moderate fatigue resistance',\r\n                recommendations: [\r\n                    'Low-moderate volume (12-16 sets per week)',\r\n                    'Moderate-heavy loads (80-90% 1RM)',\r\n                    'Low-moderate reps (3-6 reps)',\r\n                    'Adequate rest (2-3 minutes)',\r\n                    'Balance neural and hypertrophy work'\r\n                ]\r\n            };\r\n        } else if (repsNum <= 15) {\r\n            return {\r\n                type: 'Slow Gainer',\r\n                characteristics: 'Lower neural efficiency, higher fatigue resistance',\r\n                recommendations: [\r\n                    'Higher volume training (16-24 sets per week)',\r\n                    'Moderate loads (70-85% 1RM)',\r\n                    'Higher rep ranges (6-12+ reps)',\r\n                    'Shorter rest periods (1-2 minutes)',\r\n                    'Focus on hypertrophy and work capacity'\r\n                ]\r\n            };\r\n        } else {\r\n            return {\r\n                type: 'Very Slow Gainer',\r\n                characteristics: 'Low neural efficiency, very high fatigue resistance',\r\n                recommendations: [\r\n                    'Very high volume (20-30 sets per week)',\r\n                    'Light-moderate loads (60-80% 1RM)',\r\n                    'High rep ranges (12-20+ reps)',\r\n                    'Short rest periods (30-90 seconds)',\r\n                    'Emphasize metabolic stress and volume'\r\n                ]\r\n            };\r\n        }\r\n    };\r\n\r\n    // Fiber dominance recommendations\r\n    const getFiberRecommendations = (muscleGroup, fiberType) => {\r\n        const recommendations = {\r\n            hamstrings: {\r\n                fast: {\r\n                    description: 'Fast-twitch dominant - responds to explosive movements',\r\n                    training: 'Use <8 reps, explosive exercises, plyometrics, heavy RDLs'\r\n                },\r\n                slow: {\r\n                    description: 'Slow-twitch dominant - responds to endurance work',\r\n                    training: 'Use 12+ reps, time under tension, higher frequency'\r\n                },\r\n                mixed: {\r\n                    description: 'Balanced fiber composition',\r\n                    training: 'Use varied rep ranges 6-15, mix power and endurance work'\r\n                }\r\n            },\r\n            quadriceps: {\r\n                fast: {\r\n                    description: 'Power-dominant, explosive capability',\r\n                    training: 'Use <6 reps, jump squats, heavy squats, explosive movements'\r\n                },\r\n                slow: {\r\n                    description: 'Endurance-dominant, fatigue resistant',\r\n                    training: 'Use 15+ reps, high frequency, cycling-based movements'\r\n                },\r\n                mixed: {\r\n                    description: 'Balanced power and endurance',\r\n                    training: 'Use 8-12 reps, varied intensities, balanced approach'\r\n                }\r\n            },\r\n            chest: {\r\n                fast: {\r\n                    description: 'Power-oriented, responds to heavy pressing',\r\n                    training: 'Use <6 reps, explosive bench press, plyometric push-ups'\r\n                },\r\n                slow: {\r\n                    description: 'Endurance-oriented, high fatigue resistance',\r\n                    training: 'Use 12+ reps, high volume, time under tension'\r\n                },\r\n                mixed: {\r\n                    description: 'Balanced pressing capability',\r\n                    training: 'Use 6-12 reps, varied exercises, progressive overload'\r\n                }\r\n            }\r\n        };\r\n\r\n        return recommendations[muscleGroup]?.[fiberType] || null;\r\n    };\r\n\r\n    // Mileage/capacity recommendations\r\n    const getMileageRecommendations = (ageGroup, trainingAge, recoveryCapacity) => {\r\n        const recommendations = [];\r\n\r\n        // Age-based recommendations\r\n        if (ageGroup === 'youth') {\r\n            recommendations.push('Focus on movement quality and skill development');\r\n            recommendations.push('Avoid early specialization');\r\n            recommendations.push('Emphasize fun and variety in training');\r\n        } else if (ageGroup === 'masters') {\r\n            recommendations.push('Prioritize recovery and injury prevention');\r\n            recommendations.push('Longer warm-ups and cool-downs needed');\r\n            recommendations.push('Consider joint-friendly exercise variations');\r\n        }\r\n\r\n        // Training age recommendations\r\n        if (trainingAge === 'beginner') {\r\n            recommendations.push('Start with basic movement patterns');\r\n            recommendations.push('Focus on consistency over intensity');\r\n            recommendations.push('Allow adequate adaptation time');\r\n        } else if (trainingAge === 'advanced') {\r\n            recommendations.push('Can handle higher training loads');\r\n            recommendations.push('Benefit from periodization strategies');\r\n            recommendations.push('May need varied stimuli to progress');\r\n        }\r\n\r\n        // Recovery capacity recommendations\r\n        if (recoveryCapacity === 'poor') {\r\n            recommendations.push('Reduce training frequency');\r\n            recommendations.push('Emphasize sleep and stress management');\r\n            recommendations.push('Consider lower volume approaches');\r\n        } else if (recoveryCapacity === 'excellent') {\r\n            recommendations.push('Can handle higher training frequencies');\r\n            recommendations.push('May benefit from daily training');\r\n            recommendations.push('Good candidate for high-volume approaches');\r\n        }\r\n\r\n        return recommendations;\r\n    };\r\n\r\n    // SMART goals validation\r\n    const validateSMARTGoals = (goals) => {\r\n        const validation = {\r\n            specific: {\r\n                valid: goals.specific && goals.specific.length > 10,\r\n                message: 'Goal should be specific and detailed (10+ characters)'\r\n            },\r\n            measurable: {\r\n                valid: goals.measurable && goals.measurable.length > 5,\r\n                message: 'Include specific numbers or metrics'\r\n            },\r\n            achievable: {\r\n                valid: goals.achievable && goals.achievable.length > 10,\r\n                message: 'Explain why this goal is realistic'\r\n            },\r\n            relevant: {\r\n                valid: goals.relevant && goals.relevant.length > 10,\r\n                message: 'Explain how this aligns with your priorities'\r\n            },\r\n            timeBound: {\r\n                valid: goals.timeBound && goals.timeBound.length > 5,\r\n                message: 'Include a specific deadline or timeframe'\r\n            }\r\n        };\r\n\r\n        const allValid = Object.values(validation).every(v => v.valid);\r\n\r\n        return { validation, allValid };\r\n    };\r\n\r\n    // Generate comprehensive suggestions\r\n    const generateSuggestions = (assessmentData) => {\r\n        const newSuggestions = [];\r\n\r\n        // Gainer type suggestions\r\n        if (assessmentData.gainerType?.reps) {\r\n            const classification = classifyGainerType(assessmentData.gainerType.reps);\r\n            if (classification) {\r\n                newSuggestions.push(`${classification.type}: ${classification.characteristics}`);\r\n                newSuggestions.push(...classification.recommendations.slice(0, 2));\r\n            }\r\n        }\r\n\r\n        // Fiber dominance suggestions\r\n        Object.entries(assessmentData.fiberDominance || {}).forEach(([muscle, fiber]) => {\r\n            const rec = getFiberRecommendations(muscle, fiber);\r\n            if (rec) {\r\n                newSuggestions.push(`${muscle}: ${rec.training}`);\r\n            }\r\n        });\r\n\r\n        // Biomotor priorities\r\n        const highPriorities = Object.entries(assessmentData.biomotorPriorities || {})\r\n            .filter(([_, priority]) => priority === 'high')\r\n            .map(([ability]) => ability);\r\n\r\n        if (highPriorities.length > 0) {\r\n            newSuggestions.push(`High priority: ${highPriorities.join(', ')}`);\r\n        }\r\n\r\n        setSuggestions(newSuggestions);\r\n    };\r\n\r\n    // Save assessment to Supabase\r\n    const saveAssessment = async (assessmentData) => {\r\n        setLoading(true);\r\n        try {\r\n            // TODO: Uncomment and adjust when Supabase client is properly configured\r\n            /*\r\n            const { data, error } = await supabase\r\n              .from('user_assessments')\r\n              .upsert([{\r\n                user_id: state.user?.id,\r\n                enhanced_assessment: assessmentData,\r\n                updated_at: new Date().toISOString()\r\n              }], {\r\n                onConflict: 'user_id'\r\n              })\r\n              .select()\r\n              .single();\r\n      \r\n            if (error) throw error;\r\n            */\r\n\r\n            // For now, just update AppContext\r\n            dispatch({\r\n                type: APP_ACTIONS.UPDATE_ASSESSMENT,\r\n                payload: {\r\n                    ...state?.assessment,\r\n                    enhancedAssessment: assessmentData\r\n                }\r\n            });\r\n\r\n            return { success: true, data: assessmentData };\r\n        } catch (error) {\r\n            console.error('Error saving assessment:', error);\r\n            return { success: false, error: error.message };\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Save nutrition assessment\r\n    const saveNutritionAssessment = async (nutritionData) => {\r\n        setLoading(true);\r\n        try {\r\n            // Update context with nutrition data\r\n            if (dispatch) {\r\n                dispatch({\r\n                    type: APP_ACTIONS.UPDATE_ASSESSMENT,\r\n                    payload: {\r\n                        ...state?.assessment,\r\n                        nutrition: nutritionData\r\n                    }\r\n                });\r\n            }\r\n\r\n            // Store in localStorage as backup\r\n            localStorage.setItem('nutrition_assessment', JSON.stringify(nutritionData));\r\n\r\n            return { success: true, data: nutritionData };\r\n        } catch (error) {\r\n            console.error('Error saving nutrition assessment:', error);\r\n            return { success: false, error: error.message };\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // OPEX NUTRITION INTEGRATION\r\n\r\n    // BLGs (Biological Laws of Genetics) Assessment\r\n    const assessBLGs = (blgsData) => {\r\n        const scores = {};\r\n        let totalScore = 0;\r\n        let maxScore = 0;\r\n\r\n        // 1. Work/Rest Balance (24hr cycle)\r\n        const workRestScore = blgsData.workHours <= 8 && blgsData.restQuality >= 7 ? 10 :\r\n            blgsData.workHours <= 10 && blgsData.restQuality >= 5 ? 7 :\r\n                blgsData.workHours <= 12 && blgsData.restQuality >= 3 ? 4 : 2;\r\n        scores.workRest = { score: workRestScore, max: 10 };\r\n\r\n        // 2. Water Intake (1/2 BW in oz)\r\n        const waterTarget = blgsData.bodyWeight * 0.5;\r\n        const waterScore = blgsData.waterIntake >= waterTarget ? 10 :\r\n            blgsData.waterIntake >= waterTarget * 0.8 ? 7 :\r\n                blgsData.waterIntake >= waterTarget * 0.6 ? 4 : 2;\r\n        scores.water = { score: waterScore, max: 10, target: waterTarget };\r\n\r\n        // 3. Sleep Consistency & Quality\r\n        const sleepScore = (blgsData.sleepHours >= 7 && blgsData.sleepHours <= 9) &&\r\n            blgsData.fallAsleepTime <= 15 && blgsData.sleepQuality >= 7 ? 10 :\r\n            (blgsData.sleepHours >= 6 && blgsData.sleepHours <= 10) &&\r\n                blgsData.fallAsleepTime <= 20 && blgsData.sleepQuality >= 5 ? 7 : 4;\r\n        scores.sleep = { score: sleepScore, max: 10 };\r\n\r\n        // 4. Sun Exposure & Circadian Rhythm\r\n        const sunScore = blgsData.sunExposure >= 15 && blgsData.outdoorTime >= 20 ? 10 :\r\n            blgsData.sunExposure >= 10 && blgsData.outdoorTime >= 15 ? 7 : 4;\r\n        scores.sun = { score: sunScore, max: 10 };\r\n\r\n        // 5. Digestion & Elimination\r\n        const digestionScore = blgsData.bowelMovements >= 1 && blgsData.bowelQuality >= 3 ? 10 :\r\n            blgsData.bowelMovements >= 0.7 && blgsData.bowelQuality >= 2 ? 7 : 4;\r\n        scores.digestion = { score: digestionScore, max: 10 };\r\n\r\n        // 6. Daily Movement & Recovery\r\n        const movementScore = blgsData.dailyMovement >= 30 && blgsData.recoveryActivities ? 10 :\r\n            blgsData.dailyMovement >= 20 ? 7 : 4;\r\n        scores.movement = { score: movementScore, max: 10 };\r\n\r\n        // 7. Mindful Eating (Sit & Chew)\r\n        const eatingScore = blgsData.mindfulEating && blgsData.chewingTime >= 20 ? 10 :\r\n            blgsData.mindfulEating && blgsData.chewingTime >= 15 ? 7 : 4;\r\n        scores.eating = { score: eatingScore, max: 10 };\r\n\r\n        // 8. Mortality Acceptance & Life Fulfillment\r\n        const mortalityScore = blgsData.lifeFullness >= 7 && blgsData.stressBucket <= 3 ? 10 :\r\n            blgsData.lifeFullness >= 5 && blgsData.stressBucket <= 5 ? 7 : 4;\r\n        scores.mortality = { score: mortalityScore, max: 10 };\r\n\r\n        // Calculate totals\r\n        Object.values(scores).forEach(item => {\r\n            totalScore += item.score;\r\n            maxScore += item.max;\r\n        });\r\n\r\n        const percentage = (totalScore / maxScore) * 100;\r\n        const tier = percentage >= 85 ? 'Mastery' :\r\n            percentage >= 70 ? 'Proficient' :\r\n                percentage >= 55 ? 'Developing' : 'Foundation';\r\n\r\n        return {\r\n            scores,\r\n            totalScore,\r\n            maxScore,\r\n            percentage,\r\n            tier,\r\n            suggestions: generateBLGsSuggestions(scores, blgsData)\r\n        };\r\n    };\r\n\r\n    // Generate BLGs improvement suggestions\r\n    const generateBLGsSuggestions = (scores, blgsData) => {\r\n        const suggestions = [];\r\n\r\n        if (scores.sleep.score < 7) {\r\n            suggestions.push({\r\n                category: 'Sleep',\r\n                priority: 'High',\r\n                recommendations: [\r\n                    'Limit caffeine after 2 PM',\r\n                    'Create dark, cool environment (65-68°F)',\r\n                    'Establish consistent bedtime routine',\r\n                    'Consider magnesium supplementation',\r\n                    'Journal or stretch before bed'\r\n                ]\r\n            });\r\n        }\r\n\r\n        if (scores.water.score < 7) {\r\n            suggestions.push({\r\n                category: 'Hydration',\r\n                priority: 'High',\r\n                recommendations: [\r\n                    `Target ${scores.water.target}oz daily (${Math.round(scores.water.target / 8)} glasses)`,\r\n                    'Drink 16-20oz upon waking',\r\n                    'Add electrolytes if sweating heavily',\r\n                    'Track intake with marked water bottle'\r\n                ]\r\n            });\r\n        }\r\n\r\n        if (scores.digestion.score < 7) {\r\n            suggestions.push({\r\n                category: 'Digestion',\r\n                priority: 'Medium',\r\n                recommendations: [\r\n                    'Increase fiber intake (25-35g daily)',\r\n                    'Chew each bite 20-30 times',\r\n                    'Sit while eating, avoid distractions',\r\n                    'Consider probiotic foods (kefir, sauerkraut)',\r\n                    'Stay hydrated throughout day'\r\n                ]\r\n            });\r\n        }\r\n\r\n        return suggestions;\r\n    };\r\n\r\n    // Fuel Assessment (OPEX Nutrition Hierarchy)\r\n    const assessFuel = (fuelData, blgsScore, gainerType, biomotorData) => {\r\n        // Prerequisite check - BLGs must be above foundation level\r\n        if (blgsScore < 55) {\r\n            return {\r\n                blocked: true,\r\n                message: 'Complete BLGs foundation (55%+) before Fuel assessment',\r\n                unlockRequirements: ['Improve sleep consistency', 'Increase water intake', 'Establish daily movement']\r\n            };\r\n        }\r\n\r\n        // Determine fuel profile based on current habits\r\n        const profile = determineFuelProfile(fuelData);\r\n\r\n        // Calculate TDEE using multiple methods\r\n        const tdee = calculateTDEE(fuelData.stats);\r\n\r\n        // Generate macro recommendations based on gainer type and goals\r\n        const macros = calculateMacros(fuelData.stats, gainerType, biomotorData, fuelData.goals);\r\n\r\n        return {\r\n            profile,\r\n            tdee,\r\n            macros,\r\n            suggestions: generateFuelSuggestions(profile, macros, gainerType)\r\n        };\r\n    };\r\n\r\n    // Determine fuel profile (Inadequate → Adequate → Optimal → Highest)\r\n    const determineFuelProfile = (fuelData) => {\r\n        const processedFoodScore = 10 - (fuelData.processedMeals || 0); // Lower is better\r\n        const wholeFoodScore = fuelData.wholeFoods || 0;\r\n        const consistencyScore = fuelData.mealConsistency || 0;\r\n        const awarenessScore = fuelData.nutritionAwareness || 0;\r\n\r\n        const totalScore = (processedFoodScore + wholeFoodScore + consistencyScore + awarenessScore) / 4;\r\n\r\n        if (totalScore >= 9) return 'Highest';\r\n        if (totalScore >= 7) return 'Optimal';\r\n        if (totalScore >= 5) return 'Adequate';\r\n        return 'Inadequate';\r\n    };\r\n\r\n    // TDEE Calculation (BMR + TEF + NEAT + EEE)\r\n    const calculateTDEE = (stats) => {\r\n        // BMR using Mifflin-St Jeor equation\r\n        const bmr = stats.gender === 'male'\r\n            ? (10 * stats.weight) + (6.25 * stats.height) - (5 * stats.age) + 5\r\n            : (10 * stats.weight) + (6.25 * stats.height) - (5 * stats.age) - 161;\r\n\r\n        // Alternative: Weight in kg * 20 for active individuals\r\n        const bmrAlternative = stats.weight * 20;\r\n\r\n        // Use the higher of the two for active athletes\r\n        const finalBMR = Math.max(bmr, bmrAlternative);\r\n\r\n        // Thermic Effect of Food (10% of total intake)\r\n        const tef = finalBMR * 0.1;\r\n\r\n        // NEAT (Non-Exercise Activity Thermogenesis) + EEE (Exercise Energy Expenditure)\r\n        const activityMultipliers = {\r\n            sedentary: 1.2,\r\n            lightly_active: 1.375,\r\n            moderately_active: 1.55,\r\n            very_active: 1.725,\r\n            extremely_active: 1.9\r\n        };\r\n\r\n        const neat = (finalBMR * activityMultipliers[stats.activityLevel]) - finalBMR;\r\n\r\n        return {\r\n            bmr: Math.round(finalBMR),\r\n            tef: Math.round(tef),\r\n            neat: Math.round(neat),\r\n            total: Math.round(finalBMR + tef + neat)\r\n        };\r\n    };\r\n\r\n    // Macro calculations based on gainer type and biomotor priorities\r\n    const calculateMacros = (stats, gainerType, biomotorData, goals) => {\r\n        const leanMass = stats.weight * (1 - (stats.bodyFat || 15) / 100);\r\n\r\n        // Protein recommendations (0.5-1.3g/lb lean mass)\r\n        let proteinMultiplier = 0.8; // Base\r\n\r\n        // Adjust for gainer type\r\n        if (gainerType?.type === 'Very Fast Gainer' || gainerType?.type === 'Fast Gainer') {\r\n            proteinMultiplier = 0.6; // Lower protein needs\r\n        } else if (gainerType?.type === 'Slow Gainer' || gainerType?.type === 'Very Slow Gainer') {\r\n            proteinMultiplier = 1.1; // Higher protein needs\r\n        }\r\n\r\n        // Adjust for biomotor priorities\r\n        if (biomotorData?.strength >= 8) proteinMultiplier += 0.2;\r\n        if (biomotorData?.endurance >= 8) proteinMultiplier += 0.1;\r\n\r\n        const proteinGrams = Math.round(leanMass * proteinMultiplier);\r\n        const proteinCals = proteinGrams * 4;\r\n\r\n        // Carbohydrate recommendations (50-250g based on energy needs and digestion)\r\n        let carbGrams = 150; // Base\r\n\r\n        if (biomotorData?.endurance >= 7) carbGrams = 200;\r\n        if (biomotorData?.power >= 7) carbGrams = 175;\r\n        if (goals?.includes('fat_loss')) carbGrams = 100;\r\n        if (gainerType?.type.includes('Fast')) carbGrams -= 25;\r\n\r\n        const carbCals = carbGrams * 4;\r\n\r\n        // Fat recommendations (30-100g for hormones and satiety)\r\n        const remainingCals = stats.tdee - proteinCals - carbCals;\r\n        const fatGrams = Math.round(remainingCals / 9);\r\n        const fatCals = fatGrams * 9;\r\n\r\n        return {\r\n            protein: { grams: proteinGrams, calories: proteinCals, percentage: Math.round((proteinCals / stats.tdee) * 100) },\r\n            carbs: { grams: carbGrams, calories: carbCals, percentage: Math.round((carbCals / stats.tdee) * 100) },\r\n            fats: { grams: fatGrams, calories: fatCals, percentage: Math.round((fatCals / stats.tdee) * 100) }\r\n        };\r\n    };\r\n\r\n    // Person/Personalization Assessment (Unlocked after BLGs + Fuel mastery)\r\n    const assessPersonalization = (personData, blgsScore, fuelTier) => {\r\n        // Check prerequisites\r\n        if (blgsScore < 70 || !['Optimal', 'Highest'].includes(fuelTier)) {\r\n            return {\r\n                blocked: true,\r\n                message: 'Complete BLGs (70%+) and achieve Optimal Fuel before Personalization',\r\n                unlockRequirements: ['Master sleep and stress management', 'Establish consistent nutrition habits']\r\n            };\r\n        }\r\n\r\n        // Deloading protocols (earned through mastery)\r\n        const deloadingOptions = generateDeloadingProtocols(personData);\r\n\r\n        // Elimination/reintroduction protocols\r\n        const eliminationPlan = generate21DayElimination(personData.aversions, personData.symptoms);\r\n\r\n        return {\r\n            deloading: deloadingOptions,\r\n            elimination: eliminationPlan,\r\n            recommendations: generatePersonalizationRecommendations(personData)\r\n        };\r\n    };\r\n\r\n    // Generate fuel suggestions based on profile and gainer type\r\n    const generateFuelSuggestions = (profile, macros, gainerType) => {\r\n        const suggestions = [];\r\n\r\n        if (profile === 'Inadequate') {\r\n            suggestions.push({\r\n                category: 'Foundation Building',\r\n                priority: 'Critical',\r\n                recommendations: [\r\n                    'Focus on whole foods first (80%+ of meals)',\r\n                    'Establish consistent meal timing',\r\n                    'Reduce processed food intake gradually',\r\n                    'Practice mindful eating habits'\r\n                ]\r\n            });\r\n        }\r\n\r\n        if (profile === 'Adequate') {\r\n            suggestions.push({\r\n                category: 'Optimization',\r\n                priority: 'High',\r\n                recommendations: [\r\n                    `Target ${macros.protein.grams}g protein daily`,\r\n                    `Aim for ${macros.carbs.grams}g carbohydrates around training`,\r\n                    'Include healthy fats (nuts, oils, avocado)',\r\n                    'Track intake for 2-3 weeks to establish patterns'\r\n                ]\r\n            });\r\n        }\r\n\r\n        // Gainer type specific suggestions\r\n        if (gainerType?.type === 'Fast Gainer') {\r\n            suggestions.push({\r\n                category: 'Fast Gainer Protocol',\r\n                priority: 'Medium',\r\n                recommendations: [\r\n                    'Lower carbohydrate intake on rest days',\r\n                    'Focus on protein timing around workouts',\r\n                    'Consider intermittent fasting windows',\r\n                    'Monitor for quick glycemic responses'\r\n                ]\r\n            });\r\n        } else if (gainerType?.type === 'Slow Gainer') {\r\n            suggestions.push({\r\n                category: 'Slow Gainer Protocol',\r\n                priority: 'Medium',\r\n                recommendations: [\r\n                    'Higher carbohydrate intake to support volume',\r\n                    'More frequent meals (4-6 times daily)',\r\n                    'Focus on caloric density',\r\n                    'Consider post-workout carbohydrates'\r\n                ]\r\n            });\r\n        }\r\n\r\n        return suggestions;\r\n    };\r\n\r\n    // Generate deloading protocols (earned after mastery)\r\n    const generateDeloadingProtocols = (personData) => {\r\n        return {\r\n            carb_cycling: {\r\n                name: 'Carbohydrate Cycling',\r\n                description: 'Strategic carb manipulation for body composition',\r\n                protocol: '3 low days (50-100g), 1 high day (200-300g)',\r\n                benefits: ['Fat loss while maintaining performance', 'Metabolic flexibility'],\r\n                prerequisites: ['Stable fuel habits for 8+ weeks']\r\n            },\r\n            intermittent_fasting: {\r\n                name: 'Intermittent Fasting',\r\n                description: 'Time-restricted eating windows',\r\n                protocol: '16:8 or 18:6 eating windows',\r\n                benefits: ['Simplified meal planning', 'Potential longevity benefits'],\r\n                prerequisites: ['Good relationship with food', 'No eating disorders']\r\n            },\r\n            elimination_diets: {\r\n                name: 'Systematic Elimination',\r\n                description: 'Identify food sensitivities',\r\n                protocol: '21-day elimination → systematic reintroduction',\r\n                benefits: ['Identify trigger foods', 'Optimize digestion'],\r\n                prerequisites: ['BLGs mastery', 'Fuel consistency']\r\n            }\r\n        };\r\n    };\r\n\r\n    // Generate 21-day elimination plan\r\n    const generate21DayElimination = (aversions, symptoms) => {\r\n        const commonTriggers = ['gluten', 'dairy', 'sugar', 'alcohol', 'caffeine', 'corn', 'soy'];\r\n\r\n        const eliminationPlan = {\r\n            phase1: {\r\n                name: 'Elimination Phase',\r\n                duration: '21 days',\r\n                eliminated_foods: commonTriggers.filter(food => !aversions?.includes(food)),\r\n                allowed_foods: [\r\n                    'Vegetables (except nightshades)',\r\n                    'Fruits (low glycemic)',\r\n                    'Lean proteins',\r\n                    'Nuts and seeds',\r\n                    'Healthy oils'\r\n                ],\r\n                tracking: ['Energy levels', 'Digestion', 'Sleep quality', 'Mood', 'Skin']\r\n            },\r\n            phase2: {\r\n                name: 'Reintroduction Phase',\r\n                duration: '14 days',\r\n                process: 'Add one food group every 3 days',\r\n                order: ['dairy', 'gluten', 'sugar', 'alcohol'],\r\n                monitoring: 'Track symptoms for 72 hours after each reintroduction'\r\n            },\r\n            phase3: {\r\n                name: 'Personalization Phase',\r\n                duration: 'Ongoing',\r\n                outcome: 'Create personalized food guidelines based on responses'\r\n            }\r\n        };\r\n\r\n        return eliminationPlan;\r\n    };\r\n\r\n    // Generate personalization recommendations\r\n    const generatePersonalizationRecommendations = (personData) => {\r\n        const recommendations = [];\r\n\r\n        recommendations.push({\r\n            category: 'Advanced Protocols',\r\n            items: [\r\n                'Experiment with meal timing around training',\r\n                'Test supplement protocols (creatine, caffeine, etc.)',\r\n                'Monitor biomarkers (blood work, HRV)',\r\n                'Adjust based on training phases'\r\n            ]\r\n        });\r\n\r\n        recommendations.push({\r\n            category: 'Lifestyle Integration',\r\n            items: [\r\n                'Develop travel nutrition strategies',\r\n                'Create social eating guidelines',\r\n                'Build flexible meal preparation systems',\r\n                'Establish long-term sustainability practices'\r\n            ]\r\n        });\r\n\r\n        return recommendations;\r\n    };\r\n\r\n    // SCIENTIFIC PRINCIPLES OF STRENGTH TRAINING INTEGRATION\r\n\r\n    // 1. SPECIFICITY PRINCIPLE - Broad to Narrow Spectrum Assessment\r\n    const assessSpecificity = (specificityData, goals, biomotorData) => {\r\n        const { preferredModalities, currentSpectrum, competitionLifts, trainingAge } = specificityData;\r\n\r\n        // Determine optimal spectrum based on goals and experience\r\n        const optimalSpectrum = determineOptimalSpectrum(goals, trainingAge, biomotorData);\r\n\r\n        // Check for modality compatibility conflicts\r\n        const compatibilityWarnings = checkModalityCompatibility(preferredModalities, goals);\r\n\r\n        // Generate directed adaptation sequence\r\n        const adaptationSequence = generateAdaptationSequence(goals, trainingAge, currentSpectrum);\r\n\r\n        return {\r\n            optimalSpectrum,\r\n            compatibilityWarnings,\r\n            adaptationSequence,\r\n            recommendations: generateSpecificityRecommendations(optimalSpectrum, compatibilityWarnings)\r\n        };\r\n    };\r\n\r\n    // Determine optimal training spectrum (broad → narrow)\r\n    const determineOptimalSpectrum = (goals, trainingAge, biomotorData) => {\r\n        // Novices benefit from broad spectrum (hypertrophy/general strength)\r\n        if (trainingAge === 'beginner') {\r\n            return {\r\n                type: 'broad',\r\n                focus: 'hypertrophy',\r\n                repRange: '6-12',\r\n                intensity: '60-75%',\r\n                rationale: 'Build general strength base and muscle mass'\r\n            };\r\n        }\r\n\r\n        // Competition-focused athletes need narrow spectrum\r\n        if (goals.some(goal => goal.includes('competition') || goal.includes('powerlifting') || goal.includes('meet'))) {\r\n            return {\r\n                type: 'narrow',\r\n                focus: 'competition_specific',\r\n                repRange: '1-3',\r\n                intensity: '85-100%',\r\n                rationale: 'Practice competition lifts and neurological adaptations'\r\n            };\r\n        }\r\n\r\n        // Intermediate athletes - transition based on goals\r\n        if (goals.some(goal => goal.includes('strength') || goal.includes('1RM'))) {\r\n            return {\r\n                type: 'moderate',\r\n                focus: 'strength',\r\n                repRange: '3-6',\r\n                intensity: '75-90%',\r\n                rationale: 'Build maximum strength with some specificity'\r\n            };\r\n        }\r\n\r\n        // Default to broad for hypertrophy/general fitness\r\n        return {\r\n            type: 'broad',\r\n            focus: 'hypertrophy',\r\n            repRange: '6-12',\r\n            intensity: '60-80%',\r\n            rationale: 'Maximize muscle growth and general strength'\r\n        };\r\n    };\r\n\r\n    // Check for modality compatibility conflicts\r\n    const checkModalityCompatibility = (modalities, goals) => {\r\n        const warnings = [];\r\n\r\n        // Strength + Endurance conflict\r\n        if (modalities.includes('endurance') && modalities.includes('strength')) {\r\n            warnings.push({\r\n                type: 'strength_endurance_conflict',\r\n                severity: 'high',\r\n                title: 'Strength/Endurance Interference',\r\n                description: 'Concurrent training can reduce strength gains through:',\r\n                mechanisms: [\r\n                    'Muscle catabolism from excessive cardio',\r\n                    'Accumulated fatigue limiting strength training quality',\r\n                    'Fiber type shifts toward Type I (slow-twitch)',\r\n                    'Reduced protein synthesis signaling'\r\n                ],\r\n                suggestions: [\r\n                    'Limit cardio to 2-3 sessions/week if strength is priority',\r\n                    'Separate strength and cardio by 6+ hours',\r\n                    'Focus on low-impact steady state over HIIT',\r\n                    'Prioritize one quality over the other'\r\n                ]\r\n            });\r\n        }\r\n\r\n        // Strength + Flexibility conflict  \r\n        if (modalities.includes('flexibility') && modalities.includes('strength')) {\r\n            warnings.push({\r\n                type: 'strength_flexibility_conflict',\r\n                severity: 'medium',\r\n                title: 'Strength/Flexibility Balance',\r\n                description: 'Excessive flexibility work can compromise:',\r\n                mechanisms: [\r\n                    'Reduced stretch-shortening cycle efficiency',\r\n                    'Decreased joint stability',\r\n                    'Altered muscle activation patterns'\r\n                ],\r\n                suggestions: [\r\n                    'Focus flexibility work post-workout',\r\n                    'Emphasize dynamic over static stretching pre-workout',\r\n                    'Target specific mobility limitations only',\r\n                    'Maintain strength through full ROM'\r\n                ]\r\n            });\r\n        }\r\n\r\n        // Strength + Power volume limits\r\n        if (modalities.includes('power') && modalities.includes('strength')) {\r\n            warnings.push({\r\n                type: 'strength_power_volume',\r\n                severity: 'low',\r\n                title: 'Strength/Power Volume Management',\r\n                description: 'High-intensity combination requires careful volume management:',\r\n                mechanisms: [\r\n                    'CNS fatigue accumulation',\r\n                    'Quality degradation with high volumes',\r\n                    'Recovery limitations'\r\n                ],\r\n                suggestions: [\r\n                    'Alternate strength and power emphasis',\r\n                    'Reduce volume when combining both',\r\n                    'Prioritize movement quality over quantity',\r\n                    'Plan adequate recovery between sessions'\r\n                ]\r\n            });\r\n        }\r\n\r\n        // Non-specific training for competition goals\r\n        if (goals.some(goal => goal.includes('competition')) && modalities.includes('bodybuilding')) {\r\n            warnings.push({\r\n                type: 'specificity_mismatch',\r\n                severity: 'medium',\r\n                title: 'Competition Specificity Gap',\r\n                description: 'Bodybuilding methods may not transfer to competition performance:',\r\n                mechanisms: [\r\n                    'Different rep ranges and intensities',\r\n                    'Isolation vs. compound movement focus',\r\n                    'Technique practice limitations'\r\n                ],\r\n                suggestions: [\r\n                    'Transition to competition-specific training blocks',\r\n                    'Practice competition lifts regularly',\r\n                    'Reduce isolation work closer to competition',\r\n                    'Focus on strength qualities that transfer'\r\n                ]\r\n            });\r\n        }\r\n\r\n        return warnings;\r\n    };\r\n\r\n    // Generate directed adaptation sequence \r\n    const generateAdaptationSequence = (goals, trainingAge, currentSpectrum) => {\r\n        const sequence = [];\r\n\r\n        // Novice sequence: Always start broad\r\n        if (trainingAge === 'beginner') {\r\n            sequence.push({\r\n                phase: 'accumulation',\r\n                block: 'hypertrophy',\r\n                duration: '8-12 weeks',\r\n                focus: 'Build muscle mass and movement patterns',\r\n                spectrum: 'broad',\r\n                intensity: '60-75%',\r\n                volume: 'high',\r\n                exercises: 'Compound movements + assistance',\r\n                unlocked: true\r\n            });\r\n\r\n            sequence.push({\r\n                phase: 'intensification',\r\n                block: 'general_strength',\r\n                duration: '6-8 weeks',\r\n                focus: 'Increase force production',\r\n                spectrum: 'moderate',\r\n                intensity: '75-85%',\r\n                volume: 'moderate',\r\n                exercises: 'Competition lifts + variations',\r\n                unlocked: false,\r\n                prerequisite: 'Complete hypertrophy block'\r\n            });\r\n        }\r\n\r\n        // Intermediate/Advanced sequence based on goals\r\n        if (trainingAge === 'intermediate' || trainingAge === 'advanced') {\r\n            // Competition prep sequence\r\n            if (goals.some(goal => goal.includes('competition') || goal.includes('meet'))) {\r\n                sequence.push({\r\n                    phase: 'accumulation',\r\n                    block: 'volume_block',\r\n                    duration: '4-6 weeks',\r\n                    focus: 'Build work capacity',\r\n                    spectrum: 'moderate',\r\n                    intensity: '70-80%',\r\n                    volume: 'high',\r\n                    unlocked: true\r\n                });\r\n\r\n                sequence.push({\r\n                    phase: 'intensification',\r\n                    block: 'strength_block',\r\n                    duration: '4-5 weeks',\r\n                    focus: 'Maximize strength',\r\n                    spectrum: 'narrow',\r\n                    intensity: '80-95%',\r\n                    volume: 'moderate',\r\n                    unlocked: false,\r\n                    prerequisite: 'Complete volume block'\r\n                });\r\n\r\n                sequence.push({\r\n                    phase: 'peaking',\r\n                    block: 'competition_prep',\r\n                    duration: '2-3 weeks',\r\n                    focus: 'Peak for competition',\r\n                    spectrum: 'narrow',\r\n                    intensity: '90-105%',\r\n                    volume: 'low',\r\n                    unlocked: false,\r\n                    prerequisite: 'Complete strength block'\r\n                });\r\n\r\n                sequence.push({\r\n                    phase: 'deload',\r\n                    block: 'recovery',\r\n                    duration: '1 week',\r\n                    focus: 'Recovery and supercompensation',\r\n                    unlocked: false,\r\n                    prerequisite: 'Complete peaking block'\r\n                });\r\n            }\r\n\r\n            // General strength/hypertrophy sequence\r\n            else {\r\n                sequence.push({\r\n                    phase: 'accumulation',\r\n                    block: 'hypertrophy',\r\n                    duration: '6-8 weeks',\r\n                    focus: 'Muscle growth',\r\n                    spectrum: 'broad',\r\n                    intensity: '65-80%',\r\n                    volume: 'high',\r\n                    unlocked: true\r\n                });\r\n\r\n                sequence.push({\r\n                    phase: 'intensification',\r\n                    block: 'strength',\r\n                    duration: '4-6 weeks',\r\n                    focus: 'Strength gains',\r\n                    spectrum: 'moderate',\r\n                    intensity: '80-90%',\r\n                    volume: 'moderate',\r\n                    unlocked: false,\r\n                    prerequisite: 'Complete hypertrophy block'\r\n                });\r\n            }\r\n        }\r\n\r\n        return sequence;\r\n    };\r\n\r\n    // Generate specificity recommendations\r\n    const generateSpecificityRecommendations = (optimalSpectrum, compatibilityWarnings) => {\r\n        const recommendations = [];\r\n\r\n        // Spectrum-based recommendations\r\n        if (optimalSpectrum.type === 'broad') {\r\n            recommendations.push({\r\n                category: 'Exercise Selection',\r\n                priority: 'High',\r\n                items: [\r\n                    'Focus on compound movements (squat, bench, deadlift)',\r\n                    'Include assistance exercises for weak points',\r\n                    'Use various rep ranges (6-15) for different adaptations',\r\n                    'Practice movement patterns with lighter loads'\r\n                ]\r\n            });\r\n        } else if (optimalSpectrum.type === 'narrow') {\r\n            recommendations.push({\r\n                category: 'Competition Specificity',\r\n                priority: 'High',\r\n                items: [\r\n                    'Practice exact competition commands and timing',\r\n                    'Use competition equipment and gear',\r\n                    'Focus 80%+ training on competition lifts',\r\n                    'Minimize assistance work to movement prep only'\r\n                ]\r\n            });\r\n        }\r\n\r\n        // Compatibility-based recommendations\r\n        compatibilityWarnings.forEach(warning => {\r\n            if (warning.severity === 'high') {\r\n                recommendations.push({\r\n                    category: 'Conflict Resolution',\r\n                    priority: 'Critical',\r\n                    items: warning.suggestions\r\n                });\r\n            }\r\n        });\r\n\r\n        return recommendations;\r\n    };\r\n\r\n    // Calculate training variables based on principles\r\n    const calculateTrainingVariables = (specificityData, gainerType, biomotorData) => {\r\n        const { spectrum, goals } = specificityData;\r\n\r\n        // Base calculations on gainer type (Bryant integration)\r\n        let baseVolume = gainerType?.type === 'Fast Gainer' ? 12 : 18; // sets per week\r\n        let baseIntensity = 75; // % 1RM\r\n        let baseFrequency = 3; // sessions per week\r\n\r\n        // Adjust for specificity spectrum\r\n        if (spectrum === 'narrow') {\r\n            baseIntensity += 10; // Higher intensity for competition prep\r\n            baseVolume -= 4; // Lower volume for recovery\r\n            baseFrequency = 4; // Higher frequency for skill practice\r\n        } else if (spectrum === 'broad') {\r\n            baseIntensity -= 5; // Lower intensity for hypertrophy\r\n            baseVolume += 6; // Higher volume for growth\r\n            baseFrequency = 3; // Standard frequency\r\n        }\r\n\r\n        // Adjust for biomotor qualities (NSCA integration)\r\n        if (biomotorData?.strength >= 8) {\r\n            baseIntensity += 5; // Advanced athletes can handle more\r\n        }\r\n        if (biomotorData?.endurance >= 7) {\r\n            baseVolume += 2; // Good recovery allows more volume\r\n        }\r\n\r\n        return {\r\n            volume: {\r\n                setsPerWeek: baseVolume,\r\n                repsPerSet: spectrum === 'narrow' ? '1-3' : spectrum === 'broad' ? '8-12' : '4-6'\r\n            },\r\n            intensity: {\r\n                percentage: baseIntensity,\r\n                relative: baseIntensity >= 85 ? 'High' : baseIntensity >= 70 ? 'Moderate' : 'Low'\r\n            },\r\n            frequency: {\r\n                sessionsPerWeek: baseFrequency,\r\n                daysOff: 7 - baseFrequency\r\n            }\r\n        };\r\n    };\r\n\r\n    // Validate training phase progression\r\n    const validatePhaseProgression = (currentPhase, targetPhase, adaptationSequence) => {\r\n        const currentIndex = adaptationSequence.findIndex(phase => phase.block === currentPhase);\r\n        const targetIndex = adaptationSequence.findIndex(phase => phase.block === targetPhase);\r\n\r\n        if (targetIndex <= currentIndex) {\r\n            return { valid: true, message: 'Phase progression is valid' };\r\n        }\r\n\r\n        // Check if prerequisites are met\r\n        const requiredPhases = adaptationSequence.slice(currentIndex + 1, targetIndex + 1);\r\n        const unlockedPhases = requiredPhases.filter(phase => phase.unlocked);\r\n\r\n        if (unlockedPhases.length < requiredPhases.length) {\r\n            const nextPhase = requiredPhases.find(phase => !phase.unlocked);\r\n            return {\r\n                valid: false,\r\n                message: `Must complete ${nextPhase.prerequisite} before advancing to ${targetPhase}`,\r\n                nextPhase: nextPhase.block\r\n            };\r\n        }\r\n\r\n        return { valid: true, message: 'Ready to advance phase' };\r\n    };\r\n\r\n    // Save specificity assessment\r\n    const saveSpecificityAssessment = async (specificityData) => {\r\n        setLoading(true);\r\n        try {\r\n            // Update context with specificity data\r\n            if (dispatch) {\r\n                dispatch({\r\n                    type: APP_ACTIONS.UPDATE_ASSESSMENT,\r\n                    payload: {\r\n                        ...state?.assessment,\r\n                        specificity: specificityData\r\n                    }\r\n                });\r\n            }\r\n\r\n            // Store in localStorage as backup\r\n            localStorage.setItem('specificity_assessment', JSON.stringify(specificityData));\r\n\r\n            return { success: true, data: specificityData };\r\n        } catch (error) {\r\n            console.error('Error saving specificity assessment:', error);\r\n            return { success: false, error: error.message };\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // OVERLOAD PRINCIPLE ASSESSMENT\r\n\r\n    // Assess overload based on homeostatic disruption variables\r\n    const assessOverload = (overloadData, gainerType, currentPhase) => {\r\n        const { volume, intensity, frequency, exerciseSelection, failureProximity, baseline } = overloadData;\r\n\r\n        // Calculate Maximum Recoverable Volume (MRV) by phase\r\n        const mrvByPhase = calculateMRVByPhase(gainerType, currentPhase);\r\n\r\n        // Assess homeostatic disruption level\r\n        const disruptionLevel = calculateHomeostasisDisruption(overloadData);\r\n\r\n        // Generate overload progression recommendations\r\n        const progressionPlan = generateOverloadProgression(overloadData, mrvByPhase, gainerType);\r\n\r\n        // Check for overload optimization opportunities\r\n        const optimizations = assessOverloadOptimization(overloadData, exerciseSelection);\r\n\r\n        return {\r\n            mrvByPhase,\r\n            disruptionLevel,\r\n            progressionPlan,\r\n            optimizations,\r\n            currentLoad: calculateCurrentLoad(volume, intensity, frequency),\r\n            recommendations: generateOverloadRecommendations(disruptionLevel, mrvByPhase, currentPhase)\r\n        };\r\n    };\r\n\r\n    // Calculate MRV by training phase\r\n    const calculateMRVByPhase = (gainerType, currentPhase) => {\r\n        // Base MRV from gainer type classification\r\n        const baseMRV = {\r\n            'Very Fast Gainer': { hypertrophy: 10, strength: 8, peaking: 6 },\r\n            'Fast Gainer': { hypertrophy: 14, strength: 12, peaking: 8 },\r\n            'Slow Gainer': { hypertrophy: 20, strength: 16, peaking: 12 },\r\n            'Very Slow Gainer': { hypertrophy: 26, strength: 20, peaking: 14 }\r\n        };\r\n\r\n        const gainerMRV = baseMRV[gainerType?.type] || baseMRV['Fast Gainer'];\r\n\r\n        return {\r\n            hypertrophy: {\r\n                sets: gainerMRV.hypertrophy,\r\n                repsRange: '8-15',\r\n                intensityRange: '60-75%',\r\n                proximityToFailure: '1-3 RIR',\r\n                description: 'Highest MRV phase - focus on volume accumulation'\r\n            },\r\n            strength: {\r\n                sets: gainerMRV.strength,\r\n                repsRange: '3-6',\r\n                intensityRange: '75-90%',\r\n                proximityToFailure: '2-4 RIR',\r\n                description: 'Moderate MRV - balance intensity and volume'\r\n            },\r\n            peaking: {\r\n                sets: gainerMRV.peaking,\r\n                repsRange: '1-3',\r\n                intensityRange: '90-105%',\r\n                proximityToFailure: '0-1 RIR',\r\n                description: 'Lowest MRV - prioritize intensity and technique'\r\n            },\r\n            activeRecovery: {\r\n                sets: Math.round(gainerMRV.hypertrophy * 0.25),\r\n                repsRange: '5-10',\r\n                intensityRange: '40-60%',\r\n                proximityToFailure: '5+ RIR',\r\n                description: 'Deload phase - maintain movement patterns'\r\n            }\r\n        };\r\n    };\r\n\r\n    // Calculate homeostatic disruption level\r\n    const calculateHomeostasisDisruption = (overloadData) => {\r\n        const { volume, intensity, frequency, failureProximity } = overloadData;\r\n\r\n        // Volume disruption (sets * reps * weight)\r\n        const volumeDisruption = (volume.sets * volume.reps * intensity) / 100;\r\n\r\n        // Intensity disruption (higher % = more neural stress)\r\n        const intensityDisruption = intensity >= 90 ? 3 : intensity >= 80 ? 2 : 1;\r\n\r\n        // Frequency disruption (sessions per week)\r\n        const frequencyDisruption = frequency >= 6 ? 3 : frequency >= 4 ? 2 : 1;\r\n\r\n        // Failure proximity disruption (lower RIR = higher stress)\r\n        const failureDisruption = failureProximity <= 1 ? 3 : failureProximity <= 3 ? 2 : 1;\r\n\r\n        const totalDisruption = volumeDisruption + intensityDisruption + frequencyDisruption + failureDisruption;\r\n\r\n        let level, description, recoveryTime;\r\n\r\n        if (totalDisruption <= 8) {\r\n            level = 'minimal';\r\n            description = 'Low homeostatic disruption - sustainable long-term';\r\n            recoveryTime = '12-24 hours';\r\n        } else if (totalDisruption <= 15) {\r\n            level = 'moderate';\r\n            description = 'Moderate disruption - drives adaptations effectively';\r\n            recoveryTime = '24-48 hours';\r\n        } else if (totalDisruption <= 22) {\r\n            level = 'high';\r\n            description = 'High disruption - requires careful monitoring';\r\n            recoveryTime = '48-72 hours';\r\n        } else {\r\n            level = 'excessive';\r\n            description = 'Excessive disruption - risk of overreaching/overtraining';\r\n            recoveryTime = '72+ hours';\r\n        }\r\n\r\n        return {\r\n            level,\r\n            score: totalDisruption,\r\n            description,\r\n            recoveryTime,\r\n            breakdown: {\r\n                volume: volumeDisruption,\r\n                intensity: intensityDisruption,\r\n                frequency: frequencyDisruption,\r\n                failure: failureDisruption\r\n            }\r\n        };\r\n    };\r\n\r\n    // Generate overload progression plan\r\n    const generateOverloadProgression = (currentLoad, mrvByPhase, gainerType) => {\r\n        const progression = [];\r\n\r\n        // Step 1: Assess baseline\r\n        progression.push({\r\n            step: 1,\r\n            title: 'Baseline Assessment',\r\n            action: 'Establish current 1RM and rep maxes',\r\n            duration: '1-2 weeks',\r\n            metrics: ['1RM testing', 'Rep max at 70%, 80%, 90%', 'Recovery time between sessions'],\r\n            example: 'Bench Press: Test 1RM, then 8RM at 70%, 5RM at 80%, 3RM at 90%'\r\n        });\r\n\r\n        // Step 2: Progressive overload\r\n        const currentPhase = Object.keys(mrvByPhase)[0]; // Default to first phase\r\n        const phaseData = mrvByPhase[currentPhase];\r\n\r\n        progression.push({\r\n            step: 2,\r\n            title: 'Variable Manipulation',\r\n            action: 'Systematically increase training variables',\r\n            duration: '4-8 weeks',\r\n            options: [\r\n                {\r\n                    variable: 'Volume',\r\n                    method: 'Add 1 set per week until MRV reached',\r\n                    example: `Week 1: ${phaseData.sets - 2} sets → Week 4: ${phaseData.sets} sets`\r\n                },\r\n                {\r\n                    variable: 'Intensity',\r\n                    method: 'Increase load by 2.5-5% when rep target achieved',\r\n                    example: 'Bench 300lbs 3x8 @70% → 3x8 @75% when 8 reps achieved'\r\n                },\r\n                {\r\n                    variable: 'Frequency',\r\n                    method: 'Add training session when recovery allows',\r\n                    example: '3x/week → 4x/week if performance maintained'\r\n                },\r\n                {\r\n                    variable: 'Exercise Selection',\r\n                    method: 'Prioritize specific movements, minimize non-specific',\r\n                    example: 'Competition lifts 80%, assistance 20%'\r\n                },\r\n                {\r\n                    variable: 'Failure Proximity',\r\n                    method: 'Gradually reduce RIR during intensification',\r\n                    example: '4 RIR → 3 RIR → 2 RIR over mesocycle'\r\n                }\r\n            ]\r\n        });\r\n\r\n        // Step 3: Monitor and adjust\r\n        progression.push({\r\n            step: 3,\r\n            title: 'Recovery Monitoring',\r\n            action: 'Track adaptation vs fatigue accumulation',\r\n            duration: 'Ongoing',\r\n            indicators: [\r\n                'Performance maintenance/improvement',\r\n                'Sleep quality and duration',\r\n                'Subjective recovery scores',\r\n                'Heart rate variability (if available)',\r\n                'Fatigue proxy symptoms'\r\n            ],\r\n            adjustments: [\r\n                'Reduce volume if performance declines',\r\n                'Add deload week if multiple proxies indicate overreaching',\r\n                'Increase calories/carbs if fuel stores depleted'\r\n            ]\r\n        });\r\n\r\n        return progression;\r\n    };\r\n\r\n    // Assess overload optimization opportunities\r\n    const assessOverloadOptimization = (overloadData, exerciseSelection) => {\r\n        const optimizations = [];\r\n\r\n        // Check exercise specificity ratio\r\n        const specificRatio = exerciseSelection.specific / (exerciseSelection.specific + exerciseSelection.nonSpecific);\r\n\r\n        if (specificRatio < 0.8) {\r\n            optimizations.push({\r\n                category: 'Exercise Selection',\r\n                priority: 'High',\r\n                issue: 'Too much non-specific training reducing recovery for main lifts',\r\n                solution: 'Increase specific movement ratio to 80%+',\r\n                impact: 'Improved recovery capacity for competition lifts',\r\n                example: 'Replace 2 accessory exercises with competition lift variations'\r\n            });\r\n        }\r\n\r\n        // Check volume distribution\r\n        if (overloadData.volume.sets > 20) {\r\n            optimizations.push({\r\n                category: 'Volume Management',\r\n                priority: 'Medium',\r\n                issue: 'High volume may be exceeding MRV',\r\n                solution: 'Redistribute volume across more sessions or reduce total',\r\n                impact: 'Better recovery and adaptation quality',\r\n                example: 'Split 24 sets across 4 sessions instead of 3'\r\n            });\r\n        }\r\n\r\n        // Check intensity clustering\r\n        if (overloadData.intensity > 85 && overloadData.frequency > 4) {\r\n            optimizations.push({\r\n                category: 'Intensity-Frequency Balance',\r\n                priority: 'High',\r\n                issue: 'High intensity + high frequency = excessive neural stress',\r\n                solution: 'Reduce frequency or implement intensity cycling',\r\n                impact: 'Reduced neural fatigue, maintained strength gains',\r\n                example: 'Alternate heavy (90%) and moderate (75%) sessions'\r\n            });\r\n        }\r\n\r\n        return optimizations;\r\n    };\r\n\r\n    // Calculate current training load\r\n    const calculateCurrentLoad = (volume, intensity, frequency) => {\r\n        const weeklyLoad = volume.sets * volume.reps * (intensity / 100) * frequency;\r\n\r\n        return {\r\n            weeklyLoad: Math.round(weeklyLoad),\r\n            sessionsPerWeek: frequency,\r\n            setsPerSession: Math.round(volume.sets / frequency),\r\n            relativeIntensity: intensity >= 90 ? 'Very High' :\r\n                intensity >= 80 ? 'High' :\r\n                    intensity >= 70 ? 'Moderate' : 'Low'\r\n        };\r\n    };\r\n\r\n    // FATIGUE MANAGEMENT ASSESSMENT\r\n\r\n    // Assess fatigue across four contributor categories\r\n    const assessFatigue = (fatigueData, trainingLoad, lifestyle) => {\r\n        // Assess each fatigue contributor\r\n        const fuelFatigue = assessFuelFatigue(fatigueData.fuel, trainingLoad);\r\n        const nervousFatigue = assessNervousFatigue(fatigueData.nervous, trainingLoad);\r\n        const messengerFatigue = assessMessengerFatigue(fatigueData.messengers, trainingLoad);\r\n        const tissueFatigue = assessTissueFatigue(fatigueData.tissues, trainingLoad);\r\n\r\n        // Determine overall fatigue state\r\n        const overallState = determineFatigueState(fuelFatigue, nervousFatigue, messengerFatigue, tissueFatigue);\r\n\r\n        // Generate management strategies\r\n        const managementStrategies = generateFatigueManagement(overallState, lifestyle);\r\n\r\n        // Calculate recovery timeline\r\n        const recoveryTimeline = calculateRecoveryTimeline(fuelFatigue, nervousFatigue, messengerFatigue, tissueFatigue);\r\n\r\n        return {\r\n            contributors: {\r\n                fuel: fuelFatigue,\r\n                nervous: nervousFatigue,\r\n                messengers: messengerFatigue,\r\n                tissues: tissueFatigue\r\n            },\r\n            overallState,\r\n            managementStrategies,\r\n            recoveryTimeline,\r\n            recommendations: generateFatigueRecommendations(overallState, managementStrategies)\r\n        };\r\n    };\r\n\r\n    // Assess fuel store fatigue (ATP/CP, Glucose/Glycogen, Fat)\r\n    const assessFuelFatigue = (fuelData, trainingLoad) => {\r\n        const { glycogenStores, muscleFullness, energyLevels, postWorkoutFatigue } = fuelData;\r\n\r\n        // Glycogen depletion score (key for reps < 10)\r\n        const glycogenScore = glycogenStores <= 3 ? 8 : glycogenStores <= 5 ? 5 : glycogenStores <= 7 ? 3 : 1;\r\n\r\n        // Training volume impact on fuel depletion\r\n        const volumeImpact = trainingLoad.weeklyLoad > 1000 ? 3 : trainingLoad.weeklyLoad > 500 ? 2 : 1;\r\n\r\n        const totalScore = glycogenScore + volumeImpact + (10 - muscleFullness) + (10 - energyLevels);\r\n\r\n        let level, description, recoveryTime;\r\n\r\n        if (totalScore <= 8) {\r\n            level = 'minimal';\r\n            description = 'Fuel stores adequate, energy levels stable';\r\n            recoveryTime = 'hours';\r\n        } else if (totalScore <= 15) {\r\n            level = 'moderate';\r\n            description = 'Some fuel depletion, manageable with nutrition';\r\n            recoveryTime = '1-2 days';\r\n        } else if (totalScore <= 22) {\r\n            level = 'high';\r\n            description = 'Significant fuel depletion affecting performance';\r\n            recoveryTime = '2-3 days';\r\n        } else {\r\n            level = 'severe';\r\n            description = 'Critical fuel depletion, training quality compromised';\r\n            recoveryTime = '3-7 days';\r\n        }\r\n\r\n        return {\r\n            level,\r\n            score: totalScore,\r\n            description,\r\n            recoveryTime,\r\n            proxies: {\r\n                glycogenDepletion: glycogenStores <= 5,\r\n                reducedMuscleFullness: muscleFullness <= 6,\r\n                lowEnergy: energyLevels <= 5,\r\n                prolongedFatigue: postWorkoutFatigue > 4\r\n            }\r\n        };\r\n    };\r\n\r\n    // Assess nervous system fatigue\r\n    const assessNervousFatigue = (nervousData, trainingLoad) => {\r\n        const { forceOutput, techniqueQuality, motivation, learningRate, sleepQuality } = nervousData;\r\n\r\n        // Volume is primary driver, intensity incremental\r\n        const volumeScore = trainingLoad.weeklyLoad > 1200 ? 6 : trainingLoad.weeklyLoad > 800 ? 4 : 2;\r\n        const intensityScore = trainingLoad.relativeIntensity === 'Very High' ? 4 :\r\n            trainingLoad.relativeIntensity === 'High' ? 2 : 1;\r\n\r\n        // Performance indicators\r\n        const performanceScore = (10 - forceOutput) + (10 - techniqueQuality) + (10 - motivation);\r\n\r\n        const totalScore = volumeScore + intensityScore + performanceScore + (10 - sleepQuality);\r\n\r\n        let level, description, recoveryTime;\r\n\r\n        if (totalScore <= 10) {\r\n            level = 'minimal';\r\n            description = 'Neural efficiency maintained, technique stable';\r\n            recoveryTime = 'days';\r\n        } else if (totalScore <= 18) {\r\n            level = 'moderate';\r\n            description = 'Some neural fatigue, minor technique degradation';\r\n            recoveryTime = '3-7 days';\r\n        } else if (totalScore <= 26) {\r\n            level = 'high';\r\n            description = 'Significant neural fatigue, noticeable force reduction';\r\n            recoveryTime = '1-2 weeks';\r\n        } else {\r\n            level = 'severe';\r\n            description = 'Severe neural fatigue, major technique breakdowns';\r\n            recoveryTime = '2-4 weeks';\r\n        }\r\n\r\n        return {\r\n            level,\r\n            score: totalScore,\r\n            description,\r\n            recoveryTime,\r\n            proxies: {\r\n                reducedForce: forceOutput <= 6,\r\n                techniqueBreakdown: techniqueQuality <= 6,\r\n                lowMotivation: motivation <= 5,\r\n                poorLearning: learningRate <= 5,\r\n                sleepIssues: sleepQuality <= 6\r\n            }\r\n        };\r\n    };\r\n\r\n    // Assess chemical messenger fatigue\r\n    const assessMessengerFatigue = (messengerData, trainingLoad) => {\r\n        const { moodSwings, inflammation, hormoneSymptoms, recoveryRate, soreness } = messengerData;\r\n\r\n        // High volume activates AMPK (catabolic) over mTOR (anabolic)\r\n        const volumeScore = trainingLoad.weeklyLoad > 1000 ? 8 : trainingLoad.weeklyLoad > 600 ? 5 : 2;\r\n\r\n        // Inflammation and hormonal disruption\r\n        const inflammationScore = inflammation >= 7 ? 6 : inflammation >= 5 ? 3 : 1;\r\n        const hormoneScore = hormoneSymptoms >= 6 ? 4 : hormoneSymptoms >= 4 ? 2 : 1;\r\n\r\n        const totalScore = volumeScore + inflammationScore + hormoneScore + moodSwings + (10 - recoveryRate);\r\n\r\n        let level, description, recoveryTime;\r\n\r\n        if (totalScore <= 12) {\r\n            level = 'minimal';\r\n            description = 'Hormonal balance maintained, normal inflammation';\r\n            recoveryTime = 'weeks';\r\n        } else if (totalScore <= 20) {\r\n            level = 'moderate';\r\n            description = 'Some hormonal disruption, elevated inflammation';\r\n            recoveryTime = '2-3 weeks';\r\n        } else if (totalScore <= 28) {\r\n            level = 'high';\r\n            description = 'Significant hormonal imbalance, chronic inflammation';\r\n            recoveryTime = '4-6 weeks';\r\n        } else {\r\n            level = 'severe';\r\n            description = 'Severe hormonal disruption, systemic inflammation';\r\n            recoveryTime = '6-12 weeks';\r\n        }\r\n\r\n        return {\r\n            level,\r\n            score: totalScore,\r\n            description,\r\n            recoveryTime,\r\n            proxies: {\r\n                elevatedInflammation: inflammation >= 6,\r\n                hormoneDisruption: hormoneSymptoms >= 5,\r\n                moodInstability: moodSwings >= 6,\r\n                slowRecovery: recoveryRate <= 5,\r\n                chronicSoreness: soreness >= 7\r\n            }\r\n        };\r\n    };\r\n\r\n    // Assess tissue structure fatigue\r\n    const assessTissueFatigue = (tissueData, trainingLoad) => {\r\n        const { jointPain, muscleTightness, tendonIssues, overuseSymptoms, injuryHistory } = tissueData;\r\n\r\n        // Accumulated microdamage from training\r\n        const microtraumaScore = (jointPain + muscleTightness + tendonIssues + overuseSymptoms) / 4;\r\n\r\n        // Training load impact on tissue stress\r\n        const loadScore = trainingLoad.weeklyLoad > 800 ? 4 : trainingLoad.weeklyLoad > 400 ? 2 : 1;\r\n\r\n        // Injury history increases susceptibility\r\n        const historyScore = injuryHistory >= 3 ? 3 : injuryHistory >= 1 ? 2 : 1;\r\n\r\n        const totalScore = microtraumaScore + loadScore + historyScore;\r\n\r\n        let level, description, recoveryTime;\r\n\r\n        if (totalScore <= 8) {\r\n            level = 'minimal';\r\n            description = 'Tissues adapting well, minimal structural stress';\r\n            recoveryTime = 'weeks';\r\n        } else if (totalScore <= 12) {\r\n            level = 'moderate';\r\n            description = 'Some tissue stress, manageable with recovery protocols';\r\n            recoveryTime = '4-8 weeks';\r\n        } else if (totalScore <= 16) {\r\n            level = 'high';\r\n            description = 'Significant tissue stress, injury risk elevated';\r\n            recoveryTime = '2-4 months';\r\n        } else {\r\n            level = 'severe';\r\n            description = 'Critical tissue stress, chronic injury likely';\r\n            recoveryTime = '4-12 months';\r\n        }\r\n\r\n        return {\r\n            level,\r\n            score: totalScore,\r\n            description,\r\n            recoveryTime,\r\n            proxies: {\r\n                jointDiscomfort: jointPain >= 6,\r\n                excessiveTightness: muscleTightness >= 7,\r\n                tendonProblems: tendonIssues >= 5,\r\n                overusePattern: overuseSymptoms >= 6,\r\n                injuryProne: injuryHistory >= 2\r\n            }\r\n        };\r\n    };\r\n\r\n    // Determine overall fatigue state\r\n    const determineFatigueState = (fuel, nervous, messengers, tissues) => {\r\n        const scores = [fuel.score, nervous.score, messengers.score, tissues.score];\r\n        const maxScore = Math.max(...scores);\r\n        const avgScore = scores.reduce((a, b) => a + b, 0) / 4;\r\n\r\n        // Check for overtraining indicators\r\n        const severeCount = [fuel, nervous, messengers, tissues].filter(f => f.level === 'severe').length;\r\n        const highCount = [fuel, nervous, messengers, tissues].filter(f => f.level === 'high').length;\r\n\r\n        let state, description, action;\r\n\r\n        if (severeCount >= 2 || maxScore > 30) {\r\n            state = 'overtraining';\r\n            description = 'Net-negative state requiring extended recovery';\r\n            action = 'Active rest phase (1/4 normal volume) for 4-8 weeks';\r\n        } else if (severeCount >= 1 || highCount >= 2 || maxScore > 25) {\r\n            state = 'non_functional_overreaching';\r\n            description = 'Accidental overreach affecting performance';\r\n            action = 'Immediate deload (50% volume) for 1-2 weeks';\r\n        } else if (highCount >= 1 || avgScore > 18) {\r\n            state = 'functional_overreaching';\r\n            description = 'Intentional overreach before planned deload';\r\n            action = 'Continue 1-3 weeks then deload';\r\n        } else {\r\n            state = 'normal';\r\n            description = 'At or below MRV, positive adaptations occurring';\r\n            action = 'Continue current training load';\r\n        }\r\n\r\n        return {\r\n            state,\r\n            description,\r\n            action,\r\n            riskLevel: severeCount >= 1 ? 'high' : highCount >= 2 ? 'moderate' : 'low'\r\n        };\r\n    };\r\n\r\n    // Generate fatigue management strategies\r\n    const generateFatigueManagement = (overallState, lifestyle) => {\r\n        const strategies = [];\r\n\r\n        // Light sessions strategy\r\n        if (overallState.state === 'functional_overreaching' || overallState.state === 'non_functional_overreaching') {\r\n            strategies.push({\r\n                type: 'light_sessions',\r\n                description: 'Low volume, high intensity sessions to maintain adaptations',\r\n                protocol: {\r\n                    volume: '50-60% of normal',\r\n                    intensity: '80-90% of normal',\r\n                    frequency: 'Every other planned session'\r\n                },\r\n                benefits: ['Maintains strength', 'Reduces fatigue accumulation', 'Preserves neural patterns'],\r\n                duration: '1-2 weeks'\r\n            });\r\n        }\r\n\r\n        // Deload strategy\r\n        if (overallState.state !== 'normal') {\r\n            const deloadIntensity = overallState.state === 'overtraining' ? 25 : 50;\r\n            strategies.push({\r\n                type: 'deload',\r\n                description: `Reduce training volume to ${deloadIntensity}% of normal`,\r\n                protocol: {\r\n                    volume: `${deloadIntensity}% of normal volume`,\r\n                    intensity: 'Maintain or slightly reduce',\r\n                    focus: 'Movement quality and recovery'\r\n                },\r\n                duration: overallState.state === 'overtraining' ? '4-8 weeks' : '1-2 weeks'\r\n            });\r\n        }\r\n\r\n        // Active rest strategy\r\n        if (overallState.state === 'overtraining') {\r\n            strategies.push({\r\n                type: 'active_rest',\r\n                description: 'Complete break from intense training',\r\n                protocol: {\r\n                    volume: '25% of normal volume',\r\n                    intensity: '40-60% intensity',\r\n                    activities: ['Light movement', 'Mobility work', 'Recreation']\r\n                },\r\n                duration: '4-12 weeks depending on severity'\r\n            });\r\n        }\r\n\r\n        // Recovery enhancement based on lifestyle factors\r\n        if (lifestyle.sleep < 7) {\r\n            strategies.push({\r\n                type: 'sleep_optimization',\r\n                description: 'Prioritize sleep quantity and quality',\r\n                targets: ['7-9 hours nightly', 'Consistent bedtime', 'Dark, cool environment'],\r\n                impact: 'Improves all fatigue categories'\r\n            });\r\n        }\r\n\r\n        if (lifestyle.stress >= 7) {\r\n            strategies.push({\r\n                type: 'stress_management',\r\n                description: 'Reduce external stressors that impair recovery',\r\n                methods: ['Meditation', 'Time management', 'Social support', 'Professional help'],\r\n                impact: 'Increases MRV and recovery capacity'\r\n            });\r\n        }\r\n\r\n        return strategies;\r\n    };\r\n\r\n    // Calculate recovery timeline for each fatigue type\r\n    const calculateRecoveryTimeline = (fuel, nervous, messengers, tissues) => {\r\n        return {\r\n            fuel: {\r\n                timeframe: fuel.recoveryTime,\r\n                priority: 'Immediate',\r\n                methods: ['Increase carbohydrates', 'Post-workout nutrition', 'Hydration']\r\n            },\r\n            nervous: {\r\n                timeframe: nervous.recoveryTime,\r\n                priority: 'Short-term',\r\n                methods: ['Reduce volume/intensity', 'Improve sleep', 'Stress management']\r\n            },\r\n            messengers: {\r\n                timeframe: messengers.recoveryTime,\r\n                priority: 'Medium-term',\r\n                methods: ['Low-volume phases', 'Anti-inflammatory foods', 'Hormone support']\r\n            },\r\n            tissues: {\r\n                timeframe: tissues.recoveryTime,\r\n                priority: 'Long-term',\r\n                methods: ['Active rest', 'Physical therapy', 'Load management']\r\n            }\r\n        };\r\n    };\r\n\r\n    // Generate overload recommendations\r\n    const generateOverloadRecommendations = (disruptionLevel, mrvByPhase, currentPhase) => {\r\n        const recommendations = [];\r\n\r\n        if (disruptionLevel.level === 'excessive') {\r\n            recommendations.push({\r\n                category: 'Immediate Action',\r\n                priority: 'Critical',\r\n                items: [\r\n                    'Reduce training volume by 30-50%',\r\n                    'Increase rest days to 2-3 per week',\r\n                    'Focus on sleep and nutrition optimization',\r\n                    'Consider medical evaluation if symptoms persist'\r\n                ]\r\n            });\r\n        } else if (disruptionLevel.level === 'high') {\r\n            recommendations.push({\r\n                category: 'Load Management',\r\n                priority: 'High',\r\n                items: [\r\n                    'Monitor daily readiness scores',\r\n                    'Implement planned deload week',\r\n                    'Reduce proximity to failure by 1-2 RIR',\r\n                    'Add light session between hard sessions'\r\n                ]\r\n            });\r\n        }\r\n\r\n        // Phase-specific recommendations\r\n        const phaseData = mrvByPhase[currentPhase];\r\n        if (phaseData) {\r\n            recommendations.push({\r\n                category: `${currentPhase.charAt(0).toUpperCase() + currentPhase.slice(1)} Phase Guidelines`,\r\n                priority: 'Medium',\r\n                items: [\r\n                    `Target ${phaseData.sets} sets per week`,\r\n                    `Use ${phaseData.repsRange} rep range`,\r\n                    `Train at ${phaseData.intensityRange} intensity`,\r\n                    `Maintain ${phaseData.proximityToFailure} from failure`\r\n                ]\r\n            });\r\n        }\r\n\r\n        return recommendations;\r\n    };\r\n\r\n    // Generate fatigue recommendations\r\n    const generateFatigueRecommendations = (overallState, strategies) => {\r\n        const recommendations = [];\r\n\r\n        // State-specific recommendations\r\n        if (overallState.state === 'overtraining') {\r\n            recommendations.push({\r\n                category: 'Critical Recovery',\r\n                priority: 'Critical',\r\n                items: [\r\n                    'Implement immediate active rest phase',\r\n                    'Seek medical evaluation for hormonal assessment',\r\n                    'Address sleep, nutrition, and stress comprehensively',\r\n                    'Consider 4-12 week recovery timeline'\r\n                ]\r\n            });\r\n        } else if (overallState.state === 'non_functional_overreaching') {\r\n            recommendations.push({\r\n                category: 'Recovery Protocol',\r\n                priority: 'High',\r\n                items: [\r\n                    'Immediate 50% volume reduction',\r\n                    'Add extra rest day this week',\r\n                    'Focus on stress management and sleep',\r\n                    'Monitor for improvement in 7-14 days'\r\n                ]\r\n            });\r\n        }\r\n\r\n        // Strategy-based recommendations\r\n        strategies.forEach(strategy => {\r\n            if (strategy.type === 'light_sessions') {\r\n                recommendations.push({\r\n                    category: 'Light Session Protocol',\r\n                    priority: 'Medium',\r\n                    items: [\r\n                        `Reduce volume to ${strategy.protocol.volume}`,\r\n                        `Maintain ${strategy.protocol.intensity} intensity`,\r\n                        'Focus on movement quality over quantity',\r\n                        'Use these sessions for skill practice'\r\n                    ]\r\n                });\r\n            }\r\n        });\r\n\r\n        return recommendations;\r\n    };\r\n\r\n    // Save overload assessment\r\n    const saveOverloadAssessment = async (overloadData) => {\r\n        setLoading(true);\r\n        try {\r\n            if (dispatch) {\r\n                dispatch({\r\n                    type: APP_ACTIONS.UPDATE_ASSESSMENT,\r\n                    payload: {\r\n                        ...state?.assessment,\r\n                        overload: overloadData\r\n                    }\r\n                });\r\n            }\r\n\r\n            localStorage.setItem('overload_assessment', JSON.stringify(overloadData));\r\n            return { success: true, data: overloadData };\r\n        } catch (error) {\r\n            console.error('Error saving overload assessment:', error);\r\n            return { success: false, error: error.message };\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Save fatigue assessment\r\n    const saveFatigueAssessment = async (fatigueData) => {\r\n        setLoading(true);\r\n        try {\r\n            if (dispatch) {\r\n                dispatch({\r\n                    type: APP_ACTIONS.UPDATE_ASSESSMENT,\r\n                    payload: {\r\n                        ...state?.assessment,\r\n                        fatigue: fatigueData\r\n                    }\r\n                });\r\n            }\r\n\r\n            localStorage.setItem('fatigue_assessment', JSON.stringify(fatigueData));\r\n            return { success: true, data: fatigueData };\r\n        } catch (error) {\r\n            console.error('Error saving fatigue assessment:', error);\r\n            return { success: false, error: error.message };\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // BRYANT PERIODIZATION PHA HEALTH SCREENING\r\n\r\n    // Assess PHA (Peripheral Heart Action) eligibility based on Bryant research\r\n    const assessPHAHealth = (phaHealthData) => {\r\n        const { highBP, cardiacHistory, fitness } = phaHealthData;\r\n\r\n        // Determine contraindication status based on Bryant guidelines\r\n        const contraindications = [];\r\n        let eligibilityScore = 10; // Start with full eligibility\r\n\r\n        // High blood pressure contraindication\r\n        if (highBP) {\r\n            contraindications.push({\r\n                factor: 'High Blood Pressure',\r\n                severity: 'critical',\r\n                description: 'PHA circuits create significant cardiovascular stress',\r\n                impact: 'Complete contraindication for no-rest circuits'\r\n            });\r\n            eligibilityScore -= 10; // Complete disqualification\r\n        }\r\n\r\n        // Cardiac history contraindication\r\n        if (cardiacHistory) {\r\n            contraindications.push({\r\n                factor: 'Cardiac History',\r\n                severity: 'critical',\r\n                description: 'Previous heart conditions increase risk during high-intensity circuits',\r\n                impact: 'Medical clearance required before PHA participation'\r\n            });\r\n            eligibilityScore -= 8; // Near complete disqualification\r\n        }\r\n\r\n        // Poor fitness level contraindication\r\n        if (fitness === 'poor') {\r\n            contraindications.push({\r\n                factor: 'Poor Cardiovascular Fitness',\r\n                severity: 'moderate',\r\n                description: 'Insufficient fitness base for high-intensity no-rest training',\r\n                impact: 'Build fitness base before attempting PHA circuits'\r\n            });\r\n            eligibilityScore -= 6; // Significant concern\r\n        }\r\n\r\n        // Determine final eligibility status\r\n        let eligibilityStatus, recommendations;\r\n\r\n        if (eligibilityScore <= 0) {\r\n            eligibilityStatus = 'contraindicated';\r\n            recommendations = [\r\n                'PHA circuits are not recommended based on current health status',\r\n                'Focus on traditional strength training with adequate rest periods',\r\n                'Consult healthcare provider before high-intensity training',\r\n                'Consider alternative conditioning methods (steady-state cardio, tempo work)'\r\n            ];\r\n        } else if (eligibilityScore <= 4) {\r\n            eligibilityStatus = 'conditional';\r\n            recommendations = [\r\n                'PHA circuits may be possible with modifications and medical clearance',\r\n                'Start with longer rest periods (30-60 seconds) between exercises',\r\n                'Monitor heart rate and blood pressure responses',\r\n                'Progress gradually over 8-12 weeks before attempting no-rest circuits'\r\n            ];\r\n        } else if (eligibilityScore <= 7) {\r\n            eligibilityStatus = 'limited';\r\n            recommendations = [\r\n                'PHA circuits appropriate with careful progression',\r\n                'Begin with modified circuits (15-30 second rest periods)',\r\n                'Focus on movement quality over intensity initially',\r\n                'Build up to no-rest circuits over 4-6 weeks'\r\n            ];\r\n        } else {\r\n            eligibilityStatus = 'eligible';\r\n            recommendations = [\r\n                'Cleared for full PHA circuit training',\r\n                'Can safely perform no-rest circuits as per Bryant protocols',\r\n                'Follow 4-6 week PHA blocks with mandatory deload',\r\n                'Monitor for signs of overreaching (elevated HR, poor recovery)'\r\n            ];\r\n        }\r\n\r\n        // Generate PHA-specific program modifications\r\n        const programModifications = generatePHAModifications(eligibilityStatus, contraindications);\r\n\r\n        return {\r\n            eligibilityStatus,\r\n            eligibilityScore,\r\n            contraindications,\r\n            recommendations,\r\n            programModifications,\r\n            bryantGuidelines: {\r\n                maxCycleDuration: '4-6 weeks',\r\n                restBetweenExercises: eligibilityStatus === 'eligible' ? '0 seconds' : '15-30 seconds',\r\n                transitionTime: '30 seconds maximum',\r\n                mandatoryDeload: 'Required after each PHA block',\r\n                progressionRate: '5-10% weekly increases in volume/intensity'\r\n            }\r\n        };\r\n    };\r\n\r\n    // Generate PHA program modifications based on eligibility\r\n    const generatePHAModifications = (eligibilityStatus, contraindications) => {\r\n        const modifications = [];\r\n\r\n        switch (eligibilityStatus) {\r\n            case 'contraindicated':\r\n                modifications.push({\r\n                    type: 'exercise_selection',\r\n                    change: 'Exclude all PHA circuits from program templates',\r\n                    alternative: 'Use traditional strength training with 2-5 minute rest periods'\r\n                });\r\n                modifications.push({\r\n                    type: 'conditioning',\r\n                    change: 'Avoid high-intensity circuit training',\r\n                    alternative: 'Low-intensity steady-state cardio, walking, swimming'\r\n                });\r\n                break;\r\n\r\n            case 'conditional':\r\n                modifications.push({\r\n                    type: 'rest_periods',\r\n                    change: 'Extend rest periods to 30-60 seconds between exercises',\r\n                    alternative: 'Traditional supersets with adequate recovery'\r\n                });\r\n                modifications.push({\r\n                    type: 'intensity_limits',\r\n                    change: 'Limit circuit intensity to 60-75% of maximum effort',\r\n                    alternative: 'Focus on movement quality and technique'\r\n                });\r\n                break;\r\n\r\n            case 'limited':\r\n                modifications.push({\r\n                    type: 'progression_timeline',\r\n                    change: 'Extended 6-8 week progression to no-rest circuits',\r\n                    alternative: 'Start with 15-30 second rest, gradually reduce'\r\n                });\r\n                modifications.push({\r\n                    type: 'monitoring',\r\n                    change: 'Enhanced heart rate and recovery monitoring',\r\n                    alternative: 'Use RPE and HR zones to guide intensity'\r\n                });\r\n                break;\r\n\r\n            case 'eligible':\r\n                modifications.push({\r\n                    type: 'full_protocols',\r\n                    change: 'Can implement complete Bryant PHA protocols',\r\n                    alternative: 'No modifications needed - follow research guidelines'\r\n                });\r\n                break;\r\n        }\r\n\r\n        return modifications;\r\n    };\r\n\r\n    // Integration with existing fatigue functions for PHA-specific checks\r\n    const integratePHAWithFatigue = (fatigueData, phaHealthScreen) => {\r\n        // If PHA contraindicated, modify fatigue recommendations\r\n        if (phaHealthScreen?.eligibilityStatus === 'contraindicated') {\r\n            return {\r\n                ...fatigueData,\r\n                phaEligible: false,\r\n                modifiedRecommendations: [\r\n                    ...fatigueData.recommendations,\r\n                    'Avoid high-intensity circuit training due to health contraindications',\r\n                    'Focus on low-impact conditioning methods',\r\n                    'Consider medical evaluation before increasing training intensity'\r\n                ]\r\n            };\r\n        }\r\n\r\n        // For eligible users, add PHA-specific fatigue monitoring\r\n        if (phaHealthScreen?.eligibilityStatus === 'eligible') {\r\n            return {\r\n                ...fatigueData,\r\n                phaEligible: true,\r\n                phaSpecificMonitoring: [\r\n                    'Monitor heart rate recovery between circuits',\r\n                    'Track morning heart rate for overreaching signs',\r\n                    'Assess sleep quality after PHA sessions',\r\n                    'Watch for elevated fatigue lasting >48 hours'\r\n                ]\r\n            };\r\n        }\r\n\r\n        return fatigueData;\r\n    };\r\n\r\n    // Save PHA health screening assessment\r\n    const savePHAHealthAssessment = async (phaHealthData) => {\r\n        setLoading(true);\r\n        try {\r\n            // Update context with PHA health screening data\r\n            if (dispatch) {\r\n                dispatch({\r\n                    type: APP_ACTIONS.UPDATE_ASSESSMENT,\r\n                    payload: {\r\n                        ...state?.assessment,\r\n                        phaHealthScreen: phaHealthData\r\n                    }\r\n                });\r\n            }\r\n\r\n            // Store in localStorage as backup\r\n            localStorage.setItem('pha_health_screen', JSON.stringify(phaHealthData));\r\n\r\n            return { success: true, data: phaHealthData };\r\n        } catch (error) {\r\n            console.error('Error saving PHA health assessment:', error);\r\n            return { success: false, error: error.message };\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // VOLUME LANDMARKS INTEGRATION (\"How Much Should I Train?\" Pages 1-50)\r\n\r\n    // Calculate Minimum Effective Volume (MEV) per muscle group\r\n    const calculateMEV = (muscleGroup, factors) => {\r\n        const { fiberType, trainingAge, recoveryScore, trainingHistory } = factors;\r\n\r\n        // Base MEV values per muscle group per week (from research)\r\n        const baseMEV = {\r\n            chest: 8,      // \"Most trainees need 8-10 sets per week minimum\" (p.12)\r\n            back: 10,      // \"Back can handle slightly more due to fiber composition\" (p.14)\r\n            shoulders: 8,  // \"Delts respond to moderate volume\" (p.16)\r\n            biceps: 6,     // \"Arms need less direct work\" (p.18)\r\n            triceps: 6,    // \"Triceps get stimulus from pressing\" (p.18)\r\n            quads: 10,     // \"Legs require higher volume for growth\" (p.20)\r\n            hamstrings: 8, // \"Hamstrings need focused attention\" (p.22)\r\n            glutes: 8,     // \"Glutes respond well to moderate volume\" (p.24)\r\n            calves: 8      // \"Calves are stubborn, need consistent work\" (p.26)\r\n        };\r\n\r\n        let mev = baseMEV[muscleGroup] || 8;\r\n\r\n        // Adjust for fiber type - \"Fast-twitch muscles need less volume\" (p.8)\r\n        if (fiberType === 'fast') {\r\n            mev *= 0.8; // Reduce by 20%\r\n        } else if (fiberType === 'slow') {\r\n            mev *= 1.2; // Increase by 20%\r\n        }\r\n\r\n        // Adjust for training age - \"Beginners need less to grow\" (p.10)\r\n        const ageMultipliers = {\r\n            beginner: 0.7,    // 1-2 years\r\n            intermediate: 1.0, // 2-5 years  \r\n            advanced: 1.3     // 5+ years\r\n        };\r\n        mev *= ageMultipliers[trainingAge] || 1.0;\r\n\r\n        // Adjust for recovery capacity - \"Poor recovery = lower volume tolerance\" (p.11)\r\n        if (recoveryScore <= 3) {\r\n            mev *= 0.8;\r\n        } else if (recoveryScore >= 8) {\r\n            mev *= 1.1;\r\n        }\r\n\r\n        return Math.round(mev);\r\n    };\r\n\r\n    // Calculate Maximum Recoverable Volume (MRV) per muscle group  \r\n    const calculateMRV = (muscleGroup, factors) => {\r\n        const { fiberType, trainingAge, recoveryScore, stressLevel, sleepQuality, nutritionQuality } = factors;\r\n\r\n        // Base MRV values - \"The highest volume you can recover from\" (p.7)\r\n        const baseMRV = {\r\n            chest: 22,     // \"Most can handle 18-26 sets before overreaching\" (p.32)\r\n            back: 26,      // \"Back tolerates high volume well\" (p.34)  \r\n            shoulders: 20, // \"Delts are prone to overuse\" (p.36)\r\n            biceps: 20,    // \"Arms can take more direct work than expected\" (p.38)\r\n            triceps: 18,   // \"Triceps fatigue from heavy pressing\" (p.38)\r\n            quads: 26,     // \"Legs have massive capacity\" (p.40)\r\n            hamstrings: 20, // \"Hamstrings recover slower\" (p.42)\r\n            glutes: 22,    // \"Glutes can handle good volume\" (p.44)\r\n            calves: 26     // \"Calves recover quickly\" (p.46)\r\n        };\r\n\r\n        let mrv = baseMRV[muscleGroup] || 22;\r\n\r\n        // Fiber type adjustments - \"Fast-twitch = lower MRV\" (p.9)\r\n        if (fiberType === 'fast') {\r\n            mrv *= 0.7; // Reduce significantly\r\n        } else if (fiberType === 'slow') {\r\n            mrv *= 1.3; // Increase significantly\r\n        }\r\n\r\n        // Training age - \"Advanced trainees can handle more\" (p.13)\r\n        const ageMultipliers = {\r\n            beginner: 0.8,\r\n            intermediate: 1.0,\r\n            advanced: 1.2\r\n        };\r\n        mrv *= ageMultipliers[trainingAge] || 1.0;\r\n\r\n        // Recovery factors compound - \"Sleep, stress, nutrition all matter\" (p.15)\r\n        const recoveryFactor = (recoveryScore + (10 - stressLevel) + sleepQuality + nutritionQuality) / 40;\r\n        mrv *= (0.7 + (recoveryFactor * 0.6)); // Scale from 0.7x to 1.3x\r\n\r\n        return Math.round(mrv);\r\n    };\r\n\r\n    // Calculate Maximum Adaptive Volume (MAV) progression\r\n    const calculateMAV = (mev, mrv, weekNumber, mesocycleLength = 4) => {\r\n        // \"MAV is the sweet spot for growth - between MEV and MRV\" (p.17)\r\n        // \"Start closer to MEV, progress towards MRV\" (p.19)\r\n\r\n        const progressionFactor = (weekNumber - 1) / (mesocycleLength - 1);\r\n        const mavRange = mrv - mev;\r\n        const mav = mev + (mavRange * 0.3) + (mavRange * 0.4 * progressionFactor);\r\n\r\n        return Math.round(mav);\r\n    };\r\n\r\n    // Generate full volume landmark assessment\r\n    const assessVolumeLandmarks = (muscleGroups, individualFactors, trainingGoals) => {\r\n        const landmarks = {};\r\n        const recommendations = [];\r\n\r\n        muscleGroups.forEach(muscle => {\r\n            const factors = individualFactors[muscle] || individualFactors.general || {};\r\n\r\n            const mev = calculateMEV(muscle, factors);\r\n            const mrv = calculateMRV(muscle, factors);\r\n\r\n            // Validate landmarks - \"MEV must be less than MRV\" (p.21)\r\n            if (mev >= mrv) {\r\n                recommendations.push({\r\n                    type: 'warning',\r\n                    muscle,\r\n                    message: `MEV (${mev}) >= MRV (${mrv}) - Check recovery factors`,\r\n                    suggestion: 'Improve sleep, nutrition, or stress management'\r\n                });\r\n            }\r\n\r\n            landmarks[muscle] = {\r\n                mev,\r\n                mrv,\r\n                mav: calculateMAV(mev, mrv, 1), // Week 1 MAV\r\n                currentVolume: 0,\r\n                status: 'not_started',\r\n                weeklyProgression: generateMAVProgression(mev, mrv, 4)\r\n            };\r\n        });\r\n\r\n        return {\r\n            landmarks,\r\n            recommendations,\r\n            summary: generateVolumeSummary(landmarks, trainingGoals)\r\n        };\r\n    };\r\n\r\n    // Generate MAV progression across mesocycle\r\n    const generateMAVProgression = (mev, mrv, weeks = 4) => {\r\n        const progression = [];\r\n\r\n        for (let week = 1; week <= weeks; week++) {\r\n            const mav = calculateMAV(mev, mrv, week, weeks);\r\n\r\n            progression.push({\r\n                week,\r\n                targetMAV: mav,\r\n                minVolume: mev,\r\n                maxVolume: mrv,\r\n                status: week === 1 ? 'current' : 'planned',\r\n                deloadRecommended: week === weeks, // \"Deload after mesocycle\" (p.23)\r\n                notes: week === 1 ? 'Start conservative near MEV' :\r\n                    week === weeks ? 'Peak week - monitor for overreaching' :\r\n                        'Progressive overload zone'\r\n            });\r\n        }\r\n\r\n        return progression;\r\n    };\r\n\r\n    // Assess current training status vs landmarks\r\n    const assessCurrentVolume = (currentVolume, landmarks, weekNumber) => {\r\n        const assessment = {};\r\n\r\n        Object.entries(currentVolume).forEach(([muscle, volume]) => {\r\n            const landmark = landmarks[muscle];\r\n            if (!landmark) return;\r\n\r\n            const targetMAV = landmark.weeklyProgression[weekNumber - 1]?.targetMAV || landmark.mav;\r\n\r\n            let status, recommendation, color;\r\n\r\n            if (volume < landmark.mev) {\r\n                status = 'below_mev';\r\n                recommendation = `Increase volume by ${landmark.mev - volume} sets minimum`;\r\n                color = 'red';\r\n            } else if (volume >= landmark.mev && volume <= targetMAV) {\r\n                status = 'optimal';\r\n                recommendation = 'Volume in optimal range for adaptation';\r\n                color = 'green';\r\n            } else if (volume > targetMAV && volume <= landmark.mrv) {\r\n                status = 'above_mav';\r\n                recommendation = 'Monitor recovery - approaching MRV';\r\n                color = 'yellow';\r\n            } else {\r\n                status = 'above_mrv';\r\n                recommendation = 'REDUCE VOLUME - Risk of overreaching';\r\n                color = 'red';\r\n            }\r\n\r\n            assessment[muscle] = {\r\n                currentVolume: volume,\r\n                targetMAV,\r\n                mev: landmark.mev,\r\n                mrv: landmark.mrv,\r\n                status,\r\n                recommendation,\r\n                color,\r\n                progressionSuggestion: generateProgressionSuggestion(volume, landmark, weekNumber)\r\n            };\r\n        });\r\n\r\n        return assessment;\r\n    };\r\n\r\n    // Generate progression suggestions\r\n    const generateProgressionSuggestion = (currentVolume, landmark, weekNumber) => {\r\n        const nextWeek = weekNumber + 1;\r\n        const nextTargetMAV = landmark.weeklyProgression[nextWeek - 1]?.targetMAV;\r\n\r\n        if (!nextTargetMAV) {\r\n            return 'End of mesocycle - implement deload week';\r\n        }\r\n\r\n        const volumeIncrease = nextTargetMAV - currentVolume;\r\n\r\n        if (volumeIncrease > 0) {\r\n            return `Next week: Add ${volumeIncrease} sets (target: ${nextTargetMAV})`;\r\n        } else if (volumeIncrease < 0) {\r\n            return `Next week: Reduce ${Math.abs(volumeIncrease)} sets (target: ${nextTargetMAV})`;\r\n        } else {\r\n            return `Next week: Maintain ${currentVolume} sets`;\r\n        }\r\n    };\r\n\r\n    // Generate volume summary and insights\r\n    const generateVolumeSummary = (landmarks, trainingGoals) => {\r\n        const totalMEV = Object.values(landmarks).reduce((sum, l) => sum + l.mev, 0);\r\n        const totalMRV = Object.values(landmarks).reduce((sum, l) => sum + l.mrv, 0);\r\n        const averageMAV = Object.values(landmarks).reduce((sum, l) => sum + l.mav, 0);\r\n\r\n        const muscleCount = Object.keys(landmarks).length;\r\n        const weeklyTimeEstimate = averageMAV * 3; // ~3 minutes per set\r\n\r\n        const insights = [];\r\n\r\n        // Goal-specific insights\r\n        if (trainingGoals?.includes('hypertrophy')) {\r\n            insights.push({\r\n                type: 'goal_alignment',\r\n                message: `Hypertrophy focus: Target MAV range ${Math.round(averageMAV * 0.8)}-${Math.round(averageMAV * 1.2)} sets/week`,\r\n                reference: 'Hypertrophy responds best to moderate-high volume (p.25)'\r\n            });\r\n        }\r\n\r\n        if (trainingGoals?.includes('strength')) {\r\n            insights.push({\r\n                type: 'goal_alignment',\r\n                message: `Strength focus: Lower volume, higher intensity. Consider ${Math.round(averageMAV * 0.7)} sets/week`,\r\n                reference: 'Strength gains plateau with excessive volume (p.27)'\r\n            });\r\n        }\r\n\r\n        // Volume distribution insights\r\n        const highVolumeMuslces = Object.entries(landmarks)\r\n            .filter(([_, l]) => l.mrv > 24)\r\n            .map(([muscle, _]) => muscle);\r\n\r\n        if (highVolumeMuslces.length > 0) {\r\n            insights.push({\r\n                type: 'volume_distribution',\r\n                message: `High capacity muscles (${highVolumeMuslces.join(', ')}) can handle more volume`,\r\n                reference: 'Distribute volume based on recovery capacity (p.29)'\r\n            });\r\n        }\r\n\r\n        return {\r\n            totalMEV,\r\n            totalMRV,\r\n            averageMAV,\r\n            muscleCount,\r\n            weeklyTimeEstimate,\r\n            insights,\r\n            weeklyProgression: generateWeeklyVolumeProgression(landmarks)\r\n        };\r\n    };\r\n\r\n    // Generate weekly volume progression for entire program\r\n    const generateWeeklyVolumeProgression = (landmarks) => {\r\n        const weeks = 4;\r\n        const progression = [];\r\n\r\n        for (let week = 1; week <= weeks; week++) {\r\n            const weekData = {\r\n                week,\r\n                totalVolume: 0,\r\n                muscleTargets: {},\r\n                deloadWeek: week === weeks\r\n            };\r\n\r\n            Object.entries(landmarks).forEach(([muscle, landmark]) => {\r\n                const weeklyTarget = landmark.weeklyProgression[week - 1];\r\n                weekData.muscleTargets[muscle] = weeklyTarget;\r\n                weekData.totalVolume += weeklyTarget.targetMAV;\r\n            });\r\n\r\n            progression.push(weekData);\r\n        }\r\n\r\n        return progression;\r\n    };\r\n\r\n    // Volume landmark adjustment based on performance feedback\r\n    const adjustVolumeLandmarks = (landmarks, performanceFeedback, weekNumber) => {\r\n        const adjustments = {};\r\n\r\n        Object.entries(performanceFeedback).forEach(([muscle, feedback]) => {\r\n            const { performance, recovery, soreness, pump } = feedback;\r\n            const currentLandmark = landmarks[muscle];\r\n\r\n            if (!currentLandmark) return;\r\n\r\n            let mevAdjustment = 0;\r\n            let mrvAdjustment = 0;\r\n            let reasoning = [];\r\n\r\n            // \"If performance drops, volume may be too high\" (p.31)\r\n            if (performance === 'declining') {\r\n                mrvAdjustment = -2;\r\n                reasoning.push('Performance declining - reduce MRV');\r\n            }\r\n\r\n            // \"Poor recovery indicates volume above MRV\" (p.33)\r\n            if (recovery === 'poor') {\r\n                mrvAdjustment = -3;\r\n                reasoning.push('Poor recovery - significantly reduce MRV');\r\n            }\r\n\r\n            // \"Excessive soreness = too much volume\" (p.35)\r\n            if (soreness === 'excessive') {\r\n                mrvAdjustment = -2;\r\n                reasoning.push('Excessive soreness - reduce volume tolerance');\r\n            }\r\n\r\n            // \"No pump indicates volume below MEV\" (p.37)\r\n            if (pump === 'none') {\r\n                mevAdjustment = 1;\r\n                reasoning.push('No pump - may need more volume for stimulus');\r\n            }\r\n\r\n            // \"Easy recovery suggests room for more volume\" (p.39)\r\n            if (recovery === 'excellent' && performance === 'improving') {\r\n                mrvAdjustment = 2;\r\n                reasoning.push('Excellent recovery - can handle more volume');\r\n            }\r\n\r\n            adjustments[muscle] = {\r\n                newMEV: Math.max(4, currentLandmark.mev + mevAdjustment),\r\n                newMRV: Math.max(currentLandmark.mev + 6, currentLandmark.mrv + mrvAdjustment),\r\n                adjustmentReason: reasoning.join('; '),\r\n                confidence: reasoning.length >= 2 ? 'high' : 'medium'\r\n            };\r\n        });\r\n\r\n        return adjustments;\r\n    };\r\n\r\n    // Deload protocol generator\r\n    const generateDeloadProtocol = (landmarks, currentVolume, deloadType = 'volume') => {\r\n        const deloadOptions = {\r\n            volume: {\r\n                name: 'Volume Deload',\r\n                description: 'Reduce volume by 40-60% while maintaining intensity',\r\n                reference: 'Volume deloads preserve strength adaptations (p.41)'\r\n            },\r\n            intensity: {\r\n                name: 'Intensity Deload',\r\n                description: 'Reduce intensity by 20-30% while maintaining volume',\r\n                reference: 'Intensity deloads allow neural recovery (p.43)'\r\n            },\r\n            complete: {\r\n                name: 'Complete Rest',\r\n                description: 'No training for 3-7 days',\r\n                reference: 'Complete rest for severe overreaching (p.45)'\r\n            }\r\n        };\r\n\r\n        const protocol = deloadOptions[deloadType];\r\n        const deloadTargets = {};\r\n\r\n        Object.entries(currentVolume).forEach(([muscle, volume]) => {\r\n            const landmark = landmarks[muscle];\r\n\r\n            if (deloadType === 'volume') {\r\n                deloadTargets[muscle] = {\r\n                    targetVolume: Math.round(volume * 0.5), // 50% reduction\r\n                    targetIntensity: '85-95%', // Maintain intensity\r\n                    notes: 'Focus on movement quality and neural patterns'\r\n                };\r\n            } else if (deloadType === 'intensity') {\r\n                deloadTargets[muscle] = {\r\n                    targetVolume: volume, // Maintain volume\r\n                    targetIntensity: '60-75%', // Reduce intensity\r\n                    notes: 'Higher reps, focus on muscle connection'\r\n                };\r\n            }\r\n        });\r\n\r\n        return {\r\n            protocol,\r\n            deloadTargets,\r\n            duration: '1 week',\r\n            nextPhase: 'Return to progressive overload',\r\n            monitoringPoints: [\r\n                'Sleep quality improvement',\r\n                'Motivation restoration',\r\n                'Reduced muscle soreness',\r\n                'Improved workout performance'\r\n            ]\r\n        };\r\n    };\r\n\r\n    // Save volume landmark assessment\r\n    const saveVolumeLandmarks = async (volumeData) => {\r\n        setLoading(true);\r\n        try {\r\n            if (dispatch) {\r\n                dispatch({\r\n                    type: APP_ACTIONS.UPDATE_ASSESSMENT,\r\n                    payload: {\r\n                        ...state?.assessment,\r\n                        volumeLandmarks: volumeData\r\n                    }\r\n                });\r\n            }\r\n\r\n            localStorage.setItem('volume_landmarks', JSON.stringify(volumeData));\r\n            return { success: true, data: volumeData };\r\n        } catch (error) {\r\n            console.error('Error saving volume landmarks:', error);\r\n            return { success: false, error: error.message };\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return {\r\n        classifyGainerType,\r\n        getFiberRecommendations,\r\n        getMileageRecommendations,\r\n        validateSMARTGoals,\r\n        generateSuggestions,\r\n        saveAssessment,\r\n        suggestions,\r\n        loading,\r\n        assessBLGs,\r\n        assessFuel,\r\n        assessPersonalization,\r\n        saveNutritionAssessment,\r\n        assessSpecificity,\r\n        determineOptimalSpectrum,\r\n        checkModalityCompatibility,\r\n        generateAdaptationSequence,\r\n        calculateTrainingVariables,\r\n        validatePhaseProgression,\r\n        saveSpecificityAssessment,\r\n        assessOverload,\r\n        calculateMRVByPhase,\r\n        calculateHomeostasisDisruption,\r\n        generateOverloadProgression,\r\n        assessOverloadOptimization,\r\n        calculateCurrentLoad,\r\n        assessFatigue,\r\n        assessFuelFatigue,\r\n        assessNervousFatigue,\r\n        assessMessengerFatigue,\r\n        assessTissueFatigue,\r\n        determineFatigueState,\r\n        generateFatigueManagement,\r\n        calculateRecoveryTimeline,\r\n        generateOverloadRecommendations,\r\n        generateFatigueRecommendations,\r\n        saveOverloadAssessment,\r\n        saveFatigueAssessment,\r\n        // Volume Landmarks functions\r\n        calculateMEV,\r\n        calculateMRV,\r\n        calculateMAV,\r\n        assessVolumeLandmarks,\r\n        generateMAVProgression,\r\n        assessCurrentVolume,\r\n        generateProgressionSuggestion,\r\n        generateVolumeSummary,\r\n        generateWeeklyVolumeProgression,\r\n        adjustVolumeLandmarks,\r\n        generateDeloadProtocol,\r\n        saveVolumeLandmarks,\r\n\r\n        // PHA Health Screening functions (Bryant Periodization)\r\n        assessPHAHealth,\r\n        generatePHAModifications,\r\n        integratePHAWithFatigue,\r\n        savePHAHealthAssessment\r\n    };\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useAssessment } from '../../../hooks/useAssessment';\r\nimport { useApp } from '../../../context';\r\nimport { TrendingUp, AlertTriangle, CheckCircle, Target, BarChart3, Calendar } from 'lucide-react';\r\n\r\nconst VolumeLandmarksTab = () => {\r\n    const {\r\n        calculateMEV,\r\n        calculateMRV,\r\n        calculateMAV,\r\n        assessVolumeLandmarks,\r\n        assessCurrentVolume,\r\n        generateDeloadProtocol,\r\n        saveVolumeLandmarks\r\n    } = useAssessment();\r\n\r\n    const { state } = useApp();\r\n\r\n    // Individual factors assessment\r\n    const [individualFactors, setIndividualFactors] = useState({\r\n        general: {\r\n            fiberType: 'mixed',\r\n            trainingAge: 'intermediate',\r\n            recoveryScore: 7,\r\n            stressLevel: 5,\r\n            sleepQuality: 7,\r\n            nutritionQuality: 7\r\n        }\r\n    });\r\n\r\n    // Selected muscle groups for assessment\r\n    const [selectedMuscles, setSelectedMuscles] = useState([\r\n        'chest', 'back', 'shoulders', 'biceps', 'triceps', 'quads', 'hamstrings', 'glutes'\r\n    ]);\r\n\r\n    // Current training volume input\r\n    const [currentVolume, setCurrentVolume] = useState({\r\n        chest: 12,\r\n        back: 14,\r\n        shoulders: 10,\r\n        biceps: 8,\r\n        triceps: 8,\r\n        quads: 16,\r\n        hamstrings: 10,\r\n        glutes: 12\r\n    });\r\n\r\n    // Training goals\r\n    const [trainingGoals, setTrainingGoals] = useState(['hypertrophy']);\r\n\r\n    // Current mesocycle week\r\n    const [currentWeek, setCurrentWeek] = useState(1);\r\n\r\n    // Assessment results\r\n    const [assessment, setAssessment] = useState(null);\r\n    const [volumeStatus, setVolumeStatus] = useState(null);\r\n    const [showDeloadWarning, setShowDeloadWarning] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Generate volume landmark assessment\r\n        const result = assessVolumeLandmarks(selectedMuscles, individualFactors, trainingGoals);\r\n        setAssessment(result);\r\n\r\n        // Assess current volume status\r\n        if (result.landmarks) {\r\n            const status = assessCurrentVolume(currentVolume, result.landmarks, currentWeek);\r\n            setVolumeStatus(status);\r\n\r\n            // Check for overreaching indicators\r\n            const overreachingMuscles = Object.values(status).filter(s => s.status === 'above_mrv');\r\n            setShowDeloadWarning(overreachingMuscles.length > 0);\r\n        }\r\n    }, [individualFactors, selectedMuscles, currentVolume, trainingGoals, currentWeek]);\r\n\r\n    const handleFactorChange = (category, field, value) => {\r\n        setIndividualFactors(prev => ({\r\n            ...prev,\r\n            [category]: {\r\n                ...prev[category],\r\n                [field]: value\r\n            }\r\n        }));\r\n    };\r\n\r\n    const handleVolumeChange = (muscle, value) => {\r\n        setCurrentVolume(prev => ({\r\n            ...prev,\r\n            [muscle]: parseInt(value)\r\n        }));\r\n    };\r\n\r\n    const handleMuscleSelection = (muscle) => {\r\n        setSelectedMuscles(prev =>\r\n            prev.includes(muscle)\r\n                ? prev.filter(m => m !== muscle)\r\n                : [...prev, muscle]\r\n        );\r\n    };\r\n\r\n    const handleSaveAssessment = async () => {\r\n        if (assessment) {\r\n            const result = await saveVolumeLandmarks({\r\n                landmarks: assessment.landmarks,\r\n                currentVolume,\r\n                weeklyProgression: assessment.summary.weeklyProgression,\r\n                individualFactors,\r\n                timestamp: new Date().toISOString()\r\n            });\r\n\r\n            if (result.success) {\r\n                alert('Volume landmarks saved successfully!');\r\n            } else {\r\n                alert('Error saving assessment: ' + result.error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const getStatusColor = (status) => {\r\n        switch (status) {\r\n            case 'below_mev': return 'bg-red-100 text-red-800 border-red-200';\r\n            case 'optimal': return 'bg-green-100 text-green-800 border-green-200';\r\n            case 'above_mav': return 'bg-yellow-100 text-yellow-800 border-yellow-200';\r\n            case 'above_mrv': return 'bg-red-100 text-red-800 border-red-200';\r\n            default: return 'bg-gray-100 text-gray-800 border-gray-200';\r\n        }\r\n    };\r\n\r\n    const getStatusIcon = (status) => {\r\n        switch (status) {\r\n            case 'below_mev': return <AlertTriangle className=\"h-4 w-4\" />;\r\n            case 'optimal': return <CheckCircle className=\"h-4 w-4\" />;\r\n            case 'above_mav': return <TrendingUp className=\"h-4 w-4\" />;\r\n            case 'above_mrv': return <AlertTriangle className=\"h-4 w-4\" />;\r\n            default: return <Target className=\"h-4 w-4\" />;\r\n        }\r\n    };\r\n\r\n    const muscleGroupOptions = [\r\n        'chest', 'back', 'shoulders', 'biceps', 'triceps',\r\n        'quads', 'hamstrings', 'glutes', 'calves'\r\n    ];\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n                <h2 className=\"text-2xl font-bold text-white mb-2\">Volume Landmarks Assessment</h2>\r\n                <p className=\"text-gray-300 mb-4\">\r\n                    \"MEV is the minimum volume needed for gains. MRV is the maximum you can recover from.\r\n                    MAV is the sweet spot for optimal progress.\" - How Much Should I Train?, p.7\r\n                </p>\r\n                <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n                    <div className=\"bg-blue-900/50 p-3 rounded border border-blue-600\">\r\n                        <div className=\"text-blue-400 font-semibold\">MEV</div>\r\n                        <div className=\"text-blue-200\">Minimum Effective Volume</div>\r\n                    </div>\r\n                    <div className=\"bg-green-900/50 p-3 rounded border border-green-600\">\r\n                        <div className=\"text-green-400 font-semibold\">MAV</div>\r\n                        <div className=\"text-green-200\">Maximum Adaptive Volume</div>\r\n                    </div>\r\n                    <div className=\"bg-red-900/50 p-3 rounded border border-red-600\">\r\n                        <div className=\"text-red-400 font-semibold\">MRV</div>\r\n                        <div className=\"text-red-200\">Maximum Recoverable Volume</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Deload Warning */}\r\n            {showDeloadWarning && (\r\n                <div className=\"bg-red-900/50 border border-red-600 rounded-lg p-4\">\r\n                    <div className=\"flex items-start\">\r\n                        <AlertTriangle className=\"text-red-400 mr-3 mt-1\" />\r\n                        <div>\r\n                            <h4 className=\"text-red-400 font-semibold mb-2\">VOLUME ABOVE MRV DETECTED</h4>\r\n                            <p className=\"text-red-300 text-sm mb-2\">\r\n                                One or more muscle groups are training above Maximum Recoverable Volume.\r\n                                This increases overreaching risk.\r\n                            </p>\r\n                            <p className=\"text-red-300 text-sm font-medium\">\r\n                                Recommended Action: Implement deload protocol immediately\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Individual Factors Assessment */}\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                <div className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n                    <h3 className=\"text-lg font-semibold text-white mb-4\">Individual Factors</h3>\r\n\r\n                    <div className=\"space-y-4\">\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                                Muscle Fiber Type\r\n                            </label>\r\n                            <select\r\n                                value={individualFactors.general.fiberType}\r\n                                onChange={(e) => handleFactorChange('general', 'fiberType', e.target.value)}\r\n                                className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent custom-styled\"\r\n                            >\r\n                                <option value=\"fast\">Fast-Twitch Dominant (Lower volume tolerance)</option>\r\n                                <option value=\"mixed\">Mixed Fiber Type (Average tolerance)</option>\r\n                                <option value=\"slow\">Slow-Twitch Dominant (Higher volume tolerance)</option>\r\n                            </select>\r\n                            <div className=\"text-xs text-gray-400 mt-1\">\r\n                                \"Fast-twitch muscles need less volume to grow\" - p.8\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                                Training Age\r\n                            </label>\r\n                            <select\r\n                                value={individualFactors.general.trainingAge}\r\n                                onChange={(e) => handleFactorChange('general', 'trainingAge', e.target.value)}\r\n                                className=\"w-full bg-gray-700 border border-gray-600 rounded-lg px-4 py-2 text-white focus:ring-2 focus:ring-blue-500 focus:border-transparent custom-styled\"\r\n                            >\r\n                                <option value=\"beginner\">Beginner (1-2 years)</option>\r\n                                <option value=\"intermediate\">Intermediate (2-5 years)</option>\r\n                                <option value=\"advanced\">Advanced (5+ years)</option>\r\n                            </select>\r\n                            <div className=\"text-xs text-gray-400 mt-1\">\r\n                                \"Beginners need less volume to grow\" - p.10\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                                Recovery Score: {individualFactors.general.recoveryScore}/10\r\n                            </label>\r\n                            <input\r\n                                type=\"range\"\r\n                                min=\"1\"\r\n                                max=\"10\"\r\n                                value={individualFactors.general.recoveryScore}\r\n                                onChange={(e) => handleFactorChange('general', 'recoveryScore', parseInt(e.target.value))}\r\n                                className=\"w-full h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer slider\"\r\n                            />\r\n                            <div className=\"text-xs text-gray-400 mt-1\">\r\n                                Overall recovery capacity from training\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n                    <h3 className=\"text-lg font-semibold text-white mb-4\">Lifestyle Factors</h3>\r\n\r\n                    <div className=\"space-y-4\">\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                                Stress Level: {individualFactors.general.stressLevel}/10\r\n                            </label>\r\n                            <input\r\n                                type=\"range\"\r\n                                min=\"1\"\r\n                                max=\"10\"\r\n                                value={individualFactors.general.stressLevel}\r\n                                onChange={(e) => handleFactorChange('general', 'stressLevel', parseInt(e.target.value))}\r\n                                className=\"w-full h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer slider\"\r\n                            />\r\n                            <div className=\"text-xs text-gray-400 mt-1\">\r\n                                1 = Very low stress, 10 = Extremely high stress\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                                Sleep Quality: {individualFactors.general.sleepQuality}/10\r\n                            </label>\r\n                            <input\r\n                                type=\"range\"\r\n                                min=\"1\"\r\n                                max=\"10\"\r\n                                value={individualFactors.general.sleepQuality}\r\n                                onChange={(e) => handleFactorChange('general', 'sleepQuality', parseInt(e.target.value))}\r\n                                className=\"w-full h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer slider\"\r\n                            />\r\n                            <div className=\"text-xs text-gray-400 mt-1\">\r\n                                \"Sleep, stress, nutrition all affect MRV\" - p.15\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label className=\"block text-sm font-medium text-gray-300 mb-2\">\r\n                                Nutrition Quality: {individualFactors.general.nutritionQuality}/10\r\n                            </label>\r\n                            <input\r\n                                type=\"range\"\r\n                                min=\"1\"\r\n                                max=\"10\"\r\n                                value={individualFactors.general.nutritionQuality}\r\n                                onChange={(e) => handleFactorChange('general', 'nutritionQuality', parseInt(e.target.value))}\r\n                                className=\"w-full h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer slider\"\r\n                            />\r\n                            <div className=\"text-xs text-gray-400 mt-1\">\r\n                                Overall nutrition consistency and quality\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Muscle Group Selection */}\r\n            <div className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n                <h3 className=\"text-lg font-semibold text-white mb-4\">Muscle Groups to Assess</h3>\r\n                <div className=\"grid grid-cols-3 lg:grid-cols-5 gap-3\">\r\n                    {muscleGroupOptions.map(muscle => (\r\n                        <button\r\n                            key={muscle}\r\n                            onClick={() => handleMuscleSelection(muscle)}\r\n                            className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${selectedMuscles.includes(muscle)\r\n                                    ? 'bg-blue-600 text-white'\r\n                                    : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\r\n                                }`}\r\n                        >\r\n                            {muscle.charAt(0).toUpperCase() + muscle.slice(1)}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Current Week Selection */}\r\n            <div className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n                <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\r\n                    <Calendar className=\"h-5 w-5 mr-2\" />\r\n                    Mesocycle Progress\r\n                </h3>\r\n                <div className=\"grid grid-cols-4 gap-2\">\r\n                    {[1, 2, 3, 4].map(week => (\r\n                        <button\r\n                            key={week}\r\n                            onClick={() => setCurrentWeek(week)}\r\n                            className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${currentWeek === week\r\n                                    ? 'bg-green-600 text-white'\r\n                                    : 'bg-gray-700 text-gray-300 hover:bg-gray-600'\r\n                                }`}\r\n                        >\r\n                            Week {week}\r\n                            {week === 4 && <div className=\"text-xs\">Deload</div>}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n                <div className=\"text-xs text-gray-400 mt-2\">\r\n                    \"Start conservative near MEV, progress towards MRV\" - p.19\r\n                </div>\r\n            </div>\r\n\r\n            {/* Current Volume Input */}\r\n            <div className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n                <h3 className=\"text-lg font-semibold text-white mb-4\">Current Training Volume (Sets/Week)</h3>\r\n                <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                    {selectedMuscles.map(muscle => (\r\n                        <div key={muscle}>\r\n                            <label className=\"block text-sm font-medium text-gray-300 mb-2 capitalize\">\r\n                                {muscle}: {currentVolume[muscle]} sets\r\n                            </label>\r\n                            <input\r\n                                type=\"range\"\r\n                                min=\"0\"\r\n                                max=\"40\"\r\n                                value={currentVolume[muscle]}\r\n                                onChange={(e) => handleVolumeChange(muscle, e.target.value)}\r\n                                className=\"w-full h-2 bg-gray-700 rounded-lg appearance-none cursor-pointer slider\"\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Volume Assessment Results */}\r\n            {assessment && volumeStatus && (\r\n                <div className=\"space-y-4\">\r\n                    {/* Individual Muscle Assessment */}\r\n                    <div className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n                        <h3 className=\"text-lg font-semibold text-white mb-4\">Volume Assessment Results</h3>\r\n                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                            {Object.entries(volumeStatus).map(([muscle, status]) => (\r\n                                <div key={muscle} className={`rounded-lg p-4 border ${getStatusColor(status.status)}`}>\r\n                                    <div className=\"flex items-center justify-between mb-2\">\r\n                                        <h4 className=\"font-semibold capitalize flex items-center\">\r\n                                            {getStatusIcon(status.status)}\r\n                                            <span className=\"ml-2\">{muscle}</span>\r\n                                        </h4>\r\n                                        <span className=\"text-sm font-medium\">\r\n                                            {status.currentVolume} sets\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"text-sm mb-2\">\r\n                                        <div>MEV: {status.mev} | MAV: {status.targetMAV} | MRV: {status.mrv}</div>\r\n                                    </div>\r\n\r\n                                    <div className=\"text-sm mb-2\">\r\n                                        <strong>Status:</strong> {status.status.replace(/_/g, ' ').toUpperCase()}\r\n                                    </div>\r\n\r\n                                    <div className=\"text-sm mb-2\">\r\n                                        <strong>Recommendation:</strong> {status.recommendation}\r\n                                    </div>\r\n\r\n                                    <div className=\"text-xs\">\r\n                                        <strong>Next Week:</strong> {status.progressionSuggestion}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Weekly Progression Preview */}\r\n                    <div className=\"bg-gray-800 rounded-lg p-6 border border-gray-700\">\r\n                        <h3 className=\"text-lg font-semibold text-white mb-4 flex items-center\">\r\n                            <BarChart3 className=\"h-5 w-5 mr-2\" />\r\n                            Mesocycle Progression Preview\r\n                        </h3>\r\n                        <div className=\"overflow-x-auto\">\r\n                            <table className=\"w-full text-sm\">\r\n                                <thead>\r\n                                    <tr className=\"border-b border-gray-700\">\r\n                                        <th className=\"text-left text-gray-300 py-2\">Week</th>\r\n                                        {selectedMuscles.map(muscle => (\r\n                                            <th key={muscle} className=\"text-center text-gray-300 py-2 capitalize\">\r\n                                                {muscle}\r\n                                            </th>\r\n                                        ))}\r\n                                        <th className=\"text-center text-gray-300 py-2\">Total</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {assessment.summary.weeklyProgression.map((week, index) => (\r\n                                        <tr key={week.week} className={`border-b border-gray-700 ${currentWeek === week.week ? 'bg-blue-900/30' : ''\r\n                                            }`}>\r\n                                            <td className=\"py-2 text-white font-medium\">\r\n                                                Week {week.week}\r\n                                                {week.deloadWeek && <span className=\"text-yellow-400 ml-1\">(Deload)</span>}\r\n                                            </td>\r\n                                            {selectedMuscles.map(muscle => {\r\n                                                const target = week.muscleTargets[muscle];\r\n                                                return (\r\n                                                    <td key={muscle} className=\"text-center py-2 text-gray-300\">\r\n                                                        {target?.targetMAV || 0}\r\n                                                    </td>\r\n                                                );\r\n                                            })}\r\n                                            <td className=\"text-center py-2 text-white font-medium\">\r\n                                                {week.totalVolume}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"text-xs text-gray-400 mt-2\">\r\n                            \"MAV progression: Start near MEV, increase micro-to-micro to MRV\" - p.17\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Training Insights */}\r\n                    <div className=\"bg-blue-900/50 border border-blue-600 rounded-lg p-4\">\r\n                        <h4 className=\"text-blue-400 font-semibold mb-3\">Training Insights</h4>\r\n                        <div className=\"space-y-2\">\r\n                            <div className=\"text-blue-200 text-sm\">\r\n                                <strong>Total Weekly Volume:</strong> {assessment.summary.averageMAV} sets\r\n                            </div>\r\n                            <div className=\"text-blue-200 text-sm\">\r\n                                <strong>Estimated Training Time:</strong> {assessment.summary.weeklyTimeEstimate} minutes/week\r\n                            </div>\r\n                            <div className=\"text-blue-200 text-sm\">\r\n                                <strong>Volume Range:</strong> {assessment.summary.totalMEV} - {assessment.summary.totalMRV} sets/week\r\n                            </div>\r\n                        </div>\r\n\r\n                        {assessment.summary.insights.map((insight, index) => (\r\n                            <div key={index} className=\"mt-3 p-3 bg-blue-800/50 rounded border border-blue-500\">\r\n                                <div className=\"text-blue-300 font-medium\">{insight.type.replace(/_/g, ' ').toUpperCase()}</div>\r\n                                <div className=\"text-blue-200 text-sm\">{insight.message}</div>\r\n                                <div className=\"text-blue-400 text-xs mt-1\">{insight.reference}</div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Save Button */}\r\n            <div className=\"flex justify-end\">\r\n                <button\r\n                    onClick={handleSaveAssessment}\r\n                    disabled={!assessment}\r\n                    className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 disabled:cursor-not-allowed text-white px-6 py-2 rounded-lg font-medium transition-colors\"\r\n                >\r\n                    Save Volume Landmarks\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VolumeLandmarksTab;\r\n","import React from 'react';\r\nimport { useProgramContext } from '../../../contexts/ProgramContext';\r\n\r\nconst TrainingMaxStep = () => {\r\n  const { state, actions } = useProgramContext();\r\n\r\n  return (\r\n    <div className=\"training-max-step\">\r\n      <div className=\"step-header\">\r\n        <h2>💪 Training Max Assessment - 5/3/1</h2>\r\n        <p className=\"step-description\">\r\n          Current 1RM testing and Training Max establishment with Bromley AMRAP protocols\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"content-section\">\r\n        <h3>Current 1RM or Recent Max Lifts</h3>\r\n        <div className=\"max-inputs\">\r\n          <div className=\"lift-input\">\r\n            <label>Squat 1RM (lbs)</label>\r\n            <input\r\n              type=\"number\"\r\n              value={state.trainingMaxes?.squat || ''}\r\n              onChange={(e) => actions.updateTrainingMaxes({ squat: e.target.value })}\r\n              placeholder=\"315\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"lift-input\">\r\n            <label>Bench Press 1RM (lbs)</label>\r\n            <input\r\n              type=\"number\"\r\n              value={state.trainingMaxes?.bench || ''}\r\n              onChange={(e) => actions.updateTrainingMaxes({ bench: e.target.value })}\r\n              placeholder=\"225\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"lift-input\">\r\n            <label>Deadlift 1RM (lbs)</label>\r\n            <input\r\n              type=\"number\"\r\n              value={state.trainingMaxes?.deadlift || ''}\r\n              onChange={(e) => actions.updateTrainingMaxes({ deadlift: e.target.value })}\r\n              placeholder=\"365\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"lift-input\">\r\n            <label>Overhead Press 1RM (lbs)</label>\r\n            <input\r\n              type=\"number\"\r\n              value={state.trainingMaxes?.ohp || ''}\r\n              onChange={(e) => actions.updateTrainingMaxes({ ohp: e.target.value })}\r\n              placeholder=\"145\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <h3>🔄 Bromley AMRAP Testing Protocol</h3>\r\n        <div className=\"amrap-protocol\">\r\n          <p>Enhanced 5/3/1 with Bromley AMRAP testing for accurate Training Max calculation</p>\r\n\r\n          <div className=\"protocol-option\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"testing-method\"\r\n                value=\"current-max\"\r\n                checked={state.testingMethod === 'current-max'}\r\n                onChange={(e) => actions.updateTestingMethod(e.target.value)}\r\n              />\r\n              Use current known 1RM\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"protocol-option\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"testing-method\"\r\n                value=\"amrap-estimate\"\r\n                checked={state.testingMethod === 'amrap-estimate'}\r\n                onChange={(e) => actions.updateTestingMethod(e.target.value)}\r\n              />\r\n              Estimate from recent AMRAP set\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"protocol-option\">\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"testing-method\"\r\n                value=\"conservative-estimate\"\r\n                checked={state.testingMethod === 'conservative-estimate'}\r\n                onChange={(e) => actions.updateTestingMethod(e.target.value)}\r\n              />\r\n              Conservative estimate (90% of known max)\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Training Max Calculation</h3>\r\n        <div className=\"training-max-calculation\">\r\n          <p>5/3/1 Training Max = 90% of 1RM (conservative for consistent progression)</p>\r\n\r\n          {state.trainingMaxes && (\r\n            <div className=\"calculated-maxes\">\r\n              <h4>Calculated Training Maxes:</h4>\r\n              <ul>\r\n                {state.trainingMaxes.squat && (\r\n                  <li>Squat TM: {Math.round(state.trainingMaxes.squat * 0.9)} lbs</li>\r\n                )}\r\n                {state.trainingMaxes.bench && (\r\n                  <li>Bench TM: {Math.round(state.trainingMaxes.bench * 0.9)} lbs</li>\r\n                )}\r\n                {state.trainingMaxes.deadlift && (\r\n                  <li>Deadlift TM: {Math.round(state.trainingMaxes.deadlift * 0.9)} lbs</li>\r\n                )}\r\n                {state.trainingMaxes.ohp && (\r\n                  <li>OHP TM: {Math.round(state.trainingMaxes.ohp * 0.9)} lbs</li>\r\n                )}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"step-navigation\">\r\n        <button\r\n          className=\"btn-secondary\"\r\n          onClick={() => actions.setCurrentStep(5)}\r\n        >\r\n          ← Back to System Selection\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn-primary\"\r\n          onClick={() => actions.setCurrentStep(6)}\r\n          disabled={!state.trainingMaxes?.squat || !state.testingMethod}\r\n        >\r\n          Continue to Periodization →\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"bromley-integration-info\">\r\n        <h4>🔄 Bromley 5/3/1 Enhancements</h4>\r\n        <ul>\r\n          <li>AMRAP testing protocols for accurate max estimation</li>\r\n          <li>Wave periodization integration with 5/3/1 structure</li>\r\n          <li>RPE-based auto-regulation</li>\r\n          <li>Enhanced deload and recovery protocols</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrainingMaxStep;\r\n","import React, { useState } from 'react';\r\nimport { useProgramContext } from '../../../contexts/ProgramContext';\r\n\r\n/**\r\n * MovementAssessmentStep - Linear Periodization Specific Assessment\r\n * \r\n * Enhanced with Bromley Motor Control Integration:\r\n * - Movement quality baseline assessment\r\n * - Wave progression compatibility\r\n * - Motor control program customization\r\n */\r\n\r\nconst MovementAssessmentStep = () => {\r\n    const { state, actions } = useProgramContext();\r\n    const [assessmentData, setAssessmentData] = useState({\r\n        movementScreen: {},\r\n        motorControlFocus: '',\r\n        currentCapabilities: {},\r\n        progressionPreference: 'wave'\r\n    });\r\n\r\n    const movementScreenItems = [\r\n        {\r\n            id: 'overhead-squat',\r\n            name: 'Overhead Squat',\r\n            description: 'Full-body movement screen',\r\n            areas: ['ankle-mobility', 'hip-stability', 'thoracic-mobility', 'shoulder-stability']\r\n        },\r\n        {\r\n            id: 'single-leg-stance',\r\n            name: 'Single Leg Stance',\r\n            description: 'Balance and stability assessment',\r\n            areas: ['balance', 'proprioception', 'unilateral-strength']\r\n        },\r\n        {\r\n            id: 'push-up',\r\n            name: 'Push-up Quality',\r\n            description: 'Upper body movement pattern',\r\n            areas: ['scapular-control', 'core-stability', 'movement-coordination']\r\n        },\r\n        {\r\n            id: 'deep-squat',\r\n            name: 'Deep Squat Hold',\r\n            description: 'Lower body mobility and stability',\r\n            areas: ['hip-mobility', 'ankle-flexibility', 'spine-position']\r\n        }\r\n    ];\r\n\r\n    const motorControlFocuses = [\r\n        {\r\n            id: 'movement-quality',\r\n            name: 'Movement Quality Focus',\r\n            description: 'Emphasize perfect movement patterns with Bromley wave structure',\r\n            bromleyIntegration: 'Quality-based wave progression'\r\n        },\r\n        {\r\n            id: 'stability-strength',\r\n            name: 'Stability & Strength',\r\n            description: 'Build foundational strength with motor control',\r\n            bromleyIntegration: 'Stabilization wave with strength integration'\r\n        },\r\n        {\r\n            id: 'coordination-power',\r\n            name: 'Coordination & Power',\r\n            description: 'Advanced motor control with power development',\r\n            bromleyIntegration: 'Motor control waves with power expression'\r\n        }\r\n    ];\r\n\r\n    const handleMovementScore = (itemId, areaId, score) => {\r\n        setAssessmentData(prev => ({\r\n            ...prev,\r\n            movementScreen: {\r\n                ...prev.movementScreen,\r\n                [itemId]: {\r\n                    ...prev.movementScreen[itemId],\r\n                    [areaId]: score\r\n                }\r\n            }\r\n        }));\r\n    };\r\n\r\n    const handleSaveAndContinue = () => {\r\n        // Save movement assessment data\r\n        actions.updateLinearSpecificData({\r\n            movementAssessment: assessmentData,\r\n            bromleyIntegration: {\r\n                movementBaselineComplete: true,\r\n                motorControlWaveReady: true,\r\n                qualityProgressionEnabled: true\r\n            }\r\n        });\r\n\r\n        // Move to next step (Architecture Phase)\r\n        actions.setCurrentStep(6);\r\n    };\r\n\r\n    return (\r\n        <div className=\"movement-assessment-step\">\r\n            <div className=\"step-header\">\r\n                <h2>🏃 Movement Assessment - Linear Periodization</h2>\r\n                <p className=\"step-description\">\r\n                    Bromley-enhanced movement quality baseline for motor control programming\r\n                </p>\r\n            </div>\r\n\r\n            {/* Movement Screen Section */}\r\n            <div className=\"assessment-section\">\r\n                <h3>Movement Quality Screen</h3>\r\n                <p className=\"section-description\">\r\n                    Rate each movement area (1-5 scale: 1=Poor, 3=Average, 5=Excellent)\r\n                </p>\r\n\r\n                <div className=\"movement-screen-grid\">\r\n                    {movementScreenItems.map(item => (\r\n                        <div key={item.id} className=\"movement-item\">\r\n                            <h4>{item.name}</h4>\r\n                            <p>{item.description}</p>\r\n\r\n                            <div className=\"movement-areas\">\r\n                                {item.areas.map(area => (\r\n                                    <div key={area} className=\"area-assessment\">\r\n                                        <label>{area.replace('-', ' ')}</label>\r\n                                        <div className=\"score-buttons\">\r\n                                            {[1, 2, 3, 4, 5].map(score => (\r\n                                                <button\r\n                                                    key={score}\r\n                                                    className={`score-btn ${assessmentData.movementScreen[item.id]?.[area] === score ? 'active' : ''\r\n                                                        }`}\r\n                                                    onClick={() => handleMovementScore(item.id, area, score)}\r\n                                                >\r\n                                                    {score}\r\n                                                </button>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Motor Control Focus Selection */}\r\n            <div className=\"assessment-section\">\r\n                <h3>Motor Control Programming Focus</h3>\r\n                <p className=\"section-description\">\r\n                    Choose your primary motor control emphasis with Bromley wave integration\r\n                </p>\r\n\r\n                <div className=\"focus-options\">\r\n                    {motorControlFocuses.map(focus => (\r\n                        <div\r\n                            key={focus.id}\r\n                            className={`focus-option ${assessmentData.motorControlFocus === focus.id ? 'selected' : ''\r\n                                }`}\r\n                            onClick={() => setAssessmentData(prev => ({\r\n                                ...prev,\r\n                                motorControlFocus: focus.id\r\n                            }))}\r\n                        >\r\n                            <h4>{focus.name}</h4>\r\n                            <p>{focus.description}</p>\r\n                            <div className=\"bromley-integration\">\r\n                                🔄 Bromley: {focus.bromleyIntegration}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Current Capabilities */}\r\n            <div className=\"assessment-section\">\r\n                <h3>Current Training Capabilities</h3>\r\n\r\n                <div className=\"capabilities-grid\">\r\n                    <div className=\"capability-item\">\r\n                        <label>Training Experience (months)</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            value={assessmentData.currentCapabilities.experience || ''}\r\n                            onChange={(e) => setAssessmentData(prev => ({\r\n                                ...prev,\r\n                                currentCapabilities: {\r\n                                    ...prev.currentCapabilities,\r\n                                    experience: e.target.value\r\n                                }\r\n                            }))}\r\n                            placeholder=\"12\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"capability-item\">\r\n                        <label>Weekly Training Frequency</label>\r\n                        <select\r\n                            value={assessmentData.currentCapabilities.frequency || ''}\r\n                            onChange={(e) => setAssessmentData(prev => ({\r\n                                ...prev,\r\n                                currentCapabilities: {\r\n                                    ...prev.currentCapabilities,\r\n                                    frequency: e.target.value\r\n                                }\r\n                            }))}\r\n                        >\r\n                            <option value=\"\">Select frequency</option>\r\n                            <option value=\"2\">2 sessions/week</option>\r\n                            <option value=\"3\">3 sessions/week</option>\r\n                            <option value=\"4\">4 sessions/week</option>\r\n                            <option value=\"5\">5+ sessions/week</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"capability-item\">\r\n                        <label>Recovery Capacity</label>\r\n                        <select\r\n                            value={assessmentData.currentCapabilities.recovery || ''}\r\n                            onChange={(e) => setAssessmentData(prev => ({\r\n                                ...prev,\r\n                                currentCapabilities: {\r\n                                    ...prev.currentCapabilities,\r\n                                    recovery: e.target.value\r\n                                }\r\n                            }))}\r\n                        >\r\n                            <option value=\"\">Select recovery</option>\r\n                            <option value=\"low\">Low (need extra recovery)</option>\r\n                            <option value=\"moderate\">Moderate (standard recovery)</option>\r\n                            <option value=\"high\">High (fast recovery)</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Bromley Wave Progression Preference */}\r\n            <div className=\"assessment-section\">\r\n                <h3>📊 Bromley Wave Progression Style</h3>\r\n\r\n                <div className=\"wave-options\">\r\n                    <div\r\n                        className={`wave-option ${assessmentData.progressionPreference === 'wave' ? 'selected' : ''\r\n                            }`}\r\n                        onClick={() => setAssessmentData(prev => ({\r\n                            ...prev,\r\n                            progressionPreference: 'wave'\r\n                        }))}\r\n                    >\r\n                        <h4>🌊 Standard Wave Progression</h4>\r\n                        <p>Classic Bromley waves with motor control emphasis</p>\r\n                        <div className=\"wave-example\">Week 1: 3×12 → Week 2: 4×10 → Week 3: 5×8</div>\r\n                    </div>\r\n\r\n                    <div\r\n                        className={`wave-option ${assessmentData.progressionPreference === 'linear-wave' ? 'selected' : ''\r\n                            }`}\r\n                        onClick={() => setAssessmentData(prev => ({\r\n                            ...prev,\r\n                            progressionPreference: 'linear-wave'\r\n                        }))}\r\n                    >\r\n                        <h4>📈 Linear with Wave Enhancement</h4>\r\n                        <p>Traditional linear progression enhanced with Bromley principles</p>\r\n                        <div className=\"wave-example\">Linear base + wave deloads and motor control focus</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Assessment Summary */}\r\n            <div className=\"assessment-summary\">\r\n                <h3>Assessment Summary</h3>\r\n                <div className=\"summary-items\">\r\n                    <div className=\"summary-item\">\r\n                        <strong>Movement Quality:</strong>\r\n                        {Object.keys(assessmentData.movementScreen).length > 0 ? 'Assessed' : 'Pending'}\r\n                    </div>\r\n                    <div className=\"summary-item\">\r\n                        <strong>Motor Control Focus:</strong>\r\n                        {assessmentData.motorControlFocus || 'Not selected'}\r\n                    </div>\r\n                    <div className=\"summary-item\">\r\n                        <strong>Wave Progression:</strong>\r\n                        {assessmentData.progressionPreference || 'Standard wave'}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Navigation */}\r\n            <div className=\"step-navigation\">\r\n                <button\r\n                    className=\"btn-secondary\"\r\n                    onClick={() => actions.setCurrentStep(5)}\r\n                >\r\n                    ← Back to System Selection\r\n                </button>\r\n\r\n                <button\r\n                    className=\"btn-primary\"\r\n                    onClick={handleSaveAndContinue}\r\n                    disabled={!assessmentData.motorControlFocus}\r\n                >\r\n                    Continue to Periodization →\r\n                </button>\r\n            </div>\r\n\r\n            {/* Bromley Integration Status */}\r\n            <div className=\"bromley-status\">\r\n                <h4>🔄 Bromley Linear Integration Status</h4>\r\n                <div className=\"status-items\">\r\n                    ✅ Motor Control Wave Progression Available\r\n                    ✅ Movement Quality Assessment Enhanced\r\n                    ✅ Linear + Wave Periodization Ready\r\n                    ✅ Recovery Protocol Integration\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovementAssessmentStep;\r\n","import React, { useState } from 'react';\r\nimport { useProgramContext } from '../../../contexts/ProgramContext';\r\nimport '../../../styles/NASMMovementAssessment.css';\r\n\r\n/**\r\n * NASMMovementAssessmentStep - Step 4: Dynamic Movement Screens (OHSA)\r\n * \r\n * Complete NASM OHSA Protocol Implementation:\r\n * - Overhead Squat Assessment with systematic compensation analysis\r\n * - Testing modifications for root cause determination\r\n * - 4-Phase corrective exercise prescription\r\n * - Starting OPT phase recommendation algorithm\r\n * - Real-time analysis and corrective strategy\r\n */\r\n\r\n// NASM OHSA Compensation Definitions\r\nconst compensationData = {\r\n    anterior: {\r\n        feetTurnOut: {\r\n            name: \"Feet Turn Out\",\r\n            description: \"Feet turn outward during squat\",\r\n            possibleCauses: [\"Overactive: Soleus, Lateral Gastrocnemius, Biceps Femoris\"],\r\n            correctiveActions: [\"Strengthen: Medial Gastrocnemius, Gracilis, Sartorius\"]\r\n        },\r\n        feetFlatten: {\r\n            name: \"Feet Flatten/Pronate\",\r\n            description: \"Arch collapses, feet roll inward\",\r\n            possibleCauses: [\"Overactive: Peroneals, Lateral Gastrocnemius\"],\r\n            correctiveActions: [\"Strengthen: Anterior Tibialis, Posterior Tibialis\"]\r\n        },\r\n        kneeValgus: {\r\n            name: \"Knee Valgus (Knock Knees)\",\r\n            description: \"Knees cave inward toward midline\",\r\n            possibleCauses: [\"Overactive: Adductor Complex, IT Band, TFL\"],\r\n            correctiveActions: [\"Strengthen: Gluteus Medius/Maximus, VMO\"]\r\n        },\r\n        kneeVarus: {\r\n            name: \"Knee Varus (Bow Legs)\",\r\n            description: \"Knees bow outward away from midline\",\r\n            possibleCauses: [\"Overactive: Lateral Gastrocnemius, Biceps Femoris\"],\r\n            correctiveActions: [\"Strengthen: Adductor Complex, Gracilis\"]\r\n        },\r\n        asymmetricalShift: {\r\n            name: \"Asymmetrical Weight Shift\",\r\n            description: \"Weight shifts to one side during squat\",\r\n            possibleCauses: [\"Ankle/Hip mobility restrictions\", \"Unilateral strength imbalances\"],\r\n            correctiveActions: [\"Address mobility restrictions\", \"Unilateral strengthening\"]\r\n        }\r\n    },\r\n    lateral: {\r\n        forwardLean: {\r\n            name: \"Excessive Forward Lean\",\r\n            description: \"Torso leans too far forward\",\r\n            possibleCauses: [\"Overactive: Soleus, Gastrocnemius, Hip Flexor Complex\"],\r\n            correctiveActions: [\"Strengthen: Anterior Tibialis, Gluteus Maximus\"]\r\n        },\r\n        lowBackArch: {\r\n            name: \"Low Back Arches\",\r\n            description: \"Excessive lumbar extension\",\r\n            possibleCauses: [\"Overactive: Hip Flexor Complex, Erector Spinae, Latissimus Dorsi\"],\r\n            correctiveActions: [\"Strengthen: Gluteus Maximus, Hamstrings, Intrinsic Core\"]\r\n        },\r\n        armsFallForward: {\r\n            name: \"Arms Fall Forward\",\r\n            description: \"Unable to maintain overhead arm position\",\r\n            possibleCauses: [\"Overactive: Latissimus Dorsi, Teres Major, Pectorals\"],\r\n            correctiveActions: [\"Strengthen: Mid/Lower Trapezius, Rhomboids, Posterior Deltoid\"]\r\n        },\r\n        shoulderElevation: {\r\n            name: \"Shoulder Elevation\",\r\n            description: \"Shoulders rise toward ears\",\r\n            possibleCauses: [\"Overactive: Upper Trapezius, Sternocleidomastoid, Levator Scapulae\"],\r\n            correctiveActions: [\"Strengthen: Mid/Lower Trapezius\"]\r\n        },\r\n        forwardHead: {\r\n            name: \"Forward Head\",\r\n            description: \"Head protrudes forward from neutral\",\r\n            possibleCauses: [\"Overactive: Sternocleidomastoid, Scalenes, Suboccipitals\"],\r\n            correctiveActions: [\"Strengthen: Deep Cervical Flexors\"]\r\n        }\r\n    },\r\n    posterior: {\r\n        heelRise: {\r\n            name: \"Heel Rise\",\r\n            description: \"Heels lift off ground during squat\",\r\n            possibleCauses: [\"Overactive: Soleus, Gastrocnemius\"],\r\n            correctiveActions: [\"Strengthen: Anterior Tibialis\", \"Improve ankle dorsiflexion\"]\r\n        },\r\n        calfBulging: {\r\n            name: \"Calf Bulging\",\r\n            description: \"Excessive calf muscle activation\",\r\n            possibleCauses: [\"Overactive: Gastrocnemius, Soleus\"],\r\n            correctiveActions: [\"Improve ankle mobility\", \"Strengthen anterior tibialis\"]\r\n        },\r\n        shoulderElevation: {\r\n            name: \"Shoulder Elevation\",\r\n            description: \"Shoulders rise toward ears\",\r\n            possibleCauses: [\"Overactive: Upper Trapezius, Levator Scapulae\"],\r\n            correctiveActions: [\"Strengthen: Mid/Lower Trapezius\"]\r\n        },\r\n        shoulderProtraction: {\r\n            name: \"Shoulder Protraction\",\r\n            description: \"Shoulders round forward\",\r\n            possibleCauses: [\"Overactive: Pectorals, Anterior Deltoid\"],\r\n            correctiveActions: [\"Strengthen: Rhomboids, Middle Trapezius\"]\r\n        },\r\n        headTilt: {\r\n            name: \"Head Tilt\",\r\n            description: \"Head tilts to one side\",\r\n            possibleCauses: [\"Unilateral neck muscle tightness\"],\r\n            correctiveActions: [\"Address cervical imbalances\"]\r\n        },\r\n        spinalCurvature: {\r\n            name: \"Spinal Curvature\",\r\n            description: \"Lateral spine deviation\",\r\n            possibleCauses: [\"Structural or functional scoliosis\"],\r\n            correctiveActions: [\"Professional assessment required\"]\r\n        }\r\n    }\r\n};\r\n\r\nconst NASMMovementAssessmentStep = () => {\r\n    const { state, actions } = useProgramContext();\r\n\r\n    // NEW: View State Management\r\n    const [currentView, setCurrentView] = useState('selection'); // 'selection' or 'assessment'\r\n    const [selectedAssessment, setSelectedAssessment] = useState(null);\r\n\r\n    const [currentAssessment, setCurrentAssessment] = useState('overhead-squat'); // 'overhead-squat', 'single-leg', 'pushing', 'pulling'\r\n    const [currentTab, setCurrentTab] = useState('setup'); // 'setup', 'assessment', 'modifications', 'analysis'\r\n    const [completedAssessments, setCompletedAssessments] = useState([]);\r\n    const [selectedQuickTags, setSelectedQuickTags] = useState([]);\r\n    const [additionalNotes, setAdditionalNotes] = useState('');\r\n\r\n    // Assessment side selector state\r\n    const [activeSide, setActiveSide] = useState('right'); // 'right' or 'left'\r\n\r\n    // Enhanced Assessment configuration with type property\r\n    const assessmentConfig = [\r\n        { id: 'overhead-squat', name: 'Overhead Squat', type: 'Transitional', required: true, icon: '🏋️‍♂️', description: 'Primary transitional movement screen' },\r\n        { id: 'single-leg', name: 'Single-Leg Squat', type: 'Transitional', required: true, icon: '🦵', description: 'Unilateral movement assessment' },\r\n        { id: 'pushing', name: 'Pushing Assessment', type: 'Transitional', required: true, icon: '👐', description: 'Upper body pushing pattern' },\r\n        { id: 'pulling', name: 'Pulling Assessment', type: 'Transitional', required: true, icon: '🪄', description: 'Upper body pulling pattern' },\r\n        { id: 'overhead-press', name: 'Overhead Press', type: 'Transitional', required: false, icon: '🙌', description: 'Overhead movement pattern' },\r\n        { id: 'star-balance', name: 'Star Balance Test', type: 'Balance', required: false, icon: '⭐', description: 'Multi-directional balance' },\r\n        { id: 'gait-analysis', name: 'Gait Analysis', type: 'Dynamic', required: false, icon: '🚶‍♂️', description: 'Walking/running assessment' }\r\n    ];\r\n\r\n    const requiredAssessments = assessmentConfig.filter(a => a.required).map(a => a.id);\r\n    const optionalAssessments = assessmentConfig.filter(a => !a.required).map(a => a.id);\r\n    const canProceed = requiredAssessments.every(id => completedAssessments.includes(id));\r\n    const completedRequired = completedAssessments.filter(id => requiredAssessments.includes(id)).length;\r\n    const completedOptional = completedAssessments.filter(id => optionalAssessments.includes(id)).length;\r\n    const totalRequired = requiredAssessments.length;\r\n    const remaining = totalRequired - completedRequired;\r\n\r\n    // Navigation Functions\r\n    const startAssessment = (assessmentId) => {\r\n        setSelectedAssessment(assessmentId);\r\n        setCurrentAssessment(assessmentId);\r\n        setCurrentView('assessment');\r\n    };\r\n\r\n    const backToSelection = () => {\r\n        setCurrentView('selection');\r\n        setSelectedAssessment(null);\r\n    };\r\n\r\n    const completeCurrentAssessment = (data) => {\r\n        // Save assessment data\r\n        saveAssessmentData(selectedAssessment, data);\r\n\r\n        // Mark as completed if not already\r\n        if (!completedAssessments.includes(selectedAssessment)) {\r\n            setCompletedAssessments(prev => [...prev, selectedAssessment]);\r\n            showSuccessToast(`${assessmentConfig.find(a => a.id === selectedAssessment)?.name} Completed!`);\r\n        }\r\n\r\n        // Return to selection screen\r\n        backToSelection();\r\n    };\r\n\r\n    const saveAssessmentData = (assessmentId, data) => {\r\n        // This would save the assessment data to the context or state\r\n        console.log(`Saving data for ${assessmentId}:`, data);\r\n    };\r\n\r\n    const proceedToNextStep = () => {\r\n        if (!canProceed) {\r\n            showWarning(`Please complete all required assessments. ${completedRequired}/${totalRequired} completed.`);\r\n            return;\r\n        }\r\n        actions.setCurrentStep(5);\r\n    };\r\n\r\n    const [assessmentData, setAssessmentData] = useState({\r\n        // Overhead Squat Assessment\r\n        overheadSquat: {\r\n            setupComplete: false,\r\n            currentView: 'anterior',\r\n            currentRep: 1,\r\n            totalReps: 5,\r\n            anteriorCompensations: {\r\n                feetTurnOut: { present: false, severity: '', side: '', notes: '' },\r\n                feetFlatten: { present: false, severity: '', side: '', notes: '' },\r\n                kneeValgus: { present: false, severity: '', side: '', notes: '' },\r\n                kneeVarus: { present: false, severity: '', side: '', notes: '' },\r\n                asymmetricalShift: { present: false, severity: '', side: '', notes: '' }\r\n            },\r\n            lateralCompensations: {\r\n                forwardLean: { present: false, severity: '', notes: '' },\r\n                lowBackArch: { present: false, severity: '', notes: '' },\r\n                armsFallForward: { present: false, severity: '', notes: '' },\r\n                shoulderElevation: { present: false, severity: '', notes: '' },\r\n                forwardHead: { present: false, severity: '', notes: '' }\r\n            },\r\n            posteriorCompensations: {\r\n                heelRise: { present: false, severity: '', side: '', notes: '' },\r\n                calfBulging: { present: false, severity: '', side: '', notes: '' },\r\n                shoulderElevation: { present: false, severity: '', side: '', notes: '' },\r\n                shoulderProtraction: { present: false, severity: '', side: '', notes: '' },\r\n                headTilt: { present: false, severity: '', side: '', notes: '' },\r\n                spinalCurvature: { present: false, severity: '', notes: '' }\r\n            },\r\n            modificationsPerformed: {\r\n                heelElevation: { performed: false, results: '', improvement: '' },\r\n                armsDown: { performed: false, results: '', improvement: '' }\r\n            }\r\n        },\r\n\r\n        // Single-Leg Squat Assessment\r\n        singleLegSquat: {\r\n            setupComplete: false,\r\n            rightLeg: {\r\n                kneeValgus: { present: false, severity: '', notes: '' },\r\n                excessiveForwardLean: { present: false, severity: '', notes: '' },\r\n                hipHike: { present: false, severity: '', notes: '' }\r\n            },\r\n            leftLeg: {\r\n                kneeValgus: { present: false, severity: '', notes: '' },\r\n                excessiveForwardLean: { present: false, severity: '', notes: '' },\r\n                hipHike: { present: false, severity: '', notes: '' }\r\n            },\r\n            balanceModification: { used: false, reason: '', notes: '' }\r\n        },\r\n\r\n        // Pushing Assessment\r\n        pushingAssessment: {\r\n            setupComplete: false,\r\n            compensations: {\r\n                lowBackArch: { present: false, severity: '', notes: '' },\r\n                shoulderElevation: { present: false, severity: '', notes: '' },\r\n                headForward: { present: false, severity: '', notes: '' }\r\n            },\r\n            repsCompleted: 0,\r\n            targetReps: 20\r\n        },\r\n\r\n        // Pulling Assessment\r\n        pullingAssessment: {\r\n            setupComplete: false,\r\n            compensations: {\r\n                lowBackArch: { present: false, severity: '', notes: '' },\r\n                shoulderElevation: { present: false, severity: '', notes: '' },\r\n                headForward: { present: false, severity: '', notes: '' }\r\n            },\r\n            repsCompleted: 0,\r\n            targetReps: 20\r\n        },\r\n\r\n        // Overall analysis\r\n        compensationCount: 0,\r\n        severityScore: 0,\r\n        primaryCauses: [],\r\n        correctiveStrategy: null,\r\n        startingPhaseRecommendation: null\r\n    });\r\n\r\n    // OHSA Protocol Specifications\r\n    const OHSAProtocol = {\r\n        equipment: {\r\n            required: ['PVC pipe or dowel', 'Open space 6x6 feet'],\r\n            optional: ['Chair for depth reference', 'Video recording device'],\r\n            alternative: 'Arms overhead if no equipment available'\r\n        },\r\n\r\n        clientPreparation: {\r\n            clothing: 'Shorts and short-sleeve shirt',\r\n            footwear: 'Barefoot required',\r\n            position: 'Feet shoulder-width apart',\r\n            toeDirection: 'Pointing straight ahead',\r\n            armPosition: 'Overhead, shoulder-width apart'\r\n        },\r\n\r\n        executionProtocol: {\r\n            repetitions: 5,\r\n            tempo: 'Natural pace, 2-3 seconds down',\r\n            depth: 'Height of chair seat or comfortable depth',\r\n            cueing: 'Minimal initial cueing only',\r\n            observation: ['Anterior view', 'Lateral view'],\r\n            duration: '5 minutes total assessment'\r\n        }\r\n    };\r\n\r\n    // Compensation Analysis Data\r\n    const compensationData = {\r\n        anterior: {\r\n            feetTurnOut: {\r\n                name: 'Feet Turn Out',\r\n                description: 'Feet externally rotate during squat',\r\n                overactive: ['Gastrocnemius', 'Soleus', 'Biceps femoris (short head)'],\r\n                underactive: ['Medial gastrocnemius', 'Medial hamstrings', 'Gracilis', 'Sartorius'],\r\n                correctives: {\r\n                    inhibit: ['Calf SMR', 'Biceps femoris SMR'],\r\n                    lengthen: ['Calf stretch', 'Biceps femoris stretch'],\r\n                    activate: ['Medial gastrocnemius activation', 'Medial hamstring activation'],\r\n                    integrate: ['Squat to calf raise', 'Single-leg balance']\r\n                }\r\n            },\r\n            feetFlatten: {\r\n                name: 'Feet Flatten/Pronate',\r\n                description: 'Excessive pronation, arch collapse',\r\n                overactive: ['Peroneals', 'Gastrocnemius', 'Soleus'],\r\n                underactive: ['Posterior tibialis', 'Anterior tibialis', 'Flexor hallucis longus'],\r\n                correctives: {\r\n                    inhibit: ['Peroneal SMR', 'Calf SMR'],\r\n                    lengthen: ['Calf stretch', 'Peroneal stretch'],\r\n                    activate: ['Posterior tibialis activation', 'Intrinsic foot strengthening'],\r\n                    integrate: ['Single-leg balance', 'Barefoot training']\r\n                }\r\n            },\r\n            kneeValgus: {\r\n                name: 'Knee Valgus (Cave Inward)',\r\n                description: 'Knees cave inward - most common compensation',\r\n                overactive: ['Adductor complex', 'Tensor fascia latae', 'Biceps femoris (short head)', 'Vastus lateralis'],\r\n                underactive: ['Gluteus medius', 'Gluteus maximus', 'Vastus medialis oblique'],\r\n                correctives: {\r\n                    inhibit: ['Adductor SMR', 'TFL/ITB SMR'],\r\n                    lengthen: ['Standing adductor stretch', 'Supine TFL stretch'],\r\n                    activate: ['Glute med clams', 'Lateral tube walking', 'Glute bridges'],\r\n                    integrate: ['Ball squats', 'Lateral lunges', 'Step-ups with band']\r\n                },\r\n                testingModification: 'Heels on 2x4 board or plates'\r\n            },\r\n            kneeVarus: {\r\n                name: 'Knee Varus (Bow Outward)',\r\n                description: 'Knees bow outward - less common',\r\n                overactive: ['Tensor fascia latae', 'Vastus lateralis', 'Biceps femoris (short head)'],\r\n                underactive: ['Adductor complex', 'Medial hamstrings', 'Gluteus maximus'],\r\n                correctives: {\r\n                    inhibit: ['TFL/ITB SMR', 'Vastus lateralis SMR'],\r\n                    lengthen: ['TFL stretch', 'Quad stretch'],\r\n                    activate: ['Adductor activation', 'Glute max activation'],\r\n                    integrate: ['Adductor lunges', 'Sumo squats']\r\n                }\r\n            }\r\n        },\r\n\r\n        lateral: {\r\n            forwardLean: {\r\n                name: 'Forward Lean',\r\n                description: 'Excessive torso lean forward',\r\n                overactive: ['Gastrocnemius', 'Soleus', 'Hip flexor complex', 'Abdominal complex'],\r\n                underactive: ['Anterior tibialis', 'Gluteus maximus', 'Erector spinae'],\r\n                correctives: {\r\n                    inhibit: ['Calf SMR', 'Hip flexor SMR'],\r\n                    lengthen: ['Calf stretch wall lean', 'Kneeling hip flexor stretch'],\r\n                    activate: ['Anterior tibialis raises', 'Glute bridges', 'Prone cobra'],\r\n                    integrate: ['Wall squats', 'Heel-elevated squats']\r\n                }\r\n            },\r\n            lowBackArch: {\r\n                name: 'Low Back Arch',\r\n                description: 'Excessive lumbar lordosis',\r\n                overactive: ['Hip flexor complex', 'Erector spinae', 'Latissimus dorsi'],\r\n                underactive: ['Gluteus maximus', 'Hamstring complex', 'Intrinsic core stabilizers'],\r\n                correctives: {\r\n                    inhibit: ['Hip flexor SMR', 'Lat SMR', 'Erector spinae SMR'],\r\n                    lengthen: ['Kneeling hip flexor stretch', 'Lat stretch on ball'],\r\n                    activate: ['Dead bug', 'Posterior pelvic tilts', 'Glute bridges', 'Bird dog'],\r\n                    integrate: ['Wall squat with pelvic tilt', 'Overhead squats progressed']\r\n                },\r\n                testingModification: 'Hands on hips modification'\r\n            },\r\n            armsFallForward: {\r\n                name: 'Arms Fall Forward',\r\n                description: 'Arms drift forward during squat',\r\n                overactive: ['Latissimus dorsi', 'Teres major', 'Pectoralis major', 'Pectoralis minor'],\r\n                underactive: ['Mid trapezius', 'Lower trapezius', 'Rhomboids', 'Rotator cuff'],\r\n                correctives: {\r\n                    inhibit: ['Lat SMR', 'Pec SMR'],\r\n                    lengthen: ['Doorway pec stretch', 'Lat stretch on ball'],\r\n                    activate: ['Prone cobra', 'Wall angels', 'Scapular retractions', 'External rotation band'],\r\n                    integrate: ['Wall slides', 'Overhead reach squats', 'Band pull-aparts overhead']\r\n                }\r\n            },\r\n            shoulderElevation: {\r\n                name: 'Shoulder Elevation',\r\n                description: 'Shoulders rise toward ears',\r\n                overactive: ['Upper trapezius', 'Sternocleidomastoid', 'Levator scapulae'],\r\n                underactive: ['Lower trapezius', 'Serratus anterior'],\r\n                correctives: {\r\n                    inhibit: ['Upper trap SMR', 'Levator scapulae SMR'],\r\n                    lengthen: ['Upper trap stretch', 'Levator scapulae stretch'],\r\n                    activate: ['Lower trap strengthening', 'Serratus anterior wall slides'],\r\n                    integrate: ['Overhead movements with proper scapular positioning']\r\n                }\r\n            },\r\n            forwardHead: {\r\n                name: 'Forward Head',\r\n                description: 'Head juts forward',\r\n                overactive: ['Sternocleidomastoid', 'Scalenes', 'Upper trapezius'],\r\n                underactive: ['Deep cervical flexors', 'Mid/lower trapezius'],\r\n                correctives: {\r\n                    inhibit: ['SCM SMR', 'Upper trap SMR'],\r\n                    lengthen: ['SCM stretch', 'Upper trap stretch'],\r\n                    activate: ['Deep cervical flexor strengthening', 'Chin tucks'],\r\n                    integrate: ['Postural awareness exercises']\r\n                }\r\n            }\r\n        },\r\n\r\n        posterior: {\r\n            heelRise: {\r\n                name: 'Heel Rise/Early Heel Off',\r\n                description: 'Heels lift off ground during squat descent',\r\n                overactive: ['Gastrocnemius', 'Soleus', 'Hip flexor complex'],\r\n                underactive: ['Anterior tibialis', 'Gluteus maximus'],\r\n                correctives: {\r\n                    inhibit: ['Calf SMR', 'Hip flexor SMR'],\r\n                    lengthen: ['Calf stretch', 'Hip flexor stretch'],\r\n                    activate: ['Anterior tibialis strengthening', 'Glute activation'],\r\n                    integrate: ['Heel-down squats', 'Wall slides']\r\n                }\r\n            },\r\n            calfBulging: {\r\n                name: 'Calf Bulging/Asymmetry',\r\n                description: 'Unilateral calf muscle prominence or asymmetry',\r\n                overactive: ['Gastrocnemius (affected side)', 'Soleus (affected side)'],\r\n                underactive: ['Anterior tibialis', 'Peroneals (opposite side)'],\r\n                correctives: {\r\n                    inhibit: ['Unilateral calf SMR'],\r\n                    lengthen: ['Unilateral calf stretching'],\r\n                    activate: ['Ankle mobility drills', 'Single-leg balance'],\r\n                    integrate: ['Unilateral balance training', 'Single-leg squats']\r\n                }\r\n            },\r\n            shoulderElevation: {\r\n                name: 'Shoulder Elevation (Posterior View)',\r\n                description: 'One or both shoulders elevated relative to the other',\r\n                overactive: ['Upper trapezius', 'Levator scapulae', 'Rhomboids'],\r\n                underactive: ['Lower trapezius', 'Serratus anterior', 'Latissimus dorsi'],\r\n                correctives: {\r\n                    inhibit: ['Upper trap SMR', 'Levator scapulae SMR'],\r\n                    lengthen: ['Upper trap stretch', 'Levator scapulae stretch'],\r\n                    activate: ['Lower trap strengthening', 'Serratus anterior activation'],\r\n                    integrate: ['Scapular stability exercises', 'Overhead reaching patterns']\r\n                }\r\n            },\r\n            shoulderProtraction: {\r\n                name: 'Shoulder Protraction/Forward Shoulders',\r\n                description: 'Shoulders appear rounded forward from posterior view',\r\n                overactive: ['Pectoralis major/minor', 'Anterior deltoid', 'Latissimus dorsi'],\r\n                underactive: ['Mid trapezius', 'Rhomboids', 'Posterior deltoid'],\r\n                correctives: {\r\n                    inhibit: ['Pec SMR', 'Lat SMR'],\r\n                    lengthen: ['Doorway pec stretch', 'Cross-body lat stretch'],\r\n                    activate: ['Prone cobra', 'Scapular retractions', 'External rotations'],\r\n                    integrate: ['Wall angels', 'Band pull-aparts', 'Prone Y-T-W']\r\n                }\r\n            },\r\n            headTilt: {\r\n                name: 'Lateral Head Tilt',\r\n                description: 'Head tilted to one side during movement',\r\n                overactive: ['Sternocleidomastoid (opposite side)', 'Upper trap (same side)', 'Scalenes'],\r\n                underactive: ['Deep cervical flexors', 'Sternocleidomastoid (same side)'],\r\n                correctives: {\r\n                    inhibit: ['SCM SMR (opposite side)', 'Upper trap SMR'],\r\n                    lengthen: ['Lateral neck stretch', 'Upper trap stretch'],\r\n                    activate: ['Deep cervical flexor strengthening', 'Chin tucks'],\r\n                    integrate: ['Postural awareness training', 'Cervical stability exercises']\r\n                }\r\n            },\r\n            spinalCurvature: {\r\n                name: 'Lateral Spinal Curvature/Scoliosis',\r\n                description: 'Visible lateral curvature of the spine',\r\n                overactive: ['Quadratus lumborum', 'Erector spinae (concave side)', 'Latissimus dorsi'],\r\n                underactive: ['Quadratus lumborum (convex side)', 'Core stabilizers', 'Gluteus medius'],\r\n                correctives: {\r\n                    inhibit: ['QL SMR', 'Lat SMR', 'Erector spinae SMR'],\r\n                    lengthen: ['Side bending stretches', 'Lat stretches'],\r\n                    activate: ['Core stabilization', 'Unilateral glute strengthening'],\r\n                    integrate: ['Functional movement patterns', 'Asymmetrical loading exercises']\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    // Single-Leg Squat Assessment Data (NASM Table 6-13)\r\n    const singleLegCompensations = {\r\n        kneeValgus: {\r\n            name: 'Knee Moves Inward (Valgus)',\r\n            description: 'Knee adducts and internally rotates during single-leg squat',\r\n            likelyOveractive: ['Adductor complex', 'Biceps femoris (short head)', 'TFL', 'Vastus lateralis'],\r\n            likelyUnderactive: ['Gluteus medius/maximus', 'Vastus medialis oblique (VMO)'],\r\n            correctives: {\r\n                inhibit: ['Adductor SMR', 'TFL/ITB SMR'],\r\n                lengthen: ['Standing adductor stretch', 'Supine TFL stretch'],\r\n                activate: ['Glute med clams', 'Lateral tube walking', 'Single-leg glute bridges'],\r\n                integrate: ['Single-leg balance', 'Lateral lunges', 'Step-ups with proper alignment']\r\n            }\r\n        }\r\n    };\r\n\r\n    // Pushing Assessment Data (NASM Table 6-14)\r\n    const pushingCompensations = {\r\n        lowBackArch: {\r\n            name: 'Low-Back Arches',\r\n            description: 'Excessive lumbar extension during pushing movement',\r\n            likelyOveractive: ['Hip flexors', 'Erector spinae'],\r\n            likelyUnderactive: ['Intrinsic core stabilizers'],\r\n            correctives: {\r\n                inhibit: ['Hip flexor SMR', 'Erector spinae SMR'],\r\n                lengthen: ['Kneeling hip flexor stretch', 'Standing hip flexor stretch'],\r\n                activate: ['Drawing-in maneuver', 'Marching', 'Dead bug'],\r\n                integrate: ['Ball squats', 'Push-ups with proper alignment']\r\n            }\r\n        },\r\n        shoulderElevation: {\r\n            name: 'Shoulder Elevation',\r\n            description: 'Shoulders elevate during pushing movement',\r\n            likelyOveractive: ['Upper trapezius', 'Sternocleidomastoid', 'Levator scapulae'],\r\n            likelyUnderactive: ['Mid/Lower trapezius'],\r\n            correctives: {\r\n                inhibit: ['Upper trap SMR', 'Levator scapulae SMR'],\r\n                lengthen: ['Upper trap stretch', 'Levator scapulae stretch'],\r\n                activate: ['Lower trap strengthening', 'Cobra'],\r\n                integrate: ['Wall slides', 'Overhead reach squats', 'Band pull-aparts overhead']\r\n            }\r\n        },\r\n        headForward: {\r\n            name: 'Head Migrates Forward',\r\n            description: 'Forward head posture during pushing movement',\r\n            likelyOveractive: ['Upper trapezius', 'Sternocleidomastoid', 'Levator scapulae'],\r\n            likelyUnderactive: ['Deep cervical flexors'],\r\n            correctives: {\r\n                inhibit: ['Upper trap SMR', 'SCM SMR'],\r\n                lengthen: ['Upper trap stretch', 'Levator scapulae stretch'],\r\n                activate: ['Chin tucks', 'Deep cervical flexor strengthening'],\r\n                integrate: ['Wall angels', 'Band pull-aparts', 'Prone Y-T-W']\r\n            }\r\n        }\r\n    };\r\n\r\n    // Pulling Assessment Data (NASM Table 6-15)\r\n    const pullingCompensations = {\r\n        lowBackArch: {\r\n            name: 'Low-Back Arches',\r\n            description: 'Excessive lumbar extension during pulling movement',\r\n            likelyOveractive: ['Hip flexors', 'Erector spinae'],\r\n            likelyUnderactive: ['Intrinsic core stabilizers'],\r\n            correctives: {\r\n                inhibit: ['Hip flexor SMR', 'Erector spinae SMR'],\r\n                lengthen: ['Kneeling hip flexor stretch', 'Standing hip flexor stretch'],\r\n                activate: ['Drawing-in maneuver', 'Marching', 'Dead bug'],\r\n                integrate: ['Ball squats', 'Rows with proper alignment']\r\n            }\r\n        },\r\n        shoulderElevation: {\r\n            name: 'Shoulder Elevation',\r\n            description: 'Shoulders elevate during pulling movement',\r\n            likelyOveractive: ['Upper trapezius', 'Sternocleidomastoid', 'Levator scapulae'],\r\n            likelyUnderactive: ['Mid/Lower trapezius'],\r\n            correctives: {\r\n                inhibit: ['Upper trap SMR', 'Levator scapulae SMR'],\r\n                lengthen: ['Upper trap stretch', 'Levator scapulae stretch'],\r\n                activate: ['Lower trap strengthening', 'Cobra'],\r\n                integrate: ['Wall slides', 'Overhead reach squats', 'Band pull-aparts overhead']\r\n            }\r\n        },\r\n        headProtrudes: {\r\n            name: 'Head Protrudes Forward',\r\n            description: 'Forward head posture during pulling movement',\r\n            likelyOveractive: ['Upper trapezius', 'Sternocleidomastoid', 'Levator scapulae'],\r\n            likelyUnderactive: ['Deep cervical flexors'],\r\n            correctives: {\r\n                inhibit: ['Upper trap SMR', 'SCM SMR'],\r\n                lengthen: ['Upper trap stretch', 'Levator scapulae stretch'],\r\n                activate: ['Chin tucks', 'Deep cervical flexor strengthening'],\r\n                integrate: ['Wall angels', 'Band pull-aparts', 'Prone Y-T-W']\r\n            }\r\n        }\r\n    };\r\n\r\n    // Helper Functions\r\n    const markAssessmentComplete = (assessmentId) => {\r\n        if (!completedAssessments.includes(assessmentId)) {\r\n            setCompletedAssessments(prev => [...prev, assessmentId]);\r\n            showSuccessToast(`${assessmentConfig.find(a => a.id === assessmentId)?.name} Completed!`);\r\n        }\r\n    };\r\n\r\n    const showSuccessToast = (message) => {\r\n        const toast = document.createElement('div');\r\n        toast.className = 'success-toast';\r\n        toast.textContent = `✅ ${message}`;\r\n        toast.style.cssText = `\r\n            position: fixed;\r\n            top: 20px;\r\n            right: 20px;\r\n            background: #22c55e;\r\n            color: white;\r\n            padding: 12px 24px;\r\n            border-radius: 8px;\r\n            font-weight: 500;\r\n            z-index: 1000;\r\n            animation: slideIn 0.3s ease;\r\n        `;\r\n        document.body.appendChild(toast);\r\n        setTimeout(() => toast.remove(), 3000);\r\n    };\r\n\r\n    const showWarning = (message) => {\r\n        const toast = document.createElement('div');\r\n        toast.className = 'warning-toast';\r\n        toast.textContent = `⚠️ ${message}`;\r\n        toast.style.cssText = `\r\n            position: fixed;\r\n            top: 20px;\r\n            right: 20px;\r\n            background: #f59e0b;\r\n            color: white;\r\n            padding: 12px 24px;\r\n            border-radius: 8px;\r\n            font-weight: 500;\r\n            z-index: 1000;\r\n            animation: slideIn 0.3s ease;\r\n        `;\r\n        document.body.appendChild(toast);\r\n        setTimeout(() => toast.remove(), 4000);\r\n    };\r\n\r\n    const toggleQuickTag = (tag) => {\r\n        setSelectedQuickTags(prev =>\r\n            prev.includes(tag)\r\n                ? prev.filter(t => t !== tag)\r\n                : [...prev, tag]\r\n        );\r\n    };\r\n\r\n    const handleCompensationChange = (assessment, section, compensation, field, value) => {\r\n        setAssessmentData(prev => ({\r\n            ...prev,\r\n            [assessment]: {\r\n                ...prev[assessment],\r\n                [section]: {\r\n                    ...prev[assessment][section],\r\n                    [compensation]: {\r\n                        ...prev[assessment][section][compensation],\r\n                        [field]: value\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n\r\n        // Recalculate analysis when compensations change\r\n        if (field === 'severity' || field === 'present') {\r\n            calculateAnalysis();\r\n        }\r\n    };\r\n\r\n    const calculateSeverityScore = () => {\r\n        let score = 0;\r\n\r\n        // Overhead Squat compensations\r\n        const ohsCompensations = {\r\n            ...assessmentData.overheadSquat.anteriorCompensations,\r\n            ...assessmentData.overheadSquat.lateralCompensations,\r\n            ...assessmentData.overheadSquat.posteriorCompensations\r\n        };\r\n\r\n        Object.values(ohsCompensations).forEach(comp => {\r\n            if (comp.severity && comp.severity !== 'none') {\r\n                score += comp.severity === 'severe' ? 3 : comp.severity === 'moderate' ? 2 : 1;\r\n            }\r\n        });\r\n\r\n        // Single-leg compensations\r\n        Object.values(assessmentData.singleLegSquat.rightLeg).forEach(comp => {\r\n            if (comp.severity && comp.severity !== 'none') {\r\n                score += comp.severity === 'severe' ? 3 : comp.severity === 'moderate' ? 2 : 1;\r\n            }\r\n        });\r\n        Object.values(assessmentData.singleLegSquat.leftLeg).forEach(comp => {\r\n            if (comp.severity && comp.severity !== 'none') {\r\n                score += comp.severity === 'severe' ? 3 : comp.severity === 'moderate' ? 2 : 1;\r\n            }\r\n        });\r\n\r\n        // Push/Pull compensations\r\n        Object.values(assessmentData.pushingAssessment.compensations).forEach(comp => {\r\n            if (comp.severity && comp.severity !== 'none') {\r\n                score += comp.severity === 'severe' ? 3 : comp.severity === 'moderate' ? 2 : 1;\r\n            }\r\n        });\r\n        Object.values(assessmentData.pullingAssessment.compensations).forEach(comp => {\r\n            if (comp.severity && comp.severity !== 'none') {\r\n                score += comp.severity === 'severe' ? 3 : comp.severity === 'moderate' ? 2 : 1;\r\n            }\r\n        });\r\n\r\n        return score;\r\n    };\r\n\r\n    const calculateAnalysis = () => {\r\n        // Count compensations across all assessments\r\n        const ohsCount = (\r\n            Object.values(assessmentData.overheadSquat.anteriorCompensations).filter(c => c.severity && c.severity !== 'none').length +\r\n            Object.values(assessmentData.overheadSquat.lateralCompensations).filter(c => c.severity && c.severity !== 'none').length +\r\n            Object.values(assessmentData.overheadSquat.posteriorCompensations).filter(c => c.severity && c.severity !== 'none').length\r\n        );\r\n\r\n        const slsCount = (\r\n            Object.values(assessmentData.singleLegSquat.rightLeg).filter(c => c.severity && c.severity !== 'none').length +\r\n            Object.values(assessmentData.singleLegSquat.leftLeg).filter(c => c.severity && c.severity !== 'none').length\r\n        );\r\n\r\n        const pushCount = Object.values(assessmentData.pushingAssessment.compensations).filter(c => c.severity && c.severity !== 'none').length;\r\n        const pullCount = Object.values(assessmentData.pullingAssessment.compensations).filter(c => c.severity && c.severity !== 'none').length;\r\n\r\n        const totalCount = ohsCount + slsCount + pushCount + pullCount;\r\n        const severityScore = calculateSeverityScore();\r\n\r\n        setAssessmentData(prev => ({\r\n            ...prev,\r\n            compensationCount: totalCount,\r\n            severityScore: severityScore\r\n        }));\r\n    };\r\n\r\n    const determineStartingPhase = () => {\r\n        const { compensationCount, severityScore } = assessmentData;\r\n        const clientExperience = state.experienceLevel || 'beginner';\r\n\r\n        // Severe compensations or multiple issues\r\n        if (compensationCount >= 3 || severityScore >= 8) {\r\n            return {\r\n                phase: 'Phase 1 Extended',\r\n                duration: '6-8 weeks',\r\n                focus: 'Extensive corrective emphasis',\r\n                correctiveVolume: 'High',\r\n                reasoning: 'Multiple significant compensations require extended stabilization'\r\n            };\r\n        }\r\n\r\n        // Moderate compensations\r\n        if (compensationCount >= 2 || severityScore >= 5) {\r\n            return {\r\n                phase: 'Phase 1 Standard',\r\n                duration: '4-6 weeks',\r\n                focus: 'Standard stabilization with correctives',\r\n                correctiveVolume: 'Moderate',\r\n                reasoning: 'Some compensations present, standard Phase 1 with corrective emphasis'\r\n            };\r\n        }\r\n\r\n        // Minor compensations, experienced client\r\n        if (clientExperience === 'advanced' && compensationCount <= 1 && severityScore <= 3) {\r\n            return {\r\n                phase: 'Phase 1 Accelerated',\r\n                duration: '2-4 weeks',\r\n                focus: 'Movement validation and preparation',\r\n                correctiveVolume: 'Low',\r\n                reasoning: 'Minor issues with experienced client'\r\n            };\r\n        }\r\n\r\n        // Default recommendation\r\n        return {\r\n            phase: 'Phase 1 Standard',\r\n            duration: '4 weeks',\r\n            focus: 'Foundation building',\r\n            correctiveVolume: 'Moderate',\r\n            reasoning: 'Standard NASM entry point'\r\n        };\r\n    };\r\n\r\n    // Assessment Selection Screen Component\r\n    const AssessmentSelectionScreen = () => (\r\n        <div className=\"assessment-selection-screen\">\r\n            {/* Top Progress Summary */}\r\n            <div className=\"step-progress-summary\">\r\n                <div className=\"progress-overview\">\r\n                    <div className=\"progress-stat\">\r\n                        <span className=\"stat-label\">Required</span>\r\n                        <span className=\"stat-value\">{completedRequired}/{totalRequired}</span>\r\n                    </div>\r\n                    <div className=\"progress-stat\">\r\n                        <span className=\"stat-label\">Optional</span>\r\n                        <span className=\"stat-value\">{completedOptional}/{optionalAssessments.length}</span>\r\n                    </div>\r\n                    <div className=\"progress-stat\">\r\n                        <span className=\"stat-label\">Total Time</span>\r\n                        <span className=\"stat-value\">~15 min</span>\r\n                    </div>\r\n                </div>\r\n\r\n                <button\r\n                    className=\"proceed-main-btn\"\r\n                    disabled={completedRequired < totalRequired}\r\n                    onClick={proceedToNextStep}\r\n                >\r\n                    {completedRequired >= totalRequired ? 'Continue to Step 5' : `Complete ${totalRequired - completedRequired} more`}\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"assessment-container\">\r\n                {/* Required Section */}\r\n                <div className=\"section-container\">\r\n                    <div className=\"section-header\">\r\n                        <h3>🎯 Required Assessments</h3>\r\n                        <span className=\"progress-badge\">{completedRequired}/{totalRequired} Complete</span>\r\n                    </div>\r\n\r\n                    <div className=\"assessment-grid\">\r\n                        {assessmentConfig.filter(a => a.required).map(assessment => (\r\n                            <div\r\n                                key={assessment.id}\r\n                                className={`assessment-card ${completedAssessments.includes(assessment.id) ? 'completed' : ''}`}\r\n                                onClick={() => startAssessment(assessment.id)}\r\n                            >\r\n                                <div className=\"card-status\">\r\n                                    {completedAssessments.includes(assessment.id) ? '✅' : '⭕'}\r\n                                </div>\r\n\r\n                                <div className=\"card-content\">\r\n                                    <h4>{assessment.name}</h4>\r\n                                    <p className=\"card-type\">{assessment.type}</p>\r\n                                    <p className=\"card-description\">{assessment.description}</p>\r\n\r\n                                    <div className=\"card-details\">\r\n                                        <span className=\"detail-chip\">📊 5 reps</span>\r\n                                        <span className=\"detail-chip\">👁️ 3 views</span>\r\n                                        <span className=\"detail-chip\">⏱️ 3-4 min</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <button className={`card-action ${completedAssessments.includes(assessment.id) ? 'review' : 'start'}`}>\r\n                                    {completedAssessments.includes(assessment.id) ? 'Review' : 'Start'}\r\n                                </button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Optional Section */}\r\n                <div className=\"section-container\">\r\n                    <div className=\"section-header\">\r\n                        <h3>➕ Optional Assessments</h3>\r\n                        <span className=\"info-text\">Recommended for comprehensive evaluation</span>\r\n                    </div>\r\n\r\n                    <div className=\"assessment-grid optional\">\r\n                        {assessmentConfig.filter(a => !a.required).map(assessment => (\r\n                            <div\r\n                                key={assessment.id}\r\n                                className={`assessment-card ${completedAssessments.includes(assessment.id) ? 'completed' : ''}`}\r\n                                onClick={() => startAssessment(assessment.id)}\r\n                            >\r\n                                <div className=\"card-status\">\r\n                                    {completedAssessments.includes(assessment.id) ? '✅' : '🔄'}\r\n                                </div>\r\n\r\n                                <div className=\"card-content\">\r\n                                    <h4>{assessment.name}</h4>\r\n                                    <p className=\"card-type\">{assessment.type}</p>\r\n                                    <p className=\"card-description\">{assessment.description}</p>\r\n\r\n                                    <div className=\"card-details\">\r\n                                        {assessment.id === 'star-balance' && (\r\n                                            <>\r\n                                                <span className=\"detail-chip\">📊 8 directions</span>\r\n                                                <span className=\"detail-chip\">👁️ Single view</span>\r\n                                                <span className=\"detail-chip\">⏱️ 2-3 min</span>\r\n                                            </>\r\n                                        )}\r\n                                        {assessment.id === 'gait-analysis' && (\r\n                                            <>\r\n                                                <span className=\"detail-chip\">📊 Walking</span>\r\n                                                <span className=\"detail-chip\">👁️ Multiple angles</span>\r\n                                                <span className=\"detail-chip\">⏱️ 4-5 min</span>\r\n                                            </>\r\n                                        )}\r\n                                        {assessment.id === 'overhead-press' && (\r\n                                            <>\r\n                                                <span className=\"detail-chip\">📊 10 reps</span>\r\n                                                <span className=\"detail-chip\">👁️ 2 views</span>\r\n                                                <span className=\"detail-chip\">⏱️ 3 min</span>\r\n                                            </>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <button className={`card-action ${completedAssessments.includes(assessment.id) ? 'review' : 'start'}`}>\r\n                                    {completedAssessments.includes(assessment.id) ? 'Review' : 'Start Optional'}\r\n                                </button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    // Render Functions\r\n    const renderSetupTab = () => (\r\n        <div className=\"setup-section\">\r\n            <div className=\"protocol-header\">\r\n                <h3>🏃‍♂️ OHSA Setup Protocol</h3>\r\n                <p>Ensure proper setup for accurate assessment results</p>\r\n            </div>\r\n\r\n            <div className=\"setup-checklist\">\r\n                <h4>Pre-Assessment Checklist</h4>\r\n                <div className=\"checklist-grid\">\r\n                    <label className=\"checklist-item\">\r\n                        <input type=\"checkbox\" />\r\n                        <span>Client barefoot (shoes and socks removed)</span>\r\n                    </label>\r\n                    <label className=\"checklist-item\">\r\n                        <input type=\"checkbox\" />\r\n                        <span>Feet shoulder-width apart</span>\r\n                    </label>\r\n                    <label className=\"checklist-item\">\r\n                        <input type=\"checkbox\" />\r\n                        <span>Toes pointing straight ahead</span>\r\n                    </label>\r\n                    <label className=\"checklist-item\">\r\n                        <input type=\"checkbox\" />\r\n                        <span>Arms overhead position ready</span>\r\n                    </label>\r\n                    <label className=\"checklist-item\">\r\n                        <input type=\"checkbox\" />\r\n                        <span>Clear anterior and lateral view</span>\r\n                    </label>\r\n                    <label className=\"checklist-item\">\r\n                        <input type=\"checkbox\" />\r\n                        <span>Space cleared (6x6 feet minimum)</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"equipment-section\">\r\n                <h4>Equipment</h4>\r\n                <div className=\"equipment-list\">\r\n                    <div className=\"equipment-category\">\r\n                        <h5>Required:</h5>\r\n                        <ul>\r\n                            <li>PVC pipe or dowel (or bodyweight only)</li>\r\n                            <li>Open space (6x6 feet)</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"equipment-category\">\r\n                        <h5>Optional:</h5>\r\n                        <ul>\r\n                            <li>Chair for depth reference</li>\r\n                            <li>Video recording device</li>\r\n                            <li>2x4 board for modifications</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"instruction-sequence\">\r\n                <h4>Assessment Instructions</h4>\r\n                <ol>\r\n                    <li>Remove shoes and socks for accurate assessment</li>\r\n                    <li>Stand with feet shoulder-width apart, toes pointing forward</li>\r\n                    <li>Hold arms overhead in a narrow Y position</li>\r\n                    <li>Squat as if sitting back into a chair to comfortable depth</li>\r\n                    <li>Return to starting position with control</li>\r\n                    <li>Repeat 5 times at natural pace (2-3 seconds down)</li>\r\n                    <li>Focus straight ahead, maintain arm position throughout</li>\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const renderAssessmentTab = () => (\r\n        <div className=\"assessment-section\">\r\n            <div className=\"assessment-header\">\r\n                <h3>🎯 Movement Assessment</h3>\r\n                <div className=\"rep-counter\">\r\n                    <span>Repetition: {assessmentData.currentRep} / {assessmentData.totalReps}</span>\r\n                    <div className=\"view-selector\">\r\n                        <button\r\n                            className={`view-btn ${assessmentData.overheadSquat.currentView === 'anterior' ? 'active' : ''}`}\r\n                            onClick={() => setAssessmentData(prev => ({\r\n                                ...prev,\r\n                                overheadSquat: { ...prev.overheadSquat, currentView: 'anterior' }\r\n                            }))}\r\n                        >\r\n                            Anterior View\r\n                        </button>\r\n                        <button\r\n                            className={`view-btn ${assessmentData.overheadSquat.currentView === 'lateral' ? 'active' : ''}`}\r\n                            onClick={() => setAssessmentData(prev => ({\r\n                                ...prev,\r\n                                overheadSquat: { ...prev.overheadSquat, currentView: 'lateral' }\r\n                            }))}\r\n                        >\r\n                            Lateral View\r\n                        </button>\r\n                        <button\r\n                            className={`view-btn ${assessmentData.overheadSquat.currentView === 'posterior' ? 'active' : ''}`}\r\n                            onClick={() => setAssessmentData(prev => ({\r\n                                ...prev,\r\n                                overheadSquat: { ...prev.overheadSquat, currentView: 'posterior' }\r\n                            }))}\r\n                        >\r\n                            Posterior View\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {assessmentData.overheadSquat.currentView === 'anterior' && (\r\n                <div className=\"compensation-checkpoints\">\r\n                    <h4>Anterior View Checkpoints</h4>\r\n                    {Object.entries(compensationData.anterior).map(([key, comp]) => (\r\n                        <div key={key} className=\"compensation-item\">\r\n                            <div className=\"compensation-header\">\r\n                                <label className=\"compensation-checkbox\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={assessmentData.overheadSquat.anteriorCompensations[key]?.present || false}\r\n                                        onChange={(e) => handleCompensationChange('overheadSquat', 'anteriorCompensations', key, 'present', e.target.checked)}\r\n                                    />\r\n                                    <strong>{comp.name}</strong>\r\n                                </label>\r\n\r\n                                {assessmentData.overheadSquat.anteriorCompensations[key]?.present && (\r\n                                    <select\r\n                                        value={assessmentData.overheadSquat.anteriorCompensations[key]?.severity || ''}\r\n                                        onChange={(e) => handleCompensationChange('overheadSquat', 'anteriorCompensations', key, 'severity', e.target.value)}\r\n                                        className=\"severity-select\"\r\n                                    >\r\n                                        <option value=\"\">Select Severity</option>\r\n                                        <option value=\"Mild\">Mild</option>\r\n                                        <option value=\"Moderate\">Moderate</option>\r\n                                        <option value=\"Severe\">Severe</option>\r\n                                    </select>\r\n                                )}\r\n                            </div>\r\n\r\n                            <p className=\"compensation-description\">{comp.description}</p>\r\n\r\n                            {assessmentData.overheadSquat.anteriorCompensations[key]?.present && (\r\n                                <div className=\"compensation-details\">\r\n                                    <div className=\"muscle-analysis\">\r\n                                        <div className=\"possible-causes\">\r\n                                            <strong>Possible Causes:</strong> {comp.possibleCauses.join(', ')}\r\n                                        </div>\r\n                                        <div className=\"corrective-actions\">\r\n                                            <strong>Corrective Actions:</strong> {comp.correctiveActions.join(', ')}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <textarea\r\n                                        placeholder=\"Additional notes...\"\r\n                                        value={assessmentData.overheadSquat.anteriorCompensations[key]?.notes || ''}\r\n                                        onChange={(e) => handleCompensationChange('overheadSquat', 'anteriorCompensations', key, 'notes', e.target.value)}\r\n                                        className=\"notes-textarea\"\r\n                                        rows=\"2\"\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n            {assessmentData.overheadSquat.currentView === 'lateral' && (\r\n                <div className=\"compensation-checkpoints\">\r\n                    <h4>Lateral View Checkpoints</h4>\r\n                    {Object.entries(compensationData.lateral).map(([key, comp]) => (\r\n                        <div key={key} className=\"compensation-item\">\r\n                            <div className=\"compensation-header\">\r\n                                <label className=\"compensation-checkbox\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={assessmentData.overheadSquat.lateralCompensations[key]?.present || false}\r\n                                        onChange={(e) => handleCompensationChange('overheadSquat', 'lateralCompensations', key, 'present', e.target.checked)}\r\n                                    />\r\n                                    <strong>{comp.name}</strong>\r\n                                </label>\r\n\r\n                                {assessmentData.overheadSquat.lateralCompensations[key]?.present && (\r\n                                    <select\r\n                                        value={assessmentData.overheadSquat.lateralCompensations[key]?.severity || ''}\r\n                                        onChange={(e) => handleCompensationChange('overheadSquat', 'lateralCompensations', key, 'severity', e.target.value)}\r\n                                        className=\"severity-select\"\r\n                                    >\r\n                                        <option value=\"\">Select Severity</option>\r\n                                        <option value=\"Mild\">Mild</option>\r\n                                        <option value=\"Moderate\">Moderate</option>\r\n                                        <option value=\"Severe\">Severe</option>\r\n                                    </select>\r\n                                )}\r\n                            </div>\r\n\r\n                            <p className=\"compensation-description\">{comp.description}</p>\r\n\r\n                            {assessmentData.overheadSquat.lateralCompensations[key]?.present && (\r\n                                <div className=\"compensation-details\">\r\n                                    <div className=\"muscle-analysis\">\r\n                                        <div className=\"possible-causes\">\r\n                                            <strong>Possible Causes:</strong> {comp.possibleCauses.join(', ')}\r\n                                        </div>\r\n                                        <div className=\"corrective-actions\">\r\n                                            <strong>Corrective Actions:</strong> {comp.correctiveActions.join(', ')}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <textarea\r\n                                        placeholder=\"Additional notes...\"\r\n                                        value={assessmentData.overheadSquat.lateralCompensations[key]?.notes || ''}\r\n                                        onChange={(e) => handleCompensationChange('overheadSquat', 'lateralCompensations', key, 'notes', e.target.value)}\r\n                                        className=\"notes-textarea\"\r\n                                        rows=\"2\"\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n            {assessmentData.overheadSquat.currentView === 'posterior' && (\r\n                <div className=\"compensation-checkpoints\">\r\n                    <h4>Posterior View Checkpoints</h4>\r\n                    {Object.entries(compensationData.posterior).map(([key, comp]) => (\r\n                        <div key={key} className=\"compensation-item\">\r\n                            <div className=\"compensation-header\">\r\n                                <label className=\"compensation-checkbox\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={assessmentData.overheadSquat.posteriorCompensations[key]?.present || false}\r\n                                        onChange={(e) => handleCompensationChange('overheadSquat', 'posteriorCompensations', key, 'present', e.target.checked)}\r\n                                    />\r\n                                    <strong>{comp.name}</strong>\r\n                                </label>\r\n\r\n                                {assessmentData.overheadSquat.posteriorCompensations[key]?.present && (\r\n                                    <select\r\n                                        value={assessmentData.overheadSquat.posteriorCompensations[key]?.severity || ''}\r\n                                        onChange={(e) => handleCompensationChange('overheadSquat', 'posteriorCompensations', key, 'severity', e.target.value)}\r\n                                        className=\"severity-select\"\r\n                                    >\r\n                                        <option value=\"\">Select Severity</option>\r\n                                        <option value=\"Mild\">Mild</option>\r\n                                        <option value=\"Moderate\">Moderate</option>\r\n                                        <option value=\"Severe\">Severe</option>\r\n                                    </select>\r\n                                )}\r\n                            </div>\r\n\r\n                            <p className=\"compensation-description\">{comp.description}</p>\r\n\r\n                            {assessmentData.overheadSquat.posteriorCompensations[key]?.present && (\r\n                                <div className=\"compensation-details\">\r\n                                    <div className=\"muscle-analysis\">\r\n                                        <div className=\"possible-causes\">\r\n                                            <strong>Possible Causes:</strong> {comp.possibleCauses.join(', ')}\r\n                                        </div>\r\n                                        <div className=\"corrective-actions\">\r\n                                            <strong>Corrective Actions:</strong> {comp.correctiveActions.join(', ')}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <textarea\r\n                                        placeholder=\"Additional notes...\"\r\n                                        value={assessmentData.overheadSquat.posteriorCompensations[key]?.notes || ''}\r\n                                        onChange={(e) => handleCompensationChange('overheadSquat', 'posteriorCompensations', key, 'notes', e.target.value)}\r\n                                        className=\"notes-textarea\"\r\n                                        rows=\"2\"\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n    const renderModificationsTab = () => (\r\n        <div className=\"modifications-section\">\r\n            <div className=\"modifications-header\">\r\n                <h3>🔍 Testing Modifications</h3>\r\n                <p>Use these modifications to determine root causes of compensations</p>\r\n            </div>\r\n\r\n            <div className=\"modification-tests\">\r\n                <div className=\"modification-card\">\r\n                    <h4>Heel Elevation Test</h4>\r\n                    <p><strong>Purpose:</strong> Differentiate ankle mobility vs hip weakness in knee valgus</p>\r\n                    <p><strong>Method:</strong> Place heels on 2-4 inch elevation, repeat assessment</p>\r\n\r\n                    <label className=\"modification-checkbox\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={assessmentData.overheadSquat.modificationsPerformed.heelElevation.performed}\r\n                            onChange={(e) => setAssessmentData(prev => ({\r\n                                ...prev,\r\n                                overheadSquat: {\r\n                                    ...prev.overheadSquat,\r\n                                    modificationsPerformed: {\r\n                                        ...prev.overheadSquat.modificationsPerformed,\r\n                                        heelElevation: { ...prev.overheadSquat.modificationsPerformed.heelElevation, performed: e.target.checked }\r\n                                    }\r\n                                }\r\n                            }))}\r\n                        />\r\n                        Performed heel elevation test\r\n                    </label>\r\n\r\n                    {assessmentData.overheadSquat.modificationsPerformed.heelElevation.performed && (\r\n                        <div className=\"modification-results\">\r\n                            <label>\r\n                                Results:\r\n                                <select\r\n                                    value={assessmentData.overheadSquat.modificationsPerformed.heelElevation.results}\r\n                                    onChange={(e) => setAssessmentData(prev => ({\r\n                                        ...prev,\r\n                                        overheadSquat: {\r\n                                            ...prev.overheadSquat,\r\n                                            modificationsPerformed: {\r\n                                                ...prev.overheadSquat.modificationsPerformed,\r\n                                                heelElevation: { ...prev.overheadSquat.modificationsPerformed.heelElevation, results: e.target.value }\r\n                                            }\r\n                                        }\r\n                                    }))}\r\n                                >\r\n                                    <option value=\"\">Select Result</option>\r\n                                    <option value=\"significant_improvement\">Significant Improvement</option>\r\n                                    <option value=\"slight_improvement\">Slight Improvement</option>\r\n                                    <option value=\"no_improvement\">No Improvement</option>\r\n                                </select>\r\n                            </label>\r\n\r\n                            <div className=\"interpretation\">\r\n                                {assessmentData.overheadSquat.modificationsPerformed.heelElevation.results === 'significant_improvement' && (\r\n                                    <div className=\"result-interpretation\">\r\n                                        <strong>Primary Cause:</strong> Ankle mobility restriction<br />\r\n                                        <strong>Focus:</strong> Calf flexibility and ankle mobility\r\n                                    </div>\r\n                                )}\r\n                                {assessmentData.overheadSquat.modificationsPerformed.heelElevation.results === 'no_improvement' && (\r\n                                    <div className=\"result-interpretation\">\r\n                                        <strong>Primary Cause:</strong> Hip abductor weakness<br />\r\n                                        <strong>Focus:</strong> Glute strengthening and activation\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"modification-card\">\r\n                    <h4>Arms Down Test</h4>\r\n                    <p><strong>Purpose:</strong> Differentiate lat tightness vs core weakness in low back arch</p>\r\n                    <p><strong>Method:</strong> Remove overhead arm position, hands on hips, repeat assessment</p>\r\n\r\n                    <label className=\"modification-checkbox\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={assessmentData.overheadSquat.modificationsPerformed.armsDown.performed}\r\n                            onChange={(e) => setAssessmentData(prev => ({\r\n                                ...prev,\r\n                                overheadSquat: {\r\n                                    ...prev.overheadSquat,\r\n                                    modificationsPerformed: {\r\n                                        ...prev.overheadSquat.modificationsPerformed,\r\n                                        armsDown: { ...prev.overheadSquat.modificationsPerformed.armsDown, performed: e.target.checked }\r\n                                    }\r\n                                }\r\n                            }))}\r\n                        />\r\n                        Performed arms down test\r\n                    </label>\r\n\r\n                    {assessmentData.overheadSquat.modificationsPerformed.armsDown.performed && (\r\n                        <div className=\"modification-results\">\r\n                            <label>\r\n                                Results:\r\n                                <select\r\n                                    value={assessmentData.overheadSquat.modificationsPerformed.armsDown.results}\r\n                                    onChange={(e) => setAssessmentData(prev => ({\r\n                                        ...prev,\r\n                                        overheadSquat: {\r\n                                            ...prev.overheadSquat,\r\n                                            modificationsPerformed: {\r\n                                                ...prev.overheadSquat.modificationsPerformed,\r\n                                                armsDown: { ...prev.overheadSquat.modificationsPerformed.armsDown, results: e.target.value }\r\n                                            }\r\n                                        }\r\n                                    }))}\r\n                                >\r\n                                    <option value=\"\">Select Result</option>\r\n                                    <option value=\"arch_disappears\">Low Back Arch Disappears</option>\r\n                                    <option value=\"partial_improvement\">Partial Improvement</option>\r\n                                    <option value=\"still_arches\">Still Arches</option>\r\n                                </select>\r\n                            </label>\r\n\r\n                            <div className=\"interpretation\">\r\n                                {assessmentData.overheadSquat.modificationsPerformed.armsDown.results === 'arch_disappears' && (\r\n                                    <div className=\"result-interpretation\">\r\n                                        <strong>Primary Cause:</strong> Latissimus dorsi tightness<br />\r\n                                        <strong>Focus:</strong> Lat flexibility and shoulder mobility\r\n                                    </div>\r\n                                )}\r\n                                {assessmentData.overheadSquat.modificationsPerformed.armsDown.results === 'still_arches' && (\r\n                                    <div className=\"result-interpretation\">\r\n                                        <strong>Primary Cause:</strong> Core weakness and hip flexor tightness<br />\r\n                                        <strong>Focus:</strong> Core strengthening and hip flexor mobility\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const renderAnalysisTab = () => {\r\n        const presentCompensations = [\r\n            ...Object.entries(assessmentData.overheadSquat.anteriorCompensations).filter(([_, comp]) => comp.severity && comp.severity !== 'none'),\r\n            ...Object.entries(assessmentData.overheadSquat.lateralCompensations).filter(([_, comp]) => comp.severity && comp.severity !== 'none'),\r\n            ...Object.entries(assessmentData.overheadSquat.posteriorCompensations).filter(([_, comp]) => comp.severity && comp.severity !== 'none')\r\n        ];\r\n\r\n        const phaseRecommendation = determineStartingPhase();\r\n\r\n        return (\r\n            <div className=\"analysis-section\">\r\n                <div className=\"analysis-header\">\r\n                    <h3>📊 Assessment Analysis & Recommendations</h3>\r\n                </div>\r\n\r\n                <div className=\"compensation-summary\">\r\n                    <h4>Compensation Summary</h4>\r\n                    <div className=\"summary-stats\">\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Total Compensations:</span>\r\n                            <span className=\"stat-value\">{assessmentData.compensationCount}</span>\r\n                        </div>\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Severity Score:</span>\r\n                            <span className=\"stat-value\">{assessmentData.severityScore}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {presentCompensations.length > 0 && (\r\n                    <div className=\"corrective-prescriptions\">\r\n                        <h4>4-Phase Corrective Exercise Prescription</h4>\r\n                        {presentCompensations.map(([key, compensation]) => {\r\n                            const compData = anteriorCompensations[key] || lateralCompensations[key] || posteriorCompensations[key];\r\n                            if (!compData) return null;\r\n\r\n                            return (\r\n                                <div key={key} className=\"corrective-card\">\r\n                                    <h5>{compData.name}</h5>\r\n                                    <div className=\"corrective-phases\">\r\n                                        <div className=\"phase-section\">\r\n                                            <strong>1. INHIBIT (SMR):</strong>\r\n                                            <ul>\r\n                                                {compData.correctives.inhibit.map(exercise => (\r\n                                                    <li key={exercise}>{exercise}</li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div className=\"phase-section\">\r\n                                            <strong>2. LENGTHEN (Static Stretch):</strong>\r\n                                            <ul>\r\n                                                {compData.correctives.lengthen.map(exercise => (\r\n                                                    <li key={exercise}>{exercise}</li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div className=\"phase-section\">\r\n                                            <strong>3. ACTIVATE (Isolated Strengthening):</strong>\r\n                                            <ul>\r\n                                                {compData.correctives.activate.map(exercise => (\r\n                                                    <li key={exercise}>{exercise}</li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div className=\"phase-section\">\r\n                                            <strong>4. INTEGRATE (Functional Movement):</strong>\r\n                                            <ul>\r\n                                                {compData.correctives.integrate.map(exercise => (\r\n                                                    <li key={exercise}>{exercise}</li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"phase-recommendation\">\r\n                    <h4>Starting OPT Phase Recommendation</h4>\r\n                    <div className=\"recommendation-card\">\r\n                        <div className=\"phase-header\">\r\n                            <h5>{phaseRecommendation.phase}</h5>\r\n                            <span className=\"duration\">{phaseRecommendation.duration}</span>\r\n                        </div>\r\n                        <div className=\"recommendation-details\">\r\n                            <p><strong>Focus:</strong> {phaseRecommendation.focus}</p>\r\n                            <p><strong>Corrective Volume:</strong> {phaseRecommendation.correctiveVolume}</p>\r\n                            <p><strong>Reasoning:</strong> {phaseRecommendation.reasoning}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // Single-Leg Squat Assessment\r\n    const renderSingleLegAssessment = () => {\r\n        const assessmentInfo = assessmentConfig.find(a => a.id === 'single-leg');\r\n        const compensations = [\r\n            {\r\n                id: 'kneeValgus',\r\n                name: 'Knee Moves Inward (Valgus)',\r\n                description: 'Knee adducts and internally rotates during squat',\r\n                overactive: 'Adductor complex, TFL, Vastus lateralis',\r\n                underactive: 'Gluteus medius/maximus, VMO',\r\n                selected: assessmentData.singleLegSquat[`${activeSide}Leg`].kneeValgus.present\r\n            },\r\n            {\r\n                id: 'excessiveForwardLean',\r\n                name: 'Excessive Forward Lean',\r\n                description: 'Torso leans forward excessively during movement',\r\n                overactive: 'Hip flexors, Gastrocnemius/Soleus',\r\n                underactive: 'Gluteus maximus, Anterior tibialis',\r\n                selected: assessmentData.singleLegSquat[`${activeSide}Leg`].excessiveForwardLean.present\r\n            },\r\n            {\r\n                id: 'hipHike',\r\n                name: 'Hip Hike',\r\n                description: 'Hip elevation on non-stance side',\r\n                overactive: 'Quadratus lumborum, TFL',\r\n                underactive: 'Gluteus medius (stance side)',\r\n                selected: assessmentData.singleLegSquat[`${activeSide}Leg`].hipHike.present\r\n            }\r\n        ];\r\n\r\n        const toggleCompensation = (compId) => {\r\n            const currentValue = assessmentData.singleLegSquat[`${activeSide}Leg`][compId].present;\r\n            handleCompensationChange('singleLegSquat', `${activeSide}Leg`, compId, 'present', !currentValue);\r\n        };\r\n\r\n        const hasCompensations = compensations.some(comp => comp.selected);\r\n\r\n        const saveAndContinue = () => {\r\n            saveAssessmentData(selectedAssessment, assessmentData.singleLegSquat);\r\n            completeCurrentAssessment(assessmentData.singleLegSquat);\r\n        };\r\n\r\n        const skipAssessment = () => {\r\n            completeCurrentAssessment({});\r\n        };\r\n\r\n        const clearAssessment = () => {\r\n            setAssessmentData(prev => ({\r\n                ...prev,\r\n                singleLegSquat: {\r\n                    ...prev.singleLegSquat,\r\n                    rightLeg: {\r\n                        kneeValgus: { present: false, severity: '', notes: '' },\r\n                        excessiveForwardLean: { present: false, severity: '', notes: '' },\r\n                        hipHike: { present: false, severity: '', notes: '' }\r\n                    },\r\n                    leftLeg: {\r\n                        kneeValgus: { present: false, severity: '', notes: '' },\r\n                        excessiveForwardLean: { present: false, severity: '', notes: '' },\r\n                        hipHike: { present: false, severity: '', notes: '' }\r\n                    }\r\n                }\r\n            }));\r\n        };\r\n\r\n        return (\r\n            <div className=\"assessment-page\">\r\n                <button className=\"back-button\" onClick={backToSelection}>\r\n                    ← Back to Assessment Selection\r\n                </button>\r\n\r\n                <div className=\"assessment-header\">\r\n                    <div className=\"header-content\">\r\n                        <h1 className=\"assessment-title\">\r\n                            <span className=\"icon\">🦵</span>\r\n                            {assessmentInfo?.name}\r\n                        </h1>\r\n                        <span className=\"assessment-badge\">{assessmentInfo?.type}</span>\r\n                    </div>\r\n\r\n                    <div className=\"header-stats\">\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Reps</span>\r\n                            <span className=\"stat-value\">5 per side</span>\r\n                        </div>\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Views</span>\r\n                            <span className=\"stat-value\">Anterior</span>\r\n                        </div>\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Time</span>\r\n                            <span className=\"stat-value\">~3-4 min</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"protocol-card\">\r\n                    <h3>Assessment Protocol</h3>\r\n\r\n                    <div className=\"protocol-grid\">\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Setup</span>\r\n                            <p className=\"protocol-text\">Hands on hips, eyes forward, stance foot pointing straight ahead</p>\r\n                        </div>\r\n\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Movement</span>\r\n                            <p className=\"protocol-text\">Single-leg squat to comfortable depth, up to 5 reps per side at natural pace</p>\r\n                        </div>\r\n\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Observation</span>\r\n                            <p className=\"protocol-text\">Knee tracking should align with 2nd-3rd toes. Watch for compensation patterns</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"compensation-section\">\r\n                    <h3>Movement Compensations</h3>\r\n\r\n                    <div className=\"side-selector\">\r\n                        <button\r\n                            className={`side-btn ${activeSide === 'right' ? 'active' : ''}`}\r\n                            onClick={() => setActiveSide('right')}\r\n                        >\r\n                            Right Side\r\n                        </button>\r\n                        <button\r\n                            className={`side-btn ${activeSide === 'left' ? 'active' : ''}`}\r\n                            onClick={() => setActiveSide('left')}\r\n                        >\r\n                            Left Side\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"compensation-grid\">\r\n                        {compensations.map(comp => (\r\n                            <div\r\n                                key={comp.id}\r\n                                className={`compensation-card ${comp.selected ? 'selected' : ''}`}\r\n                                onClick={() => toggleCompensation(comp.id)}\r\n                            >\r\n                                <div className=\"comp-checkbox\">\r\n                                    {comp.selected ? '✅' : '⬜'}\r\n                                </div>\r\n                                <div className=\"comp-content\">\r\n                                    <h4>{comp.name}</h4>\r\n                                    <p className=\"comp-description\">{comp.description}</p>\r\n                                    <div className=\"comp-muscles\">\r\n                                        <span className=\"overactive\">Overactive: {comp.overactive}</span>\r\n                                        <span className=\"underactive-text\">Underactive: {comp.underactive}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"assessment-actions\">\r\n                    <button\r\n                        className=\"action-btn secondary\"\r\n                        onClick={clearAssessment}\r\n                    >\r\n                        Clear All\r\n                    </button>\r\n\r\n                    <button\r\n                        className=\"action-btn secondary\"\r\n                        onClick={skipAssessment}\r\n                    >\r\n                        Skip This Assessment\r\n                    </button>\r\n\r\n                    <button\r\n                        className=\"action-btn primary\"\r\n                        onClick={saveAndContinue}\r\n                    >\r\n                        {hasCompensations ? 'Save & Continue' : 'Save & Continue'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // Pushing Assessment\r\n    const renderPushingAssessment = () => {\r\n        const assessmentInfo = assessmentConfig.find(a => a.id === 'pushing');\r\n        const compensations = [\r\n            {\r\n                id: 'lowBackArch',\r\n                name: 'Low-Back Arches',\r\n                description: 'Excessive lumbar extension during pushing movement',\r\n                overactive: 'Hip flexors, Erector spinae',\r\n                underactive: 'Intrinsic core stabilizers',\r\n                selected: assessmentData.pushingAssessment.compensations.lowBackArch.present\r\n            },\r\n            {\r\n                id: 'shoulderElevation',\r\n                name: 'Shoulder Elevation',\r\n                description: 'Shoulders elevate during pushing movement',\r\n                overactive: 'Upper trapezius, Levator scapulae',\r\n                underactive: 'Mid/Lower trapezius',\r\n                selected: assessmentData.pushingAssessment.compensations.shoulderElevation.present\r\n            },\r\n            {\r\n                id: 'headForward',\r\n                name: 'Head Migrates Forward',\r\n                description: 'Forward head posture during pushing movement',\r\n                overactive: 'Upper trapezius, SCM, Levator scapulae',\r\n                underactive: 'Deep cervical flexors',\r\n                selected: assessmentData.pushingAssessment.compensations.headForward.present\r\n            }\r\n        ];\r\n\r\n        const toggleCompensation = (compId) => {\r\n            const currentValue = assessmentData.pushingAssessment.compensations[compId].present;\r\n            handleCompensationChange('pushingAssessment', 'compensations', compId, 'present', !currentValue);\r\n        };\r\n\r\n        const hasCompensations = compensations.some(comp => comp.selected);\r\n\r\n        const saveAndContinue = () => {\r\n            saveAssessmentData(selectedAssessment, assessmentData.pushingAssessment);\r\n            completeCurrentAssessment(assessmentData.pushingAssessment);\r\n        };\r\n\r\n        const skipAssessment = () => {\r\n            completeCurrentAssessment({});\r\n        };\r\n\r\n        const clearAssessment = () => {\r\n            setAssessmentData(prev => ({\r\n                ...prev,\r\n                pushingAssessment: {\r\n                    ...prev.pushingAssessment,\r\n                    compensations: {\r\n                        lowBackArch: { present: false, severity: '', notes: '' },\r\n                        shoulderElevation: { present: false, severity: '', notes: '' },\r\n                        headForward: { present: false, severity: '', notes: '' }\r\n                    }\r\n                }\r\n            }));\r\n        };\r\n\r\n        return (\r\n            <div className=\"assessment-page\">\r\n                <button className=\"back-button\" onClick={backToSelection}>\r\n                    ← Back to Assessment Selection\r\n                </button>\r\n\r\n                <div className=\"assessment-header\">\r\n                    <div className=\"header-content\">\r\n                        <h1 className=\"assessment-title\">\r\n                            <span className=\"icon\">👐</span>\r\n                            {assessmentInfo?.name}\r\n                        </h1>\r\n                        <span className=\"assessment-badge\">{assessmentInfo?.type}</span>\r\n                    </div>\r\n\r\n                    <div className=\"header-stats\">\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Reps</span>\r\n                            <span className=\"stat-value\">20</span>\r\n                        </div>\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Views</span>\r\n                            <span className=\"stat-value\">Lateral</span>\r\n                        </div>\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Time</span>\r\n                            <span className=\"stat-value\">~3-4 min</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"protocol-card\">\r\n                    <h3>Assessment Protocol</h3>\r\n\r\n                    <div className=\"protocol-grid\">\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Setup</span>\r\n                            <p className=\"protocol-text\">Split-stance, core braced, cable/band at shoulder height</p>\r\n                        </div>\r\n\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Movement</span>\r\n                            <p className=\"protocol-text\">20 controlled reps, press handles forward and return to start position</p>\r\n                        </div>\r\n\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Observation</span>\r\n                            <p className=\"protocol-text\">Watch LPHC stability, shoulder complex position, and head alignment</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"compensation-section\">\r\n                    <h3>Movement Compensations</h3>\r\n\r\n                    <div className=\"compensation-grid\">\r\n                        {compensations.map(comp => (\r\n                            <div\r\n                                key={comp.id}\r\n                                className={`compensation-card ${comp.selected ? 'selected' : ''}`}\r\n                                onClick={() => toggleCompensation(comp.id)}\r\n                            >\r\n                                <div className=\"comp-checkbox\">\r\n                                    {comp.selected ? '✅' : '⬜'}\r\n                                </div>\r\n                                <div className=\"comp-content\">\r\n                                    <h4>{comp.name}</h4>\r\n                                    <p className=\"comp-description\">{comp.description}</p>\r\n                                    <div className=\"comp-muscles\">\r\n                                        <span className=\"overactive\">Overactive: {comp.overactive}</span>\r\n                                        <span className=\"underactive-text\">Underactive: {comp.underactive}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"assessment-actions\">\r\n                    <button\r\n                        className=\"action-btn secondary\"\r\n                        onClick={clearAssessment}\r\n                    >\r\n                        Clear All\r\n                    </button>\r\n\r\n                    <button\r\n                        className=\"action-btn secondary\"\r\n                        onClick={skipAssessment}\r\n                    >\r\n                        Skip This Assessment\r\n                    </button>\r\n\r\n                    <button\r\n                        className=\"action-btn primary\"\r\n                        onClick={saveAndContinue}\r\n                    >\r\n                        Save & Continue\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // Pulling Assessment\r\n    const renderPullingAssessment = () => {\r\n        const assessmentInfo = assessmentConfig.find(a => a.id === 'pulling');\r\n        const compensations = [\r\n            {\r\n                id: 'lowBackArch',\r\n                name: 'Low-Back Arches',\r\n                description: 'Excessive lumbar extension during pulling movement',\r\n                overactive: 'Hip flexors, Erector spinae',\r\n                underactive: 'Intrinsic core stabilizers',\r\n                selected: assessmentData.pullingAssessment.compensations.lowBackArch.present\r\n            },\r\n            {\r\n                id: 'shoulderElevation',\r\n                name: 'Shoulder Elevation',\r\n                description: 'Shoulders elevate during pulling movement',\r\n                overactive: 'Upper trapezius, Levator scapulae',\r\n                underactive: 'Mid/Lower trapezius',\r\n                selected: assessmentData.pullingAssessment.compensations.shoulderElevation.present\r\n            },\r\n            {\r\n                id: 'headForward',\r\n                name: 'Head Protrudes Forward',\r\n                description: 'Forward head posture during pulling movement',\r\n                overactive: 'Upper trapezius, SCM, Levator scapulae',\r\n                underactive: 'Deep cervical flexors',\r\n                selected: assessmentData.pullingAssessment.compensations.headForward.present\r\n            }\r\n        ];\r\n\r\n        const toggleCompensation = (compId) => {\r\n            const currentValue = assessmentData.pullingAssessment.compensations[compId].present;\r\n            handleCompensationChange('pullingAssessment', 'compensations', compId, 'present', !currentValue);\r\n        };\r\n\r\n        const hasCompensations = compensations.some(comp => comp.selected);\r\n\r\n        const saveAndContinue = () => {\r\n            saveAssessmentData(selectedAssessment, assessmentData.pullingAssessment);\r\n            completeCurrentAssessment(assessmentData.pullingAssessment);\r\n        };\r\n\r\n        const skipAssessment = () => {\r\n            completeCurrentAssessment({});\r\n        };\r\n\r\n        const clearAssessment = () => {\r\n            setAssessmentData(prev => ({\r\n                ...prev,\r\n                pullingAssessment: {\r\n                    ...prev.pullingAssessment,\r\n                    compensations: {\r\n                        lowBackArch: { present: false, severity: '', notes: '' },\r\n                        shoulderElevation: { present: false, severity: '', notes: '' },\r\n                        headForward: { present: false, severity: '', notes: '' }\r\n                    }\r\n                }\r\n            }));\r\n        };\r\n\r\n        return (\r\n            <div className=\"assessment-page\">\r\n                <button className=\"back-button\" onClick={backToSelection}>\r\n                    ← Back to Assessment Selection\r\n                </button>\r\n\r\n                <div className=\"assessment-header\">\r\n                    <div className=\"header-content\">\r\n                        <h1 className=\"assessment-title\">\r\n                            <span className=\"icon\">🪄</span>\r\n                            {assessmentInfo?.name}\r\n                        </h1>\r\n                        <span className=\"assessment-badge\">{assessmentInfo?.type}</span>\r\n                    </div>\r\n\r\n                    <div className=\"header-stats\">\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Reps</span>\r\n                            <span className=\"stat-value\">20</span>\r\n                        </div>\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Views</span>\r\n                            <span className=\"stat-value\">Lateral</span>\r\n                        </div>\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Time</span>\r\n                            <span className=\"stat-value\">~3-4 min</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"protocol-card\">\r\n                    <h3>Assessment Protocol</h3>\r\n\r\n                    <div className=\"protocol-grid\">\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Setup</span>\r\n                            <p className=\"protocol-text\">Feet shoulder-width apart, core braced, cable/band at shoulder height</p>\r\n                        </div>\r\n\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Movement</span>\r\n                            <p className=\"protocol-text\">Pull handles to torso, 20 controlled reps with controlled return</p>\r\n                        </div>\r\n\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Observation</span>\r\n                            <p className=\"protocol-text\">Watch LPHC stability, shoulder complex retraction, and head alignment</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"compensation-section\">\r\n                    <h3>Movement Compensations</h3>\r\n\r\n                    <div className=\"compensation-grid\">\r\n                        {compensations.map(comp => (\r\n                            <div\r\n                                key={comp.id}\r\n                                className={`compensation-card ${comp.selected ? 'selected' : ''}`}\r\n                                onClick={() => toggleCompensation(comp.id)}\r\n                            >\r\n                                <div className=\"comp-checkbox\">\r\n                                    {comp.selected ? '✅' : '⬜'}\r\n                                </div>\r\n                                <div className=\"comp-content\">\r\n                                    <h4>{comp.name}</h4>\r\n                                    <p className=\"comp-description\">{comp.description}</p>\r\n                                    <div className=\"comp-muscles\">\r\n                                        <span className=\"overactive\">Overactive: {comp.overactive}</span>\r\n                                        <span className=\"underactive-text\">Underactive: {comp.underactive}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"assessment-actions\">\r\n                    <button\r\n                        className=\"action-btn secondary\"\r\n                        onClick={clearAssessment}\r\n                    >\r\n                        Clear All\r\n                    </button>\r\n\r\n                    <button\r\n                        className=\"action-btn secondary\"\r\n                        onClick={skipAssessment}\r\n                    >\r\n                        Skip This Assessment\r\n                    </button>\r\n\r\n                    <button\r\n                        className=\"action-btn primary\"\r\n                        onClick={saveAndContinue}\r\n                    >\r\n                        Save & Continue\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // Optional Assessment Components\r\n    const renderOverheadPressAssessment = () => {\r\n        const assessmentInfo = assessmentConfig.find(a => a.id === 'overhead-press');\r\n\r\n        const markComplete = () => {\r\n            const completionData = {\r\n                completed: true,\r\n                completedAt: new Date().toISOString(),\r\n                notes: 'Basic overhead movement pattern assessment completed'\r\n            };\r\n            saveAssessmentData(selectedAssessment, completionData);\r\n            completeCurrentAssessment(completionData);\r\n        };\r\n\r\n        const skipAssessment = () => {\r\n            completeCurrentAssessment({});\r\n        };\r\n\r\n        const isCompleted = completedAssessments.includes('overhead-press');\r\n\r\n        return (\r\n            <div className=\"assessment-page\">\r\n                <button className=\"back-button\" onClick={backToSelection}>\r\n                    ← Back to Assessment Selection\r\n                </button>\r\n\r\n                <div className=\"assessment-header\">\r\n                    <div className=\"header-content\">\r\n                        <h1 className=\"assessment-title\">\r\n                            <span className=\"icon\">🙌</span>\r\n                            {assessmentInfo?.name}\r\n                        </h1>\r\n                        <span className=\"assessment-badge optional\">Optional</span>\r\n                    </div>\r\n\r\n                    <div className=\"header-stats\">\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Reps</span>\r\n                            <span className=\"stat-value\">10-15</span>\r\n                        </div>\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Views</span>\r\n                            <span className=\"stat-value\">All Planes</span>\r\n                        </div>\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Time</span>\r\n                            <span className=\"stat-value\">~2-3 min</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"protocol-card\">\r\n                    <h3>Assessment Protocol</h3>\r\n\r\n                    <div className=\"protocol-grid\">\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Setup</span>\r\n                            <p className=\"protocol-text\">Seated or standing position, dumbbells or bodyweight resistance</p>\r\n                        </div>\r\n\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Movement</span>\r\n                            <p className=\"protocol-text\">Press overhead with controlled tempo, 10-15 repetitions</p>\r\n                        </div>\r\n\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Observation</span>\r\n                            <p className=\"protocol-text\">Monitor shoulder elevation, forward head posture, and low back arch</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"optional-info-card\">\r\n                    <h3>Assessment Focus Areas</h3>\r\n                    <div className=\"focus-grid\">\r\n                        <div className=\"focus-item\">\r\n                            <span className=\"focus-icon\">🏋️</span>\r\n                            <span className=\"focus-text\">Shoulder Stability</span>\r\n                        </div>\r\n                        <div className=\"focus-item\">\r\n                            <span className=\"focus-icon\">📐</span>\r\n                            <span className=\"focus-text\">Overhead Range</span>\r\n                        </div>\r\n                        <div className=\"focus-item\">\r\n                            <span className=\"focus-icon\">🔄</span>\r\n                            <span className=\"focus-text\">Movement Quality</span>\r\n                        </div>\r\n                        <div className=\"focus-item\">\r\n                            <span className=\"focus-icon\">⚖️</span>\r\n                            <span className=\"focus-text\">Postural Control</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"assessment-actions\">\r\n                    <button\r\n                        className=\"action-btn secondary\"\r\n                        onClick={skipAssessment}\r\n                    >\r\n                        Skip This Assessment\r\n                    </button>\r\n\r\n                    <button\r\n                        className=\"action-btn primary\"\r\n                        onClick={markComplete}\r\n                        disabled={isCompleted}\r\n                    >\r\n                        {isCompleted ? '✅ Completed' : 'Mark Complete'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderStarBalanceAssessment = () => {\r\n        const assessmentInfo = assessmentConfig.find(a => a.id === 'star-balance');\r\n\r\n        const markComplete = () => {\r\n            const completionData = {\r\n                completed: true,\r\n                completedAt: new Date().toISOString(),\r\n                notes: 'Multi-directional balance assessment completed'\r\n            };\r\n            saveAssessmentData(selectedAssessment, completionData);\r\n            completeCurrentAssessment(completionData);\r\n        };\r\n\r\n        const skipAssessment = () => {\r\n            completeCurrentAssessment({});\r\n        };\r\n\r\n        const isCompleted = completedAssessments.includes('star-balance');\r\n\r\n        const directions = [\r\n            { name: 'Forward', icon: '⬆️' },\r\n            { name: 'Forward-Right', icon: '↗️' },\r\n            { name: 'Right', icon: '➡️' },\r\n            { name: 'Back-Right', icon: '↘️' },\r\n            { name: 'Backward', icon: '⬇️' },\r\n            { name: 'Back-Left', icon: '↙️' },\r\n            { name: 'Left', icon: '⬅️' },\r\n            { name: 'Forward-Left', icon: '↖️' }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"assessment-page\">\r\n                <button className=\"back-button\" onClick={backToSelection}>\r\n                    ← Back to Assessment Selection\r\n                </button>\r\n\r\n                <div className=\"assessment-header\">\r\n                    <div className=\"header-content\">\r\n                        <h1 className=\"assessment-title\">\r\n                            <span className=\"icon\">⭐</span>\r\n                            {assessmentInfo?.name}\r\n                        </h1>\r\n                        <span className=\"assessment-badge optional\">Optional</span>\r\n                    </div>\r\n\r\n                    <div className=\"header-stats\">\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Directions</span>\r\n                            <span className=\"stat-value\">8 Ways</span>\r\n                        </div>\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Each Leg</span>\r\n                            <span className=\"stat-value\">3 Trials</span>\r\n                        </div>\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Time</span>\r\n                            <span className=\"stat-value\">~5-6 min</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"protocol-card\">\r\n                    <h3>Assessment Protocol</h3>\r\n\r\n                    <div className=\"protocol-grid\">\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Setup</span>\r\n                            <p className=\"protocol-text\">Single-leg stance, hands on hips, establish balance</p>\r\n                        </div>\r\n\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Movement</span>\r\n                            <p className=\"protocol-text\">Reach opposite leg in 8 directions, return to center</p>\r\n                        </div>\r\n\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Observation</span>\r\n                            <p className=\"protocol-text\">Balance maintenance, compensation patterns, reach distance</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"directions-card\">\r\n                    <h3>Movement Directions</h3>\r\n                    <div className=\"directions-grid\">\r\n                        {directions.map((direction, index) => (\r\n                            <div key={index} className=\"direction-item\">\r\n                                <span className=\"direction-icon\">{direction.icon}</span>\r\n                                <span className=\"direction-name\">{direction.name}</span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"assessment-actions\">\r\n                    <button\r\n                        className=\"action-btn secondary\"\r\n                        onClick={skipAssessment}\r\n                    >\r\n                        Skip This Assessment\r\n                    </button>\r\n\r\n                    <button\r\n                        className=\"action-btn primary\"\r\n                        onClick={markComplete}\r\n                        disabled={isCompleted}\r\n                    >\r\n                        {isCompleted ? '✅ Completed' : 'Mark Complete'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderGaitAnalysisAssessment = () => {\r\n        const assessmentInfo = assessmentConfig.find(a => a.id === 'gait-analysis');\r\n\r\n        const markComplete = () => {\r\n            const completionData = {\r\n                completed: true,\r\n                completedAt: new Date().toISOString(),\r\n                notes: 'Gait pattern analysis completed'\r\n            };\r\n            saveAssessmentData(selectedAssessment, completionData);\r\n            completeCurrentAssessment(completionData);\r\n        };\r\n\r\n        const skipAssessment = () => {\r\n            completeCurrentAssessment({});\r\n        };\r\n\r\n        const isCompleted = completedAssessments.includes('gait-analysis');\r\n\r\n        const gaitPhases = [\r\n            { phase: 'Initial Contact', description: 'Heel strike, foot position', icon: '👠' },\r\n            { phase: 'Loading Response', description: 'Weight acceptance, knee flexion', icon: '⚖️' },\r\n            { phase: 'Mid Stance', description: 'Single leg support, hip stability', icon: '🏃' },\r\n            { phase: 'Terminal Stance', description: 'Heel off, push-off preparation', icon: '🦵' },\r\n            { phase: 'Pre-swing', description: 'Toe off, hip flexion initiation', icon: '🔄' },\r\n            { phase: 'Swing Phase', description: 'Leg advancement, clearance', icon: '🌊' }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"assessment-page\">\r\n                <button className=\"back-button\" onClick={backToSelection}>\r\n                    ← Back to Assessment Selection\r\n                </button>\r\n\r\n                <div className=\"assessment-header\">\r\n                    <div className=\"header-content\">\r\n                        <h1 className=\"assessment-title\">\r\n                            <span className=\"icon\">🚶‍♂️</span>\r\n                            {assessmentInfo?.name}\r\n                        </h1>\r\n                        <span className=\"assessment-badge optional\">Optional</span>\r\n                    </div>\r\n\r\n                    <div className=\"header-stats\">\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Distance</span>\r\n                            <span className=\"stat-value\">10-20 steps</span>\r\n                        </div>\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Speeds</span>\r\n                            <span className=\"stat-value\">Walk & Jog</span>\r\n                        </div>\r\n                        <div className=\"stat-item\">\r\n                            <span className=\"stat-label\">Time</span>\r\n                            <span className=\"stat-value\">~4-5 min</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"protocol-card\">\r\n                    <h3>Assessment Protocol</h3>\r\n\r\n                    <div className=\"protocol-grid\">\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Setup</span>\r\n                            <p className=\"protocol-text\">Clear pathway, comfortable footwear, natural pace</p>\r\n                        </div>\r\n\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Movement</span>\r\n                            <p className=\"protocol-text\">Walk and jog naturally, multiple passes for observation</p>\r\n                        </div>\r\n\r\n                        <div className=\"protocol-item\">\r\n                            <span className=\"protocol-label\">Observation</span>\r\n                            <p className=\"protocol-text\">Foot strike pattern, knee tracking, hip stability, arm swing</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"gait-phases-card\">\r\n                    <h3>Gait Cycle Analysis</h3>\r\n                    <div className=\"gait-phases-grid\">\r\n                        {gaitPhases.map((item, index) => (\r\n                            <div key={index} className=\"gait-phase-item\">\r\n                                <span className=\"phase-icon\">{item.icon}</span>\r\n                                <div className=\"phase-content\">\r\n                                    <h4>{item.phase}</h4>\r\n                                    <p>{item.description}</p>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"assessment-actions\">\r\n                    <button\r\n                        className=\"action-btn secondary\"\r\n                        onClick={skipAssessment}\r\n                    >\r\n                        Skip This Assessment\r\n                    </button>\r\n\r\n                    <button\r\n                        className=\"action-btn primary\"\r\n                        onClick={markComplete}\r\n                        disabled={isCompleted}\r\n                    >\r\n                        {isCompleted ? '✅ Completed' : 'Mark Complete'}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // Render Selected Assessment Function\r\n    const renderSelectedAssessment = () => {\r\n        if (!selectedAssessment) return null;\r\n\r\n        switch (selectedAssessment) {\r\n            case 'overhead-squat':\r\n                return (\r\n                    <div className=\"selected-assessment-container\">\r\n                        <div className=\"assessment-header\">\r\n                            <h3>🏋️‍♂️ Overhead Squat Assessment</h3>\r\n                            <p>NASM primary transitional movement screen</p>\r\n                        </div>\r\n\r\n                        {/* Assessment Navigation Tabs */}\r\n                        <div className=\"assessment-tabs\">\r\n                            <button\r\n                                className={`assessment-tab ${currentTab === 'setup' ? 'active' : ''}`}\r\n                                onClick={() => setCurrentTab('setup')}\r\n                            >\r\n                                <span className=\"tab-icon\">⚙️</span>\r\n                                <span className=\"tab-name\">Setup</span>\r\n                            </button>\r\n                            <button\r\n                                className={`assessment-tab ${currentTab === 'assessment' ? 'active' : ''}`}\r\n                                onClick={() => setCurrentTab('assessment')}\r\n                            >\r\n                                <span className=\"tab-icon\">🏃‍♂️</span>\r\n                                <span className=\"tab-name\">Assessment</span>\r\n                            </button>\r\n                            <button\r\n                                className={`assessment-tab ${currentTab === 'modifications' ? 'active' : ''}`}\r\n                                onClick={() => setCurrentTab('modifications')}\r\n                            >\r\n                                <span className=\"tab-icon\">🔍</span>\r\n                                <span className=\"tab-name\">Modifications</span>\r\n                            </button>\r\n                            <button\r\n                                className={`assessment-tab ${currentTab === 'analysis' ? 'active' : ''}`}\r\n                                onClick={() => setCurrentTab('analysis')}\r\n                            >\r\n                                <span className=\"tab-icon\">📊</span>\r\n                                <span className=\"tab-name\">Analysis</span>\r\n                            </button>\r\n                        </div>\r\n\r\n                        {/* Tab Content */}\r\n                        <div className=\"tab-content\">\r\n                            {currentTab === 'setup' && renderSetupTab()}\r\n                            {currentTab === 'assessment' && renderAssessmentTab()}\r\n                            {currentTab === 'modifications' && renderModificationsTab()}\r\n                            {currentTab === 'analysis' && renderAnalysisTab()}\r\n                        </div>\r\n\r\n                        {/* Assessment Actions */}\r\n                        <div className=\"assessment-actions\">\r\n                            <button\r\n                                className=\"btn-complete-assessment\"\r\n                                onClick={() => completeCurrentAssessment(assessmentData)}\r\n                            >\r\n                                {completedAssessments.includes(selectedAssessment) ? 'Update & Return' : 'Complete Assessment'}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case 'single-leg':\r\n                return renderSingleLegAssessment();\r\n            case 'pushing':\r\n                return renderPushingAssessment();\r\n            case 'pulling':\r\n                return renderPullingAssessment();\r\n            case 'overhead-press':\r\n                return renderOverheadPressAssessment();\r\n            case 'star-balance':\r\n                return renderStarBalanceAssessment();\r\n            case 'gait-analysis':\r\n                return renderGaitAnalysisAssessment();\r\n            default:\r\n                return <div className=\"assessment-placeholder\">Assessment not found</div>;\r\n        }\r\n    };\r\n\r\n    // Handle assessment completion\r\n    const handleAssessmentComplete = () => {\r\n        if (!canProceed) {\r\n            showWarning(`Please complete all required assessments. ${completedRequired}/${requiredAssessments.length} completed.`);\r\n            return;\r\n        }\r\n\r\n        const finalResults = {\r\n            compensations: assessmentData,\r\n            phaseRecommendation: determineStartingPhase(),\r\n            methodology: 'NASM_OHSA',\r\n            timestamp: new Date().toISOString(),\r\n            compensationCount: assessmentData.compensationCount,\r\n            severityScore: assessmentData.severityScore,\r\n            completedAssessments,\r\n            selectedQuickTags,\r\n            additionalNotes,\r\n            summary: {\r\n                totalAssessments: assessmentConfig.length,\r\n                completedAssessments: completedAssessments.length,\r\n                requiredCompleted: completedRequired,\r\n                requiredTotal: requiredAssessments.length,\r\n                canProceed\r\n            }\r\n        };\r\n\r\n        // Save assessment results to context\r\n        actions.setAssessmentData({\r\n            ...state.assessmentData,\r\n            step: 4,\r\n            movementAssessment: finalResults,\r\n            timestamp: new Date().toISOString()\r\n        });\r\n\r\n        // Move to next step\r\n        actions.setCurrentStep(5);\r\n    };\r\n\r\n    const renderOverheadSquatAssessment = () => {\r\n        const assessment = nasmMovementAssessments.overhead_squat;\r\n\r\n        return (\r\n            <div className=\"nasm-assessment-section\">\r\n                <h3>{assessment.name}</h3>\r\n                <p className=\"assessment-purpose\">{assessment.purpose}</p>\r\n\r\n                <div className=\"assessment-procedure\">\r\n                    <h4>Setup & Procedure:</h4>\r\n                    <ul>\r\n                        <li>Setup: {assessment.procedure.setup}</li>\r\n                        <li>Position: {assessment.procedure.position}</li>\r\n                        <li>Movement: {assessment.procedure.movement}</li>\r\n                        <li>Views: {assessment.procedure.views.join(', ')}</li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"compensations-checklist\">\r\n                    <h4>Compensation Checklist:</h4>\r\n                    {Object.entries(assessment.compensations).map(([key, compensation]) => (\r\n                        <div key={key} className=\"compensation-item\">\r\n                            <label className=\"compensation-label\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={assessmentResults.overheadSquat[key] || false}\r\n                                    onChange={(e) => handleCompensationSelect('overheadSquat', key, e.target.checked)}\r\n                                />\r\n                                <span className=\"compensation-name\">\r\n                                    {key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\r\n                                </span>\r\n                            </label>\r\n\r\n                            {assessmentResults.overheadSquat[key] && (\r\n                                <div className=\"correction-strategy\">\r\n                                    <h5>Corrective Strategy:</h5>\r\n                                    <div className=\"corrections\">\r\n                                        <div className=\"smr\">\r\n                                            <strong>SMR:</strong> {compensation.corrections.smr.join(', ')}\r\n                                        </div>\r\n                                        <div className=\"stretch\">\r\n                                            <strong>Stretch:</strong> {compensation.corrections.stretch.join(', ')}\r\n                                        </div>\r\n                                        <div className=\"activation\">\r\n                                            <strong>Activation:</strong> {compensation.corrections.activation.join(', ')}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderSingleLegSquatAssessment = () => {\r\n        const assessment = nasmMovementAssessments.single_leg_squat;\r\n\r\n        return (\r\n            <div className=\"nasm-assessment-section\">\r\n                <h3>{assessment.name}</h3>\r\n                <p className=\"assessment-purpose\">{assessment.purpose}</p>\r\n\r\n                <div className=\"assessment-procedure\">\r\n                    <h4>Setup & Procedure:</h4>\r\n                    <ul>\r\n                        <li>Setup: {assessment.procedure.setup}</li>\r\n                        <li>Movement: {assessment.procedure.movement}</li>\r\n                        <li>Observation: {assessment.procedure.observation}</li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"compensations-checklist\">\r\n                    <h4>Primary Compensation:</h4>\r\n                    {Object.entries(assessment.compensations).map(([key, compensation]) => (\r\n                        <div key={key} className=\"compensation-item\">\r\n                            <label className=\"compensation-label\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={assessmentResults.singleLegSquat[key] || false}\r\n                                    onChange={(e) => handleCompensationSelect('singleLegSquat', key, e.target.checked)}\r\n                                />\r\n                                <span className=\"compensation-name\">\r\n                                    {key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\r\n                                </span>\r\n                            </label>\r\n\r\n                            {assessmentResults.singleLegSquat[key] && (\r\n                                <div className=\"correction-strategy\">\r\n                                    <h5>Corrective Strategy:</h5>\r\n                                    <div className=\"corrections\">\r\n                                        <div className=\"smr\">\r\n                                            <strong>SMR:</strong> {compensation.corrections.smr.join(', ')}\r\n                                        </div>\r\n                                        <div className=\"stretch\">\r\n                                            <strong>Stretch:</strong> {compensation.corrections.stretch.join(', ')}\r\n                                        </div>\r\n                                        <div className=\"activation\">\r\n                                            <strong>Activation:</strong> {compensation.corrections.activation.join(', ')}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderAssessmentTabs = () => {\r\n        const tabs = [\r\n            { id: 'overhead_squat', name: 'Overhead Squat', icon: '🏃' },\r\n            { id: 'single_leg_squat', name: 'Single-Leg Squat', icon: '🦵' },\r\n            { id: 'pushing', name: 'Pushing Assessment', icon: '💪' },\r\n            { id: 'pulling', name: 'Pulling Assessment', icon: '🤝' }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"assessment-tabs\">\r\n                {tabs.map(tab => (\r\n                    <button\r\n                        key={tab.id}\r\n                        className={`assessment-tab ${currentAssessment === tab.id ? 'active' : ''}`}\r\n                        onClick={() => setCurrentAssessment(tab.id)}\r\n                    >\r\n                        <span className=\"tab-icon\">{tab.icon}</span>\r\n                        <span className=\"tab-name\">{tab.name}</span>\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const renderCurrentAssessment = () => {\r\n        switch (currentAssessment) {\r\n            case 'overhead_squat':\r\n                return renderOverheadSquatAssessment();\r\n            case 'single_leg_squat':\r\n                return renderSingleLegSquatAssessment();\r\n            case 'pushing':\r\n                return <div className=\"assessment-placeholder\">Pushing Assessment - Coming Soon</div>;\r\n            case 'pulling':\r\n                return <div className=\"assessment-placeholder\">Pulling Assessment - Coming Soon</div>;\r\n            default:\r\n                return renderOverheadSquatAssessment();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"nasm-movement-assessment-step\">\r\n            {/* Main Content - Switch between Selection and Assessment Views */}\r\n            {currentView === 'selection' ? (\r\n                <AssessmentSelectionScreen />\r\n            ) : (\r\n                <div className=\"individual-assessment-view\">\r\n                    {/* Back Navigation */}\r\n                    <div className=\"assessment-back-nav\">\r\n                        <button\r\n                            className=\"btn-back-to-selection\"\r\n                            onClick={backToSelection}\r\n                        >\r\n                            ← Back to Assessment Selection\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* Individual Assessment Content */}\r\n                    {renderSelectedAssessment()}\r\n                </div>\r\n            )}\r\n\r\n            {/* Global Navigation */}\r\n            <div className=\"navigation-section\">\r\n                <div className=\"nav-buttons\">\r\n                    <button\r\n                        onClick={() => actions.setCurrentStep(3)}\r\n                        className=\"btn-secondary\"\r\n                    >\r\n                        ← Step 3: Static Posture\r\n                    </button>\r\n\r\n                    <button\r\n                        onClick={handleAssessmentComplete}\r\n                        className=\"btn-primary\"\r\n                        disabled={!canProceed}\r\n                    >\r\n                        Complete Movement Assessment → Step 5\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NASMMovementAssessmentStep;\r\n","import React from 'react';\r\nimport { useProgramContext } from '../../../contexts/ProgramContext';\r\n\r\nconst PeriodizationStep = () => {\r\n  const { state, actions } = useProgramContext();\r\n\r\n  return (\r\n    <div className=\"periodization-step\">\r\n      <div className=\"step-header\">\r\n        <h2>📅 Periodization</h2>\r\n        <p className=\"step-description\">\r\n          Complete periodization strategy with Bromley wave integration\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"content-section\">\r\n        <h3>🌊 Bromley Wave Periodization</h3>\r\n        <p>Enhanced periodization with Specificity, Recovery, and Novelty principles</p>\r\n\r\n        <div className=\"periodization-options\">\r\n          <div className=\"wave-type-selection\">\r\n            <h4>Wave Type</h4>\r\n            <div className=\"wave-options\">\r\n              <button\r\n                className={`wave-btn ${state.periodization?.waveType === 'volumizing' ? 'active' : ''}`}\r\n                onClick={() => actions.updatePeriodization({ waveType: 'volumizing' })}\r\n              >\r\n                📈 Volumizing Waves\r\n                <span className=\"wave-description\">3×12 → 4×10 → 5×8</span>\r\n              </button>\r\n\r\n              <button\r\n                className={`wave-btn ${state.periodization?.waveType === 'intensifying' ? 'active' : ''}`}\r\n                onClick={() => actions.updatePeriodization({ waveType: 'intensifying' })}\r\n              >\r\n                💪 Intensifying Waves\r\n                <span className=\"wave-description\">5×5 → 4×4 → 3×3</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"phase-structure\">\r\n            <h4>Phase Structure</h4>\r\n            <div className=\"phases\">\r\n              <div className=\"phase-item\">\r\n                <strong>Base Phase:</strong> 6-8 weeks of volume building\r\n              </div>\r\n              <div className=\"phase-item\">\r\n                <strong>Peak Phase:</strong> 4-6 weeks of intensity focus\r\n              </div>\r\n              <div className=\"phase-item\">\r\n                <strong>Deload:</strong> Every 3-4 weeks\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"step-navigation\">\r\n        <button\r\n          className=\"btn-secondary\"\r\n          onClick={() => actions.setCurrentStep('5a')}\r\n        >\r\n          ← Back\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn-primary\"\r\n          onClick={() => actions.setCurrentStep(7)}\r\n        >\r\n          Continue to Program Design →\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PeriodizationStep;\r\n","import React from 'react';\r\nimport { useProgramContext } from '../../../contexts/ProgramContext';\r\n\r\nconst ImplementationStep = () => {\r\n  const { state, actions } = useProgramContext();\r\n\r\n  return (\r\n    <div className=\"implementation-step\">\r\n      <div className=\"step-header\">\r\n        <h2>📊 Implementation & Monitoring</h2>\r\n        <p className=\"step-description\">\r\n          Complete implementation with Bromley monitoring protocols\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"content-section\">\r\n        <h3>Program Summary</h3>\r\n        <div className=\"program-summary\">\r\n          <div className=\"summary-item\">\r\n            <strong>Goal:</strong> {state.primaryGoal || 'Not set'}\r\n          </div>\r\n          <div className=\"summary-item\">\r\n            <strong>System:</strong> {state.selectedSystem || 'Not selected'}\r\n          </div>\r\n          <div className=\"summary-item\">\r\n            <strong>Duration:</strong> {state.timeline?.weeks || 'Not set'} weeks\r\n          </div>\r\n          <div className=\"summary-item\">\r\n            <strong>Wave Type:</strong> {state.periodization?.waveType || 'Not selected'}\r\n          </div>\r\n        </div>\r\n\r\n        <h3>🔄 Bromley Monitoring Features</h3>\r\n        <div className=\"monitoring-features\">\r\n          <div className=\"feature-item\">\r\n            <strong>SRN Tracking:</strong> Specificity, Recovery, Novelty metrics\r\n          </div>\r\n          <div className=\"feature-item\">\r\n            <strong>Wave Progression:</strong> Automatic load adjustments\r\n          </div>\r\n          <div className=\"feature-item\">\r\n            <strong>RPE Monitoring:</strong> Effort-based progression\r\n          </div>\r\n          <div className=\"feature-item\">\r\n            <strong>AMRAP Testing:</strong> Regular strength assessments\r\n          </div>\r\n        </div>\r\n\r\n        <h3>Next Steps</h3>\r\n        <div className=\"next-steps\">\r\n          <ol>\r\n            <li>Begin with assessment week</li>\r\n            <li>Start base phase training</li>\r\n            <li>Monitor weekly progress</li>\r\n            <li>Adjust based on RPE feedback</li>\r\n            <li>Follow wave progression</li>\r\n          </ol>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"step-navigation\">\r\n        <button\r\n          className=\"btn-secondary\"\r\n          onClick={() => actions.setCurrentStep(7)}\r\n        >\r\n          ← Back\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn-primary\"\r\n          onClick={() => {\r\n            // Save complete program\r\n            actions.finalizeProgram();\r\n            // Navigate to dashboard or program view\r\n          }}\r\n        >\r\n          Start Program! 🚀\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"bromley-integration-complete\">\r\n        <h3>🎯 Bromley Integration Complete!</h3>\r\n        <div className=\"completion-status\">\r\n          ✅ SRN Framework Applied<br />\r\n          ✅ Wave Periodization Ready<br />\r\n          ✅ Goal-System Match Confirmed<br />\r\n          ✅ Enhanced Assessment Protocols<br />\r\n          ✅ Progress Monitoring Enabled\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImplementationStep;\r\n","import * as React from \"react\";\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M19.916 4.626a.75.75 0 0 1 .208 1.04l-9 13.5a.75.75 0 0 1-1.154.114l-6-6a.75.75 0 0 1 1.06-1.06l5.353 5.353 8.493-12.74a.75.75 0 0 1 1.04-.207Z\",\n    clipRule: \"evenodd\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ChevronDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M12.53 16.28a.75.75 0 0 1-1.06 0l-7.5-7.5a.75.75 0 0 1 1.06-1.06L12 14.69l6.97-6.97a.75.75 0 1 1 1.06 1.06l-7.5 7.5Z\",\n    clipRule: \"evenodd\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ChevronDownIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CogIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.004 10.407c.138.435-.216.842-.672.842h-3.465a.75.75 0 0 1-.65-.375l-1.732-3c-.229-.396-.053-.907.393-1.004a5.252 5.252 0 0 1 6.126 3.537ZM8.12 8.464c.307-.338.838-.235 1.066.16l1.732 3a.75.75 0 0 1 0 .75l-1.732 3c-.229.397-.76.5-1.067.161A5.23 5.23 0 0 1 6.75 12a5.23 5.23 0 0 1 1.37-3.536ZM10.878 17.13c-.447-.098-.623-.608-.394-1.004l1.733-3.002a.75.75 0 0 1 .65-.375h3.465c.457 0 .81.407.672.842a5.252 5.252 0 0 1-6.126 3.539Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M21 12.75a.75.75 0 1 0 0-1.5h-.783a8.22 8.22 0 0 0-.237-1.357l.734-.267a.75.75 0 1 0-.513-1.41l-.735.268a8.24 8.24 0 0 0-.689-1.192l.6-.503a.75.75 0 1 0-.964-1.149l-.6.504a8.3 8.3 0 0 0-1.054-.885l.391-.678a.75.75 0 1 0-1.299-.75l-.39.676a8.188 8.188 0 0 0-1.295-.47l.136-.77a.75.75 0 0 0-1.477-.26l-.136.77a8.36 8.36 0 0 0-1.377 0l-.136-.77a.75.75 0 1 0-1.477.26l.136.77c-.448.121-.88.28-1.294.47l-.39-.676a.75.75 0 0 0-1.3.75l.392.678a8.29 8.29 0 0 0-1.054.885l-.6-.504a.75.75 0 1 0-.965 1.149l.6.503a8.243 8.243 0 0 0-.689 1.192L3.8 8.216a.75.75 0 1 0-.513 1.41l.735.267a8.222 8.222 0 0 0-.238 1.356h-.783a.75.75 0 0 0 0 1.5h.783c.042.464.122.917.238 1.356l-.735.268a.75.75 0 0 0 .513 1.41l.735-.268c.197.417.428.816.69 1.191l-.6.504a.75.75 0 0 0 .963 1.15l.601-.505c.326.323.679.62 1.054.885l-.392.68a.75.75 0 0 0 1.3.75l.39-.679c.414.192.847.35 1.294.471l-.136.77a.75.75 0 0 0 1.477.261l.137-.772a8.332 8.332 0 0 0 1.376 0l.136.772a.75.75 0 1 0 1.477-.26l-.136-.771a8.19 8.19 0 0 0 1.294-.47l.391.677a.75.75 0 0 0 1.3-.75l-.393-.679a8.29 8.29 0 0 0 1.054-.885l.601.504a.75.75 0 0 0 .964-1.15l-.6-.503c.261-.375.492-.774.69-1.191l.735.267a.75.75 0 1 0 .512-1.41l-.734-.267c.115-.439.195-.892.237-1.356h.784Zm-2.657-3.06a6.744 6.744 0 0 0-1.19-2.053 6.784 6.784 0 0 0-1.82-1.51A6.705 6.705 0 0 0 12 5.25a6.8 6.8 0 0 0-1.225.11 6.7 6.7 0 0 0-2.15.793 6.784 6.784 0 0 0-2.952 3.489.76.76 0 0 1-.036.098A6.74 6.74 0 0 0 5.251 12a6.74 6.74 0 0 0 3.366 5.842l.009.005a6.704 6.704 0 0 0 2.18.798l.022.003a6.792 6.792 0 0 0 2.368-.004 6.704 6.704 0 0 0 2.205-.811 6.785 6.785 0 0 0 1.762-1.484l.009-.01.009-.01a6.743 6.743 0 0 0 1.18-2.066c.253-.707.39-1.469.39-2.263a6.74 6.74 0 0 0-.408-2.309Z\",\n    clipRule: \"evenodd\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CogIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction MagnifyingGlassIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M10.5 3.75a6.75 6.75 0 1 0 0 13.5 6.75 6.75 0 0 0 0-13.5ZM2.25 10.5a8.25 8.25 0 1 1 14.59 5.28l4.69 4.69a.75.75 0 1 1-1.06 1.06l-4.69-4.69A8.25 8.25 0 0 1 2.25 10.5Z\",\n    clipRule: \"evenodd\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(MagnifyingGlassIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PlayIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M4.5 5.653c0-1.427 1.529-2.33 2.779-1.643l11.54 6.347c1.295.712 1.295 2.573 0 3.286L7.28 19.99c-1.25.687-2.779-.217-2.779-1.643V5.653Z\",\n    clipRule: \"evenodd\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PlayIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction UserIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.5 6a4.5 4.5 0 1 1 9 0 4.5 4.5 0 0 1-9 0ZM3.751 20.105a8.25 8.25 0 0 1 16.498 0 .75.75 0 0 1-.437.695A18.683 18.683 0 0 1 12 22.5c-2.786 0-5.433-.608-7.812-1.7a.75.75 0 0 1-.437-.695Z\",\n    clipRule: \"evenodd\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(UserIcon);\nexport default ForwardRef;","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { formatErrorMessage } from './format-error-message.mjs';\n\nlet warning = () => { };\nlet invariant = () => { };\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message, errorCode) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(formatErrorMessage(message, errorCode));\n        }\n    };\n    invariant = (check, message, errorCode) => {\n        if (!check) {\n            throw new Error(formatErrorMessage(message, errorCode));\n        }\n    };\n}\n\nexport { invariant, warning };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","function makeAnimationInstant(options) {\n    options.duration = 0;\n    options.type === \"keyframes\";\n}\n\nexport { makeAnimationInstant };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { makeAnimationInstant } from './utils/make-animation-instant.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            makeAnimationInstant(options);\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX, root }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        const parent = root ?? document.head;\n        parent.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (parent.contains(style)) {\n                parent.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, root }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, root: root, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", root }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, root: root, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","/**\r\n * NASM OPT Program Design Step Configuration\r\n * \r\n * This file defines the complete 17-step NASM OPT methodology\r\n * including step metadata, phase groupings, and navigation utilities.\r\n */\r\n\r\n// Define NASM phases with colors and metadata\r\nexport const nasmPhases = {\r\n    Foundation: {\r\n        color: '#3b82f6', // Blue\r\n        description: 'Client foundation and initial assessments',\r\n        steps: [1, 2, 3, 4]\r\n    },\r\n    Assessment: {\r\n        color: '#eab308', // Yellow\r\n        description: 'Movement analysis and performance testing',\r\n        steps: [5, 6, 7]\r\n    },\r\n    Programming: {\r\n        color: '#22c55e', // Green\r\n        description: 'Exercise prescription and program design',\r\n        steps: [8, 9, 10, 11, 12, 13]\r\n    },\r\n    Implementation: {\r\n        color: '#dc2626', // Red\r\n        description: 'Periodization and monitoring strategies',\r\n        steps: [14, 15, 16, 17]\r\n    }\r\n};\r\n\r\n// Complete 17-step NASM OPT configuration\r\nexport const nasmStepConfig = [\r\n    {\r\n        id: 1,\r\n        name: 'Client Intake & PAR-Q',\r\n        phase: 'Foundation',\r\n        description: 'Initial client consultation, health history, and readiness assessment',\r\n        component: 'NASMIntakeStep',\r\n        isImplemented: true,\r\n        requires: ['None - Starting point'],\r\n        outputs: ['Health history', 'PAR-Q clearance', 'Exercise readiness status']\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Vitals & Basic Measurements',\r\n        phase: 'Foundation',\r\n        description: 'Height, weight, body composition, resting heart rate, blood pressure',\r\n        component: 'NASMVitalsStep',\r\n        isImplemented: true,\r\n        requires: ['Completed PAR-Q'],\r\n        outputs: ['Height/weight', 'Body composition', 'Resting vitals', 'BMI calculations']\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Static Posture Assessment',\r\n        phase: 'Foundation',\r\n        description: 'Anterior, lateral, and posterior postural analysis',\r\n        component: 'NASMStaticPostureStep',\r\n        isImplemented: true,\r\n        requires: ['Basic measurements completed'],\r\n        outputs: ['Postural deviations', 'Muscle imbalance indicators', 'Visual assessment notes']\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Movement Assessments',\r\n        phase: 'Foundation',\r\n        description: 'Overhead squat, single-leg squat, pushing/pulling assessments',\r\n        component: 'NASMMovementAssessmentStep',\r\n        isImplemented: true,\r\n        requires: ['Postural assessment completed'],\r\n        outputs: ['Movement compensations', 'Mobility/stability issues', 'Exercise contraindications']\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Compensation Mapping',\r\n        phase: 'Assessment',\r\n        description: 'Muscle imbalance analysis and corrective strategy development',\r\n        component: 'NASMCompensationStep',\r\n        isImplemented: false,\r\n        requires: ['Movement assessments completed'],\r\n        outputs: ['Corrective exercise priorities', 'Muscle activation strategies']\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Performance & Capacity Tests',\r\n        phase: 'Assessment',\r\n        description: 'Push-up test, Davies test, Shark skill, 1RM estimation',\r\n        component: 'NASMPerformanceTestStep',\r\n        isImplemented: false,\r\n        requires: ['Movement compensations identified'],\r\n        outputs: ['Strength baselines', 'Power assessments', 'Endurance capacity']\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'Choose Starting OPT Phase',\r\n        phase: 'Assessment',\r\n        description: 'Phase 1-5 selection based on assessment findings',\r\n        component: 'NASMOPTPhaseSelectionStep',\r\n        isImplemented: false,\r\n        requires: ['All assessments completed'],\r\n        outputs: ['OPT Phase selection', 'Training readiness level']\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Corrective Warm-up Block',\r\n        phase: 'Programming',\r\n        description: 'SMR and stretching prescription by phase',\r\n        component: 'NASMWarmupStep',\r\n        isImplemented: false,\r\n        requires: ['OPT Phase selected'],\r\n        outputs: ['Warm-up protocol', 'SMR routine', 'Flexibility program']\r\n    },\r\n    {\r\n        id: 9,\r\n        name: 'Core/Balance/Plyometric Block',\r\n        phase: 'Programming',\r\n        description: 'Phase-appropriate core, balance, and reactive training',\r\n        component: 'NASMOPTPhaseStep',\r\n        isImplemented: true,\r\n        requires: ['Corrective warm-up designed'],\r\n        outputs: ['Core training plan', 'Balance progressions', 'Plyometric protocols']\r\n    },\r\n    {\r\n        id: 10,\r\n        name: 'SAQ (Speed, Agility, Quickness)',\r\n        phase: 'Programming',\r\n        description: 'Sport-specific drill programming',\r\n        component: 'NASMSAQStep',\r\n        isImplemented: false,\r\n        requires: ['Core/balance protocols established'],\r\n        outputs: ['SAQ drill selection', 'Speed progressions', 'Agility patterns']\r\n    },\r\n    {\r\n        id: 11,\r\n        name: 'Resistance Training Block',\r\n        phase: 'Programming',\r\n        description: 'Exercise selection, sets, reps, tempo, rest periods',\r\n        component: 'NASMResistanceStep',\r\n        isImplemented: false,\r\n        requires: ['SAQ protocols designed'],\r\n        outputs: ['Exercise selection', 'Training variables', 'Progressive overload plan']\r\n    },\r\n    {\r\n        id: 12,\r\n        name: 'Cardiorespiratory Plan (FITTE)',\r\n        phase: 'Programming',\r\n        description: 'Heart rate zones and cardio prescription',\r\n        component: 'NASMCardioStep',\r\n        isImplemented: false,\r\n        requires: ['Resistance training planned'],\r\n        outputs: ['Cardio prescription', 'Heart rate zones', 'FITTE parameters']\r\n    },\r\n    {\r\n        id: 13,\r\n        name: 'Session Template & Weekly Split',\r\n        phase: 'Programming',\r\n        description: 'Microcycle design and session structure',\r\n        component: 'NASMSessionTemplateStep',\r\n        isImplemented: false,\r\n        requires: ['All training blocks designed'],\r\n        outputs: ['Session templates', 'Weekly split', 'Microcycle structure']\r\n    },\r\n    {\r\n        id: 14,\r\n        name: 'Monthly Progression Rules (Mesocycle)',\r\n        phase: 'Implementation',\r\n        description: '4-week progression and deload planning',\r\n        component: 'NASMMesocycleStep',\r\n        isImplemented: false,\r\n        requires: ['Session templates created'],\r\n        outputs: ['Progression rules', 'Deload protocols', 'Mesocycle plan']\r\n    },\r\n    {\r\n        id: 15,\r\n        name: 'Annual Plan (Macrocycle)',\r\n        phase: 'Implementation',\r\n        description: 'Yearly periodization and phase transitions',\r\n        component: 'NASMMacrocycleStep',\r\n        isImplemented: false,\r\n        requires: ['Mesocycle protocols established'],\r\n        outputs: ['Annual periodization', 'Phase transitions', 'Long-term goals']\r\n    },\r\n    {\r\n        id: 16,\r\n        name: 'Special Population/Constraint Modifications',\r\n        phase: 'Implementation',\r\n        description: 'Population-specific adaptations and equipment constraints',\r\n        component: 'NASMSpecialPopulationStep',\r\n        isImplemented: false,\r\n        requires: ['Base program designed'],\r\n        outputs: ['Population adaptations', 'Equipment modifications', 'Safety protocols']\r\n    },\r\n    {\r\n        id: 17,\r\n        name: 'Monitoring & Reassessment',\r\n        phase: 'Implementation',\r\n        description: 'KPI tracking and reassessment protocols',\r\n        component: 'NASMMonitoringStep',\r\n        isImplemented: false,\r\n        requires: ['Complete program designed'],\r\n        outputs: ['Monitoring protocols', 'Reassessment schedule', 'Progress tracking']\r\n    }\r\n];\r\n\r\n// Utility functions for step navigation\r\nexport const getNASMStep = (stepId) => {\r\n    const step = nasmStepConfig.find(step => step.id === stepId);\r\n    if (step) {\r\n        return step;\r\n    }\r\n    // Fallback with safe defaults\r\n    return {\r\n        id: stepId || 1,\r\n        name: 'Unknown Step',\r\n        phase: 'Foundation',\r\n        description: 'Step not found',\r\n        component: 'DefaultStep',\r\n        isImplemented: false,\r\n        requires: [],\r\n        outputs: []\r\n    };\r\n};\r\n\r\nexport const getNextNASMStep = (currentStepId) => {\r\n    const currentIndex = nasmStepConfig.findIndex(step => step.id === currentStepId);\r\n    if (currentIndex >= 0 && currentIndex < nasmStepConfig.length - 1) {\r\n        return nasmStepConfig[currentIndex + 1];\r\n    }\r\n    return null; // No next step (at the end)\r\n};\r\n\r\nexport const getPreviousNASMStep = (currentStepId) => {\r\n    const currentIndex = nasmStepConfig.findIndex(step => step.id === currentStepId);\r\n    if (currentIndex > 0) {\r\n        return nasmStepConfig[currentIndex - 1];\r\n    }\r\n    return null; // No previous step (at the beginning)\r\n};\r\n\r\n// Get steps by phase\r\nexport const getStepsByPhase = (phase) => {\r\n    return nasmStepConfig.filter(step => step.phase === phase);\r\n};\r\n\r\n// Get phase for a given step\r\nexport const getPhaseForStep = (stepId) => {\r\n    const step = getNASMStep(stepId);\r\n    return step ? step.phase : 'Foundation';\r\n};\r\n\r\n// Get all implemented steps\r\nexport const getImplementedSteps = () => {\r\n    return nasmStepConfig.filter(step => step.isImplemented);\r\n};\r\n\r\n// Get step completion percentage\r\nexport const getCompletionPercentage = (currentStep) => {\r\n    return Math.round((currentStep / nasmStepConfig.length) * 100);\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useProgramContext } from '../../../contexts/ProgramContext';\r\nimport '../../../styles/GlobalNASMStyles.css';\r\n\r\n/**\r\n * NASMIntakeStep - Step 1: Intake & Readiness\r\n * \r\n * Complete client consultation covering:\r\n * - Goals (primary/secondary)\r\n * - Timeline and availability\r\n * - Training history and experience\r\n * - Injuries, medications, and health status\r\n * - Equipment access and constraints\r\n * - Preferences and limitations\r\n */\r\n\r\nconst NASMIntakeStep = () => {\r\n    const { state, actions } = useProgramContext();\r\n\r\n    // Validation state\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const [intakeData, setIntakeData] = useState({\r\n        // Goals\r\n        primaryGoal: '',\r\n        secondaryGoals: [],\r\n        specificObjectives: '',\r\n\r\n        // Timeline & Availability\r\n        programDuration: '',\r\n        sessionsPerWeek: '',\r\n        sessionLength: '',\r\n        timeConstraints: '',\r\n\r\n        // Training History\r\n        trainingExperience: '',\r\n        previousPrograms: [],\r\n        currentActivity: '',\r\n        fitnessLevel: '',\r\n\r\n        // PAR-Q+ 2023 - General Health Questions (7 initial questions)\r\n        parq: {\r\n            q1_heart_condition: null, // Heart condition OR high blood pressure\r\n            q2_chest_pain: null, // Chest pain at rest, daily activities, or physical activity\r\n            q3_dizziness: null, // Lose balance due to dizziness OR lost consciousness\r\n            q4_chronic_condition: null, // Diagnosed with chronic medical condition\r\n            q4_conditions_listed: '', // List of conditions\r\n            q5_medications: null, // Taking prescribed medications for chronic condition\r\n            q5_conditions_medications: '', // List of conditions and medications\r\n            q6_bone_joint: null, // Bone, joint, or soft tissue problem\r\n            q6_conditions_listed: '', // List of conditions\r\n            q7_medical_supervision: null, // Should only do medically supervised activity\r\n\r\n            // Follow-up sections (shown if any YES answers)\r\n            followup_needed: false,\r\n            followup_arthritis: {},\r\n            followup_cancer: {},\r\n            followup_heart: {},\r\n            followup_blood_pressure: {},\r\n            followup_metabolic: {},\r\n            followup_mental_health: {},\r\n            followup_respiratory: {},\r\n            followup_spinal_cord: {},\r\n            followup_stroke: {},\r\n            followup_other: {},\r\n\r\n            // Clearance status\r\n            clearance_status: 'pending', // 'cleared', 'needs_medical', 'conditional'\r\n            medical_clearance_obtained: false\r\n        },\r\n\r\n        // Participant Declaration\r\n        declaration: {\r\n            participant_name: '',\r\n            date_signed: '',\r\n            signature: '',\r\n            witness: '',\r\n            parent_guardian: '' // if under 18\r\n        },\r\n\r\n        // Equipment & Environment\r\n        equipmentAccess: [],\r\n        trainingLocation: '',\r\n        budget: '',\r\n\r\n        // Preferences & Constraints\r\n        exercisePreferences: [],\r\n        exerciseDislikes: [],\r\n        specialRequests: '',\r\n        motivationalFactors: []\r\n    });\r\n\r\n    const [showFollowUp, setShowFollowUp] = useState(false);\r\n    const [expandedSections, setExpandedSections] = useState({});\r\n\r\n    const goalOptions = [\r\n        'Reduce body fat',\r\n        'Increase lean body mass',\r\n        'Improve general performance',\r\n        'Athletic Performance',\r\n        'Injury Prevention/Rehabilitation',\r\n        'Postural Improvement',\r\n        'Cardiovascular Health',\r\n        'Functional Movement',\r\n        'Sport-Specific Training'\r\n    ];\r\n\r\n    const experienceLevels = [\r\n        'Beginning/Novice (0-6 months)',\r\n        'Advanced (6+ months continuous training)'\r\n    ];\r\n\r\n    const equipmentOptions = [\r\n        'Full Commercial Gym',\r\n        'Home Gym (Full Equipment)',\r\n        'Home Gym (Basic Equipment)',\r\n        'Bodyweight Only',\r\n        'Dumbbells',\r\n        'Resistance Bands',\r\n        'Kettlebells',\r\n        'Barbells',\r\n        'Cable Machine',\r\n        'Cardio Equipment'\r\n    ];\r\n\r\n    const handleInputChange = (field, value) => {\r\n        setIntakeData(prev => ({\r\n            ...prev,\r\n            [field]: value\r\n        }));\r\n\r\n        // Clear error for this field when user starts typing\r\n        if (errors[field]) {\r\n            setErrors(prev => ({\r\n                ...prev,\r\n                [field]: ''\r\n            }));\r\n        }\r\n\r\n        // Real-time validation\r\n        validateField(field, value);\r\n    };\r\n\r\n    // Validation functions\r\n    const validateField = (field, value) => {\r\n        let error = '';\r\n\r\n        switch (field) {\r\n            case 'primaryGoal':\r\n                if (!value.trim()) {\r\n                    error = 'Primary goal is required';\r\n                }\r\n                break;\r\n            case 'programDuration':\r\n                if (!value.trim()) {\r\n                    error = 'Program duration is required';\r\n                }\r\n                break;\r\n            case 'sessionsPerWeek':\r\n                if (!value.trim()) {\r\n                    error = 'Sessions per week is required';\r\n                }\r\n                break;\r\n            case 'trainingExperience':\r\n                if (!value.trim()) {\r\n                    error = 'Training experience is required';\r\n                }\r\n                break;\r\n            case 'equipmentAccess':\r\n                if (!Array.isArray(value) || value.length === 0) {\r\n                    error = 'At least one equipment option is required';\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if (error) {\r\n            setErrors(prev => ({\r\n                ...prev,\r\n                [field]: error\r\n            }));\r\n        }\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const newErrors = {};\r\n\r\n        // Required fields validation\r\n        if (!intakeData.primaryGoal.trim()) {\r\n            newErrors.primaryGoal = 'Primary goal is required';\r\n        }\r\n        if (!intakeData.programDuration.trim()) {\r\n            newErrors.programDuration = 'Program duration is required';\r\n        }\r\n        if (!intakeData.sessionsPerWeek.trim()) {\r\n            newErrors.sessionsPerWeek = 'Sessions per week is required';\r\n        }\r\n        if (!intakeData.trainingExperience.trim()) {\r\n            newErrors.trainingExperience = 'Training experience is required';\r\n        }\r\n        if (!intakeData.equipmentAccess || intakeData.equipmentAccess.length === 0) {\r\n            newErrors.equipmentAccess = 'At least one equipment option is required';\r\n        }\r\n\r\n        // PAR-Q validation\r\n        const parqAnswers = [\r\n            intakeData.parq.q1_heart_condition,\r\n            intakeData.parq.q2_chest_pain,\r\n            intakeData.parq.q3_dizziness,\r\n            intakeData.parq.q4_chronic_condition,\r\n            intakeData.parq.q5_medications,\r\n            intakeData.parq.q6_bone_joint,\r\n            intakeData.parq.q7_medical_supervision\r\n        ];\r\n\r\n        if (parqAnswers.some(answer => answer === null)) {\r\n            newErrors.parq = 'Please complete all PAR-Q+ health screening questions';\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    const handlePARQChange = (question, value) => {\r\n        const newIntakeData = {\r\n            ...intakeData,\r\n            parq: {\r\n                ...intakeData.parq,\r\n                [question]: value\r\n            }\r\n        };\r\n        setIntakeData(newIntakeData);\r\n\r\n        // Check if follow-up is needed after state update\r\n        setTimeout(() => {\r\n            const parqAnswers = [\r\n                newIntakeData.parq.q1_heart_condition,\r\n                newIntakeData.parq.q2_chest_pain,\r\n                newIntakeData.parq.q3_dizziness,\r\n                newIntakeData.parq.q4_chronic_condition,\r\n                newIntakeData.parq.q5_medications,\r\n                newIntakeData.parq.q6_bone_joint,\r\n                newIntakeData.parq.q7_medical_supervision\r\n            ];\r\n\r\n            const hasYesAnswer = parqAnswers.some(answer => answer === 'yes');\r\n\r\n            setIntakeData(prev => ({\r\n                ...prev,\r\n                parq: {\r\n                    ...prev.parq,\r\n                    followup_needed: hasYesAnswer,\r\n                    clearance_status: hasYesAnswer ? 'needs_medical' : 'cleared'\r\n                }\r\n            }));\r\n\r\n            setShowFollowUp(hasYesAnswer);\r\n        }, 0);\r\n    };\r\n\r\n    const handlePARQTextChange = (field, value) => {\r\n        setIntakeData(prev => ({\r\n            ...prev,\r\n            parq: {\r\n                ...prev.parq,\r\n                [field]: value\r\n            }\r\n        }));\r\n    };\r\n\r\n    const handleDeclarationChange = (field, value) => {\r\n        setIntakeData(prev => ({\r\n            ...prev,\r\n            declaration: {\r\n                ...prev.declaration,\r\n                [field]: value\r\n            }\r\n        }));\r\n    };\r\n\r\n    const handlePARQFollowupChange = (section, question, value) => {\r\n        setIntakeData(prev => ({\r\n            ...prev,\r\n            parq: {\r\n                ...prev.parq,\r\n                [`followup_${section}`]: {\r\n                    ...prev.parq[`followup_${section}`],\r\n                    [question]: value\r\n                }\r\n            }\r\n        }));\r\n    };\r\n\r\n    const toggleSection = (section) => {\r\n        setExpandedSections(prev => ({\r\n            ...prev,\r\n            [section]: !prev[section]\r\n        }));\r\n    };\r\n\r\n    const handleArrayToggle = (field, item) => {\r\n        setIntakeData(prev => ({\r\n            ...prev,\r\n            [field]: prev[field].includes(item)\r\n                ? prev[field].filter(i => i !== item)\r\n                : [...prev[field], item]\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Validate form\r\n        if (!validateForm()) {\r\n            return;\r\n        }\r\n\r\n        // Validate PAR-Q+ completion\r\n        if (!isPARQComplete()) {\r\n            setErrors(prev => ({\r\n                ...prev,\r\n                parq: 'Please complete the PAR-Q+ health screening questions before continuing.'\r\n            }));\r\n            return;\r\n        }\r\n\r\n        // Check clearance status\r\n        const clearanceStatus = determinePARQClearanceStatus();\r\n        if (clearanceStatus === 'needs_medical' && !intakeData.parq.medical_clearance_obtained) {\r\n            setErrors(prev => ({\r\n                ...prev,\r\n                medical_clearance: 'Medical clearance is required before proceeding. Please obtain clearance from your physician or check the medical clearance box if already obtained.'\r\n            }));\r\n            return;\r\n        }\r\n\r\n        // Calculate goal hierarchy and risk assessment\r\n        const goalHierarchy = {\r\n            primary: intakeData.primaryGoal,\r\n            secondary: intakeData.secondaryGoals,\r\n            timeline: intakeData.programDuration\r\n        };\r\n\r\n        const constraints = {\r\n            time: intakeData.timeConstraints,\r\n            equipment: intakeData.equipmentAccess,\r\n            parq_clearance: clearanceStatus,\r\n            preferences: {\r\n                likes: intakeData.exercisePreferences,\r\n                dislikes: intakeData.exerciseDislikes\r\n            }\r\n        };\r\n\r\n        const baselineSchedule = {\r\n            frequency: intakeData.sessionsPerWeek,\r\n            duration: intakeData.sessionLength,\r\n            location: intakeData.trainingLocation\r\n        };\r\n\r\n        // Save intake results\r\n        actions.setAssessmentData({\r\n            step: 1,\r\n            intakeData,\r\n            goalHierarchy,\r\n            constraints,\r\n            clearanceStatus,\r\n            baselineSchedule,\r\n            timestamp: new Date().toISOString()\r\n        });\r\n\r\n        // Move to next step\r\n        actions.setCurrentStep(2);\r\n    };\r\n\r\n    const isPARQComplete = () => {\r\n        const requiredAnswers = [\r\n            intakeData.parq.q1_heart_condition,\r\n            intakeData.parq.q2_chest_pain,\r\n            intakeData.parq.q3_dizziness,\r\n            intakeData.parq.q4_chronic_condition,\r\n            intakeData.parq.q5_medications,\r\n            intakeData.parq.q6_bone_joint,\r\n            intakeData.parq.q7_medical_supervision\r\n        ];\r\n\r\n        return requiredAnswers.every(answer => answer !== null);\r\n    };\r\n\r\n    const determinePARQClearanceStatus = () => {\r\n        const parqAnswers = [\r\n            intakeData.parq.q1_heart_condition,\r\n            intakeData.parq.q2_chest_pain,\r\n            intakeData.parq.q3_dizziness,\r\n            intakeData.parq.q4_chronic_condition,\r\n            intakeData.parq.q5_medications,\r\n            intakeData.parq.q6_bone_joint,\r\n            intakeData.parq.q7_medical_supervision\r\n        ];\r\n\r\n        const hasYesAnswer = parqAnswers.some(answer => answer === 'yes');\r\n\r\n        if (!hasYesAnswer) {\r\n            return 'cleared';\r\n        } else {\r\n            return 'needs_medical';\r\n        }\r\n    };\r\n\r\n    const isFormComplete = () => {\r\n        const basicInfoComplete = intakeData.primaryGoal &&\r\n            intakeData.programDuration &&\r\n            intakeData.sessionsPerWeek &&\r\n            intakeData.trainingExperience &&\r\n            intakeData.equipmentAccess.length > 0;\r\n\r\n        const parqComplete = isPARQComplete();\r\n        const declarationComplete = intakeData.declaration.participant_name &&\r\n            intakeData.declaration.date_signed;\r\n\r\n        return basicInfoComplete && parqComplete && declarationComplete;\r\n    };\r\n\r\n    return (\r\n        <div className=\"step-content\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n            <div className=\"step-header-container\">\r\n                <h1 className=\"text-3xl font-bold text-white !important\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Step 1: Intake & Readiness</h1>\r\n                <p className=\"text-lg text-gray-300 !important\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Complete client consultation to establish training foundation</p>\r\n                <span className=\"step-progress\">Step 1 of 17</span>\r\n            </div>\r\n\r\n            <div className=\"progress-pills\">\r\n                <div className=\"progress-pill active\">\r\n                    <div>Foundation</div>\r\n                    <small>Steps 1-2</small>\r\n                </div>\r\n                <div className=\"progress-pill\">\r\n                    <div>Assessment</div>\r\n                    <small>Steps 3-6</small>\r\n                </div>\r\n                <div className=\"progress-pill\">\r\n                    <div>Programming</div>\r\n                    <small>Steps 7-12</small>\r\n                </div>\r\n                <div className=\"progress-pill\">\r\n                    <div>Implementation</div>\r\n                    <small>Steps 13-17</small>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"content-wrapper\">\r\n                {/* Goals Section */}\r\n                <div className=\"content-card\">\r\n                    <h3 className=\"text-xl font-bold text-white !important mb-4\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Training Goals & Objectives</h3>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"font-medium text-white !important mb-2 block\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Primary Goal *</label>\r\n                        <select\r\n                            value={intakeData.primaryGoal}\r\n                            onChange={(e) => handleInputChange('primaryGoal', e.target.value)}\r\n                            required\r\n                            className={`w-full border rounded-md p-2 bg-gray-800 text-white !important text-base leading-6 focus:ring-red-500 focus:border-red-500 transition-colors ${errors.primaryGoal ? 'border-red-500' : 'border-gray-600'\r\n                                }`}\r\n                            style={{ fontFamily: \"'Roboto', sans-serif\" }}\r\n                        >\r\n                            <option value=\"\">Select Primary Goal</option>\r\n                            {goalOptions.map(goal => (\r\n                                <option key={goal} value={goal}>{goal}</option>\r\n                            ))}\r\n                        </select>\r\n                        {errors.primaryGoal && (\r\n                            <p className=\"text-red-500 text-sm mt-1\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                                {errors.primaryGoal}\r\n                            </p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"font-medium text-white !important mb-2 block\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Secondary Goals (Select all that apply)</label>\r\n                        <div className=\"checkbox-group space-y-2\">\r\n                            {goalOptions.filter(g => g !== intakeData.primaryGoal).map(goal => (\r\n                                <label key={goal} className=\"flex items-center space-x-2 font-medium text-white !important cursor-pointer\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={intakeData.secondaryGoals.includes(goal)}\r\n                                        onChange={() => handleArrayToggle('secondaryGoals', goal)}\r\n                                        className=\"accent-red-600 h-4 w-4 rounded border-gray-600 bg-gray-800 text-red-600 focus:ring-red-500\"\r\n                                    />\r\n                                    <span>{goal}</span>\r\n                                </label>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"font-medium text-white !important mb-2 block\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Specific Objectives</label>\r\n                        <textarea\r\n                            value={intakeData.specificObjectives}\r\n                            onChange={(e) => handleInputChange('specificObjectives', e.target.value)}\r\n                            placeholder=\"Describe specific, measurable objectives...\"\r\n                            rows=\"3\"\r\n                            className=\"w-full border border-gray-600 rounded-md p-2 bg-gray-800 text-white !important text-base leading-6 focus:ring-red-500 focus:border-red-500 transition-colors placeholder-gray-400\"\r\n                            style={{ fontFamily: \"'Roboto', sans-serif\" }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Timeline & Availability */}\r\n                <div className=\"content-card\">\r\n                    <h3 className=\"text-xl font-bold text-white !important mb-4\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Timeline & Availability</h3>\r\n\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"font-medium text-white !important mb-2 block\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Program Duration *</label>\r\n                            <select\r\n                                value={intakeData.programDuration}\r\n                                onChange={(e) => handleInputChange('programDuration', e.target.value)}\r\n                                required\r\n                                className={`w-full border rounded-md p-2 bg-gray-800 text-white !important text-base leading-6 focus:ring-red-500 focus:border-red-500 transition-colors ${errors.programDuration ? 'border-red-500' : 'border-gray-600'\r\n                                    }`}\r\n                                style={{ fontFamily: \"'Roboto', sans-serif\" }}\r\n                            >\r\n                                <option value=\"\">Select Duration</option>\r\n                                <option value=\"4-weeks\">4 Weeks</option>\r\n                                <option value=\"8-weeks\">8 Weeks</option>\r\n                                <option value=\"12-weeks\">12 Weeks</option>\r\n                                <option value=\"16-weeks\">16 Weeks</option>\r\n                                <option value=\"6-months\">6 Months</option>\r\n                                <option value=\"1-year\">1 Year</option>\r\n                                <option value=\"ongoing\">Ongoing</option>\r\n                            </select>\r\n                            {errors.programDuration && (\r\n                                <p className=\"text-red-500 text-sm mt-1\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                                    {errors.programDuration}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label className=\"font-medium text-white !important mb-2 block\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Sessions Per Week *</label>\r\n                            <select\r\n                                value={intakeData.sessionsPerWeek}\r\n                                onChange={(e) => handleInputChange('sessionsPerWeek', e.target.value)}\r\n                                required\r\n                                className={`w-full border rounded-md p-2 bg-gray-800 text-white !important text-base leading-6 focus:ring-red-500 focus:border-red-500 transition-colors ${errors.sessionsPerWeek ? 'border-red-500' : 'border-gray-600'\r\n                                    }`}\r\n                                style={{ fontFamily: \"'Roboto', sans-serif\" }}\r\n                            >\r\n                                <option value=\"\">Select Frequency</option>\r\n                                <option value=\"2\">2 Sessions</option>\r\n                                <option value=\"3\">3 Sessions</option>\r\n                                <option value=\"4\">4 Sessions</option>\r\n                                <option value=\"5\">5 Sessions</option>\r\n                                <option value=\"6\">6 Sessions</option>\r\n                            </select>\r\n                            {errors.sessionsPerWeek && (\r\n                                <p className=\"text-red-500 text-sm mt-1\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                                    {errors.sessionsPerWeek}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"font-medium text-white !important mb-2 block\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Session Length</label>\r\n                        <select\r\n                            value={intakeData.sessionLength}\r\n                            onChange={(e) => handleInputChange('sessionLength', e.target.value)}\r\n                            className=\"w-full border border-gray-600 rounded-md p-2 bg-gray-800 text-white !important text-base leading-6 focus:ring-red-500 focus:border-red-500 transition-colors\"\r\n                            style={{ fontFamily: \"'Roboto', sans-serif\" }}\r\n                        >\r\n                            <option value=\"\">Select Length</option>\r\n                            <option value=\"30-min\">30 Minutes</option>\r\n                            <option value=\"45-min\">45 Minutes</option>\r\n                            <option value=\"60-min\">60 Minutes</option>\r\n                            <option value=\"75-min\">75 Minutes</option>\r\n                            <option value=\"90-min\">90 Minutes</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"font-medium text-white !important mb-2 block\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Time Constraints</label>\r\n                        <textarea\r\n                            value={intakeData.timeConstraints}\r\n                            onChange={(e) => handleInputChange('timeConstraints', e.target.value)}\r\n                            placeholder=\"Any scheduling limitations, busy periods, travel, etc...\"\r\n                            rows=\"2\"\r\n                            className=\"w-full border border-gray-600 rounded-md p-2 bg-gray-800 text-white !important text-base leading-6 focus:ring-red-500 focus:border-red-500 transition-colors placeholder-gray-400\"\r\n                            style={{ fontFamily: \"'Roboto', sans-serif\" }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Training History */}\r\n                <div className=\"content-card\">\r\n                    <h3 className=\"text-xl font-bold text-white !important mb-4\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Training History & Experience</h3>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"font-medium text-white !important mb-2 block\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Training Experience Level *</label>\r\n                        <select\r\n                            value={intakeData.trainingExperience}\r\n                            onChange={(e) => handleInputChange('trainingExperience', e.target.value)}\r\n                            required\r\n                            className={`w-full border rounded-md p-2 bg-gray-800 text-white !important text-base leading-6 focus:ring-red-500 focus:border-red-500 transition-colors ${errors.trainingExperience ? 'border-red-500' : 'border-gray-600'\r\n                                }`}\r\n                            style={{ fontFamily: \"'Roboto', sans-serif\" }}\r\n                        >\r\n                            <option value=\"\">Select Experience</option>\r\n                            {experienceLevels.map(level => (\r\n                                <option key={level} value={level}>{level}</option>\r\n                            ))}\r\n                        </select>\r\n                        {errors.trainingExperience && (\r\n                            <p className=\"text-red-500 text-sm mt-1\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                                {errors.trainingExperience}\r\n                            </p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"font-medium text-white !important mb-2 block\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Current Physical Activity</label>\r\n                        <textarea\r\n                            value={intakeData.currentActivity}\r\n                            onChange={(e) => handleInputChange('currentActivity', e.target.value)}\r\n                            placeholder=\"Describe current exercise routine, sports, daily activities...\"\r\n                            rows=\"3\"\r\n                            className=\"w-full border border-gray-600 rounded-md p-2 bg-gray-800 text-white !important text-base leading-6 focus:ring-red-500 focus:border-red-500 transition-colors placeholder-gray-400\"\r\n                            style={{ fontFamily: \"'Roboto', sans-serif\" }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* PAR-Q+ 2023 Health Screening */}\r\n                <div className=\"content-card\">\r\n                    <h3 className=\"text-xl font-bold text-white !important mb-4\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>PAR-Q+ 2023 - Physical Activity Readiness Questionnaire</h3>\r\n                    <p className=\"text-base leading-6 text-gray-300 !important mb-6\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                        The health benefits of regular physical activity are clear; however, more vigorous activity increases the risk of adverse events. This questionnaire will tell you whether it is necessary for you to seek further advice from your doctor OR a qualified exercise professional before becoming more physically active.\r\n                    </p>\r\n\r\n                    <div className=\"space-y-6\">\r\n                        <h4 className=\"text-lg font-semibold text-white !important\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>GENERAL HEALTH QUESTIONS</h4>\r\n                        <p className=\"text-sm text-gray-300 !important mb-4\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Please read the 7 questions below carefully and answer each one honestly: check YES or NO.</p>\r\n\r\n                        {/* Question 1 */}\r\n                        <div className=\"bg-gray-900 p-4 rounded-lg border border-gray-600\">\r\n                            <label className=\"block text-white !important font-medium mb-3\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                                1. Has your doctor ever said that you have a heart condition OR high blood pressure?\r\n                            </label>\r\n                            <div className=\"flex space-x-6\">\r\n                                <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"q1\"\r\n                                        value=\"yes\"\r\n                                        checked={intakeData.parq.q1_heart_condition === 'yes'}\r\n                                        onChange={(e) => handlePARQChange('q1_heart_condition', e.target.value)}\r\n                                        className=\"accent-red-600 h-4 w-4 text-red-600 focus:ring-red-500\"\r\n                                    />\r\n                                    <span className=\"text-white !important font-medium\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>YES</span>\r\n                                </label>\r\n                                <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"q1\"\r\n                                        value=\"no\"\r\n                                        checked={intakeData.parq.q1_heart_condition === 'no'}\r\n                                        onChange={(e) => handlePARQChange('q1_heart_condition', e.target.value)}\r\n                                        className=\"accent-red-600 h-4 w-4 text-red-600 focus:ring-red-500\"\r\n                                    />\r\n                                    <span className=\"text-white !important font-medium\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>NO</span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Question 2 */}\r\n                        <div className=\"bg-gray-900 p-4 rounded-lg border border-gray-600\">\r\n                            <label className=\"block text-white !important font-medium mb-3\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                                2. Do you feel pain in your chest at rest, during your daily activities of living, OR when you do physical activity?\r\n                            </label>\r\n                            <div className=\"flex space-x-6\">\r\n                                <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"q2\"\r\n                                        value=\"yes\"\r\n                                        checked={intakeData.parq.q2_chest_pain === 'yes'}\r\n                                        onChange={(e) => handlePARQChange('q2_chest_pain', e.target.value)}\r\n                                        className=\"accent-red-600 h-4 w-4 text-red-600 focus:ring-red-500\"\r\n                                    />\r\n                                    <span className=\"text-white !important font-medium\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>YES</span>\r\n                                </label>\r\n                                <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"q2\"\r\n                                        value=\"no\"\r\n                                        checked={intakeData.parq.q2_chest_pain === 'no'}\r\n                                        onChange={(e) => handlePARQChange('q2_chest_pain', e.target.value)}\r\n                                        className=\"accent-red-600 h-4 w-4 text-red-600 focus:ring-red-500\"\r\n                                    />\r\n                                    <span className=\"text-white !important font-medium\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>NO</span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Question 3 */}\r\n                        <div className=\"bg-gray-900 p-4 rounded-lg border border-gray-600\">\r\n                            <label className=\"block text-white !important font-medium mb-3\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                                3. Do you lose balance because of dizziness OR have you lost consciousness in the last 12 months?\r\n                            </label>\r\n                            <p className=\"text-sm text-gray-400 !important mb-3\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>(Note: if dizziness was associated with over-breathing including during vigorous exercise, answer NO)</p>\r\n                            <div className=\"flex space-x-6\">\r\n                                <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"q3\"\r\n                                        value=\"yes\"\r\n                                        checked={intakeData.parq.q3_dizziness === 'yes'}\r\n                                        onChange={(e) => handlePARQChange('q3_dizziness', e.target.value)}\r\n                                        className=\"accent-red-600 h-4 w-4 text-red-600 focus:ring-red-500\"\r\n                                    />\r\n                                    <span className=\"text-white !important font-medium\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>YES</span>\r\n                                </label>\r\n                                <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"q3\"\r\n                                        value=\"no\"\r\n                                        checked={intakeData.parq.q3_dizziness === 'no'}\r\n                                        onChange={(e) => handlePARQChange('q3_dizziness', e.target.value)}\r\n                                        className=\"accent-red-600 h-4 w-4 text-red-600 focus:ring-red-500\"\r\n                                    />\r\n                                    <span className=\"text-white !important font-medium\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>NO</span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Question 4 */}\r\n                        <div className=\"bg-gray-900 p-4 rounded-lg border border-gray-600\">\r\n                            <label className=\"block text-white !important font-medium mb-3\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                                4. Have you ever been diagnosed with another chronic medical condition (other than heart disease or high blood pressure)?\r\n                            </label>\r\n                            <div className=\"flex space-x-6 mb-3\">\r\n                                <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"q4\"\r\n                                        value=\"yes\"\r\n                                        checked={intakeData.parq.q4_chronic_condition === 'yes'}\r\n                                        onChange={(e) => handlePARQChange('q4_chronic_condition', e.target.value)}\r\n                                        className=\"accent-red-600 h-4 w-4 text-red-600 focus:ring-red-500\"\r\n                                    />\r\n                                    <span className=\"text-white !important font-medium\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>YES</span>\r\n                                </label>\r\n                                <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"q4\"\r\n                                        value=\"no\"\r\n                                        checked={intakeData.parq.q4_chronic_condition === 'no'}\r\n                                        onChange={(e) => handlePARQChange('q4_chronic_condition', e.target.value)}\r\n                                        className=\"accent-red-600 h-4 w-4 text-red-600 focus:ring-red-500\"\r\n                                    />\r\n                                    <span className=\"text-white !important font-medium\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>NO</span>\r\n                                </label>\r\n                            </div>\r\n                            {intakeData.parq.q4_chronic_condition === 'yes' && (\r\n                                <div className=\"mt-3\">\r\n                                    <label className=\"block text-sm font-medium text-red-400 !important mb-2\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>PLEASE LIST CONDITION(S) HERE:</label>\r\n                                    <textarea\r\n                                        value={intakeData.parq.q4_conditions_listed}\r\n                                        onChange={(e) => handlePARQTextChange('q4_conditions_listed', e.target.value)}\r\n                                        placeholder=\"List your chronic medical conditions...\"\r\n                                        rows=\"2\"\r\n                                        className=\"w-full px-3 py-2 border border-gray-600 rounded-md bg-gray-800 text-white !important focus:ring-red-500 focus:border-red-500\"\r\n                                        style={{ fontFamily: \"'Roboto', sans-serif\" }}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* Question 5 */}\r\n                        <div className=\"bg-gray-900 p-4 rounded-lg border border-gray-600\">\r\n                            <label className=\"block text-white !important font-medium mb-3\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                                5. Are you currently taking prescribed medications for a chronic medical condition?\r\n                            </label>\r\n                            <div className=\"flex space-x-6 mb-3\">\r\n                                <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"q5\"\r\n                                        value=\"yes\"\r\n                                        checked={intakeData.parq.q5_medications === 'yes'}\r\n                                        onChange={(e) => handlePARQChange('q5_medications', e.target.value)}\r\n                                        className=\"accent-red-600 h-4 w-4 text-red-600 focus:ring-red-500\"\r\n                                    />\r\n                                    <span className=\"text-white !important font-medium\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>YES</span>\r\n                                </label>\r\n                                <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"q5\"\r\n                                        value=\"no\"\r\n                                        checked={intakeData.parq.q5_medications === 'no'}\r\n                                        onChange={(e) => handlePARQChange('q5_medications', e.target.value)}\r\n                                        className=\"accent-red-600 h-4 w-4 text-red-600 focus:ring-red-500\"\r\n                                    />\r\n                                    <span className=\"text-white !important font-medium\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>NO</span>\r\n                                </label>\r\n                            </div>\r\n                            {intakeData.parq.q5_medications === 'yes' && (\r\n                                <div className=\"mt-3\">\r\n                                    <label className=\"block text-sm font-medium text-red-400 !important mb-2\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>PLEASE LIST CONDITION(S) AND MEDICATIONS HERE:</label>\r\n                                    <textarea\r\n                                        value={intakeData.parq.q5_conditions_medications}\r\n                                        onChange={(e) => handlePARQTextChange('q5_conditions_medications', e.target.value)}\r\n                                        placeholder=\"List conditions and medications...\"\r\n                                        rows=\"2\"\r\n                                        className=\"w-full px-3 py-2 border border-gray-600 rounded-md bg-gray-800 text-white !important focus:ring-red-500 focus:border-red-500\"\r\n                                        style={{ fontFamily: \"'Roboto', sans-serif\" }}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* Question 6 */}\r\n                        <div className=\"bg-gray-900 p-4 rounded-lg border border-gray-600\">\r\n                            <label className=\"block text-white !important font-medium mb-3\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                                6. Do you currently have (or have had within the past 12 months) a bone, joint, or soft tissue problem that could be made worse by becoming more physically active?\r\n                            </label>\r\n                            <p className=\"text-sm text-gray-400 !important mb-3\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>(Note: does not limit current ability to be physically active)</p>\r\n                            <div className=\"flex space-x-6 mb-3\">\r\n                                <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"q6\"\r\n                                        value=\"yes\"\r\n                                        checked={intakeData.parq.q6_bone_joint === 'yes'}\r\n                                        onChange={(e) => handlePARQChange('q6_bone_joint', e.target.value)}\r\n                                        className=\"accent-red-600 h-4 w-4 text-red-600 focus:ring-red-500\"\r\n                                    />\r\n                                    <span className=\"text-white !important font-medium\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>YES</span>\r\n                                </label>\r\n                                <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"q6\"\r\n                                        value=\"no\"\r\n                                        checked={intakeData.parq.q6_bone_joint === 'no'}\r\n                                        onChange={(e) => handlePARQChange('q6_bone_joint', e.target.value)}\r\n                                        className=\"accent-red-600 h-4 w-4 text-red-600 focus:ring-red-500\"\r\n                                    />\r\n                                    <span className=\"text-white !important font-medium\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>NO</span>\r\n                                </label>\r\n                            </div>\r\n                            {intakeData.parq.q6_bone_joint === 'yes' && (\r\n                                <div className=\"mt-3\">\r\n                                    <label className=\"block text-sm font-medium text-red-400 !important mb-2\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>PLEASE LIST CONDITION(S) HERE:</label>\r\n                                    <textarea\r\n                                        value={intakeData.parq.q6_conditions_listed}\r\n                                        onChange={(e) => handlePARQTextChange('q6_conditions_listed', e.target.value)}\r\n                                        placeholder=\"List bone, joint, or soft tissue problems...\"\r\n                                        rows=\"2\"\r\n                                        className=\"w-full px-3 py-2 border border-gray-600 rounded-md bg-gray-800 text-white !important focus:ring-red-500 focus:border-red-500\"\r\n                                        style={{ fontFamily: \"'Roboto', sans-serif\" }}\r\n                                    />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* Question 7 */}\r\n                        <div className=\"bg-gray-900 p-4 rounded-lg border border-gray-600\">\r\n                            <label className=\"block text-white !important font-medium mb-3\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                                7. Has your doctor ever said that you should only do medically supervised physical activity?\r\n                            </label>\r\n                            <div className=\"flex space-x-6\">\r\n                                <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"q7\"\r\n                                        value=\"yes\"\r\n                                        checked={intakeData.parq.q7_medical_supervision === 'yes'}\r\n                                        onChange={(e) => handlePARQChange('q7_medical_supervision', e.target.value)}\r\n                                        className=\"accent-red-600 h-4 w-4 text-red-600 focus:ring-red-500\"\r\n                                    />\r\n                                    <span className=\"text-white !important font-medium\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>YES</span>\r\n                                </label>\r\n                                <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"q7\"\r\n                                        value=\"no\"\r\n                                        checked={intakeData.parq.q7_medical_supervision === 'no'}\r\n                                        onChange={(e) => handlePARQChange('q7_medical_supervision', e.target.value)}\r\n                                        className=\"accent-red-600 h-4 w-4 text-red-600 focus:ring-red-500\"\r\n                                    />\r\n                                    <span className=\"text-white !important font-medium\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>NO</span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* PAR-Q+ Results */}\r\n                    {isPARQComplete() && (\r\n                        <div className=\"parq-results\">\r\n                            {determinePARQClearanceStatus() === 'cleared' ? (\r\n                                <div className=\"clearance-box cleared\">\r\n                                    <h4>✅ You are cleared for physical activity</h4>\r\n                                    <p>All of your answers were NO. You can proceed with the program design.</p>\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"clearance-box needs-clearance\">\r\n                                    <h4>⚠️ COMPLETE PAGES 2 AND 3</h4>\r\n                                    <p>You answered YES to one or more questions. You should seek further information before becoming more physically active.</p>\r\n                                    <p><strong>Complete the ePARmed-X+ at www.eparmedx.com</strong></p>\r\n\r\n                                    <div className=\"medical-clearance-option\">\r\n                                        <label className=\"medical-clearance-label\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={intakeData.parq.medical_clearance_obtained}\r\n                                                onChange={(e) => handlePARQChange('medical_clearance_obtained', e.target.checked)}\r\n                                            />\r\n                                            I have obtained medical clearance from my physician to participate in physical activity\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Follow-up sections - Complete PAR-Q+ Pages 2 & 3 */}\r\n                    {showFollowUp && (\r\n                        <div className=\"parq-followup-sections\">\r\n                            <h4>FOLLOW-UP QUESTIONNAIRE SECTIONS</h4>\r\n                            <p className=\"followup-note\">\r\n                                You answered YES to one or more questions. Complete the relevant sections below based on your conditions.\r\n                            </p>\r\n\r\n                            {/* Arthritis, Osteoporosis, or Back Problems */}\r\n                            <div className=\"followup-section\">\r\n                                <div className=\"followup-header\" onClick={() => toggleSection('arthritis')}>\r\n                                    <h5>Arthritis, Osteoporosis, or Back Problems</h5>\r\n                                    <span className=\"toggle-icon\">{expandedSections.arthritis ? '−' : '+'}</span>\r\n                                </div>\r\n                                {expandedSections.arthritis && (\r\n                                    <div className=\"followup-content\">\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Do you have difficulty controlling your condition with medications or other physician-prescribed therapies?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        name=\"arthritis_control\"\r\n                                                        value=\"yes\"\r\n                                                        onChange={(e) => handlePARQFollowupChange('arthritis', 'control', e.target.value)}\r\n                                                    />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input\r\n                                                        type=\"radio\"\r\n                                                        name=\"arthritis_control\"\r\n                                                        value=\"no\"\r\n                                                        onChange={(e) => handlePARQFollowupChange('arthritis', 'control', e.target.value)}\r\n                                                    />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Do you have joint problems causing pain, a recent fracture or fracture still healing, or a recent joint injury?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"arthritis_joint\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"arthritis_joint\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {/* Cancer of any kind */}\r\n                            <div className=\"followup-section\">\r\n                                <div className=\"followup-header\" onClick={() => toggleSection('cancer')}>\r\n                                    <h5>Cancer of any kind</h5>\r\n                                    <span className=\"toggle-icon\">{expandedSections.cancer ? '−' : '+'}</span>\r\n                                </div>\r\n                                {expandedSections.cancer && (\r\n                                    <div className=\"followup-content\">\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Does your cancer diagnosis include any of the following types: lung/bronchogenic, multiple myeloma, head/neck?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"cancer_type\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"cancer_type\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Are you currently receiving cancer therapy (such as radiation or chemotherapy)?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"cancer_therapy\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"cancer_therapy\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {/* Heart or Cardiovascular Condition */}\r\n                            <div className=\"followup-section\">\r\n                                <div className=\"followup-header\" onClick={() => toggleSection('heart')}>\r\n                                    <h5>Heart or Cardiovascular Condition</h5>\r\n                                    <span className=\"toggle-icon\">{expandedSections.heart ? '−' : '+'}</span>\r\n                                </div>\r\n                                {expandedSections.heart && (\r\n                                    <div className=\"followup-content\">\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Do you have difficulty controlling your condition with medications or other physician-prescribed therapies?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"heart_control\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"heart_control\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Do you have an irregular heart beat that requires medical management?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"heart_irregular\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"heart_irregular\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Do you have chronic heart failure?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"heart_failure\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"heart_failure\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {/* High Blood Pressure */}\r\n                            <div className=\"followup-section\">\r\n                                <div className=\"followup-header\" onClick={() => toggleSection('blood_pressure')}>\r\n                                    <h5>High Blood Pressure</h5>\r\n                                    <span className=\"toggle-icon\">{expandedSections.blood_pressure ? '−' : '+'}</span>\r\n                                </div>\r\n                                {expandedSections.blood_pressure && (\r\n                                    <div className=\"followup-content\">\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Do you have difficulty controlling your condition with medications or other physician-prescribed therapies?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"bp_control\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"bp_control\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Do you have a resting blood pressure equal to or greater than 160/90 mmHg with or without medication?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"bp_elevated\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"bp_elevated\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {/* Metabolic Conditions */}\r\n                            <div className=\"followup-section\">\r\n                                <div className=\"followup-header\" onClick={() => toggleSection('metabolic')}>\r\n                                    <h5>Metabolic Conditions (Diabetes types)</h5>\r\n                                    <span className=\"toggle-icon\">{expandedSections.metabolic ? '−' : '+'}</span>\r\n                                </div>\r\n                                {expandedSections.metabolic && (\r\n                                    <div className=\"followup-content\">\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Do you often have difficulty controlling your blood sugar levels with foods, medications, or other physician-prescribed therapies?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"diabetes_control\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"diabetes_control\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Do you often suffer from signs and symptoms of low blood sugar (hypoglycemia) following exercise and/or during activities of daily living?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"diabetes_hypoglycemia\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"diabetes_hypoglycemia\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {/* Mental Health Problems or Learning Difficulties */}\r\n                            <div className=\"followup-section\">\r\n                                <div className=\"followup-header\" onClick={() => toggleSection('mental_health')}>\r\n                                    <h5>Mental Health Problems or Learning Difficulties</h5>\r\n                                    <span className=\"toggle-icon\">{expandedSections.mental_health ? '−' : '+'}</span>\r\n                                </div>\r\n                                {expandedSections.mental_health && (\r\n                                    <div className=\"followup-content\">\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Do you have difficulty controlling your condition with medications or other physician-prescribed therapies?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"mental_control\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"mental_control\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Do you have Down Syndrome AND back problems affecting nerves or muscles?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"mental_downs\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"mental_downs\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {/* Respiratory Disease */}\r\n                            <div className=\"followup-section\">\r\n                                <div className=\"followup-header\" onClick={() => toggleSection('respiratory')}>\r\n                                    <h5>Respiratory Disease</h5>\r\n                                    <span className=\"toggle-icon\">{expandedSections.respiratory ? '−' : '+'}</span>\r\n                                </div>\r\n                                {expandedSections.respiratory && (\r\n                                    <div className=\"followup-content\">\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Do you have difficulty controlling your condition with medications or other physician-prescribed therapies?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"respiratory_control\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"respiratory_control\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Has your doctor ever said your blood oxygen level is low at rest or during exercise and/or that you require supplemental oxygen therapy?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"respiratory_oxygen\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"respiratory_oxygen\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {/* Spinal Cord Injury */}\r\n                            <div className=\"followup-section\">\r\n                                <div className=\"followup-header\" onClick={() => toggleSection('spinal_cord')}>\r\n                                    <h5>Spinal Cord Injury</h5>\r\n                                    <span className=\"toggle-icon\">{expandedSections.spinal_cord ? '−' : '+'}</span>\r\n                                </div>\r\n                                {expandedSections.spinal_cord && (\r\n                                    <div className=\"followup-content\">\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Do you have difficulty controlling your condition with medications or other physician-prescribed therapies?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"spinal_control\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"spinal_control\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Do you commonly exhibit low resting blood pressure significant enough to cause dizziness, light-headedness, and/or fainting?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"spinal_hypotension\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"spinal_hypotension\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {/* Stroke */}\r\n                            <div className=\"followup-section\">\r\n                                <div className=\"followup-header\" onClick={() => toggleSection('stroke')}>\r\n                                    <h5>Stroke</h5>\r\n                                    <span className=\"toggle-icon\">{expandedSections.stroke ? '−' : '+'}</span>\r\n                                </div>\r\n                                {expandedSections.stroke && (\r\n                                    <div className=\"followup-content\">\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Do you have difficulty controlling your condition with medications or other physician-prescribed therapies?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"stroke_control\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"stroke_control\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Do you have any impairment in walking or mobility?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"stroke_mobility\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"stroke_mobility\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {/* Any other medical condition */}\r\n                            <div className=\"followup-section\">\r\n                                <div className=\"followup-header\" onClick={() => toggleSection('other')}>\r\n                                    <h5>Any other medical condition</h5>\r\n                                    <span className=\"toggle-icon\">{expandedSections.other ? '−' : '+'}</span>\r\n                                </div>\r\n                                {expandedSections.other && (\r\n                                    <div className=\"followup-content\">\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Have you had a blackout, fainted, or lost consciousness as a result of a head injury within the last 12 months OR have you had a diagnosed concussion within the last 12 months?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"other_concussion\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"other_concussion\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"followup-question\">\r\n                                            <label>Do you have a medical condition that is not listed (such as epilepsy, neurological conditions, kidney problems)?</label>\r\n                                            <div className=\"parq-answers\">\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"other_unlisted\" value=\"yes\" />\r\n                                                    YES\r\n                                                </label>\r\n                                                <label className=\"parq-answer\">\r\n                                                    <input type=\"radio\" name=\"other_unlisted\" value=\"no\" />\r\n                                                    NO\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            {/* Final medical clearance recommendation */}\r\n                            <div className=\"final-recommendation\">\r\n                                <div className=\"recommendation-box needs-medical\">\r\n                                    <h4>⚠️ RECOMMENDATION</h4>\r\n                                    <p>You should seek further information before becoming more physically active. Complete the <strong>ePARmed-X+</strong> at <a href=\"http://www.eparmedx.com\" target=\"_blank\" rel=\"noopener noreferrer\">www.eparmedx.com</a></p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Participant Declaration */}\r\n                <div className=\"content-card\">\r\n                    <h3>Participant Declaration</h3>\r\n                    <p className=\"declaration-text\">\r\n                        I acknowledge that I have read and completed this questionnaire. Any false or incomplete information may affect my ability to participate safely in physical activity.\r\n                    </p>\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group\">\r\n                            <label>Participant Name *</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={intakeData.declaration.participant_name}\r\n                                onChange={(e) => handleDeclarationChange('participant_name', e.target.value)}\r\n                                placeholder=\"Enter your full name\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Date *</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                value={intakeData.declaration.date_signed}\r\n                                onChange={(e) => handleDeclarationChange('date_signed', e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group\">\r\n                            <label>Signature (Type your name)</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={intakeData.declaration.signature}\r\n                                onChange={(e) => handleDeclarationChange('signature', e.target.value)}\r\n                                placeholder=\"Type your name as signature\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Witness (if applicable)</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={intakeData.declaration.witness}\r\n                                onChange={(e) => handleDeclarationChange('witness', e.target.value)}\r\n                                placeholder=\"Witness name (if required)\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Parent/Guardian Signature (if under 18)</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={intakeData.declaration.parent_guardian}\r\n                            onChange={(e) => handleDeclarationChange('parent_guardian', e.target.value)}\r\n                            placeholder=\"Parent/Guardian signature (if applicable)\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Equipment & Environment */}\r\n                <div className=\"content-card\">\r\n                    <h3 className=\"text-xl font-bold text-white !important mb-4\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Equipment & Training Environment</h3>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"font-medium text-white !important mb-3 block\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Equipment Access * (Select all available)</label>\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                            {equipmentOptions.map(equipment => (\r\n                                <label key={equipment} className=\"flex items-center space-x-2 font-medium text-white !important cursor-pointer p-2 hover:bg-gray-800 rounded\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={intakeData.equipmentAccess.includes(equipment)}\r\n                                        onChange={() => handleArrayToggle('equipmentAccess', equipment)}\r\n                                        className=\"accent-red-600 h-4 w-4 rounded border-gray-600 bg-gray-800 text-red-600 focus:ring-red-500\"\r\n                                    />\r\n                                    <span>{equipment}</span>\r\n                                </label>\r\n                            ))}\r\n                        </div>\r\n                        {errors.equipmentAccess && (\r\n                            <p className=\"text-red-500 text-sm mt-2\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                                {errors.equipmentAccess}\r\n                            </p>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"font-medium text-white !important mb-2 block\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Primary Training Location</label>\r\n                        <select\r\n                            value={intakeData.trainingLocation}\r\n                            onChange={(e) => handleInputChange('trainingLocation', e.target.value)}\r\n                            className=\"w-full border border-gray-600 rounded-md p-2 bg-gray-800 text-white !important text-base leading-6 focus:ring-red-500 focus:border-red-500 transition-colors\"\r\n                            style={{ fontFamily: \"'Roboto', sans-serif\" }}\r\n                        >\r\n                            <option value=\"\">Select Location</option>\r\n                            <option value=\"commercial-gym\">Commercial Gym</option>\r\n                            <option value=\"home-gym\">Home Gym</option>\r\n                            <option value=\"outdoor\">Outdoor</option>\r\n                            <option value=\"mixed\">Mixed/Various</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Form-wide Error Display */}\r\n                {(errors.parq || errors.medical_clearance) && (\r\n                    <div className=\"bg-red-900 border border-red-600 rounded-lg p-4 mb-6\">\r\n                        {errors.parq && (\r\n                            <p className=\"text-red-200 text-sm mb-2\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                                {errors.parq}\r\n                            </p>\r\n                        )}\r\n                        {errors.medical_clearance && (\r\n                            <p className=\"text-red-200 text-sm\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                                {errors.medical_clearance}\r\n                            </p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Navigation */}\r\n            <div className=\"flex justify-center mt-8\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className={`px-8 py-3 rounded-lg font-medium text-base transition-colors ${!isFormComplete() || (determinePARQClearanceStatus() === 'needs_medical' && !intakeData.parq.medical_clearance_obtained)\r\n                            ? 'bg-gray-700 text-gray-400 cursor-not-allowed'\r\n                            : 'bg-red-600 hover:bg-red-700 text-white !important'\r\n                            }`}\r\n                        style={{ fontFamily: \"'Roboto', sans-serif\" }}\r\n                        disabled={!isFormComplete() || (determinePARQClearanceStatus() === 'needs_medical' && !intakeData.parq.medical_clearance_obtained)}\r\n                    >\r\n                        {!isFormComplete()\r\n                            ? 'Complete Required Fields'\r\n                            : determinePARQClearanceStatus() === 'needs_medical' && !intakeData.parq.medical_clearance_obtained\r\n                                ? 'Medical Clearance Required'\r\n                                : 'Complete Intake → Step 2: Vitals & Body Measures'\r\n                        }\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NASMIntakeStep;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useProgramContext } from '../../../contexts/ProgramContext';\r\n// Import the skinfold diagram image\r\n// import skinfoldDiagramMale from '../../../assets/images/skinfold-diagram-male.png';\r\n\r\n/**\r\n * NASMVitalsStep - Step 2: Baseline Vitals & Body Measures\r\n * \r\n * Comprehensive baseline physiological measurements:\r\n * - Resting HR and BP (if available)\r\n * - Height, weight, BMI calculation\r\n * - Girth measurements\r\n * - Optional body fat assessment\r\n * - Risk flag identification\r\n */\r\n\r\nconst NASMVitalsStep = () => {\r\n    const { state, actions } = useProgramContext();\r\n\r\n    const [vitalsData, setVitalsData] = useState({\r\n        // NASM Vital Signs - Enhanced with 3-day RHR\r\n        restingHR_day1: '',\r\n        restingHR_day2: '',\r\n        restingHR_day3: '',\r\n        averageRHR: '',\r\n        systolicBP: '',\r\n        diastolicBP: '',\r\n\r\n        // Body Measurements\r\n        height: '',\r\n        heightFeet: '',\r\n        heightInches: '',\r\n        heightUnit: 'feet',\r\n        weight: '',\r\n        weightUnit: 'lbs',\r\n        bmi: '',\r\n\r\n        // NASM Required - Waist-to-Hip Ratio\r\n        waistCircumference: '', // narrowest point\r\n        hipCircumference: '',   // widest point\r\n        whr: '', // waist-to-hip ratio\r\n        clientGender: 'male', // for WHR classification\r\n\r\n        // NASM Circumference Measurements (all 7 sites)\r\n        girths: {\r\n            neck: '',           // neck circumference\r\n            chest: '',          // chest circumference\r\n            waist: '',          // waist (narrowest point or navel)\r\n            hips: '',           // hips (widest point)\r\n            rightThigh: '',     // thigh (10 inches above patella)\r\n            leftThigh: '',      // thigh (10 inches above patella)\r\n            rightCalf: '',      // calf (maximum circumference)\r\n            leftCalf: '',       // calf (maximum circumference)\r\n            rightBicep: '',     // bicep (maximum, arm extended)\r\n            leftBicep: ''       // bicep (maximum, arm extended)\r\n        },\r\n\r\n        // Optional Body Composition\r\n        bodyFatPercentage: '',\r\n        bodyFatMethod: '',\r\n        leanBodyMass: '',\r\n\r\n        // Body Composition Assessment Methods (checkboxes)\r\n        assessmentMethods: {\r\n            bioelectrical: false,\r\n            hydrostatic: false,\r\n            dexaScan: false,\r\n            skinfolds: false,\r\n            manual: false\r\n        },\r\n\r\n        // Skinfold Measurements (mm) - KEEP ALL EXISTING\r\n        skinfolds: {\r\n            chest: '',\r\n            abdominal: '',\r\n            thigh: '',\r\n            tricep: '',\r\n            subscapular: '',\r\n            suprailiac: '',\r\n            midaxillary: ''\r\n        },\r\n        skinfoldMethod: 'jackson-pollock-3', // Default method\r\n        clientAge: '',\r\n\r\n        // Additional Metrics\r\n        restingMetabolism: '',\r\n        hydrationStatus: 'normal'\r\n    });\r\n\r\n    const [riskFlags, setRiskFlags] = useState([]);\r\n\r\n    const handleInputChange = (field, value) => {\r\n        setVitalsData(prev => {\r\n            const updated = { ...prev, [field]: value };\r\n\r\n            // Auto-calculate BMI when height or weight changes\r\n            if (field === 'height' || field === 'weight' || field === 'heightUnit' || field === 'weightUnit') {\r\n                updated.bmi = calculateBMI(updated);\r\n            }\r\n\r\n            // Auto-calculate 3-day average RHR\r\n            if (field.includes('restingHR_day')) {\r\n                updated.averageRHR = calculateAverageRHR(updated);\r\n            }\r\n\r\n            // Auto-calculate WHR when waist or hip changes\r\n            if (field === 'waistCircumference' || field === 'hipCircumference') {\r\n                updated.whr = calculateWHR(updated);\r\n            }\r\n\r\n            return updated;\r\n        });\r\n    };\r\n\r\n    // Calculate 3-day average RHR\r\n    const calculateAverageRHR = (data) => {\r\n        const day1 = parseFloat(data.restingHR_day1) || 0;\r\n        const day2 = parseFloat(data.restingHR_day2) || 0;\r\n        const day3 = parseFloat(data.restingHR_day3) || 0;\r\n\r\n        const validDays = [day1, day2, day3].filter(hr => hr > 0);\r\n        if (validDays.length === 0) return '';\r\n\r\n        const average = validDays.reduce((sum, hr) => sum + hr, 0) / validDays.length;\r\n        return average.toFixed(0);\r\n    };\r\n\r\n    // Calculate Waist-to-Hip Ratio\r\n    const calculateWHR = (data) => {\r\n        const waist = parseFloat(data.waistCircumference);\r\n        const hip = parseFloat(data.hipCircumference);\r\n\r\n        if (!waist || !hip) return '';\r\n\r\n        const whr = waist / hip;\r\n        return whr.toFixed(2);\r\n    };\r\n\r\n    // Get RHR Classification\r\n    const getRHRClassification = (rhr) => {\r\n        if (!rhr) return '';\r\n        const hr = parseInt(rhr);\r\n        if (hr < 60) return { category: 'Excellent', color: '#22c55e' };\r\n        if (hr <= 70) return { category: 'Good', color: '#22c55e' };\r\n        if (hr <= 80) return { category: 'Average', color: '#eab308' };\r\n        return { category: 'Poor', color: '#dc2626' };\r\n    };\r\n\r\n    // Get Blood Pressure Classification\r\n    const getBPClassification = (systolic, diastolic) => {\r\n        if (!systolic || !diastolic) return '';\r\n        const sys = parseInt(systolic);\r\n        const dia = parseInt(diastolic);\r\n\r\n        if (sys >= 140 || dia >= 90) {\r\n            return { category: 'Hypertensive', color: '#dc2626', warning: true };\r\n        } else if ((sys >= 120 && sys <= 135) || (dia >= 80 && dia <= 85)) {\r\n            return { category: 'Prehypertensive', color: '#eab308', warning: false };\r\n        } else if (sys < 120 && dia < 80) {\r\n            return { category: 'Normal', color: '#22c55e', warning: false };\r\n        }\r\n        return { category: 'Check values', color: '#6b7280', warning: false };\r\n    };\r\n\r\n    // Get BMI Classification\r\n    const getBMIClassification = (bmi) => {\r\n        if (!bmi) return '';\r\n        const bmiValue = parseFloat(bmi);\r\n        if (bmiValue < 18.5) return { category: 'Underweight', class: 'below-average', color: '#eab308' };\r\n        if (bmiValue <= 24.9) return { category: 'Normal', class: 'normal', color: '#22c55e' };\r\n        if (bmiValue <= 29.9) return { category: 'Overweight', class: 'elevated', color: '#eab308' };\r\n        if (bmiValue <= 34.9) return { category: 'Obese Class I', class: 'high', color: '#dc2626' };\r\n        if (bmiValue <= 39.9) return { category: 'Obese Class II', class: 'very-high', color: '#dc2626' };\r\n        return { category: 'Obese Class III', class: 'very-high', color: '#dc2626' };\r\n    };\r\n\r\n    // Get WHR Risk Assessment\r\n    const getWHRRisk = (whr, gender) => {\r\n        if (!whr) return '';\r\n        const ratio = parseFloat(whr);\r\n\r\n        if (gender === 'female') {\r\n            if (ratio > 0.80) return { risk: 'High', class: 'high-risk', color: '#dc2626' };\r\n            return { risk: 'Low', class: 'low-risk', color: '#22c55e' };\r\n        } else {\r\n            if (ratio > 0.95) return { risk: 'High', class: 'high-risk', color: '#dc2626' };\r\n            return { risk: 'Low', class: 'low-risk', color: '#22c55e' };\r\n        }\r\n    };\r\n\r\n    const handleGirthChange = (measurement, value) => {\r\n        setVitalsData(prev => ({\r\n            ...prev,\r\n            girths: {\r\n                ...prev.girths,\r\n                [measurement]: value\r\n            }\r\n        }));\r\n    };\r\n\r\n    const handleAssessmentMethodChange = (method, checked) => {\r\n        setVitalsData(prev => ({\r\n            ...prev,\r\n            assessmentMethods: {\r\n                ...prev.assessmentMethods,\r\n                [method]: checked\r\n            }\r\n        }));\r\n    };\r\n\r\n    const handleSkinfoldChange = (site, value) => {\r\n        setVitalsData(prev => {\r\n            const updated = {\r\n                ...prev,\r\n                skinfolds: {\r\n                    ...prev.skinfolds,\r\n                    [site]: value\r\n                }\r\n            };\r\n\r\n            // Auto-calculate body fat percentage when skinfolds change\r\n            const calculatedBF = calculateBodyFatFromSkinfolds(updated.skinfolds, updated.clientAge, updated.clientGender, updated.skinfoldMethod);\r\n            if (calculatedBF) {\r\n                updated.bodyFatPercentage = calculatedBF;\r\n                updated.bodyFatMethod = 'skinfolds';\r\n            }\r\n\r\n            return updated;\r\n        });\r\n    };\r\n\r\n    // Calculate body fat percentage from skinfold measurements using multiple methods\r\n    const calculateBodyFatFromSkinfolds = (skinfolds, age, gender, method) => {\r\n        // Ensure we have the required measurements\r\n        const chest = parseFloat(skinfolds.chest) || 0;\r\n        const abdominal = parseFloat(skinfolds.abdominal) || 0;\r\n        const thigh = parseFloat(skinfolds.thigh) || 0;\r\n        const tricep = parseFloat(skinfolds.tricep) || 0;\r\n        const subscapular = parseFloat(skinfolds.subscapular) || 0;\r\n        const suprailiac = parseFloat(skinfolds.suprailiac) || 0;\r\n        const midaxillary = parseFloat(skinfolds.midaxillary) || 0;\r\n\r\n        const clientAge = parseInt(age) || 25; // default age if not provided\r\n\r\n        switch (method) {\r\n            case 'jackson-pollock-3':\r\n                if (gender === 'male') {\r\n                    // Jackson-Pollock 3-site formula for men (chest, abdominal, thigh)\r\n                    if (chest && abdominal && thigh) {\r\n                        const sum = chest + abdominal + thigh;\r\n                        const bodyDensity = 1.10938 - (0.0008267 * sum) + (0.0000016 * sum * sum) - (0.0002574 * clientAge);\r\n                        const bodyFat = ((495 / bodyDensity) - 450);\r\n                        return bodyFat.toFixed(1);\r\n                    }\r\n                } else {\r\n                    // Jackson-Pollock 3-site formula for women (tricep, suprailiac, thigh)\r\n                    if (tricep && suprailiac && thigh) {\r\n                        const sum = tricep + suprailiac + thigh;\r\n                        const bodyDensity = 1.0994921 - (0.0009929 * sum) + (0.0000023 * sum * sum) - (0.0001392 * clientAge);\r\n                        const bodyFat = ((495 / bodyDensity) - 450);\r\n                        return bodyFat.toFixed(1);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case 'jackson-pollock-7':\r\n                if (gender === 'male') {\r\n                    // Jackson-Pollock 7-site formula for men\r\n                    if (chest && midaxillary && tricep && subscapular && abdominal && suprailiac && thigh) {\r\n                        const sum = chest + midaxillary + tricep + subscapular + abdominal + suprailiac + thigh;\r\n                        const bodyDensity = 1.112 - (0.00043499 * sum) + (0.00000055 * sum * sum) - (0.00028826 * clientAge);\r\n                        const bodyFat = ((495 / bodyDensity) - 450);\r\n                        return bodyFat.toFixed(1);\r\n                    }\r\n                } else {\r\n                    // Jackson-Pollock 7-site formula for women\r\n                    if (chest && midaxillary && tricep && subscapular && abdominal && suprailiac && thigh) {\r\n                        const sum = chest + midaxillary + tricep + subscapular + abdominal + suprailiac + thigh;\r\n                        const bodyDensity = 1.097 - (0.00046971 * sum) + (0.00000056 * sum * sum) - (0.00012828 * clientAge);\r\n                        const bodyFat = ((495 / bodyDensity) - 450);\r\n                        return bodyFat.toFixed(1);\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case 'durnin-womersley':\r\n                // Durnin-Womersley 4-site formula (tricep, subscapular, suprailiac, bicep - using chest as bicep substitute)\r\n                if (tricep && subscapular && suprailiac && chest) {\r\n                    const sum = tricep + subscapular + suprailiac + chest;\r\n                    let bodyDensity;\r\n\r\n                    if (gender === 'male') {\r\n                        if (clientAge <= 19) {\r\n                            bodyDensity = 1.1533 - (0.0643 * Math.log10(sum));\r\n                        } else if (clientAge <= 29) {\r\n                            bodyDensity = 1.1631 - (0.0632 * Math.log10(sum));\r\n                        } else if (clientAge <= 39) {\r\n                            bodyDensity = 1.1422 - (0.0544 * Math.log10(sum));\r\n                        } else if (clientAge <= 49) {\r\n                            bodyDensity = 1.1620 - (0.0700 * Math.log10(sum));\r\n                        } else {\r\n                            bodyDensity = 1.1715 - (0.0779 * Math.log10(sum));\r\n                        }\r\n                    } else {\r\n                        if (clientAge <= 19) {\r\n                            bodyDensity = 1.1549 - (0.0678 * Math.log10(sum));\r\n                        } else if (clientAge <= 29) {\r\n                            bodyDensity = 1.1599 - (0.0717 * Math.log10(sum));\r\n                        } else if (clientAge <= 39) {\r\n                            bodyDensity = 1.1423 - (0.0632 * Math.log10(sum));\r\n                        } else if (clientAge <= 49) {\r\n                            bodyDensity = 1.1333 - (0.0612 * Math.log10(sum));\r\n                        } else {\r\n                            bodyDensity = 1.1339 - (0.0645 * Math.log10(sum));\r\n                        }\r\n                    }\r\n\r\n                    const bodyFat = ((495 / bodyDensity) - 450);\r\n                    return bodyFat.toFixed(1);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                return null;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    // Determine which measurements are required based on method and gender\r\n    const isRequiredMeasurement = (site, method, gender) => {\r\n        switch (method) {\r\n            case 'jackson-pollock-3':\r\n                if (gender === 'male') {\r\n                    return ['chest', 'abdominal', 'thigh'].includes(site);\r\n                } else {\r\n                    return ['tricep', 'suprailiac', 'thigh'].includes(site);\r\n                }\r\n            case 'jackson-pollock-7':\r\n                return ['chest', 'midaxillary', 'tricep', 'subscapular', 'abdominal', 'suprailiac', 'thigh'].includes(site);\r\n            case 'durnin-womersley':\r\n                return ['tricep', 'subscapular', 'suprailiac', 'chest'].includes(site);\r\n            default:\r\n                return false;\r\n        }\r\n    };\r\n\r\n    const calculateBMI = (data) => {\r\n        const { height, heightFeet, heightInches, weight, heightUnit, weightUnit } = data;\r\n\r\n        if (!weight) return '';\r\n\r\n        let heightInMeters = 0;\r\n        let weightInKg = parseFloat(weight);\r\n\r\n        // Calculate height in meters based on unit\r\n        if (heightUnit === 'feet') {\r\n            // Use feet and inches\r\n            if (!heightFeet && !heightInches) return '';\r\n            const totalInches = (parseFloat(heightFeet || 0) * 12) + parseFloat(heightInches || 0);\r\n            heightInMeters = totalInches * 0.0254;\r\n        } else if (heightUnit === 'inches') {\r\n            if (!height) return '';\r\n            heightInMeters = parseFloat(height) * 0.0254;\r\n        } else if (heightUnit === 'cm') {\r\n            if (!height) return '';\r\n            heightInMeters = parseFloat(height) / 100;\r\n        } else if (heightUnit === 'meters') {\r\n            if (!height) return '';\r\n            heightInMeters = parseFloat(height);\r\n        }\r\n\r\n        if (heightInMeters <= 0) return '';\r\n\r\n        // Convert weight to kg\r\n        if (weightUnit === 'lbs') {\r\n            weightInKg = weightInKg * 0.453592;\r\n        }\r\n\r\n        const bmi = weightInKg / (heightInMeters * heightInMeters);\r\n        return bmi.toFixed(1);\r\n    };\r\n\r\n    const assessRiskFlags = () => {\r\n        const flags = [];\r\n\r\n        // Cardiovascular risk flags - updated for 3-day average\r\n        if (vitalsData.averageRHR) {\r\n            const hr = parseInt(vitalsData.averageRHR);\r\n            if (hr > 100) flags.push('Elevated Resting Heart Rate (>100 bpm)');\r\n            if (hr < 50) flags.push('Low Resting Heart Rate (<50 bpm)');\r\n        }\r\n\r\n        if (vitalsData.systolicBP && vitalsData.diastolicBP) {\r\n            const sys = parseInt(vitalsData.systolicBP);\r\n            const dia = parseInt(vitalsData.diastolicBP);\r\n\r\n            if (sys >= 140 || dia >= 90) {\r\n                flags.push('Hypertension Risk (≥140/90 mmHg) - Medical clearance recommended');\r\n            } else if ((sys >= 120 && sys <= 135) || (dia >= 80 && dia <= 85)) {\r\n                flags.push('Prehypertensive Blood Pressure (120-135/80-85 mmHg)');\r\n            }\r\n        }\r\n\r\n        // BMI risk flags\r\n        if (vitalsData.bmi) {\r\n            const bmi = parseFloat(vitalsData.bmi);\r\n            if (bmi < 18.5) flags.push('Underweight (BMI <18.5)');\r\n            if (bmi >= 25 && bmi < 30) flags.push('Overweight (BMI 25-29.9)');\r\n            if (bmi >= 30) flags.push('Obese (BMI ≥30)');\r\n        }\r\n\r\n        // WHR risk flags\r\n        if (vitalsData.whr) {\r\n            const ratio = parseFloat(vitalsData.whr);\r\n            if (vitalsData.clientGender === 'female' && ratio > 0.80) {\r\n                flags.push('Elevated WHR Risk - Female (>0.80)');\r\n            } else if (vitalsData.clientGender === 'male' && ratio > 0.95) {\r\n                flags.push('Elevated WHR Risk - Male (>0.95)');\r\n            }\r\n        }\r\n\r\n        // Body fat risk flags\r\n        if (vitalsData.bodyFatPercentage) {\r\n            const bf = parseFloat(vitalsData.bodyFatPercentage);\r\n            // Gender-specific body fat ranges\r\n            if (vitalsData.clientGender === 'male') {\r\n                if (bf > 25) flags.push('Elevated Body Fat Percentage - Male (>25%)');\r\n                if (bf < 6) flags.push('Very Low Body Fat Percentage - Male (<6%)');\r\n            } else {\r\n                if (bf > 32) flags.push('Elevated Body Fat Percentage - Female (>32%)');\r\n                if (bf < 16) flags.push('Very Low Body Fat Percentage - Female (<16%)');\r\n            }\r\n        }\r\n\r\n        return flags;\r\n    };\r\n\r\n    // Update risk flags when vitals data changes\r\n    useEffect(() => {\r\n        const newFlags = assessRiskFlags();\r\n        setRiskFlags(newFlags);\r\n    }, [vitalsData.averageRHR, vitalsData.systolicBP, vitalsData.diastolicBP, vitalsData.bmi, vitalsData.bodyFatPercentage, vitalsData.whr, vitalsData.clientGender]);\r\n\r\n    const handleSubmit = () => {\r\n        const currentRiskFlags = assessRiskFlags();\r\n\r\n        const trackingBaselines = {\r\n            weight: vitalsData.weight,\r\n            bmi: vitalsData.bmi,\r\n            waistCircumference: vitalsData.waistCircumference,\r\n            hipCircumference: vitalsData.hipCircumference,\r\n            whr: vitalsData.whr,\r\n            bodyFat: vitalsData.bodyFatPercentage,\r\n            averageRHR: vitalsData.averageRHR,\r\n            bloodPressure: `${vitalsData.systolicBP}/${vitalsData.diastolicBP}`\r\n        };\r\n\r\n        // Classifications for summary\r\n        const classifications = {\r\n            rhrClass: getRHRClassification(vitalsData.averageRHR),\r\n            bpClass: getBPClassification(vitalsData.systolicBP, vitalsData.diastolicBP),\r\n            bmiClass: getBMIClassification(vitalsData.bmi),\r\n            whrRisk: getWHRRisk(vitalsData.whr, vitalsData.clientGender)\r\n        };\r\n\r\n        // Medical warnings\r\n        const warnings = [];\r\n        if (classifications.bpClass?.warning) {\r\n            warnings.push('Hypertensive blood pressure - Medical clearance recommended');\r\n        }\r\n        if (currentRiskFlags.some(flag => flag.includes('Medical clearance'))) {\r\n            warnings.push('Additional risk factors identified requiring medical attention');\r\n        }\r\n\r\n        // Save vitals results using setVitalsData action if available, otherwise setAssessmentData\r\n        if (actions.setVitalsData) {\r\n            actions.setVitalsData({\r\n                vitals: {\r\n                    rhr: vitalsData.averageRHR,\r\n                    bp: { systolic: vitalsData.systolicBP, diastolic: vitalsData.diastolicBP },\r\n                    bmi: vitalsData.bmi,\r\n                    whr: vitalsData.whr,\r\n                    circumferences: vitalsData.girths,\r\n                    skinfolds: vitalsData.skinfolds,\r\n                    bodyFat: vitalsData.bodyFatPercentage\r\n                },\r\n                classifications,\r\n                warnings\r\n            });\r\n        }\r\n\r\n        actions.setAssessmentData({\r\n            ...state.assessmentData,\r\n            step: 2,\r\n            vitalsData,\r\n            riskFlags: currentRiskFlags,\r\n            trackingBaselines,\r\n            classifications,\r\n            warnings,\r\n            timestamp: new Date().toISOString()\r\n        });\r\n\r\n        // Move to next step\r\n        actions.setCurrentStep(3);\r\n    };\r\n\r\n    const isFormComplete = () => {\r\n        // Check height based on unit\r\n        const hasHeight = vitalsData.heightUnit === 'feet'\r\n            ? (vitalsData.heightFeet && vitalsData.heightInches !== '')\r\n            : vitalsData.height;\r\n\r\n        return hasHeight &&\r\n            vitalsData.weight &&\r\n            vitalsData.restingHR;\r\n        // Removed waist requirement since it's optional\r\n    };\r\n\r\n    const getBMICategory = (bmi) => {\r\n        if (!bmi) return '';\r\n        const bmiValue = parseFloat(bmi);\r\n        if (bmiValue < 18.5) return 'Underweight';\r\n        if (bmiValue < 25) return 'Normal Weight';\r\n        if (bmiValue < 30) return 'Overweight';\r\n        return 'Obese';\r\n    };\r\n\r\n    return (\r\n        <div className=\"nasm-vitals-step\">\r\n            <div className=\"step-header\">\r\n                <h2>Step 2: Baseline Vitals & Body Measures</h2>\r\n                <p>Establish physiological baselines and identify risk factors</p>\r\n            </div>\r\n\r\n            <div className=\"vitals-sections\">\r\n                {/* Vital Signs */}\r\n                <div className=\"vitals-section\">\r\n                    <h3>Vital Signs</h3>\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group rhr-tracking-group\">\r\n                            <label>3-Day Resting Heart Rate Tracking *</label>\r\n                            <p className=\"instruction\">Take measurements on 3 consecutive mornings upon waking, before getting out of bed.</p>\r\n\r\n                            <div className=\"rhr-inputs\">\r\n                                <div className=\"rhr-day\">\r\n                                    <label>Day 1 (bpm):</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={vitalsData.restingHR_day1}\r\n                                        onChange={(e) => handleInputChange('restingHR_day1', e.target.value)}\r\n                                        placeholder=\"60-100\"\r\n                                        min=\"30\"\r\n                                        max=\"220\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"rhr-day\">\r\n                                    <label>Day 2 (bpm):</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={vitalsData.restingHR_day2}\r\n                                        onChange={(e) => handleInputChange('restingHR_day2', e.target.value)}\r\n                                        placeholder=\"60-100\"\r\n                                        min=\"30\"\r\n                                        max=\"220\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"rhr-day\">\r\n                                    <label>Day 3 (bpm):</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={vitalsData.restingHR_day3}\r\n                                        onChange={(e) => handleInputChange('restingHR_day3', e.target.value)}\r\n                                        placeholder=\"60-100\"\r\n                                        min=\"30\"\r\n                                        max=\"220\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {vitalsData.averageRHR > 0 && (\r\n                                <div className=\"rhr-summary\">\r\n                                    <div className=\"average-display\">\r\n                                        <strong>Average RHR: {vitalsData.averageRHR} bpm</strong>\r\n                                        <span className={`classification ${getRHRClassification(vitalsData.averageRHR)?.class || ''}`}>\r\n                                            {getRHRClassification(vitalsData.averageRHR)?.label}\r\n                                        </span>\r\n                                    </div>\r\n                                    {getRHRClassification(vitalsData.averageRHR)?.warning && (\r\n                                        <div className=\"warning-text\">\r\n                                            ⚠️ {getRHRClassification(vitalsData.averageRHR).warning}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"form-group bp-group\">\r\n                            <label>Blood Pressure (mmHg)</label>\r\n                            <div className=\"bp-inputs\">\r\n                                <div className=\"bp-input\">\r\n                                    <label>Systolic:</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={vitalsData.systolicBP}\r\n                                        onChange={(e) => handleInputChange('systolicBP', e.target.value)}\r\n                                        placeholder=\"120\"\r\n                                        min=\"80\"\r\n                                        max=\"200\"\r\n                                    />\r\n                                </div>\r\n                                <span className=\"bp-divider\">/</span>\r\n                                <div className=\"bp-input\">\r\n                                    <label>Diastolic:</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={vitalsData.diastolicBP}\r\n                                        onChange={(e) => handleInputChange('diastolicBP', e.target.value)}\r\n                                        placeholder=\"80\"\r\n                                        min=\"50\"\r\n                                        max=\"120\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {vitalsData.systolicBP > 0 && vitalsData.diastolicBP > 0 && (\r\n                                <div className=\"bp-classification\">\r\n                                    <div className=\"bp-reading\">\r\n                                        <strong>BP: {vitalsData.systolicBP}/{vitalsData.diastolicBP} mmHg</strong>\r\n                                        <span className={`classification ${getBPClassification(vitalsData.systolicBP, vitalsData.diastolicBP)?.class || ''}`}>\r\n                                            {getBPClassification(vitalsData.systolicBP, vitalsData.diastolicBP)?.category}\r\n                                        </span>\r\n                                    </div>\r\n                                    {getBPClassification(vitalsData.systolicBP, vitalsData.diastolicBP)?.warning && (\r\n                                        <div className=\"warning-text\">\r\n                                            ⚠️ {getBPClassification(vitalsData.systolicBP, vitalsData.diastolicBP).warning}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Body Measurements */}\r\n                <div className=\"vitals-section\">\r\n                    <h3>Body Measurements</h3>\r\n\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group\">\r\n                            <label>Height *</label>\r\n                            <div className=\"height-input-container\">\r\n                                {vitalsData.heightUnit === 'feet' ? (\r\n                                    <div className=\"feet-inches-input\">\r\n                                        <div className=\"feet-input\">\r\n                                            <label>Feet:</label>\r\n                                            <select\r\n                                                value={vitalsData.heightFeet}\r\n                                                onChange={(e) => handleInputChange('heightFeet', e.target.value)}\r\n                                                required\r\n                                            >\r\n                                                <option value=\"\">Select feet</option>\r\n                                                <option value=\"3\">3 ft</option>\r\n                                                <option value=\"4\">4 ft</option>\r\n                                                <option value=\"5\">5 ft</option>\r\n                                                <option value=\"6\">6 ft</option>\r\n                                                <option value=\"7\">7 ft</option>\r\n                                                <option value=\"8\">8 ft</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"inches-input\">\r\n                                            <label>Inches:</label>\r\n                                            <select\r\n                                                value={vitalsData.heightInches}\r\n                                                onChange={(e) => handleInputChange('heightInches', e.target.value)}\r\n                                                required\r\n                                            >\r\n                                                <option value=\"\">Select inches</option>\r\n                                                <option value=\"0\">0 in</option>\r\n                                                <option value=\"1\">1 in</option>\r\n                                                <option value=\"2\">2 in</option>\r\n                                                <option value=\"3\">3 in</option>\r\n                                                <option value=\"4\">4 in</option>\r\n                                                <option value=\"5\">5 in</option>\r\n                                                <option value=\"6\">6 in</option>\r\n                                                <option value=\"7\">7 in</option>\r\n                                                <option value=\"8\">8 in</option>\r\n                                                <option value=\"9\">9 in</option>\r\n                                                <option value=\"10\">10 in</option>\r\n                                                <option value=\"11\">11 in</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                    <div className=\"single-height-input\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            value={vitalsData.height}\r\n                                            onChange={(e) => handleInputChange('height', e.target.value)}\r\n                                            placeholder={vitalsData.heightUnit === 'inches' ? '70' : vitalsData.heightUnit === 'cm' ? '178' : '1.78'}\r\n                                            step=\"0.1\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                                <select\r\n                                    value={vitalsData.heightUnit}\r\n                                    onChange={(e) => handleInputChange('heightUnit', e.target.value)}\r\n                                    className=\"height-unit-select\"\r\n                                >\r\n                                    <option value=\"feet\">feet & inches</option>\r\n                                    <option value=\"inches\">inches</option>\r\n                                    <option value=\"cm\">cm</option>\r\n                                    <option value=\"meters\">meters</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Weight *</label>\r\n                            <div className=\"measurement-input\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={vitalsData.weight}\r\n                                    onChange={(e) => handleInputChange('weight', e.target.value)}\r\n                                    placeholder=\"Weight\"\r\n                                    step=\"0.1\"\r\n                                    required\r\n                                />\r\n                                <select\r\n                                    value={vitalsData.weightUnit}\r\n                                    onChange={(e) => handleInputChange('weightUnit', e.target.value)}\r\n                                >\r\n                                    <option value=\"lbs\">lbs</option>\r\n                                    <option value=\"kg\">kg</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>BMI & Health Metrics</label>\r\n                            <div className=\"health-metrics\">\r\n                                <div className=\"bmi-display\">\r\n                                    <span className=\"metric-label\">BMI:</span>\r\n                                    <span className=\"metric-value\">{vitalsData.bmi || '—'}</span>\r\n                                    {vitalsData.bmi && (\r\n                                        <span className={`classification ${getBMIClassification(vitalsData.bmi)?.class || ''}`}>\r\n                                            {getBMIClassification(vitalsData.bmi)?.category}\r\n                                        </span>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {vitalsData.waistCircumference > 0 && vitalsData.hipCircumference > 0 && (\r\n                                    <div className=\"whr-display\">\r\n                                        <span className=\"metric-label\">WHR:</span>\r\n                                        <span className=\"metric-value\">{vitalsData.whr}</span>\r\n                                        <span className={`classification ${getWHRRisk(vitalsData.whr, vitalsData.clientGender)?.class || ''}`}>\r\n                                            {getWHRRisk(vitalsData.whr, vitalsData.clientGender)?.risk}\r\n                                        </span>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Girth Measurements */}\r\n                <div className=\"vitals-section\">\r\n                    <h3>Girth Measurements (inches)</h3>\r\n                    <p className=\"section-note\">Take measurements at standardized anatomical landmarks</p>\r\n\r\n                    <div className=\"girths-grid\">\r\n                        <div className=\"form-group\">\r\n                            <label>Neck</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={vitalsData.girths.neck}\r\n                                onChange={(e) => handleGirthChange('neck', e.target.value)}\r\n                                placeholder=\"Neck circumference\"\r\n                                step=\"0.1\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Chest</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={vitalsData.girths.chest}\r\n                                onChange={(e) => handleGirthChange('chest', e.target.value)}\r\n                                placeholder=\"Chest circumference\"\r\n                                step=\"0.1\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Waist * (for WHR)</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={vitalsData.waistCircumference}\r\n                                onChange={(e) => handleInputChange('waistCircumference', e.target.value)}\r\n                                placeholder=\"Waist circumference\"\r\n                                step=\"0.1\"\r\n                                required\r\n                            />\r\n                            <small>Narrowest point of torso</small>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Hips * (for WHR)</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={vitalsData.hipCircumference}\r\n                                onChange={(e) => handleInputChange('hipCircumference', e.target.value)}\r\n                                placeholder=\"Hip circumference\"\r\n                                step=\"0.1\"\r\n                                required\r\n                            />\r\n                            <small>Widest point of hips</small>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Waist (Alternative)</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={vitalsData.girths.waist}\r\n                                onChange={(e) => handleGirthChange('waist', e.target.value)}\r\n                                placeholder=\"Waist circumference\"\r\n                                step=\"0.1\"\r\n                            />\r\n                            <small>Additional measurement point</small>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Hips (Alternative)</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={vitalsData.girths.hips}\r\n                                onChange={(e) => handleGirthChange('hips', e.target.value)}\r\n                                placeholder=\"Hip circumference\"\r\n                                step=\"0.1\"\r\n                            />\r\n                            <small>Additional measurement point</small>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Right Arm</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={vitalsData.girths.rightArm}\r\n                                onChange={(e) => handleGirthChange('rightArm', e.target.value)}\r\n                                placeholder=\"Right arm circumference\"\r\n                                step=\"0.1\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Left Arm</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={vitalsData.girths.leftArm}\r\n                                onChange={(e) => handleGirthChange('leftArm', e.target.value)}\r\n                                placeholder=\"Left arm circumference\"\r\n                                step=\"0.1\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Right Thigh</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={vitalsData.girths.rightThigh}\r\n                                onChange={(e) => handleGirthChange('rightThigh', e.target.value)}\r\n                                placeholder=\"Right thigh circumference\"\r\n                                step=\"0.1\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Left Thigh</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={vitalsData.girths.leftThigh}\r\n                                onChange={(e) => handleGirthChange('leftThigh', e.target.value)}\r\n                                placeholder=\"Left thigh circumference\"\r\n                                step=\"0.1\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Right Calf</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={vitalsData.girths.rightCalf}\r\n                                onChange={(e) => handleGirthChange('rightCalf', e.target.value)}\r\n                                placeholder=\"Right calf circumference\"\r\n                                step=\"0.1\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Left Calf</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                value={vitalsData.girths.leftCalf}\r\n                                onChange={(e) => handleGirthChange('leftCalf', e.target.value)}\r\n                                placeholder=\"Left calf circumference\"\r\n                                step=\"0.1\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Optional Body Composition */}\r\n                <div className=\"vitals-section\">\r\n                    <h3>Body Composition (Optional)</h3>\r\n                    <p className=\"section-note\">Select assessment methods you want to use</p>\r\n\r\n                    {/* Assessment Method Checkboxes */}\r\n                    <div className=\"assessment-methods\">\r\n                        <h4>Assessment Methods</h4>\r\n                        <div className=\"checkbox-grid\">\r\n                            <label className=\"checkbox-item\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={vitalsData.assessmentMethods.bioelectrical}\r\n                                    onChange={(e) => handleAssessmentMethodChange('bioelectrical', e.target.checked)}\r\n                                />\r\n                                <span className=\"checkmark\"></span>\r\n                                Bioelectrical Impedance\r\n                            </label>\r\n\r\n                            <label className=\"checkbox-item\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={vitalsData.assessmentMethods.hydrostatic}\r\n                                    onChange={(e) => handleAssessmentMethodChange('hydrostatic', e.target.checked)}\r\n                                />\r\n                                <span className=\"checkmark\"></span>\r\n                                Hydrostatic Weighing\r\n                            </label>\r\n\r\n                            <label className=\"checkbox-item\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={vitalsData.assessmentMethods.dexaScan}\r\n                                    onChange={(e) => handleAssessmentMethodChange('dexaScan', e.target.checked)}\r\n                                />\r\n                                <span className=\"checkmark\"></span>\r\n                                DEXA Scan\r\n                            </label>\r\n\r\n                            <label className=\"checkbox-item\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={vitalsData.assessmentMethods.skinfolds}\r\n                                    onChange={(e) => handleAssessmentMethodChange('skinfolds', e.target.checked)}\r\n                                />\r\n                                <span className=\"checkmark\"></span>\r\n                                Skinfold Calipers\r\n                            </label>\r\n\r\n                            <label className=\"checkbox-item\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    checked={vitalsData.assessmentMethods.manual}\r\n                                    onChange={(e) => handleAssessmentMethodChange('manual', e.target.checked)}\r\n                                />\r\n                                <span className=\"checkmark\"></span>\r\n                                Manual Entry\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Manual Entry Section */}\r\n                    {vitalsData.assessmentMethods.manual && (\r\n                        <div className=\"manual-entry-section\">\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Body Fat Percentage</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={vitalsData.bodyFatPercentage}\r\n                                        onChange={(e) => handleInputChange('bodyFatPercentage', e.target.value)}\r\n                                        placeholder=\"% body fat\"\r\n                                        step=\"0.1\"\r\n                                        min=\"3\"\r\n                                        max=\"50\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Assessment Method Used</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={vitalsData.bodyFatMethod}\r\n                                        onChange={(e) => handleInputChange('bodyFatMethod', e.target.value)}\r\n                                        placeholder=\"e.g., Visual estimation, Previous test\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Skinfold Caliper Body Composition - Only show if selected */}\r\n                {vitalsData.assessmentMethods.skinfolds && (\r\n                    <div className=\"vitals-section\">\r\n                        <h3>Skinfold Caliper Assessment</h3>\r\n                        <p className=\"section-note\">\r\n                            Professional skinfold measurement for body fat percentage calculation\r\n                        </p>\r\n\r\n                        {/* Client Demographics for Calculation */}\r\n                        <div className=\"form-row demographics-row\">\r\n                            <div className=\"form-group\">\r\n                                <label>Client Age *</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={vitalsData.clientAge}\r\n                                    onChange={(e) => handleInputChange('clientAge', e.target.value)}\r\n                                    placeholder=\"Age in years\"\r\n                                    min=\"18\"\r\n                                    max=\"80\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Client Gender *</label>\r\n                                <select\r\n                                    value={vitalsData.clientGender}\r\n                                    onChange={(e) => handleInputChange('clientGender', e.target.value)}\r\n                                >\r\n                                    <option value=\"male\">Male</option>\r\n                                    <option value=\"female\">Female</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Skinfold Measurement Table */}\r\n                        <div className=\"skinfold-table\">\r\n                            <h4>Skinfold Caliper Body Composition Assessment</h4>\r\n\r\n                            {/* Reference Diagram */}\r\n                            <div className=\"reference-diagram\">\r\n                                <h5>📋 Measurement Site Reference</h5>\r\n                                <div className=\"diagram-container\">\r\n                                    {/* Uncomment this line after saving your skinfold diagram image */}\r\n                                    {/* <img \r\n                                        src={skinfoldDiagramMale} \r\n                                        alt=\"7-Site Skinfold Measurement Locations - Male\" \r\n                                        className=\"skinfold-reference-image\"\r\n                                    /> */}\r\n                                    <div className=\"placeholder-image\">\r\n                                        <p>📊 Place your skinfold diagram image here</p>\r\n                                        <p><em>Save as: src/assets/images/skinfold-diagram-male.png</em></p>\r\n                                        <p><em>Then uncomment the img tag above and the import statement</em></p>\r\n                                    </div>\r\n                                    <p className=\"diagram-caption\">\r\n                                        Reference diagram showing all 7 skinfold measurement sites.\r\n                                        Use this visual guide alongside the detailed location descriptions below.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Method Selection */}\r\n                            <div className=\"method-selection\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Skinfold Calculation Method *</label>\r\n                                    <select\r\n                                        value={vitalsData.skinfoldMethod}\r\n                                        onChange={(e) => handleInputChange('skinfoldMethod', e.target.value)}\r\n                                        className=\"method-selector\"\r\n                                    >\r\n                                        <option value=\"jackson-pollock-3\">Jackson-Pollock 3-Site (Most Common)</option>\r\n                                        <option value=\"jackson-pollock-7\">Jackson-Pollock 7-Site (Most Accurate)</option>\r\n                                        <option value=\"durnin-womersley\">Durnin-Womersley 4-Site (Alternative)</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"method-info\">\r\n                                    {vitalsData.skinfoldMethod === 'jackson-pollock-3' && (\r\n                                        <div className=\"method-description\">\r\n                                            <strong>3-Site Method:</strong> Uses 3 measurements for quick assessment.\r\n                                            <br />Male: Chest, Abdominal, Thigh | Female: Tricep, Suprailiac, Thigh\r\n                                        </div>\r\n                                    )}\r\n                                    {vitalsData.skinfoldMethod === 'jackson-pollock-7' && (\r\n                                        <div className=\"method-description\">\r\n                                            <strong>7-Site Method:</strong> Uses all 7 measurements for highest accuracy.\r\n                                            <br />Both: Chest, Midaxillary, Tricep, Subscapular, Abdominal, Suprailiac, Thigh\r\n                                        </div>\r\n                                    )}\r\n                                    {vitalsData.skinfoldMethod === 'durnin-womersley' && (\r\n                                        <div className=\"method-description\">\r\n                                            <strong>Durnin-Womersley Method:</strong> Age-specific equations using 4 sites.\r\n                                            <br />Both: Tricep, Subscapular, Suprailiac, Chest (as bicep substitute)\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"measurement-instructions\">\r\n                                <p><strong>Instructions:</strong> Take measurements on the right side of the body.\r\n                                    Pinch skin fold, apply calipers 1cm away from fingers, read after 2 seconds.</p>\r\n                            </div>\r\n\r\n                            <table className=\"skinfold-measurements-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Site</th>\r\n                                        <th>Location</th>\r\n                                        <th>Measurement (mm)</th>\r\n                                        <th>Required for</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr className={isRequiredMeasurement('chest', vitalsData.skinfoldMethod, vitalsData.clientGender) ? 'required-measurement' : ''}>\r\n                                        <td><strong>Chest</strong></td>\r\n                                        <td>\r\n                                            <div className=\"measurement-description\">\r\n                                                Diagonal fold halfway between anterior axillary line and nipple\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                value={vitalsData.skinfolds.chest}\r\n                                                onChange={(e) => handleSkinfoldChange('chest', e.target.value)}\r\n                                                placeholder=\"mm\"\r\n                                                step=\"0.5\"\r\n                                                min=\"0\"\r\n                                                max=\"50\"\r\n                                                className=\"skinfold-input\"\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                            {isRequiredMeasurement('chest', vitalsData.skinfoldMethod, vitalsData.clientGender) ?\r\n                                                <span className=\"required-indicator\">Required</span> :\r\n                                                <span className=\"optional-indicator\">Optional</span>\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr className={isRequiredMeasurement('abdominal', vitalsData.skinfoldMethod, vitalsData.clientGender) ? 'required-measurement' : ''}>\r\n                                        <td><strong>Abdominal</strong></td>\r\n                                        <td>\r\n                                            <div className=\"measurement-description\">\r\n                                                Vertical fold 2cm to the right of the umbilicus\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                value={vitalsData.skinfolds.abdominal}\r\n                                                onChange={(e) => handleSkinfoldChange('abdominal', e.target.value)}\r\n                                                placeholder=\"mm\"\r\n                                                step=\"0.5\"\r\n                                                min=\"0\"\r\n                                                max=\"50\"\r\n                                                className=\"skinfold-input\"\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                            {isRequiredMeasurement('abdominal', vitalsData.skinfoldMethod, vitalsData.clientGender) ?\r\n                                                <span className=\"required-indicator\">Required</span> :\r\n                                                <span className=\"optional-indicator\">Optional</span>\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr className={isRequiredMeasurement('thigh', vitalsData.skinfoldMethod, vitalsData.clientGender) ? 'required-measurement' : ''}>\r\n                                        <td><strong>Thigh</strong></td>\r\n                                        <td>\r\n                                            <div className=\"measurement-description\">\r\n                                                Vertical fold on anterior thigh midway between inguinal crease and top of patella\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                value={vitalsData.skinfolds.thigh}\r\n                                                onChange={(e) => handleSkinfoldChange('thigh', e.target.value)}\r\n                                                placeholder=\"mm\"\r\n                                                step=\"0.5\"\r\n                                                min=\"0\"\r\n                                                max=\"50\"\r\n                                                className=\"skinfold-input\"\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                            {isRequiredMeasurement('thigh', vitalsData.skinfoldMethod, vitalsData.clientGender) ?\r\n                                                <span className=\"required-indicator\">Required</span> :\r\n                                                <span className=\"optional-indicator\">Optional</span>\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr className={isRequiredMeasurement('tricep', vitalsData.skinfoldMethod, vitalsData.clientGender) ? 'required-measurement' : ''}>\r\n                                        <td><strong>Tricep</strong></td>\r\n                                        <td>\r\n                                            <div className=\"measurement-description\">\r\n                                                Vertical fold on posterior midline of upper arm, halfway between acromion and olecranon\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                value={vitalsData.skinfolds.tricep}\r\n                                                onChange={(e) => handleSkinfoldChange('tricep', e.target.value)}\r\n                                                placeholder=\"mm\"\r\n                                                step=\"0.5\"\r\n                                                min=\"0\"\r\n                                                max=\"50\"\r\n                                                className=\"skinfold-input\"\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                            {isRequiredMeasurement('tricep', vitalsData.skinfoldMethod, vitalsData.clientGender) ?\r\n                                                <span className=\"required-indicator\">Required</span> :\r\n                                                <span className=\"optional-indicator\">Optional</span>\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr className={isRequiredMeasurement('subscapular', vitalsData.skinfoldMethod, vitalsData.clientGender) ? 'required-measurement' : ''}>\r\n                                        <td><strong>Subscapular</strong></td>\r\n                                        <td>\r\n                                            <div className=\"measurement-description\">\r\n                                                Diagonal fold below inferior angle of scapula\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                value={vitalsData.skinfolds.subscapular}\r\n                                                onChange={(e) => handleSkinfoldChange('subscapular', e.target.value)}\r\n                                                placeholder=\"mm\"\r\n                                                step=\"0.5\"\r\n                                                min=\"0\"\r\n                                                max=\"50\"\r\n                                                className=\"skinfold-input\"\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                            {isRequiredMeasurement('subscapular', vitalsData.skinfoldMethod, vitalsData.clientGender) ?\r\n                                                <span className=\"required-indicator\">Required</span> :\r\n                                                <span className=\"optional-indicator\">Optional</span>\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr className={isRequiredMeasurement('suprailiac', vitalsData.skinfoldMethod, vitalsData.clientGender) ? 'required-measurement' : ''}>\r\n                                        <td><strong>Suprailiac</strong></td>\r\n                                        <td>\r\n                                            <div className=\"measurement-description\">\r\n                                                Diagonal fold above iliac crest at anterior axillary line\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                value={vitalsData.skinfolds.suprailiac}\r\n                                                onChange={(e) => handleSkinfoldChange('suprailiac', e.target.value)}\r\n                                                placeholder=\"mm\"\r\n                                                step=\"0.5\"\r\n                                                min=\"0\"\r\n                                                max=\"50\"\r\n                                                className=\"skinfold-input\"\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                            {isRequiredMeasurement('suprailiac', vitalsData.skinfoldMethod, vitalsData.clientGender) ?\r\n                                                <span className=\"required-indicator\">Required</span> :\r\n                                                <span className=\"optional-indicator\">Optional</span>\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr className={isRequiredMeasurement('midaxillary', vitalsData.skinfoldMethod, vitalsData.clientGender) ? 'required-measurement' : ''}>\r\n                                        <td><strong>Midaxillary</strong></td>\r\n                                        <td>\r\n                                            <div className=\"measurement-description\">\r\n                                                Horizontal fold at xiphoid process level along midaxillary line\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                value={vitalsData.skinfolds.midaxillary}\r\n                                                onChange={(e) => handleSkinfoldChange('midaxillary', e.target.value)}\r\n                                                placeholder=\"mm\"\r\n                                                step=\"0.5\"\r\n                                                min=\"0\"\r\n                                                max=\"50\"\r\n                                                className=\"skinfold-input\"\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                            {isRequiredMeasurement('midaxillary', vitalsData.skinfoldMethod, vitalsData.clientGender) ?\r\n                                                <span className=\"required-indicator\">Required</span> :\r\n                                                <span className=\"optional-indicator\">Optional</span>\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n\r\n                            {/* Calculation Results */}\r\n                            {vitalsData.bodyFatPercentage && vitalsData.bodyFatMethod === 'skinfolds' && (\r\n                                <div className=\"calculation-results\">\r\n                                    <h4>📊 Calculation Results</h4>\r\n                                    <div className=\"results-grid\">\r\n                                        <div className=\"result-item\">\r\n                                            <span className=\"result-label\">Body Fat Percentage:</span>\r\n                                            <span className=\"result-value\">{vitalsData.bodyFatPercentage}%</span>\r\n                                        </div>\r\n                                        <div className=\"result-item\">\r\n                                            <span className=\"result-label\">Method:</span>\r\n                                            <span className=\"result-value\">\r\n                                                {vitalsData.skinfoldMethod === 'jackson-pollock-3' &&\r\n                                                    `Jackson-Pollock 3-site (${vitalsData.clientGender === 'male' ? 'Chest/Abdominal/Thigh' : 'Tricep/Suprailiac/Thigh'})`\r\n                                                }\r\n                                                {vitalsData.skinfoldMethod === 'jackson-pollock-7' &&\r\n                                                    'Jackson-Pollock 7-site (All measurements)'\r\n                                                }\r\n                                                {vitalsData.skinfoldMethod === 'durnin-womersley' &&\r\n                                                    'Durnin-Womersley 4-site'\r\n                                                }\r\n                                            </span>\r\n                                        </div>\r\n                                        {vitalsData.weight && (\r\n                                            <div className=\"result-item\">\r\n                                                <span className=\"result-label\">Estimated Fat Mass:</span>\r\n                                                <span className=\"result-value\">\r\n                                                    {((parseFloat(vitalsData.bodyFatPercentage) / 100) * parseFloat(vitalsData.weight)).toFixed(1)} {vitalsData.weightUnit}\r\n                                                </span>\r\n                                            </div>\r\n                                        )}\r\n                                        {vitalsData.weight && (\r\n                                            <div className=\"result-item\">\r\n                                                <span className=\"result-label\">Estimated Lean Mass:</span>\r\n                                                <span className=\"result-value\">\r\n                                                    {(parseFloat(vitalsData.weight) - ((parseFloat(vitalsData.bodyFatPercentage) / 100) * parseFloat(vitalsData.weight))).toFixed(1)} {vitalsData.weightUnit}\r\n                                                </span>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Required Measurements Indicator */}\r\n                            <div className=\"protocol-indicator\">\r\n                                <h5>Current Protocol: {vitalsData.clientGender === 'male' ? 'Male' : 'Female'} 3-Site</h5>\r\n                                <p>\r\n                                    <strong>Required measurements:</strong> {' '}\r\n                                    {vitalsData.clientGender === 'male'\r\n                                        ? 'Chest, Abdominal, Thigh'\r\n                                        : 'Tricep, Suprailiac, Thigh'\r\n                                    }\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Risk Flags Display */}\r\n                {riskFlags.length > 0 && (\r\n                    <div className=\"risk-flags\">\r\n                        <h4>⚠️ Risk Flags Identified:</h4>\r\n                        <ul>\r\n                            {riskFlags.map((flag, index) => (\r\n                                <li key={index} className=\"risk-flag\">{flag}</li>\r\n                            ))}\r\n                        </ul>\r\n                        <p className=\"risk-note\">These flags will inform exercise modifications and monitoring protocols.</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Navigation */}\r\n            {/* Vitals Summary */}\r\n            {(vitalsData.averageRHR > 0 || vitalsData.bmi > 0 || (vitalsData.systolicBP > 0 && vitalsData.diastolicBP > 0)) && (\r\n                <div className=\"vitals-section\">\r\n                    <h3>Vitals Summary & Classifications</h3>\r\n\r\n                    <div className=\"summary-grid\">\r\n                        {vitalsData.averageRHR > 0 && (\r\n                            <div className=\"summary-item\">\r\n                                <div className=\"summary-label\">Average Resting HR:</div>\r\n                                <div className=\"summary-value\">\r\n                                    <span className=\"value\">{vitalsData.averageRHR} bpm</span>\r\n                                    <span className={`classification ${getRHRClassification(vitalsData.averageRHR)?.class || ''}`}>\r\n                                        {getRHRClassification(vitalsData.averageRHR)?.label}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {vitalsData.systolicBP > 0 && vitalsData.diastolicBP > 0 && (\r\n                            <div className=\"summary-item\">\r\n                                <div className=\"summary-label\">Blood Pressure:</div>\r\n                                <div className=\"summary-value\">\r\n                                    <span className=\"value\">{vitalsData.systolicBP}/{vitalsData.diastolicBP} mmHg</span>\r\n                                    <span className={`classification ${getBPClassification(vitalsData.systolicBP, vitalsData.diastolicBP)?.class || ''}`}>\r\n                                        {getBPClassification(vitalsData.systolicBP, vitalsData.diastolicBP)?.category}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {vitalsData.bmi > 0 && (\r\n                            <div className=\"summary-item\">\r\n                                <div className=\"summary-label\">BMI:</div>\r\n                                <div className=\"summary-value\">\r\n                                    <span className=\"value\">{vitalsData.bmi}</span>\r\n                                    <span className={`classification ${getBMIClassification(vitalsData.bmi)?.class || ''}`}>\r\n                                        {getBMIClassification(vitalsData.bmi)?.category}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {vitalsData.whr > 0 && (\r\n                            <div className=\"summary-item\">\r\n                                <div className=\"summary-label\">Waist-Hip Ratio:</div>\r\n                                <div className=\"summary-value\">\r\n                                    <span className=\"value\">{vitalsData.whr}</span>\r\n                                    <span className={`classification ${getWHRRisk(vitalsData.whr, vitalsData.clientGender)?.class || ''}`}>\r\n                                        {getWHRRisk(vitalsData.whr, vitalsData.clientGender)?.risk} Risk\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Medical Warnings */}\r\n                    {(getBPClassification(vitalsData.systolicBP, vitalsData.diastolicBP)?.warning ||\r\n                        getRHRClassification(vitalsData.averageRHR)?.warning) && (\r\n                            <div className=\"medical-warnings\">\r\n                                <h4>⚠️ Medical Attention Recommended</h4>\r\n                                {getBPClassification(vitalsData.systolicBP, vitalsData.diastolicBP)?.warning && (\r\n                                    <div className=\"warning-item\">\r\n                                        • {getBPClassification(vitalsData.systolicBP, vitalsData.diastolicBP).warning}\r\n                                    </div>\r\n                                )}\r\n                                {getRHRClassification(vitalsData.averageRHR)?.warning && (\r\n                                    <div className=\"warning-item\">\r\n                                        • {getRHRClassification(vitalsData.averageRHR).warning}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"step-navigation\">\r\n                <button\r\n                    className=\"back-button\"\r\n                    onClick={() => actions.setCurrentStep(1)}\r\n                >\r\n                    ← Back to Intake\r\n                </button>\r\n\r\n                <button\r\n                    className=\"next-button\"\r\n                    onClick={handleSubmit}\r\n                    disabled={!isFormComplete()}\r\n                >\r\n                    Complete Vitals → Step 3: Static Posture\r\n                </button>\r\n            </div>\r\n\r\n            <style jsx>{`\r\n                .nasm-vitals-step {\r\n                    padding: 20px;\r\n                    max-width: 900px;\r\n                    margin: 0 auto;\r\n                    background: #111827;\r\n                    color: #f9fafb;\r\n                    border-radius: 8px;\r\n                }\r\n\r\n                .step-header {\r\n                    text-align: center;\r\n                    margin-bottom: 30px;\r\n                }\r\n\r\n                .step-header h2 {\r\n                    color: #dc2626;\r\n                    margin-bottom: 10px;\r\n                    font-size: 1.8em;\r\n                }\r\n\r\n                .step-header p {\r\n                    color: #d1d5db;\r\n                }\r\n\r\n                .vitals-sections {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    gap: 30px;\r\n                }\r\n\r\n                .vitals-section {\r\n                    background: #1f2937;\r\n                    padding: 20px;\r\n                    border-radius: 8px;\r\n                    border-left: 4px solid #dc2626;\r\n                    border: 1px solid #374151;\r\n                }\r\n\r\n                .vitals-section h3 {\r\n                    color: #dc2626;\r\n                    margin-bottom: 15px;\r\n                    font-size: 1.2em;\r\n                }\r\n\r\n                .section-note {\r\n                    color: #9ca3af;\r\n                    font-style: italic;\r\n                    margin-bottom: 15px;\r\n                }\r\n\r\n                .form-group {\r\n                    margin-bottom: 15px;\r\n                }\r\n\r\n                .form-row {\r\n                    display: grid;\r\n                    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n                    gap: 15px;\r\n                }\r\n\r\n                .girths-grid {\r\n                    display: grid;\r\n                    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\r\n                    gap: 15px;\r\n                }\r\n\r\n                .form-group label {\r\n                    display: block;\r\n                    margin-bottom: 5px;\r\n                    font-weight: 600;\r\n                    color: #f9fafb;\r\n                }\r\n\r\n                .form-group input,\r\n                .form-group select {\r\n                    width: 100%;\r\n                    padding: 8px 12px;\r\n                    border: 1px solid #4b5563;\r\n                    border-radius: 4px;\r\n                    font-size: 14px;\r\n                    background: #374151;\r\n                    color: #f9fafb;\r\n                }\r\n\r\n                .form-group input:focus,\r\n                .form-group select:focus {\r\n                    outline: none;\r\n                    border-color: #dc2626;\r\n                    box-shadow: 0 0 0 2px rgba(220, 38, 38, 0.2);\r\n                }\r\n\r\n                .measurement-input {\r\n                    display: flex;\r\n                    gap: 8px;\r\n                }\r\n\r\n                .measurement-input input {\r\n                    flex: 2;\r\n                }\r\n\r\n                .measurement-input select {\r\n                    flex: 1;\r\n                }\r\n\r\n                /* Height Input Styles */\r\n                .height-input-container {\r\n                    display: flex;\r\n                    gap: 12px;\r\n                    align-items: center;\r\n                }\r\n\r\n                .feet-inches-input {\r\n                    display: flex;\r\n                    gap: 12px;\r\n                    flex: 2;\r\n                }\r\n\r\n                .feet-input, .inches-input {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    gap: 4px;\r\n                    flex: 1;\r\n                    min-width: 80px;\r\n                }\r\n\r\n                .feet-input select, .inches-input select {\r\n                    width: 100%;\r\n                    padding: 8px 12px;\r\n                    border: 1px solid #4b5563;\r\n                    border-radius: 4px;\r\n                    font-size: 14px;\r\n                    background: #374151;\r\n                    color: #f9fafb;\r\n                    min-height: 40px;\r\n                }\r\n\r\n                .feet-input select:focus, .inches-input select:focus {\r\n                    outline: none;\r\n                    border-color: #dc2626;\r\n                    box-shadow: 0 0 0 2px rgba(220, 38, 38, 0.2);\r\n                }\r\n\r\n                .feet-input label, .inches-input label {\r\n                    font-size: 12px;\r\n                    color: #d1d5db;\r\n                    font-weight: 500;\r\n                    margin-bottom: 4px;\r\n                }\r\n\r\n                .single-height-input {\r\n                    flex: 2;\r\n                }\r\n\r\n                .single-height-input input {\r\n                    width: 100%;\r\n                    padding: 8px 12px;\r\n                    border: 1px solid #4b5563;\r\n                    border-radius: 4px;\r\n                    font-size: 14px;\r\n                    background: #374151;\r\n                    color: #f9fafb;\r\n                }\r\n\r\n                .height-unit-select {\r\n                    flex: 1;\r\n                    min-width: 120px;\r\n                }\r\n\r\n                .bmi-display {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 10px;\r\n                    padding: 8px 12px;\r\n                    background: #374151;\r\n                    border-radius: 4px;\r\n                    border: 1px solid #4b5563;\r\n                }\r\n\r\n                .bmi-value {\r\n                    font-size: 18px;\r\n                    font-weight: bold;\r\n                    color: #f9fafb;\r\n                }\r\n\r\n                .bmi-category {\r\n                    color: #d1d5db;\r\n                    font-size: 14px;\r\n                }\r\n\r\n                .risk-flags {\r\n                    background: #451a03;\r\n                    border: 1px solid #dc2626;\r\n                    border-radius: 8px;\r\n                    padding: 15px;\r\n                    margin: 20px 0;\r\n                }\r\n\r\n                .risk-flags h4 {\r\n                    margin: 0 0 10px 0;\r\n                    color: #fbbf24;\r\n                }\r\n\r\n                .risk-flags ul {\r\n                    margin: 10px 0;\r\n                    padding-left: 20px;\r\n                }\r\n\r\n                .risk-flag {\r\n                    color: #fca5a5;\r\n                    font-weight: 500;\r\n                    margin-bottom: 5px;\r\n                }\r\n\r\n                .risk-note {\r\n                    color: #fbbf24;\r\n                    font-size: 14px;\r\n                    margin: 10px 0 0 0;\r\n                }\r\n\r\n                .step-navigation {\r\n                    display: flex;\r\n                    justify-content: space-between;\r\n                    align-items: center;\r\n                    margin-top: 30px;\r\n                }\r\n\r\n                .back-button {\r\n                    background: #4b5563;\r\n                    color: white;\r\n                    border: none;\r\n                    padding: 10px 20px;\r\n                    border-radius: 6px;\r\n                    font-size: 14px;\r\n                    cursor: pointer;\r\n                    transition: background-color 0.2s;\r\n                }\r\n\r\n                .back-button:hover {\r\n                    background: #374151;\r\n                }\r\n\r\n                .next-button {\r\n                    background: #dc2626;\r\n                    color: white;\r\n                    border: none;\r\n                    padding: 12px 24px;\r\n                    border-radius: 6px;\r\n                    font-size: 16px;\r\n                    font-weight: 600;\r\n                    cursor: pointer;\r\n                    transition: all 0.2s;\r\n                }\r\n\r\n                .next-button:hover:not(:disabled) {\r\n                    background: #b91c1c;\r\n                    transform: translateY(-1px);\r\n                }\r\n\r\n                .next-button:disabled {\r\n                    background: #4b5563;\r\n                    cursor: not-allowed;\r\n                    transform: none;\r\n                }\r\n\r\n                /* Assessment Method Checkboxes */\r\n                .assessment-methods {\r\n                    background: #1f2937;\r\n                    border: 2px solid #dc2626;\r\n                    border-radius: 8px;\r\n                    padding: 20px;\r\n                    margin-bottom: 20px;\r\n                }\r\n\r\n                .assessment-methods h4 {\r\n                    color: #dc2626;\r\n                    margin: 0 0 15px 0;\r\n                    font-size: 16px;\r\n                    font-weight: 600;\r\n                }\r\n\r\n                .checkbox-grid {\r\n                    display: grid;\r\n                    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n                    gap: 15px;\r\n                }\r\n\r\n                .checkbox-item {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    cursor: pointer;\r\n                    padding: 10px;\r\n                    border-radius: 6px;\r\n                    transition: background-color 0.2s;\r\n                    color: #f9fafb;\r\n                    font-weight: 500;\r\n                }\r\n\r\n                .checkbox-item:hover {\r\n                    background: #374151;\r\n                }\r\n\r\n                .checkbox-item input[type=\"checkbox\"] {\r\n                    display: none;\r\n                }\r\n\r\n                .checkmark {\r\n                    width: 20px;\r\n                    height: 20px;\r\n                    border: 2px solid #dc2626;\r\n                    border-radius: 4px;\r\n                    margin-right: 10px;\r\n                    position: relative;\r\n                    background: #374151;\r\n                }\r\n\r\n                .checkbox-item input[type=\"checkbox\"]:checked + .checkmark {\r\n                    background: #dc2626;\r\n                }\r\n\r\n                .checkbox-item input[type=\"checkbox\"]:checked + .checkmark::after {\r\n                    content: '✓';\r\n                    position: absolute;\r\n                    left: 3px;\r\n                    top: -2px;\r\n                    color: white;\r\n                    font-weight: bold;\r\n                    font-size: 14px;\r\n                }\r\n\r\n                .manual-entry-section {\r\n                    background: #374151;\r\n                    border: 1px solid #4b5563;\r\n                    border-radius: 6px;\r\n                    padding: 15px;\r\n                    margin-top: 15px;\r\n                }\r\n\r\n                /* Skinfold Caliper Styles - Red, White, Black Theme */\r\n                .demographics-row {\r\n                    background: #374151;\r\n                    padding: 15px;\r\n                    border-radius: 6px;\r\n                    margin-bottom: 20px;\r\n                    border: 1px solid #4b5563;\r\n                }\r\n\r\n                .skinfold-table {\r\n                    margin-top: 20px;\r\n                }\r\n\r\n                .skinfold-table h4 {\r\n                    color: #dc2626;\r\n                    margin-bottom: 20px;\r\n                    font-size: 18px;\r\n                }\r\n\r\n                /* Reference Diagram Styles */\r\n                .reference-diagram {\r\n                    background: #451a03;\r\n                    border: 2px solid #dc2626;\r\n                    border-radius: 8px;\r\n                    padding: 20px;\r\n                    margin-bottom: 25px;\r\n                    text-align: center;\r\n                }\r\n\r\n                .reference-diagram h5 {\r\n                    color: #fbbf24;\r\n                    margin: 0 0 15px 0;\r\n                    font-size: 16px;\r\n                }\r\n\r\n                .diagram-container {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    align-items: center;\r\n                    gap: 15px;\r\n                }\r\n\r\n                .skinfold-reference-image {\r\n                    max-width: 100%;\r\n                    height: auto;\r\n                    max-height: 500px;\r\n                    border: 2px solid #d1d5db;\r\n                    border-radius: 8px;\r\n                    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n                    background: white;\r\n                }\r\n\r\n                .placeholder-image {\r\n                    background: #f9fafb;\r\n                    border: 2px dashed #d1d5db;\r\n                    border-radius: 8px;\r\n                    padding: 40px 20px;\r\n                    color: #6b7280;\r\n                    font-style: italic;\r\n                }\r\n\r\n                .placeholder-image p {\r\n                    margin: 5px 0;\r\n                }\r\n\r\n                .diagram-caption {\r\n                    color: #78350f;\r\n                    font-size: 14px;\r\n                    font-style: italic;\r\n                    margin: 0;\r\n                    max-width: 500px;\r\n                }\r\n\r\n                .method-selection {\r\n                    background: white;\r\n                    padding: 20px;\r\n                    border-radius: 8px;\r\n                    margin-bottom: 20px;\r\n                    border: 2px solid #dc2626;\r\n                }\r\n\r\n                .method-selector {\r\n                    font-size: 16px;\r\n                    font-weight: 500;\r\n                    padding: 10px 12px;\r\n                    background: white;\r\n                    border: 2px solid #dc2626;\r\n                    border-radius: 6px;\r\n                    color: #1f2937;\r\n                }\r\n\r\n                .method-info {\r\n                    margin-top: 15px;\r\n                    padding: 12px;\r\n                    background: #f9fafb;\r\n                    border-radius: 6px;\r\n                    border-left: 4px solid #dc2626;\r\n                }\r\n\r\n                .method-description {\r\n                    color: #374151;\r\n                    font-size: 14px;\r\n                    line-height: 1.5;\r\n                }\r\n\r\n                .method-description strong {\r\n                    color: #dc2626;\r\n                }\r\n\r\n                .measurement-instructions {\r\n                    background: #fef2f2;\r\n                    border-left: 4px solid #dc2626;\r\n                    padding: 12px 16px;\r\n                    margin-bottom: 20px;\r\n                    border-radius: 4px;\r\n                }\r\n\r\n                .measurement-instructions p {\r\n                    margin: 0;\r\n                    color: #dc2626;\r\n                    font-size: 14px;\r\n                    font-weight: 500;\r\n                }\r\n\r\n                .skinfold-measurements-table {\r\n                    width: 100%;\r\n                    border-collapse: collapse;\r\n                    background: white;\r\n                    border-radius: 8px;\r\n                    overflow: hidden;\r\n                    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n                    border: 2px solid #dc2626;\r\n                }\r\n\r\n                .skinfold-measurements-table th {\r\n                    background: #dc2626;\r\n                    padding: 12px;\r\n                    text-align: left;\r\n                    font-weight: 600;\r\n                    color: white;\r\n                    border-bottom: 2px solid #b91c1c;\r\n                    font-size: 14px;\r\n                }\r\n\r\n                .skinfold-measurements-table td {\r\n                    padding: 12px;\r\n                    border-bottom: 1px solid #e5e7eb;\r\n                    vertical-align: top;\r\n                    color: #374151;\r\n                }\r\n\r\n                .skinfold-measurements-table tr:hover {\r\n                    background: #f9fafb;\r\n                }\r\n\r\n                .skinfold-measurements-table .required-measurement {\r\n                    background: #fef2f2;\r\n                    border-left: 4px solid #dc2626;\r\n                }\r\n\r\n                .required-indicator {\r\n                    background: #dc2626;\r\n                    color: white;\r\n                    padding: 4px 8px;\r\n                    border-radius: 4px;\r\n                    font-size: 12px;\r\n                    font-weight: 600;\r\n                    text-transform: uppercase;\r\n                }\r\n\r\n                .optional-indicator {\r\n                    background: #374151;\r\n                    color: white;\r\n                    padding: 4px 8px;\r\n                    border-radius: 4px;\r\n                    font-size: 12px;\r\n                    font-weight: 600;\r\n                    text-transform: uppercase;\r\n                }\r\n\r\n                .skinfold-input {\r\n                    width: 80px;\r\n                    padding: 6px 10px;\r\n                    border: 2px solid #d1d5db;\r\n                    border-radius: 4px;\r\n                    font-size: 14px;\r\n                    text-align: center;\r\n                }\r\n\r\n                .skinfold-input:focus {\r\n                    outline: none;\r\n                    border-color: #dc2626;\r\n                    box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.1);\r\n                }\r\n\r\n                .measurement-description {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    gap: 8px;\r\n                }\r\n\r\n                .calculation-results {\r\n                    background: #ecfdf5;\r\n                    border: 1px solid #10b981;\r\n                    border-radius: 8px;\r\n                    padding: 20px;\r\n                    margin-top: 20px;\r\n                }\r\n\r\n                .calculation-results h4 {\r\n                    color: #047857;\r\n                    margin: 0 0 15px 0;\r\n                }\r\n\r\n                .results-grid {\r\n                    display: grid;\r\n                    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n                    gap: 12px;\r\n                }\r\n\r\n                .result-item {\r\n                    background: white;\r\n                    padding: 12px;\r\n                    border-radius: 6px;\r\n                    border-left: 3px solid #10b981;\r\n                }\r\n\r\n                .result-label {\r\n                    display: block;\r\n                    font-size: 12px;\r\n                    color: #6b7280;\r\n                    font-weight: 500;\r\n                    text-transform: uppercase;\r\n                    letter-spacing: 0.5px;\r\n                }\r\n\r\n                .result-value {\r\n                    display: block;\r\n                    font-size: 16px;\r\n                    font-weight: bold;\r\n                    color: #047857;\r\n                    margin-top: 4px;\r\n                }\r\n\r\n                .protocol-indicator {\r\n                    background: #fff7ed;\r\n                    border: 1px solid #f59e0b;\r\n                    border-radius: 6px;\r\n                    padding: 15px;\r\n                    margin-top: 20px;\r\n                }\r\n\r\n                .protocol-indicator h5 {\r\n                    color: #92400e;\r\n                    margin: 0 0 8px 0;\r\n                    font-size: 14px;\r\n                }\r\n\r\n                .protocol-indicator p {\r\n                    color: #78350f;\r\n                    margin: 0;\r\n                    font-size: 13px;\r\n                }\r\n\r\n                /* 3-Day RHR Tracking Styles */\r\n                .rhr-tracking-group {\r\n                    border: 1px solid #4b5563;\r\n                    border-radius: 8px;\r\n                    padding: 16px;\r\n                    background: #374151;\r\n                }\r\n\r\n                .rhr-inputs {\r\n                    display: grid;\r\n                    grid-template-columns: repeat(3, 1fr);\r\n                    gap: 12px;\r\n                    margin: 12px 0;\r\n                }\r\n\r\n                .rhr-day {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    gap: 4px;\r\n                }\r\n\r\n                .rhr-day label {\r\n                    font-size: 12px;\r\n                    font-weight: 500;\r\n                    color: #d1d5db;\r\n                }\r\n\r\n                .rhr-summary {\r\n                    margin-top: 12px;\r\n                    padding: 12px;\r\n                    background: #1f2937;\r\n                    border-radius: 6px;\r\n                    border: 1px solid #4b5563;\r\n                    color: #f9fafb;\r\n                }\r\n\r\n                .average-display {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 12px;\r\n                    margin-bottom: 8px;\r\n                    color: #f9fafb;\r\n                }\r\n\r\n                .average-display strong {\r\n                    color: #f9fafb;\r\n                }\r\n\r\n                /* Blood Pressure Styles */\r\n                .bp-group {\r\n                    border: 1px solid #4b5563;\r\n                    border-radius: 8px;\r\n                    padding: 16px;\r\n                    background: #374151;\r\n                }\r\n\r\n                .bp-inputs {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 8px;\r\n                    margin: 12px 0;\r\n                }\r\n\r\n                .bp-input {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    gap: 4px;\r\n                }\r\n\r\n                .bp-input label {\r\n                    font-size: 12px;\r\n                    font-weight: 500;\r\n                    color: #d1d5db;\r\n                }\r\n\r\n                .bp-divider {\r\n                    font-size: 20px;\r\n                    font-weight: bold;\r\n                    color: #d1d5db;\r\n                    margin-top: 16px;\r\n                }\r\n\r\n                .bp-classification, .bp-reading {\r\n                    margin-top: 12px;\r\n                    padding: 12px;\r\n                    background: #1f2937;\r\n                    border-radius: 6px;\r\n                    border: 1px solid #4b5563;\r\n                    color: #f9fafb;\r\n                }\r\n\r\n                .bp-reading strong {\r\n                    color: #f9fafb;\r\n                }\r\n\r\n                /* Health Metrics Styles */\r\n                .form-group .health-metrics {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    gap: 8px;\r\n                    padding: 12px;\r\n                    background: #374151 !important;\r\n                    border-radius: 6px;\r\n                    border: 1px solid #4b5563;\r\n                    color: #f9fafb;\r\n                }\r\n\r\n                .health-metrics .bmi-display, \r\n                .health-metrics .whr-display {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 8px;\r\n                }\r\n\r\n                .health-metrics .metric-label {\r\n                    font-weight: 500;\r\n                    color: #d1d5db !important;\r\n                    min-width: 40px;\r\n                }\r\n\r\n                .health-metrics .metric-value {\r\n                    font-weight: bold;\r\n                    color: #f3f4f6 !important;\r\n                    min-width: 50px;\r\n                }\r\n\r\n                /* Classification Styles */\r\n                .classification {\r\n                    padding: 2px 8px;\r\n                    border-radius: 12px;\r\n                    font-size: 12px;\r\n                    font-weight: 500;\r\n                    text-transform: uppercase;\r\n                }\r\n\r\n                .classification.excellent {\r\n                    background: #dcfce7;\r\n                    color: #166534;\r\n                }\r\n\r\n                .classification.good, .classification.normal {\r\n                    background: #d1fae5;\r\n                    color: #15803d;\r\n                }\r\n\r\n                .classification.average, .classification.elevated {\r\n                    background: #fef3c7;\r\n                    color: #92400e;\r\n                }\r\n\r\n                .classification.below-average, .classification.high {\r\n                    background: #fed7d7;\r\n                    color: #c53030;\r\n                }\r\n\r\n                .classification.poor, .classification.very-high {\r\n                    background: #fecaca;\r\n                    color: #b91c1c;\r\n                }\r\n\r\n                .classification.low-risk {\r\n                    background: #dcfce7;\r\n                    color: #166534;\r\n                }\r\n\r\n                .classification.moderate-risk {\r\n                    background: #fef3c7;\r\n                    color: #92400e;\r\n                }\r\n\r\n                .classification.high-risk {\r\n                    background: #fecaca;\r\n                    color: #b91c1c;\r\n                }\r\n\r\n                .warning-text {\r\n                    color: #dc2626;\r\n                    font-size: 12px;\r\n                    font-weight: 500;\r\n                    margin-top: 4px;\r\n                    padding: 8px;\r\n                    background: #fef2f2;\r\n                    border-radius: 4px;\r\n                    border-left: 3px solid #dc2626;\r\n                }\r\n\r\n                .instruction {\r\n                    font-size: 12px;\r\n                    color: #6b7280;\r\n                    font-style: italic;\r\n                    margin-bottom: 8px;\r\n                }\r\n\r\n                /* Summary Section Styles */\r\n                .summary-grid {\r\n                    display: grid;\r\n                    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n                    gap: 16px;\r\n                    margin-bottom: 20px;\r\n                }\r\n\r\n                .summary-item {\r\n                    background: white;\r\n                    padding: 12px;\r\n                    border-radius: 6px;\r\n                    border: 1px solid #d1d5db;\r\n                }\r\n\r\n                .summary-label {\r\n                    font-size: 12px;\r\n                    font-weight: 500;\r\n                    color: #6b7280;\r\n                    margin-bottom: 4px;\r\n                }\r\n\r\n                .summary-value {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 8px;\r\n                }\r\n\r\n                .summary-value .value {\r\n                    font-weight: bold;\r\n                    color: #111827;\r\n                }\r\n\r\n                .medical-warnings {\r\n                    background: #fef2f2;\r\n                    border: 1px solid #fecaca;\r\n                    border-radius: 6px;\r\n                    padding: 16px;\r\n                    margin-top: 16px;\r\n                }\r\n\r\n                .medical-warnings h4 {\r\n                    color: #dc2626;\r\n                    margin: 0 0 8px 0;\r\n                    font-size: 14px;\r\n                }\r\n\r\n                .warning-item {\r\n                    color: #991b1b;\r\n                    font-size: 13px;\r\n                    margin-bottom: 4px;\r\n                }\r\n\r\n                @media (max-width: 768px) {\r\n                    .rhr-inputs {\r\n                        grid-template-columns: 1fr;\r\n                    }\r\n                    \r\n                    .bp-inputs {\r\n                        flex-direction: column;\r\n                        align-items: stretch;\r\n                    }\r\n                    \r\n                    .bp-divider {\r\n                        align-self: center;\r\n                        margin: 8px 0;\r\n                    }\r\n                    \r\n                    .health-metrics {\r\n                        gap: 12px;\r\n                    }\r\n                }\r\n\r\n                @media (max-width: 768px) {\r\n                    .skinfold-measurements-table {\r\n                        font-size: 12px;\r\n                    }\r\n                    \r\n                    .skinfold-measurements-table th,\r\n                    .skinfold-measurements-table td {\r\n                        padding: 8px;\r\n                    }\r\n                    \r\n                    .results-grid {\r\n                        grid-template-columns: 1fr;\r\n                    }\r\n                }\r\n            `}</style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NASMVitalsStep;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useProgramContext } from '../../../contexts/ProgramContext';\r\n\r\n/**\r\n * NASMStaticPostureStep - Step 3: NASM Static Postural Assessment\r\n * \r\n * Comprehensive NASM CPT-compliant static postural analysis with:\r\n * - Tabbed interface (Anterior, Lateral, Posterior, Summary)\r\n * - Enhanced checkbox layout with side selection\r\n * - Real-time deviation counting and progress tracking\r\n * - Muscle imbalance predictions\r\n * - Postural syndrome detection\r\n */\r\n\r\nconst NASMStaticPostureStep = () => {\r\n    const { state, actions } = useProgramContext();\r\n\r\n    const [activeView, setActiveView] = useState('anterior');\r\n    const [completedSections, setCompletedSections] = useState(new Set());\r\n    const [selectedTags, setSelectedTags] = useState([]);\r\n    const [additionalNotes, setAdditionalNotes] = useState('');\r\n    const [viewCompletionStatus, setViewCompletionStatus] = useState({\r\n        anterior: false,\r\n        lateral: false,\r\n        posterior: false\r\n    });\r\n    const [postureData, setPostureData] = useState({\r\n        // Enhanced state structure with severity and quick tags\r\n        anterior: {\r\n            footAnkle: {\r\n                'feet-turned-out-L': false,\r\n                'feet-turned-out-R': false,\r\n                'feet-turned-out-both': false,\r\n                'feet-flattened-L': false,\r\n                'feet-flattened-R': false,\r\n                'feet-flattened-both': false,\r\n                'feet-not-parallel': false\r\n            },\r\n            knees: {\r\n                'knee-valgus-L': false,\r\n                'knee-valgus-R': false,\r\n                'knee-valgus-both': false,\r\n                'knee-varus-L': false,\r\n                'knee-varus-R': false,\r\n                'knee-varus-both': false,\r\n                'knees-not-aligned-toes': false\r\n            },\r\n            lphc: {\r\n                'pelvis-not-level-L-higher': false,\r\n                'pelvis-not-level-R-higher': false,\r\n                'asis-not-same-plane': false,\r\n                'excessive-anterior-pelvic-tilt': false\r\n            },\r\n            shoulders: {\r\n                'elevated-L': false,\r\n                'elevated-R': false,\r\n                'elevated-both': false,\r\n                'rounded-forward-L': false,\r\n                'rounded-forward-R': false,\r\n                'rounded-forward-both': false,\r\n                'not-level-L-higher': false,\r\n                'not-level-R-higher': false\r\n            },\r\n            headCervical: {\r\n                'head-tilt-L': false,\r\n                'head-tilt-R': false,\r\n                'head-rotation-L': false,\r\n                'head-rotation-R': false,\r\n                'forward-head-position': false\r\n            }\r\n        },\r\n        lateral: {\r\n            footAnkle: {\r\n                'not-90-degrees': false,\r\n                'excessive-pronation': false,\r\n                'excessive-supination': false\r\n            },\r\n            knees: {\r\n                'hyperextended': false,\r\n                'flexed': false\r\n            },\r\n            lphc: {\r\n                'anterior-pelvic-tilt': false,\r\n                'posterior-pelvic-tilt': false,\r\n                'not-neutral': false\r\n            },\r\n            shoulders: {\r\n                'excessively-rounded': false,\r\n                'forward-shoulder-position': false\r\n            },\r\n            head: {\r\n                'forward-head-posture': false,\r\n                'excessive-cervical-extension': false\r\n            }\r\n        },\r\n        posterior: {\r\n            footAnkle: {\r\n                'heels-not-parallel': false,\r\n                'overly-pronated-L': false,\r\n                'overly-pronated-R': false,\r\n                'overly-pronated-both': false,\r\n                'calcaneal-valgus-varus': false\r\n            },\r\n            knees: {\r\n                'adducted-L': false,\r\n                'adducted-R': false,\r\n                'adducted-both': false,\r\n                'abducted-L': false,\r\n                'abducted-R': false,\r\n                'abducted-both': false\r\n            },\r\n            lphc: {\r\n                'pelvis-not-level-psis': false,\r\n                'lateral-pelvic-shift-L': false,\r\n                'lateral-pelvic-shift-R': false\r\n            },\r\n            shouldersScapulae: {\r\n                'elevated-L': false,\r\n                'elevated-R': false,\r\n                'elevated-both': false,\r\n                'protracted-4-inches': false,\r\n                'winging-L': false,\r\n                'winging-R': false,\r\n                'winging-both': false,\r\n                'not-level': false\r\n            },\r\n            head: {\r\n                'tilted-L': false,\r\n                'tilted-R': false,\r\n                'rotated-L': false,\r\n                'rotated-R': false\r\n            }\r\n        },\r\n        // Enhanced tracking\r\n        severity: {\r\n            anterior: {},\r\n            lateral: {},\r\n            posterior: {}\r\n        },\r\n        quickTags: {\r\n            anterior: {},\r\n            lateral: {},\r\n            posterior: {}\r\n        },\r\n        notes: {\r\n            anterior: {},\r\n            lateral: {},\r\n            posterior: {}\r\n        },\r\n        assessmentMethod: ''\r\n    });\r\n\r\n    const [suspectedDistortions, setSuspectedDistortions] = useState([]);\r\n\r\n    // Muscle imbalance predictor data\r\n    const muscleImbalancePredictor = {\r\n        'feet-turned-out': {\r\n            likely_tight: ['Lateral gastrocnemius', 'Soleus', 'Biceps femoris'],\r\n            likely_weak: ['Medial gastrocnemius', 'Medial hamstrings', 'Gracilis']\r\n        },\r\n        'feet-flattened': {\r\n            likely_tight: ['Peroneals', 'Lateral gastrocnemius'],\r\n            likely_weak: ['Posterior tibialis', 'Anterior tibialis']\r\n        },\r\n        'knee-valgus': {\r\n            likely_tight: ['Adductor complex', 'IT band', 'TFL'],\r\n            likely_weak: ['Gluteus medius', 'Gluteus maximus', 'VMO']\r\n        },\r\n        'forward-head-position': {\r\n            likely_tight: ['Upper trapezius', 'Sternocleidomastoid', 'Suboccipitals'],\r\n            likely_weak: ['Deep cervical flexors', 'Lower trapezius']\r\n        },\r\n        'anterior-pelvic-tilt': {\r\n            likely_tight: ['Hip flexors', 'Erector spinae', 'Latissimus dorsi'],\r\n            likely_weak: ['Gluteus maximus', 'Hamstrings', 'Abdominals']\r\n        },\r\n        'rounded-shoulders': {\r\n            likely_tight: ['Pectorals', 'Latissimus dorsi', 'Teres major'],\r\n            likely_weak: ['Mid/lower trapezius', 'Rhomboids', 'Posterior deltoid']\r\n        }\r\n    };\r\n\r\n    // Helper functions\r\n    const countDeviationsInSection = (view, section) => {\r\n        const sectionData = postureData[view][section];\r\n        return Object.entries(sectionData).filter(([key, value]) =>\r\n            key !== 'notes' && key !== 'severity' && key !== 'quickTags' && value === true\r\n        ).length;\r\n    };\r\n\r\n    const countDeviationsInView = (view) => {\r\n        const viewData = postureData[view];\r\n        return Object.keys(viewData).reduce((total, section) =>\r\n            total + countDeviationsInSection(view, section), 0\r\n        );\r\n    };\r\n\r\n    const getTotalDeviations = () => {\r\n        return ['anterior', 'lateral', 'posterior'].reduce((total, view) =>\r\n            total + countDeviationsInView(view), 0\r\n        );\r\n    };\r\n\r\n    // Get section configuration for each view\r\n    const getSectionConfig = (view) => {\r\n        const configs = {\r\n            anterior: {\r\n                footAnkle: {\r\n                    name: 'Foot & Ankle',\r\n                    icon: '🦶',\r\n                    deviations: {\r\n                        'feet-turned-out-L': 'Feet Turned Out - Left',\r\n                        'feet-turned-out-R': 'Feet Turned Out - Right',\r\n                        'feet-turned-out-both': 'Feet Turned Out - Both',\r\n                        'feet-flattened-L': 'Feet Flattened - Left',\r\n                        'feet-flattened-R': 'Feet Flattened - Right',\r\n                        'feet-flattened-both': 'Feet Flattened - Both',\r\n                        'feet-not-parallel': 'Feet Not Parallel'\r\n                    }\r\n                },\r\n                knees: {\r\n                    name: 'Knees',\r\n                    icon: '🦵',\r\n                    deviations: {\r\n                        'knee-valgus-L': 'Knee Valgus - Left',\r\n                        'knee-valgus-R': 'Knee Valgus - Right',\r\n                        'knee-valgus-both': 'Knee Valgus - Both',\r\n                        'knee-varus-L': 'Knee Varus - Left',\r\n                        'knee-varus-R': 'Knee Varus - Right',\r\n                        'knee-varus-both': 'Knee Varus - Both',\r\n                        'knees-not-aligned-toes': 'Knees Not Aligned with Toes'\r\n                    }\r\n                },\r\n                lphc: {\r\n                    name: 'LPHC (Pelvis)',\r\n                    icon: '🔄',\r\n                    deviations: {\r\n                        'pelvis-not-level-L-higher': 'Pelvis Not Level - Left Higher',\r\n                        'pelvis-not-level-R-higher': 'Pelvis Not Level - Right Higher',\r\n                        'asis-not-same-plane': 'ASIS Not Same Plane',\r\n                        'excessive-anterior-pelvic-tilt': 'Excessive Anterior Pelvic Tilt'\r\n                    }\r\n                },\r\n                shoulders: {\r\n                    name: 'Shoulders',\r\n                    icon: '💪',\r\n                    deviations: {\r\n                        'elevated-L': 'Elevated - Left',\r\n                        'elevated-R': 'Elevated - Right',\r\n                        'elevated-both': 'Elevated - Both',\r\n                        'rounded-forward-L': 'Rounded Forward - Left',\r\n                        'rounded-forward-R': 'Rounded Forward - Right',\r\n                        'rounded-forward-both': 'Rounded Forward - Both',\r\n                        'not-level-L-higher': 'Not Level - Left Higher',\r\n                        'not-level-R-higher': 'Not Level - Right Higher'\r\n                    }\r\n                },\r\n                headCervical: {\r\n                    name: 'Head & Cervical',\r\n                    icon: '🧠',\r\n                    deviations: {\r\n                        'head-tilt-L': 'Head Tilt - Left',\r\n                        'head-tilt-R': 'Head Tilt - Right',\r\n                        'head-rotation-L': 'Head Rotation - Left',\r\n                        'head-rotation-R': 'Head Rotation - Right',\r\n                        'forward-head-position': 'Forward Head Position'\r\n                    }\r\n                }\r\n            },\r\n            lateral: {\r\n                footAnkle: {\r\n                    name: 'Foot & Ankle',\r\n                    icon: '🦶',\r\n                    deviations: {\r\n                        'not-90-degrees': 'Not 90 Degrees',\r\n                        'excessive-pronation': 'Excessive Pronation',\r\n                        'excessive-supination': 'Excessive Supination'\r\n                    }\r\n                },\r\n                knees: {\r\n                    name: 'Knees',\r\n                    icon: '🦵',\r\n                    deviations: {\r\n                        'hyperextended': 'Hyperextended',\r\n                        'flexed': 'Flexed'\r\n                    }\r\n                },\r\n                lphc: {\r\n                    name: 'LPHC (Pelvis)',\r\n                    icon: '🔄',\r\n                    deviations: {\r\n                        'anterior-pelvic-tilt': 'Anterior Pelvic Tilt',\r\n                        'posterior-pelvic-tilt': 'Posterior Pelvic Tilt',\r\n                        'not-neutral': 'Not Neutral'\r\n                    }\r\n                },\r\n                shoulders: {\r\n                    name: 'Shoulders',\r\n                    icon: '💪',\r\n                    deviations: {\r\n                        'excessively-rounded': 'Excessively Rounded',\r\n                        'forward-shoulder-position': 'Forward Shoulder Position'\r\n                    }\r\n                },\r\n                head: {\r\n                    name: 'Head & Cervical',\r\n                    icon: '🧠',\r\n                    deviations: {\r\n                        'forward-head-posture': 'Forward Head Posture',\r\n                        'excessive-cervical-extension': 'Excessive Cervical Extension'\r\n                    }\r\n                }\r\n            },\r\n            posterior: {\r\n                footAnkle: {\r\n                    name: 'Foot & Ankle',\r\n                    icon: '🦶',\r\n                    deviations: {\r\n                        'heels-not-parallel': 'Heels Not Parallel',\r\n                        'overly-pronated-L': 'Overly Pronated - Left',\r\n                        'overly-pronated-R': 'Overly Pronated - Right',\r\n                        'overly-pronated-both': 'Overly Pronated - Both',\r\n                        'calcaneal-valgus-varus': 'Calcaneal Valgus/Varus'\r\n                    }\r\n                },\r\n                knees: {\r\n                    name: 'Knees',\r\n                    icon: '🦵',\r\n                    deviations: {\r\n                        'adducted-L': 'Adducted - Left',\r\n                        'adducted-R': 'Adducted - Right',\r\n                        'adducted-both': 'Adducted - Both',\r\n                        'abducted-L': 'Abducted - Left',\r\n                        'abducted-R': 'Abducted - Right',\r\n                        'abducted-both': 'Abducted - Both'\r\n                    }\r\n                },\r\n                lphc: {\r\n                    name: 'LPHC (Pelvis)',\r\n                    icon: '🔄',\r\n                    deviations: {\r\n                        'pelvis-not-level-psis': 'Pelvis Not Level - PSIS',\r\n                        'lateral-pelvic-shift-L': 'Lateral Pelvic Shift - Left',\r\n                        'lateral-pelvic-shift-R': 'Lateral Pelvic Shift - Right'\r\n                    }\r\n                },\r\n                shouldersScapulae: {\r\n                    name: 'Shoulders & Scapulae',\r\n                    icon: '💪',\r\n                    deviations: {\r\n                        'elevated-L': 'Elevated - Left',\r\n                        'elevated-R': 'Elevated - Right',\r\n                        'elevated-both': 'Elevated - Both',\r\n                        'protracted-4-inches': 'Protracted >4 inches',\r\n                        'winging-L': 'Winging - Left',\r\n                        'winging-R': 'Winging - Right',\r\n                        'winging-both': 'Winging - Both',\r\n                        'not-level': 'Not Level'\r\n                    }\r\n                },\r\n                head: {\r\n                    name: 'Head & Cervical',\r\n                    icon: '🧠',\r\n                    deviations: {\r\n                        'tilted-L': 'Tilted - Left',\r\n                        'tilted-R': 'Tilted - Right',\r\n                        'rotated-L': 'Rotated - Left',\r\n                        'rotated-R': 'Rotated - Right'\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return configs[view] || {};\r\n    };\r\n\r\n    // Handle deviation changes\r\n    const handleDeviationChange = (view, section, deviation, checked) => {\r\n        setPostureData(prev => ({\r\n            ...prev,\r\n            [view]: {\r\n                ...prev[view],\r\n                [section]: {\r\n                    ...prev[view][section],\r\n                    [deviation]: checked\r\n                }\r\n            }\r\n        }));\r\n    };\r\n\r\n    // Count asymmetries\r\n    const countAsymmetries = () => {\r\n        let count = 0;\r\n        ['anterior', 'lateral', 'posterior'].forEach(view => {\r\n            Object.values(postureData[view]).forEach(section => {\r\n                Object.entries(section).forEach(([key, value]) => {\r\n                    if (value === true && (key.includes('-L') || key.includes('-R'))) {\r\n                        const opposite = key.includes('-L') ? key.replace('-L', '-R') : key.replace('-R', '-L');\r\n                        if (section[opposite] !== value) {\r\n                            count++;\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        });\r\n        return Math.floor(count / 2);\r\n    };\r\n\r\n    // Detect postural syndromes\r\n    const detectPosturalSyndromes = () => {\r\n        const syndromes = [];\r\n        const deviations = postureData;\r\n\r\n        // Upper Crossed Syndrome\r\n        const upperCrossedIndicators = [\r\n            deviations.anterior.headCervical['forward-head-position'],\r\n            deviations.lateral.head['forward-head-posture'],\r\n            deviations.anterior.shoulders['rounded-forward-both'],\r\n            deviations.lateral.shoulders['excessively-rounded']\r\n        ];\r\n\r\n        if (upperCrossedIndicators.filter(Boolean).length >= 2) {\r\n            syndromes.push('Upper Crossed Syndrome');\r\n        }\r\n\r\n        // Lower Crossed Syndrome\r\n        const lowerCrossedIndicators = [\r\n            deviations.anterior.lphc['excessive-anterior-pelvic-tilt'],\r\n            deviations.lateral.lphc['anterior-pelvic-tilt'],\r\n            deviations.lateral.knees['hyperextended']\r\n        ];\r\n\r\n        if (lowerCrossedIndicators.filter(Boolean).length >= 2) {\r\n            syndromes.push('Lower Crossed Syndrome');\r\n        }\r\n\r\n        // Pronation Distortion Syndrome\r\n        const pronationIndicators = [\r\n            deviations.anterior.footAnkle['feet-flattened-both'],\r\n            deviations.anterior.knees['knee-valgus-both'],\r\n            deviations.lateral.footAnkle['excessive-pronation']\r\n        ];\r\n\r\n        if (pronationIndicators.filter(Boolean).length >= 2) {\r\n            syndromes.push('Pronation Distortion Syndrome');\r\n        }\r\n\r\n        return syndromes;\r\n    };\r\n\r\n    // Get suggested focus areas\r\n    const getSuggestedFocusAreas = () => {\r\n        const areas = [];\r\n        const totalDeviations = getTotalDeviations();\r\n\r\n        if (totalDeviations === 0) {\r\n            areas.push('Excellent postural alignment - continue current practices');\r\n            return areas;\r\n        }\r\n\r\n        // Check for upper body issues\r\n        const upperIssues = countDeviationsInSection('anterior', 'shoulders') +\r\n            countDeviationsInSection('anterior', 'headCervical') +\r\n            countDeviationsInSection('lateral', 'shoulders') +\r\n            countDeviationsInSection('lateral', 'head');\r\n\r\n        if (upperIssues > 0) {\r\n            areas.push('Upper body postural correction and strengthening');\r\n        }\r\n\r\n        // Check for lower body issues\r\n        const lowerIssues = countDeviationsInSection('anterior', 'lphc') +\r\n            countDeviationsInSection('lateral', 'lphc');\r\n\r\n        if (lowerIssues > 0) {\r\n            areas.push('Core stability and hip mobility work');\r\n        }\r\n\r\n        // Check for foot/ankle issues\r\n        const footIssues = countDeviationsInSection('anterior', 'footAnkle') +\r\n            countDeviationsInSection('lateral', 'footAnkle') +\r\n            countDeviationsInSection('posterior', 'footAnkle');\r\n\r\n        if (footIssues > 0) {\r\n            areas.push('Foot and ankle stability training');\r\n        }\r\n\r\n        if (countAsymmetries() > 2) {\r\n            areas.push('Bilateral movement patterns and unilateral strengthening');\r\n        }\r\n\r\n        return areas.length > 0 ? areas : ['General postural awareness and movement quality'];\r\n    };\r\n\r\n    // NEW: Quick Action Functions\r\n    const markSectionNormal = (view, section) => {\r\n        setPostureData(prev => {\r\n            const clearedSection = {};\r\n            Object.keys(prev[view][section]).forEach(key => {\r\n                clearedSection[key] = false;\r\n            });\r\n\r\n            return {\r\n                ...prev,\r\n                [view]: {\r\n                    ...prev[view],\r\n                    [section]: clearedSection\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    const clearSection = (view, section) => {\r\n        setPostureData(prev => {\r\n            const clearedSection = {};\r\n            Object.keys(prev[view][section]).forEach(key => {\r\n                clearedSection[key] = false;\r\n            });\r\n\r\n            return {\r\n                ...prev,\r\n                [view]: {\r\n                    ...prev[view],\r\n                    [section]: clearedSection\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    const calculateMuscleImbalances = () => {\r\n        const predictions = {\r\n            overactive: [],\r\n            underactive: []\r\n        };\r\n\r\n        ['anterior', 'lateral', 'posterior'].forEach(view => {\r\n            Object.entries(postureData[view]).forEach(([section, sectionData]) => {\r\n                Object.entries(sectionData).forEach(([deviation, isPresent]) => {\r\n                    if (isPresent) {\r\n                        // Map common deviations to muscle imbalances\r\n                        const baseDeviation = deviation.replace(/-L|-R|-both/, '');\r\n\r\n                        if (muscleImbalancePredictor[baseDeviation]) {\r\n                            predictions.overactive.push(...muscleImbalancePredictor[baseDeviation].likely_tight);\r\n                            predictions.underactive.push(...muscleImbalancePredictor[baseDeviation].likely_weak);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        });\r\n\r\n        // Remove duplicates\r\n        predictions.overactive = [...new Set(predictions.overactive)];\r\n        predictions.underactive = [...new Set(predictions.underactive)];\r\n\r\n        return predictions;\r\n    };\r\n\r\n    const getCompletedViews = () => {\r\n        let completed = 0;\r\n        ['anterior', 'lateral', 'posterior'].forEach(view => {\r\n            if (countDeviationsInView(view) >= 0) { // Consider any interaction as \"completed\"\r\n                completed++;\r\n            }\r\n        });\r\n        return completed;\r\n    };\r\n\r\n    const getAsymmetries = () => {\r\n        const asymmetries = [];\r\n        ['anterior', 'lateral', 'posterior'].forEach(view => {\r\n            Object.entries(postureData[view]).forEach(([section, sectionData]) => {\r\n                Object.entries(sectionData).forEach(([key, value]) => {\r\n                    if (value === true && key.includes('-L')) {\r\n                        const rightKey = key.replace('-L', '-R');\r\n                        if (!sectionData[rightKey]) {\r\n                            asymmetries.push(`${view} ${section}: Left side deviation only`);\r\n                        }\r\n                    } else if (value === true && key.includes('-R')) {\r\n                        const leftKey = key.replace('-R', '-L');\r\n                        if (!sectionData[leftKey]) {\r\n                            asymmetries.push(`${view} ${section}: Right side deviation only`);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        });\r\n        return asymmetries;\r\n    };\r\n\r\n    // NEW: Enhanced helper functions for final improvements\r\n    const toggleTag = (tag) => {\r\n        setSelectedTags(prev =>\r\n            prev.includes(tag)\r\n                ? prev.filter(t => t !== tag)\r\n                : [...prev, tag]\r\n        );\r\n    };\r\n\r\n    const canProceedToNextStep = () => {\r\n        const completedViews = getCompletedViews();\r\n        if (completedViews < 3) {\r\n            showWarning(`Please complete all three views before proceeding. ${completedViews}/3 completed.`);\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const showWarning = (message) => {\r\n        const toast = document.createElement('div');\r\n        toast.className = 'warning-toast';\r\n        toast.textContent = `⚠️ ${message}`;\r\n        document.body.appendChild(toast);\r\n        setTimeout(() => toast.remove(), 4000);\r\n    };\r\n\r\n    const showSuccessToast = (viewName) => {\r\n        const toast = document.createElement('div');\r\n        toast.className = 'success-toast';\r\n        toast.textContent = `✅ ${viewName} View Complete!`;\r\n        document.body.appendChild(toast);\r\n        setTimeout(() => toast.remove(), 3000);\r\n    };\r\n\r\n    const getAllViewsComplete = () => {\r\n        return getCompletedViews() === 3;\r\n    };\r\n\r\n    const handleProceed = () => {\r\n        if (canProceedToNextStep()) {\r\n            handleSubmit();\r\n        }\r\n    };\r\n\r\n    // Enhanced deviation change handler with visual feedback\r\n    const handleDeviationChangeEnhanced = (view, section, deviation, checked) => {\r\n        handleDeviationChange(view, section, deviation, checked);\r\n\r\n        // Add visual feedback for selected items\r\n        if (checked) {\r\n            const element = document.querySelector(`[data-deviation=\"${view}-${section}-${deviation}\"]`);\r\n            if (element) {\r\n                element.classList.add('selected');\r\n                setTimeout(() => element.classList.remove('selected'), 300);\r\n            }\r\n        }\r\n\r\n        // Check if view is now complete and show toast\r\n        setTimeout(() => {\r\n            const currentViewComplete = countDeviationsInView(view) > 0 ||\r\n                Object.values(postureData[view]).every(sectionData =>\r\n                    Object.values(sectionData).some(val => val === true)\r\n                );\r\n\r\n            if (currentViewComplete && !viewCompletionStatus[view]) {\r\n                setViewCompletionStatus(prev => ({ ...prev, [view]: true }));\r\n                showSuccessToast(view.charAt(0).toUpperCase() + view.slice(1));\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    // Auto-analyze when data changes\r\n    useEffect(() => {\r\n        const detectedSyndromes = detectPosturalSyndromes();\r\n        setSuspectedDistortions(detectedSyndromes);\r\n    }, [postureData]);\r\n\r\n    // Handle form completion\r\n    const isFormComplete = () => {\r\n        return postureData.assessmentMethod && getTotalDeviations() >= 0;\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const posturalAssessment = {\r\n            deviations: postureData,\r\n            syndromes: suspectedDistortions,\r\n            predictedImbalances: calculateMuscleImbalances(),\r\n            asymmetries: countAsymmetries(),\r\n            selectedQuickTags: selectedTags,\r\n            additionalNotes: additionalNotes,\r\n            viewCompletionStatus: viewCompletionStatus,\r\n            summary: {\r\n                anteriorDeviations: countDeviationsInView('anterior'),\r\n                lateralDeviations: countDeviationsInView('lateral'),\r\n                posteriorDeviations: countDeviationsInView('posterior'),\r\n                totalDeviations: getTotalDeviations(),\r\n                completedViews: getCompletedViews(),\r\n                allViewsComplete: getAllViewsComplete()\r\n            },\r\n            timestamp: new Date().toISOString()\r\n        };\r\n\r\n        actions.setAssessmentData({\r\n            ...state.assessmentData,\r\n            step: 3,\r\n            posturalAssessment,\r\n            timestamp: new Date().toISOString()\r\n        });\r\n\r\n        actions.setCurrentStep(4);\r\n    };\r\n\r\n    return (\r\n        <div className=\"assessment-container\">\r\n            {/* Progress Bar */}\r\n            <div className=\"progress-bar\">\r\n                <div className=\"progress-text\">\r\n                    Step 3: Static Posture - {getCompletedViews()}/3 Views Complete\r\n                </div>\r\n                <div className=\"progress-track\">\r\n                    <div\r\n                        className=\"progress-fill\"\r\n                        style={{ width: `${(getCompletedViews() / 3) * 100}%` }}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"step-header\">\r\n                <h2 className=\"step-title\">Step 3: Static Postural Assessment</h2>\r\n                <p className=\"step-description\">\r\n                    NASM kinetic chain checkpoint assessment - observe alignment from multiple views\r\n                </p>\r\n            </div>\r\n\r\n            {/* Assessment Method Selection */}\r\n            <div className=\"assessment-method-section\">\r\n                <label className=\"method-label\">Assessment Method:</label>\r\n                <div className=\"method-options\">\r\n                    <button\r\n                        className={`method-btn ${postureData.assessmentMethod === 'plumb-line' ? 'active' : ''}`}\r\n                        onClick={() => setPostureData(prev => ({ ...prev, assessmentMethod: 'plumb-line' }))}\r\n                    >\r\n                        📏 Plumb Line Grid\r\n                    </button>\r\n                    <button\r\n                        className={`method-btn ${postureData.assessmentMethod === 'visual' ? 'active' : ''}`}\r\n                        onClick={() => setPostureData(prev => ({ ...prev, assessmentMethod: 'visual' }))}\r\n                    >\r\n                        👁️ Visual Observation\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Main Assessment Interface with Tabs */}\r\n            <div className=\"assessment-main\">\r\n                {/* Tab Navigation */}\r\n                <div className=\"assessment-tabs\">\r\n                    <button\r\n                        className={`tab-btn ${activeView === 'anterior' ? 'active' : ''}`}\r\n                        onClick={() => setActiveView('anterior')}\r\n                    >\r\n                        Anterior View\r\n                        {countDeviationsInView('anterior') > 0 && (\r\n                            <span className=\"deviation-badge\">({countDeviationsInView('anterior')})</span>\r\n                        )}\r\n                    </button>\r\n                    <button\r\n                        className={`tab-btn ${activeView === 'lateral' ? 'active' : ''}`}\r\n                        onClick={() => setActiveView('lateral')}\r\n                    >\r\n                        Lateral View\r\n                        {countDeviationsInView('lateral') > 0 && (\r\n                            <span className=\"deviation-badge\">({countDeviationsInView('lateral')})</span>\r\n                        )}\r\n                    </button>\r\n                    <button\r\n                        className={`tab-btn ${activeView === 'posterior' ? 'active' : ''}`}\r\n                        onClick={() => setActiveView('posterior')}\r\n                    >\r\n                        Posterior View\r\n                        {countDeviationsInView('posterior') > 0 && (\r\n                            <span className=\"deviation-badge\">({countDeviationsInView('posterior')})</span>\r\n                        )}\r\n                    </button>\r\n                    <button\r\n                        className={`tab-btn summary-tab ${activeView === 'summary' ? 'active' : ''}`}\r\n                        onClick={() => setActiveView('summary')}\r\n                    >\r\n                        Summary\r\n                        {getTotalDeviations() > 0 && (\r\n                            <span className=\"deviation-badge total\">({getTotalDeviations()})</span>\r\n                        )}\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Assessment Content */}\r\n                <div className=\"assessment-content\">\r\n                    {activeView !== 'summary' ? (\r\n                        <div className=\"assessment-view\">\r\n                            {/* Collapsible Reference Guide */}\r\n                            <details className=\"reference-guide\">\r\n                                <summary>📐 Plumb Line Reference Guide (click to expand)</summary>\r\n                                <div className=\"reference-content\">\r\n                                    {activeView === 'anterior' && (\r\n                                        <div>\r\n                                            <p><strong>Anterior View Reference:</strong></p>\r\n                                            <p>Imaginary line from midpoint between heels through midline of pelvis, trunk, and skull.\r\n                                                Client should be weight bearing equally on both feet, arms at sides.</p>\r\n                                            <p><em>Look for:</em> Symmetry between left and right sides, proper alignment of body segments.</p>\r\n                                        </div>\r\n                                    )}\r\n                                    {activeView === 'lateral' && (\r\n                                        <div>\r\n                                            <p><strong>Lateral View Reference:</strong></p>\r\n                                            <p>Line through lateral malleolus, middle of femur, center of shoulder, middle of ear.\r\n                                                Assess natural spinal curves and joint alignment.</p>\r\n                                            <p><em>Look for:</em> Proper cervical/lumbar lordosis, thoracic kyphosis, joint positioning.</p>\r\n                                        </div>\r\n                                    )}\r\n                                    {activeView === 'posterior' && (\r\n                                        <div>\r\n                                            <p><strong>Posterior View Reference:</strong></p>\r\n                                            <p>Line from midpoint between heels through midline of pelvis, spine, and skull.\r\n                                                Observe from behind for symmetry and alignment.</p>\r\n                                            <p><em>Look for:</em> Spinal alignment, scapular positioning, hip levelness, foot positioning.</p>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </details>\r\n\r\n                            {/* Assessment Sections */}\r\n                            <div className=\"assessment-sections\">\r\n                                {Object.entries(getSectionConfig(activeView)).map(([sectionKey, sectionData]) => (\r\n                                    <div key={sectionKey} className=\"assessment-section\">\r\n                                        {/* Section Header with Completion Indicator */}\r\n                                        <div className=\"section-header\">\r\n                                            <div className=\"section-title\">\r\n                                                <span className=\"section-icon\">{sectionData.icon}</span>\r\n                                                <span className=\"section-name\">{sectionData.name}</span>\r\n                                                <span className=\"completion-indicator\">\r\n                                                    {countDeviationsInSection(activeView, sectionKey) === 0 ? '✅' : '⚠️'}\r\n                                                </span>\r\n                                                <span className=\"deviation-count\">\r\n                                                    {countDeviationsInSection(activeView, sectionKey)} deviations\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        {/* Quick Action Buttons */}\r\n                                        <div className=\"section-actions\">\r\n                                            <button\r\n                                                className=\"btn-small btn-normal\"\r\n                                                onClick={() => markSectionNormal(activeView, sectionKey)}\r\n                                                title=\"Mark this section as normal (clear all deviations)\"\r\n                                            >\r\n                                                ✓ Mark Normal\r\n                                            </button>\r\n                                            <button\r\n                                                className=\"btn-small btn-clear\"\r\n                                                onClick={() => clearSection(activeView, sectionKey)}\r\n                                                title=\"Clear all selections in this section\"\r\n                                            >\r\n                                                Clear\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                        {/* Improved Deviation Layout */}\r\n                                        <div className=\"deviation-grid\">\r\n                                            {Object.entries(sectionData.deviations).map(([deviationKey, deviationName]) => {\r\n                                                // Determine if this is a bilateral deviation or unilateral\r\n                                                const isBilateral = deviationKey.includes('both') ||\r\n                                                    !deviationKey.includes('-L') && !deviationKey.includes('-R');\r\n\r\n                                                const baseKey = deviationKey.replace(/-L|-R|-both/, '');\r\n                                                const leftKey = `${baseKey}-L`;\r\n                                                const rightKey = `${baseKey}-R`;\r\n                                                const bothKey = `${baseKey}-both`;\r\n\r\n                                                return (\r\n                                                    <div\r\n                                                        key={deviationKey}\r\n                                                        className=\"deviation-row\"\r\n                                                        data-deviation={`${activeView}-${sectionKey}-${deviationKey}`}\r\n                                                    >\r\n                                                        <span className=\"deviation-label\">\r\n                                                            {deviationName.replace(/ - (Left|Right|Both)$/, '')}\r\n                                                        </span>\r\n\r\n                                                        <div className=\"side-options\">\r\n                                                            {isBilateral ? (\r\n                                                                <label className=\"checkbox-label\">\r\n                                                                    <input\r\n                                                                        type=\"checkbox\"\r\n                                                                        checked={postureData[activeView][sectionKey][deviationKey] || false}\r\n                                                                        onChange={(e) => handleDeviationChangeEnhanced(activeView, sectionKey, deviationKey, e.target.checked)}\r\n                                                                    />\r\n                                                                    Present\r\n                                                                </label>\r\n                                                            ) : (\r\n                                                                <>\r\n                                                                    <label className=\"checkbox-label\">\r\n                                                                        <input\r\n                                                                            type=\"checkbox\"\r\n                                                                            checked={postureData[activeView][sectionKey][leftKey] || false}\r\n                                                                            onChange={(e) => handleDeviationChangeEnhanced(activeView, sectionKey, leftKey, e.target.checked)}\r\n                                                                        />\r\n                                                                        Left\r\n                                                                    </label>\r\n                                                                    <label className=\"checkbox-label\">\r\n                                                                        <input\r\n                                                                            type=\"checkbox\"\r\n                                                                            checked={postureData[activeView][sectionKey][rightKey] || false}\r\n                                                                            onChange={(e) => handleDeviationChangeEnhanced(activeView, sectionKey, rightKey, e.target.checked)}\r\n                                                                        />\r\n                                                                        Right\r\n                                                                    </label>\r\n                                                                    <label className=\"checkbox-label\">\r\n                                                                        <input\r\n                                                                            type=\"checkbox\"\r\n                                                                            checked={postureData[activeView][sectionKey][bothKey] || false}\r\n                                                                            onChange={(e) => handleDeviationChangeEnhanced(activeView, sectionKey, bothKey, e.target.checked)}\r\n                                                                        />\r\n                                                                        Both\r\n                                                                    </label>\r\n                                                                </>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                            {/* Enhanced Notes Section */}\r\n                            <div className=\"notes-section\">\r\n                                <h4>🏷️ Quick Tags (click to add):</h4>\r\n                                <div className=\"quick-tags\">\r\n                                    {['Forward Head', 'Rounded Shoulders', 'Anterior Pelvic Tilt', 'Flat Feet', 'Knee Valgus', 'Scoliosis', 'Winged Scapula', 'Hip Drop'].map(tag => (\r\n                                        <button\r\n                                            key={tag}\r\n                                            className={`tag ${selectedTags.includes(tag) ? 'active' : ''}`}\r\n                                            onClick={() => toggleTag(tag)}\r\n                                        >\r\n                                            {tag}\r\n                                        </button>\r\n                                    ))}\r\n                                </div>\r\n                                <div className=\"notes-input\">\r\n                                    <label>Additional Observations:</label>\r\n                                    <textarea\r\n                                        placeholder=\"Record any additional postural observations, compensations, or clinical notes...\"\r\n                                        value={additionalNotes}\r\n                                        onChange={(e) => setAdditionalNotes(e.target.value)}\r\n                                        rows={3}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        /* Summary View */\r\n                        <div className=\"summary-view\">\r\n                            <div className=\"summary-grid\">\r\n                                {/* Enhanced Summary Card */}\r\n                                <div className=\"summary-card enhanced-summary\">\r\n                                    <h3>📋 Assessment Summary</h3>\r\n                                    <div className=\"summary-stats\">\r\n                                        <div className=\"stat-row\">\r\n                                            <span>Total Deviations:</span>\r\n                                            <span className=\"stat-value\">{getTotalDeviations()}</span>\r\n                                        </div>\r\n                                        <div className=\"stat-row\">\r\n                                            <span>Anterior View:</span>\r\n                                            <span className=\"stat-value\">{countDeviationsInView('anterior')} issues</span>\r\n                                        </div>\r\n                                        <div className=\"stat-row\">\r\n                                            <span>Lateral View:</span>\r\n                                            <span className=\"stat-value\">{countDeviationsInView('lateral')} issues</span>\r\n                                        </div>\r\n                                        <div className=\"stat-row\">\r\n                                            <span>Posterior View:</span>\r\n                                            <span className=\"stat-value\">{countDeviationsInView('posterior')} issues</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"asymmetries\">\r\n                                        <h4>🔄 Asymmetries Detected:</h4>\r\n                                        {getAsymmetries().length > 0 ? (\r\n                                            <ul className=\"asymmetry-list\">\r\n                                                {getAsymmetries().map((asymmetry, index) => (\r\n                                                    <li key={index}>{asymmetry}</li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        ) : (\r\n                                            <p className=\"no-asymmetries\">No significant asymmetries detected</p>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Enhanced Muscle Predictions */}\r\n                                <div className=\"summary-card muscle-predictions\">\r\n                                    <h4>🎯 Predicted Muscle Imbalances:</h4>\r\n                                    {(() => {\r\n                                        const imbalances = calculateMuscleImbalances();\r\n                                        return imbalances.overactive.length > 0 || imbalances.underactive.length > 0 ? (\r\n                                            <div className=\"muscle-imbalance-grid\">\r\n                                                {imbalances.overactive.length > 0 && (\r\n                                                    <div className=\"overactive\">\r\n                                                        <strong>🔴 Likely Overactive:</strong>\r\n                                                        <ul>\r\n                                                            {imbalances.overactive.map((muscle, index) => (\r\n                                                                <li key={index}>{muscle}</li>\r\n                                                            ))}\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                )}\r\n                                                {imbalances.underactive.length > 0 && (\r\n                                                    <div className=\"underactive\">\r\n                                                        <strong>🟡 Likely Underactive:</strong>\r\n                                                        <ul>\r\n                                                            {imbalances.underactive.map((muscle, index) => (\r\n                                                                <li key={index}>{muscle}</li>\r\n                                                            ))}\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        ) : (\r\n                                            <p className=\"no-predictions\">Complete assessment for muscle imbalance predictions</p>\r\n                                        );\r\n                                    })()}\r\n                                </div>\r\n\r\n                                {/* Overall Statistics */}\r\n                                <div className=\"summary-card stats\">\r\n                                    <h3>📊 Assessment Statistics</h3>\r\n                                    <div className=\"stat-items\">\r\n                                        <div className=\"stat-item\">\r\n                                            <span className=\"stat-label\">Total Deviations:</span>\r\n                                            <span className=\"stat-value\">{getTotalDeviations()}</span>\r\n                                        </div>\r\n                                        <div className=\"stat-item\">\r\n                                            <span className=\"stat-label\">Anterior View:</span>\r\n                                            <span className=\"stat-value\">{countDeviationsInView('anterior')}</span>\r\n                                        </div>\r\n                                        <div className=\"stat-item\">\r\n                                            <span className=\"stat-label\">Lateral View:</span>\r\n                                            <span className=\"stat-value\">{countDeviationsInView('lateral')}</span>\r\n                                        </div>\r\n                                        <div className=\"stat-item\">\r\n                                            <span className=\"stat-label\">Posterior View:</span>\r\n                                            <span className=\"stat-value\">{countDeviationsInView('posterior')}</span>\r\n                                        </div>\r\n                                        <div className=\"stat-item\">\r\n                                            <span className=\"stat-label\">Asymmetries:</span>\r\n                                            <span className=\"stat-value\">{countAsymmetries()}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Suspected Distortion Patterns */}\r\n                                <div className=\"summary-card distortions\">\r\n                                    <h3>🎯 Suspected Distortion Patterns</h3>\r\n                                    {suspectedDistortions.length > 0 ? (\r\n                                        <div className=\"distortion-list\">\r\n                                            {suspectedDistortions.map((distortion, index) => (\r\n                                                <div key={index} className=\"distortion-item\">\r\n                                                    <span className=\"distortion-icon\">⚠️</span>\r\n                                                    <span className=\"distortion-name\">{distortion}</span>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    ) : (\r\n                                        <p className=\"no-distortions\">No major distortion patterns detected</p>\r\n                                    )}\r\n                                </div>\r\n\r\n                                {/* Focus Areas */}\r\n                                <div className=\"summary-card focus-areas\">\r\n                                    <h3>🎯 Suggested Focus Areas</h3>\r\n                                    <div className=\"focus-list\">\r\n                                        {getSuggestedFocusAreas().map((area, index) => (\r\n                                            <div key={index} className=\"focus-item\">\r\n                                                <span className=\"focus-icon\">📍</span>\r\n                                                <span className=\"focus-text\">{area}</span>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Floating Action Button */}\r\n            <div className=\"floating-actions\">\r\n                <button\r\n                    className={`btn-proceed ${getAllViewsComplete() ? 'complete' : 'incomplete'}`}\r\n                    onClick={handleProceed}\r\n                    disabled={!getAllViewsComplete()}\r\n                >\r\n                    {getAllViewsComplete()\r\n                        ? 'Continue to Step 4 →'\r\n                        : `Complete ${3 - getCompletedViews()} more view(s)`\r\n                    }\r\n                </button>\r\n            </div>\r\n\r\n            {/* Navigation */}\r\n            <div className=\"step-navigation\">\r\n                <button\r\n                    className=\"back-button\"\r\n                    onClick={() => actions.setCurrentStep(2)}\r\n                >\r\n                    ← Back to Vitals\r\n                </button>\r\n\r\n                <button\r\n                    className=\"next-button\"\r\n                    onClick={handleSubmit}\r\n                    disabled={!isFormComplete()}\r\n                >\r\n                    Complete Posture → Step 4: Dynamic Movement\r\n                </button>\r\n            </div>\r\n\r\n            <style jsx>{`\r\n                .assessment-container {\r\n                    padding: 30px;\r\n                    max-width: 1400px;\r\n                    margin: 0 auto;\r\n                    background: #111827;\r\n                    min-height: 100vh;\r\n                    color: #d1d5db;\r\n                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\r\n                }\r\n\r\n                /* Progress Bar Styles */\r\n                .progress-bar {\r\n                    background: #1f2937;\r\n                    border-radius: 12px;\r\n                    padding: 20px;\r\n                    margin-bottom: 20px;\r\n                    border: 1px solid #374151;\r\n                }\r\n\r\n                .progress-text {\r\n                    color: #f3f4f6;\r\n                    font-weight: 600;\r\n                    margin-bottom: 10px;\r\n                    text-align: center;\r\n                }\r\n\r\n                .progress-track {\r\n                    width: 100%;\r\n                    height: 8px;\r\n                    background: #374151;\r\n                    border-radius: 4px;\r\n                    overflow: hidden;\r\n                }\r\n\r\n                .progress-fill {\r\n                    height: 100%;\r\n                    background: linear-gradient(90deg, #dc2626, #ef4444);\r\n                    border-radius: 4px;\r\n                    transition: width 0.3s ease;\r\n                }\r\n\r\n                /* Quick Action Buttons */\r\n                .section-actions {\r\n                    display: flex;\r\n                    gap: 8px;\r\n                    margin-bottom: 15px;\r\n                    padding: 10px;\r\n                    background: rgba(75, 85, 99, 0.3);\r\n                    border-radius: 6px;\r\n                    border-left: 3px solid #dc2626;\r\n                }\r\n\r\n                .btn-small {\r\n                    padding: 4px 12px;\r\n                    font-size: 12px;\r\n                    margin-right: 8px;\r\n                    border: none;\r\n                    border-radius: 4px;\r\n                    cursor: pointer;\r\n                    font-weight: 500;\r\n                    transition: all 0.2s ease;\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 4px;\r\n                }\r\n\r\n                .btn-normal {\r\n                    background: #22c55e;\r\n                    color: white;\r\n                }\r\n\r\n                .btn-normal:hover {\r\n                    background: #16a34a;\r\n                    transform: translateY(-1px);\r\n                }\r\n\r\n                .btn-clear {\r\n                    background: #6b7280;\r\n                    color: white;\r\n                }\r\n\r\n                .btn-clear:hover {\r\n                    background: #4b5563;\r\n                    transform: translateY(-1px);\r\n                }\r\n\r\n                /* Enhanced Summary Styles */\r\n                .enhanced-summary {\r\n                    background: linear-gradient(135deg, #1f2937 0%, #374151 100%);\r\n                    border: 2px solid #4b5563;\r\n                }\r\n\r\n                .summary-stats {\r\n                    margin-bottom: 20px;\r\n                }\r\n\r\n                .stat-row {\r\n                    display: flex;\r\n                    justify-content: space-between;\r\n                    align-items: center;\r\n                    padding: 8px 12px;\r\n                    margin: 4px 0;\r\n                    background: rgba(75, 85, 99, 0.3);\r\n                    border-radius: 4px;\r\n                    border-left: 3px solid #dc2626;\r\n                }\r\n\r\n                .stat-row .stat-value {\r\n                    font-weight: 600;\r\n                    color: #ef4444;\r\n                }\r\n\r\n                .asymmetries {\r\n                    margin-top: 15px;\r\n                    padding-top: 15px;\r\n                    border-top: 1px solid #4b5563;\r\n                }\r\n\r\n                .asymmetries h4 {\r\n                    color: #f3f4f6;\r\n                    margin-bottom: 10px;\r\n                    font-size: 14px;\r\n                }\r\n\r\n                .asymmetry-list {\r\n                    list-style: none;\r\n                    padding: 0;\r\n                    margin: 0;\r\n                }\r\n\r\n                .asymmetry-list li {\r\n                    padding: 6px 10px;\r\n                    background: rgba(239, 68, 68, 0.1);\r\n                    border-left: 3px solid #ef4444;\r\n                    border-radius: 4px;\r\n                    margin-bottom: 4px;\r\n                    font-size: 13px;\r\n                    color: #fecaca;\r\n                }\r\n\r\n                .no-asymmetries {\r\n                    color: #9ca3af;\r\n                    font-style: italic;\r\n                    text-align: center;\r\n                    padding: 10px;\r\n                    background: rgba(34, 197, 94, 0.1);\r\n                    border-radius: 4px;\r\n                    border-left: 3px solid #22c55e;\r\n                }\r\n\r\n                .muscle-predictions {\r\n                    background: #374151;\r\n                    border: 1px solid #4b5563;\r\n                }\r\n\r\n                .muscle-imbalance-grid {\r\n                    display: grid;\r\n                    grid-template-columns: 1fr 1fr;\r\n                    gap: 15px;\r\n                }\r\n\r\n                .overactive, .underactive {\r\n                    padding: 10px;\r\n                    border-radius: 6px;\r\n                }\r\n\r\n                .overactive {\r\n                    background: rgba(239, 68, 68, 0.1);\r\n                    border-left: 4px solid #ef4444;\r\n                }\r\n\r\n                .underactive {\r\n                    background: rgba(245, 158, 11, 0.1);\r\n                    border-left: 4px solid #f59e0b;\r\n                }\r\n\r\n                .overactive strong, .underactive strong {\r\n                    display: block;\r\n                    margin-bottom: 8px;\r\n                    font-size: 13px;\r\n                }\r\n\r\n                .overactive ul, .underactive ul {\r\n                    list-style: none;\r\n                    padding: 0;\r\n                    margin: 0;\r\n                }\r\n\r\n                .overactive li, .underactive li {\r\n                    padding: 3px 8px;\r\n                    background: rgba(0, 0, 0, 0.2);\r\n                    border-radius: 3px;\r\n                    margin-bottom: 2px;\r\n                    font-size: 12px;\r\n                }\r\n\r\n                /* NEW: Reference Guide Styles */\r\n                .reference-guide {\r\n                    background: rgba(220, 38, 38, 0.05);\r\n                    padding: 12px;\r\n                    border-radius: 8px;\r\n                    margin-bottom: 20px;\r\n                    border: 1px solid rgba(220, 38, 38, 0.2);\r\n                }\r\n\r\n                .reference-guide summary {\r\n                    cursor: pointer;\r\n                    font-weight: 600;\r\n                    color: #dc2626;\r\n                    padding: 8px;\r\n                    border-radius: 4px;\r\n                    transition: all 0.2s ease;\r\n                }\r\n\r\n                .reference-guide summary:hover {\r\n                    background: rgba(220, 38, 38, 0.1);\r\n                }\r\n\r\n                .reference-content {\r\n                    margin-top: 10px;\r\n                    padding: 10px;\r\n                    background: rgba(31, 41, 55, 0.5);\r\n                    border-radius: 6px;\r\n                    border-left: 3px solid #dc2626;\r\n                }\r\n\r\n                .reference-content p {\r\n                    margin: 8px 0;\r\n                    color: #d1d5db;\r\n                    line-height: 1.5;\r\n                }\r\n\r\n                .reference-content strong {\r\n                    color: #f3f4f6;\r\n                }\r\n\r\n                .reference-content em {\r\n                    color: #fbbf24;\r\n                    font-style: normal;\r\n                }\r\n\r\n                /* Visual Feedback Animations */\r\n                .deviation-row.selected {\r\n                    animation: pulse 0.3s ease;\r\n                    background: rgba(220, 38, 38, 0.1);\r\n                    border-left-color: #dc2626;\r\n                }\r\n\r\n                @keyframes pulse {\r\n                    0% { transform: scale(1); }\r\n                    50% { transform: scale(1.02); }\r\n                    100% { transform: scale(1); }\r\n                }\r\n\r\n                .deviation-badge {\r\n                    transition: all 0.3s ease;\r\n                }\r\n\r\n                .tab-btn .deviation-badge {\r\n                    animation: bounce 0.5s ease;\r\n                }\r\n\r\n                @keyframes bounce {\r\n                    0%, 20%, 60%, 100% { transform: translateY(0); }\r\n                    40% { transform: translateY(-3px); }\r\n                    80% { transform: translateY(-1px); }\r\n                }\r\n\r\n                /* Enhanced Notes Section */\r\n                .notes-section {\r\n                    background: #374151;\r\n                    border-radius: 12px;\r\n                    padding: 20px;\r\n                    margin-top: 25px;\r\n                    border: 1px solid #4b5563;\r\n                }\r\n\r\n                .notes-section h4 {\r\n                    color: #f3f4f6;\r\n                    margin-bottom: 15px;\r\n                    font-size: 16px;\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 8px;\r\n                }\r\n\r\n                .quick-tags {\r\n                    display: flex;\r\n                    flex-wrap: wrap;\r\n                    gap: 8px;\r\n                    margin-bottom: 20px;\r\n                }\r\n\r\n                .tag {\r\n                    padding: 6px 12px;\r\n                    margin: 0;\r\n                    border: 1px solid #dc2626;\r\n                    background: transparent;\r\n                    border-radius: 20px;\r\n                    cursor: pointer;\r\n                    color: #dc2626;\r\n                    font-size: 12px;\r\n                    font-weight: 500;\r\n                    transition: all 0.2s ease;\r\n                }\r\n\r\n                .tag:hover {\r\n                    background: rgba(220, 38, 38, 0.1);\r\n                    transform: translateY(-1px);\r\n                }\r\n\r\n                .tag.active {\r\n                    background: #dc2626;\r\n                    color: white;\r\n                    box-shadow: 0 2px 8px rgba(220, 38, 38, 0.3);\r\n                }\r\n\r\n                .notes-input {\r\n                    margin-top: 15px;\r\n                }\r\n\r\n                .notes-input label {\r\n                    display: block;\r\n                    color: #f3f4f6;\r\n                    font-weight: 500;\r\n                    margin-bottom: 8px;\r\n                }\r\n\r\n                .notes-input textarea {\r\n                    width: 100%;\r\n                    background: #4b5563;\r\n                    border: 1px solid #6b7280;\r\n                    border-radius: 6px;\r\n                    padding: 12px;\r\n                    color: #d1d5db;\r\n                    font-family: inherit;\r\n                    resize: vertical;\r\n                    min-height: 80px;\r\n                }\r\n\r\n                .notes-input textarea:focus {\r\n                    outline: none;\r\n                    border-color: #dc2626;\r\n                    box-shadow: 0 0 0 2px rgba(220, 38, 38, 0.2);\r\n                }\r\n\r\n                .notes-input textarea::placeholder {\r\n                    color: #9ca3af;\r\n                }\r\n\r\n                /* Floating Action Button */\r\n                .floating-actions {\r\n                    position: sticky;\r\n                    bottom: 20px;\r\n                    display: flex;\r\n                    justify-content: flex-end;\r\n                    padding: 20px;\r\n                    background: linear-gradient(transparent, #111827 70%);\r\n                    z-index: 10;\r\n                }\r\n\r\n                .btn-proceed {\r\n                    padding: 14px 28px;\r\n                    border-radius: 25px;\r\n                    font-weight: 600;\r\n                    cursor: pointer;\r\n                    transition: all 0.3s ease;\r\n                    border: none;\r\n                    font-size: 16px;\r\n                    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 8px;\r\n                }\r\n\r\n                .btn-proceed.complete {\r\n                    background: linear-gradient(135deg, #059669, #10b981);\r\n                    color: white;\r\n                    animation: glow 2s ease-in-out infinite alternate;\r\n                }\r\n\r\n                .btn-proceed.incomplete {\r\n                    background: #6b7280;\r\n                    color: #d1d5db;\r\n                    cursor: not-allowed;\r\n                }\r\n\r\n                .btn-proceed.complete:hover {\r\n                    transform: translateY(-2px);\r\n                    box-shadow: 0 6px 20px rgba(5, 150, 105, 0.4);\r\n                }\r\n\r\n                @keyframes glow {\r\n                    from { box-shadow: 0 4px 15px rgba(5, 150, 105, 0.3); }\r\n                    to { box-shadow: 0 4px 25px rgba(5, 150, 105, 0.6); }\r\n                }\r\n\r\n                /* Toast Notifications */\r\n                .success-toast, .warning-toast {\r\n                    position: fixed;\r\n                    top: 20px;\r\n                    right: 20px;\r\n                    padding: 12px 24px;\r\n                    border-radius: 8px;\r\n                    animation: slideIn 0.3s ease;\r\n                    z-index: 1000;\r\n                    font-weight: 500;\r\n                    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\r\n                }\r\n\r\n                .success-toast {\r\n                    background: #22c55e;\r\n                    color: white;\r\n                }\r\n\r\n                .warning-toast {\r\n                    background: #f59e0b;\r\n                    color: white;\r\n                }\r\n\r\n                @keyframes slideIn {\r\n                    from {\r\n                        transform: translateX(100%);\r\n                        opacity: 0;\r\n                    }\r\n                    to {\r\n                        transform: translateX(0);\r\n                        opacity: 1;\r\n                    }\r\n                }\r\n\r\n                .step-header {\r\n                    text-align: center;\r\n                    margin-bottom: 30px;\r\n                    background: linear-gradient(135deg, #1f2937 0%, #374151 100%);\r\n                    border-radius: 16px;\r\n                    padding: 30px;\r\n                    box-shadow: 0 4px 20px rgba(0,0,0,0.3);\r\n                    border: 1px solid #374151;\r\n                }\r\n\r\n                .step-title {\r\n                    color: #dc2626;\r\n                    margin-bottom: 10px;\r\n                    font-size: 2.2em;\r\n                    font-weight: 700;\r\n                }\r\n\r\n                .step-description {\r\n                    color: #9ca3af;\r\n                    font-size: 16px;\r\n                    margin: 0;\r\n                }\r\n\r\n                .assessment-method-section {\r\n                    background: #1f2937;\r\n                    border-radius: 12px;\r\n                    padding: 20px;\r\n                    margin-bottom: 30px;\r\n                    border: 1px solid #374151;\r\n                }\r\n\r\n                .method-label {\r\n                    display: block;\r\n                    margin-bottom: 15px;\r\n                    font-weight: 600;\r\n                    color: #f3f4f6;\r\n                    font-size: 16px;\r\n                }\r\n\r\n                .method-options {\r\n                    display: flex;\r\n                    gap: 15px;\r\n                    flex-wrap: wrap;\r\n                }\r\n\r\n                .method-btn {\r\n                    padding: 12px 24px;\r\n                    background: #374151;\r\n                    border: 2px solid #4b5563;\r\n                    border-radius: 8px;\r\n                    color: #d1d5db;\r\n                    cursor: pointer;\r\n                    transition: all 0.2s ease;\r\n                    font-weight: 500;\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 8px;\r\n                }\r\n\r\n                .method-btn:hover {\r\n                    background: #4b5563;\r\n                    border-color: #6b7280;\r\n                }\r\n\r\n                .method-btn.active {\r\n                    background: #dc2626;\r\n                    border-color: #dc2626;\r\n                    color: white;\r\n                    box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.2);\r\n                }\r\n\r\n                .assessment-main {\r\n                    background: #1f2937;\r\n                    border-radius: 16px;\r\n                    overflow: hidden;\r\n                    box-shadow: 0 4px 20px rgba(0,0,0,0.2);\r\n                    border: 1px solid #374151;\r\n                }\r\n\r\n                .assessment-tabs {\r\n                    display: flex;\r\n                    background: #374151;\r\n                    border-bottom: 1px solid #4b5563;\r\n                }\r\n\r\n                .tab-btn {\r\n                    flex: 1;\r\n                    padding: 16px 20px;\r\n                    background: transparent;\r\n                    border: none;\r\n                    color: #9ca3af;\r\n                    cursor: pointer;\r\n                    transition: all 0.2s ease;\r\n                    font-weight: 500;\r\n                    display: flex;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    gap: 8px;\r\n                    position: relative;\r\n                    border-right: 1px solid #4b5563;\r\n                    border-bottom: 3px solid transparent;\r\n                }\r\n\r\n                .tab-btn:last-child {\r\n                    border-right: none;\r\n                }\r\n\r\n                .tab-btn:hover {\r\n                    background: #4b5563;\r\n                    color: #d1d5db;\r\n                }\r\n\r\n                .tab-btn.active {\r\n                    background: #4b5563;\r\n                    color: #dc2626;\r\n                    border-bottom-color: #dc2626;\r\n                    font-weight: 600;\r\n                }\r\n\r\n                .tab-btn.summary-tab.active {\r\n                    color: #059669;\r\n                    border-bottom-color: #059669;\r\n                }\r\n\r\n                .deviation-badge {\r\n                    background: #dc2626;\r\n                    color: white;\r\n                    border-radius: 12px;\r\n                    padding: 2px 8px;\r\n                    font-size: 12px;\r\n                    font-weight: 600;\r\n                    margin-left: 6px;\r\n                }\r\n\r\n                .deviation-badge.total {\r\n                    background: #059669;\r\n                }\r\n\r\n                .assessment-content {\r\n                    padding: 30px;\r\n                    min-height: 500px;\r\n                }\r\n\r\n                .assessment-sections {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    gap: 25px;\r\n                }\r\n\r\n                .assessment-section {\r\n                    background: #374151;\r\n                    border-radius: 12px;\r\n                    padding: 20px;\r\n                    border: 1px solid #4b5563;\r\n                }\r\n\r\n                .section-header {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    margin-bottom: 20px;\r\n                    padding-bottom: 15px;\r\n                    border-bottom: 1px solid #4b5563;\r\n                }\r\n\r\n                .section-title {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 12px;\r\n                    flex: 1;\r\n                }\r\n\r\n                .section-icon {\r\n                    font-size: 20px;\r\n                }\r\n\r\n                .section-name {\r\n                    font-size: 16px;\r\n                    font-weight: 600;\r\n                    color: #f3f4f6;\r\n                }\r\n\r\n                .completion-indicator {\r\n                    font-size: 14px;\r\n                    margin-left: 8px;\r\n                }\r\n\r\n                .deviation-count {\r\n                    font-size: 12px;\r\n                    color: #9ca3af;\r\n                    background: #4b5563;\r\n                    padding: 2px 8px;\r\n                    border-radius: 8px;\r\n                    margin-left: 8px;\r\n                }\r\n\r\n                .deviation-grid {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    gap: 8px;\r\n                }\r\n\r\n                .deviation-row {\r\n                    padding: 12px;\r\n                    margin: 8px 0;\r\n                    border-left: 3px solid transparent;\r\n                    display: flex;\r\n                    justify-content: space-between;\r\n                    align-items: center;\r\n                    background: #4b5563;\r\n                    border-radius: 6px;\r\n                    transition: all 0.2s ease;\r\n                }\r\n\r\n                .deviation-row:hover {\r\n                    background: rgba(220, 38, 38, 0.1);\r\n                    border-left-color: #dc2626;\r\n                }\r\n\r\n                .deviation-label {\r\n                    font-weight: 500;\r\n                    color: #e5e7eb;\r\n                    flex: 1;\r\n                }\r\n\r\n                .side-options {\r\n                    display: flex;\r\n                    gap: 20px;\r\n                }\r\n\r\n                .checkbox-label {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 8px;\r\n                    cursor: pointer;\r\n                    color: #d1d5db;\r\n                    font-size: 14px;\r\n                }\r\n\r\n                .checkbox-label input[type=\"checkbox\"] {\r\n                    width: 16px;\r\n                    height: 16px;\r\n                    accent-color: #dc2626;\r\n                    cursor: pointer;\r\n                }\r\n\r\n                .summary-view {\r\n                    padding: 20px 0;\r\n                }\r\n\r\n                .summary-grid {\r\n                    display: grid;\r\n                    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\r\n                    gap: 25px;\r\n                }\r\n\r\n                .summary-card {\r\n                    background: #374151;\r\n                    border-radius: 12px;\r\n                    padding: 20px;\r\n                    border: 1px solid #4b5563;\r\n                }\r\n\r\n                .summary-card h3 {\r\n                    color: #f3f4f6;\r\n                    margin-bottom: 15px;\r\n                    font-size: 16px;\r\n                    font-weight: 600;\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 8px;\r\n                }\r\n\r\n                .stat-items {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    gap: 10px;\r\n                }\r\n\r\n                .stat-item {\r\n                    display: flex;\r\n                    justify-content: space-between;\r\n                    align-items: center;\r\n                    padding: 8px;\r\n                    background: #4b5563;\r\n                    border-radius: 4px;\r\n                }\r\n\r\n                .stat-label {\r\n                    color: #d1d5db;\r\n                    font-weight: 500;\r\n                }\r\n\r\n                .stat-value {\r\n                    color: #dc2626;\r\n                    font-weight: 600;\r\n                    font-size: 16px;\r\n                }\r\n\r\n                .distortion-list {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    gap: 8px;\r\n                }\r\n\r\n                .distortion-item {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 8px;\r\n                    padding: 10px;\r\n                    background: #4b5563;\r\n                    border-radius: 6px;\r\n                    border-left: 4px solid #ef4444;\r\n                }\r\n\r\n                .distortion-name {\r\n                    font-weight: 500;\r\n                    color: #f3f4f6;\r\n                }\r\n\r\n                .no-distortions, .no-predictions {\r\n                    color: #9ca3af;\r\n                    font-style: italic;\r\n                    text-align: center;\r\n                    padding: 15px;\r\n                }\r\n\r\n                .imbalance-predictions {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    gap: 15px;\r\n                }\r\n\r\n                .imbalance-group h4 {\r\n                    color: #f3f4f6;\r\n                    margin-bottom: 8px;\r\n                    font-size: 14px;\r\n                    font-weight: 600;\r\n                }\r\n\r\n                .imbalance-group ul {\r\n                    list-style: none;\r\n                    padding: 0;\r\n                    margin: 0;\r\n                }\r\n\r\n                .imbalance-group li {\r\n                    padding: 4px 8px;\r\n                    background: #4b5563;\r\n                    border-radius: 4px;\r\n                    margin-bottom: 3px;\r\n                    font-size: 13px;\r\n                    color: #d1d5db;\r\n                }\r\n\r\n                .imbalance-group.tight li {\r\n                    border-left: 3px solid #ef4444;\r\n                }\r\n\r\n                .imbalance-group.weak li {\r\n                    border-left: 3px solid #f59e0b;\r\n                }\r\n\r\n                .focus-list {\r\n                    display: flex;\r\n                    flex-direction: column;\r\n                    gap: 8px;\r\n                }\r\n\r\n                .focus-item {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 8px;\r\n                    padding: 8px;\r\n                    background: #4b5563;\r\n                    border-radius: 4px;\r\n                }\r\n\r\n                .focus-text {\r\n                    color: #d1d5db;\r\n                    font-size: 14px;\r\n                }\r\n\r\n                .step-navigation {\r\n                    display: flex;\r\n                    justify-content: space-between;\r\n                    align-items: center;\r\n                    margin-top: 30px;\r\n                    padding: 20px 0;\r\n                    border-top: 1px solid #374151;\r\n                }\r\n\r\n                .back-button, .next-button {\r\n                    padding: 12px 24px;\r\n                    border-radius: 8px;\r\n                    font-weight: 600;\r\n                    cursor: pointer;\r\n                    transition: all 0.2s ease;\r\n                    border: none;\r\n                    font-size: 16px;\r\n                }\r\n\r\n                .back-button {\r\n                    background: #4b5563;\r\n                    color: #d1d5db;\r\n                    border: 1px solid #6b7280;\r\n                }\r\n\r\n                .back-button:hover {\r\n                    background: #6b7280;\r\n                }\r\n\r\n                .next-button {\r\n                    background: #dc2626;\r\n                    color: white;\r\n                    border: 1px solid #dc2626;\r\n                }\r\n\r\n                .next-button:hover:not(:disabled) {\r\n                    background: #b91c1c;\r\n                }\r\n\r\n                .next-button:disabled {\r\n                    background: #6b7280;\r\n                    cursor: not-allowed;\r\n                    opacity: 0.5;\r\n                }\r\n\r\n                /* Mobile Responsiveness */\r\n                @media (max-width: 768px) {\r\n                    .assessment-container {\r\n                        padding: 20px 15px;\r\n                    }\r\n                    \r\n                    .assessment-tabs {\r\n                        flex-direction: column;\r\n                    }\r\n                    \r\n                    .tab-btn {\r\n                        border-right: none;\r\n                        border-bottom: 1px solid #4b5563;\r\n                    }\r\n                    \r\n                    .deviation-row {\r\n                        flex-direction: column;\r\n                        align-items: flex-start;\r\n                        gap: 10px;\r\n                    }\r\n                    \r\n                    .side-options {\r\n                        flex-direction: column;\r\n                        gap: 8px;\r\n                        align-self: flex-end;\r\n                        width: 100%;\r\n                    }\r\n\r\n                    .checkbox-label {\r\n                        padding: 8px;\r\n                        width: 100%;\r\n                        justify-content: center;\r\n                        background: rgba(75, 85, 99, 0.5);\r\n                        border-radius: 4px;\r\n                    }\r\n                    \r\n                    .summary-grid {\r\n                        grid-template-columns: 1fr;\r\n                    }\r\n\r\n                    .muscle-imbalance-grid {\r\n                        grid-template-columns: 1fr;\r\n                    }\r\n\r\n                    .section-actions {\r\n                        flex-direction: column;\r\n                        gap: 6px;\r\n                    }\r\n\r\n                    .btn-small {\r\n                        width: 100%;\r\n                        justify-content: center;\r\n                        margin-right: 0;\r\n                    }\r\n\r\n                    .progress-bar {\r\n                        padding: 15px;\r\n                        margin-bottom: 15px;\r\n                    }\r\n\r\n                    .progress-text {\r\n                        font-size: 14px;\r\n                    }\r\n                    \r\n                    .step-navigation {\r\n                        flex-direction: column;\r\n                        gap: 15px;\r\n                    }\r\n                    \r\n                    .back-button, .next-button {\r\n                        width: 100%;\r\n                    }\r\n\r\n                    .step-title {\r\n                        font-size: 1.8em;\r\n                    }\r\n\r\n                    .assessment-main {\r\n                        margin-top: 15px;\r\n                    }\r\n\r\n                    .assessment-content {\r\n                        padding: 20px;\r\n                    }\r\n\r\n                    .quick-tags {\r\n                        justify-content: center;\r\n                    }\r\n\r\n                    .tag {\r\n                        font-size: 11px;\r\n                        padding: 5px 10px;\r\n                    }\r\n\r\n                    .floating-actions {\r\n                        position: static;\r\n                        background: none;\r\n                        justify-content: center;\r\n                        padding: 15px;\r\n                    }\r\n\r\n                    .btn-proceed {\r\n                        width: 100%;\r\n                        justify-content: center;\r\n                        font-size: 14px;\r\n                        padding: 12px 20px;\r\n                    }\r\n\r\n                    .reference-guide {\r\n                        margin-bottom: 15px;\r\n                        padding: 10px;\r\n                    }\r\n\r\n                    .reference-content {\r\n                        padding: 8px;\r\n                    }\r\n\r\n                    .notes-section {\r\n                        padding: 15px;\r\n                        margin-top: 20px;\r\n                    }\r\n\r\n                    .notes-input textarea {\r\n                        font-size: 14px;\r\n                        padding: 10px;\r\n                    }\r\n\r\n                    .success-toast, .warning-toast {\r\n                        top: 10px;\r\n                        right: 10px;\r\n                        left: 10px;\r\n                        font-size: 14px;\r\n                        padding: 10px 16px;\r\n                    }\r\n                }\r\n            `}</style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NASMStaticPostureStep;\r\n","import React, { useState } from 'react';\r\nimport { useProgramContext } from '../../../contexts/ProgramContext';\r\n\r\n/**\r\n * NASMOPTPhaseStep - Step 9: OPT Phase Selection\r\n * \r\n * Complete NASM OPT Model Phase Selection:\r\n * - 5 phases of the Optimum Performance Training model\r\n * - Goal-based phase recommendations\r\n * - Detailed phase characteristics and parameters\r\n * - Direct progression to program configuration\r\n */\r\n\r\n// NASM OPT Model Phases with complete training parameters\r\nconst OPT_PHASES = {\r\n    phase1: {\r\n        id: 'phase1',\r\n        name: 'Phase 1: Stabilization Endurance',\r\n        category: 'Stabilization',\r\n        description: 'Develop muscular endurance, stability, and movement efficiency',\r\n        duration: '4-6 weeks',\r\n        level: 'Beginner',\r\n        color: '#dc2626',\r\n        parameters: {\r\n            sets: '1-3 sets',\r\n            reps: '12-20 reps',\r\n            tempo: '4/2/1 (slow/controlled)',\r\n            rest: '0-90 seconds',\r\n            intensity: '50-70% 1RM',\r\n            load: 'Light to moderate'\r\n        },\r\n        focus: [\r\n            'Muscular endurance',\r\n            'Core stability',\r\n            'Movement efficiency',\r\n            'Joint mobility',\r\n            'Postural control'\r\n        ],\r\n        benefits: [\r\n            'Improved movement quality',\r\n            'Enhanced muscular endurance',\r\n            'Better postural control',\r\n            'Injury prevention foundation',\r\n            'Preparation for higher intensities'\r\n        ],\r\n        exercises: [\r\n            'Ball squats, single-leg balance',\r\n            'Push-ups on ball, planks',\r\n            'Standing cable chest press',\r\n            'Single-leg Romanian deadlift',\r\n            'Overhead squats with light weight'\r\n        ],\r\n        clientTypes: ['Beginner', 'Deconditioned', 'Injury history', 'Movement dysfunction']\r\n    },\r\n    phase2: {\r\n        id: 'phase2',\r\n        name: 'Phase 2: Strength Endurance',\r\n        category: 'Strength',\r\n        description: 'Develop stabilization and prime mover strength simultaneously',\r\n        duration: '4-6 weeks',\r\n        level: 'Beginner to Intermediate',\r\n        color: '#dc2626',\r\n        parameters: {\r\n            sets: '2-4 sets',\r\n            reps: '8-12 reps',\r\n            tempo: '2/0/2 (moderate)',\r\n            rest: '0-60 seconds',\r\n            intensity: '70-80% 1RM',\r\n            load: 'Moderate'\r\n        },\r\n        focus: [\r\n            'Strength endurance',\r\n            'Stabilization strength',\r\n            'Neuromuscular efficiency',\r\n            'Prime mover strength',\r\n            'Muscular endurance'\r\n        ],\r\n        benefits: [\r\n            'Enhanced strength endurance',\r\n            'Improved stabilization',\r\n            'Better movement efficiency',\r\n            'Increased lean body mass',\r\n            'Improved muscular endurance'\r\n        ],\r\n        exercises: [\r\n            'Superset: Bench press + push-ups',\r\n            'Superset: Squats + single-leg squats',\r\n            'Superset: Rows + single-arm rows',\r\n            'Superset: Overhead press + single-arm press',\r\n            'Core stabilization circuits'\r\n        ],\r\n        clientTypes: ['Intermediate', 'Strength endurance goals', 'General fitness']\r\n    },\r\n    phase3: {\r\n        id: 'phase3',\r\n        name: 'Phase 3: Muscular Development',\r\n        category: 'Strength',\r\n        description: 'Maximize muscle growth and development',\r\n        duration: '4-6 weeks',\r\n        level: 'Intermediate to Advanced',\r\n        color: '#dc2626',\r\n        parameters: {\r\n            sets: '3-5 sets',\r\n            reps: '6-12 reps',\r\n            tempo: '2/0/2 (controlled)',\r\n            rest: '0-60 seconds',\r\n            intensity: '75-85% 1RM',\r\n            load: 'Moderate to heavy'\r\n        },\r\n        focus: [\r\n            'Muscular hypertrophy',\r\n            'Muscle growth',\r\n            'Strength development',\r\n            'Body composition',\r\n            'Metabolic enhancement'\r\n        ],\r\n        benefits: [\r\n            'Increased muscle mass',\r\n            'Enhanced strength',\r\n            'Improved body composition',\r\n            'Better muscular definition',\r\n            'Increased metabolic rate'\r\n        ],\r\n        exercises: [\r\n            'Traditional strength training',\r\n            'Compound movements',\r\n            'Isolation exercises',\r\n            'Progressive overload protocols',\r\n            'Higher volume training'\r\n        ],\r\n        clientTypes: ['Hypertrophy goals', 'Body composition', 'Intermediate to advanced']\r\n    },\r\n    phase4: {\r\n        id: 'phase4',\r\n        name: 'Phase 4: Maximal Strength',\r\n        category: 'Strength',\r\n        description: 'Develop maximum force production capabilities',\r\n        duration: '4-6 weeks',\r\n        level: 'Advanced',\r\n        color: '#dc2626',\r\n        parameters: {\r\n            sets: '3-5 sets',\r\n            reps: '1-5 reps',\r\n            tempo: 'X/X/X (explosive)',\r\n            rest: '3-5 minutes',\r\n            intensity: '85-100% 1RM',\r\n            load: 'Heavy to maximum'\r\n        },\r\n        focus: [\r\n            'Maximal strength',\r\n            'Force production',\r\n            'Neural adaptations',\r\n            'Power development',\r\n            'Performance enhancement'\r\n        ],\r\n        benefits: [\r\n            'Maximum strength gains',\r\n            'Enhanced power output',\r\n            'Improved rate of force development',\r\n            'Neural efficiency',\r\n            'Athletic performance'\r\n        ],\r\n        exercises: [\r\n            'Heavy compound movements',\r\n            'Low rep protocols',\r\n            'Olympic lift variations',\r\n            'Heavy squats, deadlifts, presses',\r\n            'Explosive movements'\r\n        ],\r\n        clientTypes: ['Advanced athletes', 'Strength goals', 'Performance athletes']\r\n    },\r\n    phase5: {\r\n        id: 'phase5',\r\n        name: 'Phase 5: Power',\r\n        category: 'Power',\r\n        description: 'Develop rate of force production and explosive power',\r\n        duration: '4-6 weeks',\r\n        level: 'Advanced',\r\n        color: '#dc2626',\r\n        parameters: {\r\n            sets: '3-5 sets',\r\n            reps: '1-5 reps',\r\n            tempo: 'X/X/X (explosive)',\r\n            rest: '3-5 minutes',\r\n            intensity: '30-45% 1RM (speed) / 85-100% 1RM (strength)',\r\n            load: 'Variable (light for speed, heavy for strength)'\r\n        },\r\n        focus: [\r\n            'Power development',\r\n            'Rate of force development',\r\n            'Explosive strength',\r\n            'Sport-specific power',\r\n            'Athletic performance'\r\n        ],\r\n        benefits: [\r\n            'Explosive power gains',\r\n            'Improved athletic performance',\r\n            'Enhanced rate of force development',\r\n            'Sport-specific adaptations',\r\n            'Functional power'\r\n        ],\r\n        exercises: [\r\n            'Superset: Heavy squats + jump squats',\r\n            'Superset: Bench press + medicine ball throws',\r\n            'Olympic lift variations',\r\n            'Plyometric exercises',\r\n            'Speed and agility drills'\r\n        ],\r\n        clientTypes: ['Elite athletes', 'Sport performance', 'Power development goals']\r\n    }\r\n};\r\n\r\n// Goal-based phase recommendations\r\nconst GOAL_TO_PHASE = {\r\n    weight_loss: {\r\n        primary: 'phase1',\r\n        secondary: 'phase2',\r\n        reasoning: 'Stabilization endurance and strength endurance phases maximize caloric expenditure and improve movement efficiency',\r\n        progression: ['phase1', 'phase2', 'phase1', 'phase2']\r\n    },\r\n    muscle_gain: {\r\n        primary: 'phase3',\r\n        secondary: 'phase2',\r\n        reasoning: 'Muscular development phase optimizes hypertrophy while strength endurance provides foundation',\r\n        progression: ['phase1', 'phase2', 'phase3', 'phase2']\r\n    },\r\n    sports_performance: {\r\n        primary: 'phase5',\r\n        secondary: 'phase4',\r\n        reasoning: 'Power development with maximal strength foundation for athletic performance',\r\n        progression: ['phase1', 'phase2', 'phase4', 'phase5']\r\n    },\r\n    general_fitness: {\r\n        primary: 'phase2',\r\n        secondary: 'phase1',\r\n        reasoning: 'Strength endurance provides balanced fitness benefits with stabilization foundation',\r\n        progression: ['phase1', 'phase2', 'phase1', 'phase2']\r\n    },\r\n    strength: {\r\n        primary: 'phase4',\r\n        secondary: 'phase3',\r\n        reasoning: 'Maximal strength development with muscular development support',\r\n        progression: ['phase1', 'phase2', 'phase3', 'phase4']\r\n    }\r\n};\r\n\r\nconst NASMOPTPhaseStep = () => {\r\n    const { state, actions } = useProgramContext();\r\n    const [selectedPhase, setSelectedPhase] = useState(null);\r\n    const [showRecommendation, setShowRecommendation] = useState(true);\r\n\r\n    // Get recommended phase based on user's primary goal\r\n    const getRecommendedPhase = () => {\r\n        const userGoal = state.primaryGoal?.toLowerCase().replace(' ', '_') || 'general_fitness';\r\n        const goalMapping = GOAL_TO_PHASE[userGoal] || GOAL_TO_PHASE.general_fitness;\r\n        return {\r\n            phase: OPT_PHASES[goalMapping.primary],\r\n            reasoning: goalMapping.reasoning,\r\n            progression: goalMapping.progression.map(phaseId => OPT_PHASES[phaseId].name)\r\n        };\r\n    };\r\n\r\n    const recommendation = getRecommendedPhase();\r\n\r\n    const handlePhaseSelection = (phaseId) => {\r\n        const phase = OPT_PHASES[phaseId];\r\n        setSelectedPhase(phase);\r\n\r\n        // Save selected phase to context\r\n        actions.setMethodologyContext({\r\n            ...state.methodologyContext,\r\n            selectedOPTPhase: phase,\r\n            phaseParameters: phase.parameters,\r\n            phaseProgression: GOAL_TO_PHASE[state.primaryGoal?.toLowerCase().replace(' ', '_') || 'general_fitness'].progression\r\n        });\r\n    };\r\n\r\n    const handleContinue = () => {\r\n        if (selectedPhase) {\r\n            // Advance to next step (step 10)\r\n            actions.setCurrentStep(10);\r\n        }\r\n    };\r\n\r\n    const PhaseCard = ({ phase, isRecommended, isSelected }) => (\r\n        <div\r\n            className={`phase-card ${isSelected ? 'selected' : ''} ${isRecommended ? 'recommended' : ''}`}\r\n            onClick={() => handlePhaseSelection(phase.id)}\r\n        >\r\n            <div className=\"phase-header\">\r\n                <h3>{phase.name}</h3>\r\n                <div className=\"phase-category\">{phase.category}</div>\r\n                {isRecommended && <div className=\"recommended-badge\">Recommended</div>}\r\n            </div>\r\n\r\n            <div className=\"phase-description\">\r\n                <p>{phase.description}</p>\r\n                <div className=\"phase-details\">\r\n                    <span className=\"duration\">Duration: {phase.duration}</span>\r\n                    <span className=\"level\">Level: {phase.level}</span>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"phase-parameters\">\r\n                <h4>Training Parameters</h4>\r\n                <div className=\"parameter-grid\">\r\n                    <div className=\"parameter\">\r\n                        <strong>Sets:</strong> {phase.parameters.sets}\r\n                    </div>\r\n                    <div className=\"parameter\">\r\n                        <strong>Reps:</strong> {phase.parameters.reps}\r\n                    </div>\r\n                    <div className=\"parameter\">\r\n                        <strong>Tempo:</strong> {phase.parameters.tempo}\r\n                    </div>\r\n                    <div className=\"parameter\">\r\n                        <strong>Rest:</strong> {phase.parameters.rest}\r\n                    </div>\r\n                    <div className=\"parameter\">\r\n                        <strong>Intensity:</strong> {phase.parameters.intensity}\r\n                    </div>\r\n                    <div className=\"parameter\">\r\n                        <strong>Load:</strong> {phase.parameters.load}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"phase-focus\">\r\n                <h4>Primary Focus</h4>\r\n                <ul>\r\n                    {phase.focus.map((item, index) => (\r\n                        <li key={index}>{item}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"client-types\">\r\n                <h4>Best For</h4>\r\n                <div className=\"client-type-tags\">\r\n                    {phase.clientTypes.map((type, index) => (\r\n                        <span key={index} className=\"client-type-tag\">{type}</span>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className=\"nasm-opt-phase-step\">\r\n            <div className=\"step-header\">\r\n                <h2>🎯 NASM OPT Phase Selection</h2>\r\n                <p>Select the appropriate OPT model phase based on your goals and experience level</p>\r\n            </div>\r\n\r\n            {showRecommendation && (\r\n                <div className=\"recommendation-section\">\r\n                    <div className=\"recommendation-card\">\r\n                        <h3>📋 Recommended Phase for {state.primaryGoal || 'Your Goal'}</h3>\r\n                        <div className=\"recommended-phase\">\r\n                            <h4>{recommendation.phase.name}</h4>\r\n                            <p><strong>Why:</strong> {recommendation.reasoning}</p>\r\n                        </div>\r\n                        <div className=\"progression-path\">\r\n                            <h4>Suggested Progression</h4>\r\n                            <div className=\"progression-timeline\">\r\n                                {recommendation.progression.map((phaseName, index) => (\r\n                                    <div key={index} className=\"progression-item\">\r\n                                        <span className=\"phase-number\">{index + 1}</span>\r\n                                        <span className=\"phase-name\">{phaseName}</span>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <button\r\n                            className=\"dismiss-recommendation\"\r\n                            onClick={() => setShowRecommendation(false)}\r\n                        >\r\n                            View All Phases\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"phases-grid\">\r\n                {Object.values(OPT_PHASES).map(phase => (\r\n                    <PhaseCard\r\n                        key={phase.id}\r\n                        phase={phase}\r\n                        isRecommended={phase.id === recommendation.phase.id}\r\n                        isSelected={selectedPhase?.id === phase.id}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n            {selectedPhase && (\r\n                <div className=\"selection-summary\">\r\n                    <div className=\"selected-phase-summary\">\r\n                        <h3>Selected: {selectedPhase.name}</h3>\r\n                        <p>{selectedPhase.description}</p>\r\n                        <div className=\"key-benefits\">\r\n                            <h4>Key Benefits</h4>\r\n                            <ul>\r\n                                {selectedPhase.benefits.map((benefit, index) => (\r\n                                    <li key={index}>{benefit}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"continue-section\">\r\n                        <button\r\n                            className=\"continue-btn\"\r\n                            onClick={handleContinue}\r\n                        >\r\n                            Continue with {selectedPhase.name} →\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <style jsx>{`\r\n                .nasm-opt-phase-step {\r\n                    padding: 30px;\r\n                    background: #111827;\r\n                    color: #d1d5db;\r\n                    min-height: 100vh;\r\n                }\r\n\r\n                .step-header {\r\n                    text-align: center;\r\n                    margin-bottom: 40px;\r\n                }\r\n\r\n                .step-header h2 {\r\n                    color: #dc2626;\r\n                    font-size: 2.5em;\r\n                    margin-bottom: 10px;\r\n                    font-weight: 700;\r\n                }\r\n\r\n                .step-header p {\r\n                    font-size: 1.2em;\r\n                    color: #9ca3af;\r\n                }\r\n\r\n                .recommendation-section {\r\n                    margin-bottom: 40px;\r\n                }\r\n\r\n                .recommendation-card {\r\n                    background: #1f2937;\r\n                    border: 2px solid #dc2626;\r\n                    border-radius: 12px;\r\n                    padding: 30px;\r\n                    max-width: 800px;\r\n                    margin: 0 auto;\r\n                }\r\n\r\n                .recommendation-card h3 {\r\n                    color: #dc2626;\r\n                    margin-bottom: 20px;\r\n                    font-size: 1.5em;\r\n                }\r\n\r\n                .recommended-phase h4 {\r\n                    color: #ffffff;\r\n                    font-size: 1.3em;\r\n                    margin-bottom: 10px;\r\n                }\r\n\r\n                .progression-path {\r\n                    margin-top: 25px;\r\n                }\r\n\r\n                .progression-path h4 {\r\n                    color: #dc2626;\r\n                    margin-bottom: 15px;\r\n                }\r\n\r\n                .progression-timeline {\r\n                    display: flex;\r\n                    gap: 15px;\r\n                    flex-wrap: wrap;\r\n                }\r\n\r\n                .progression-item {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    gap: 8px;\r\n                    background: #374151;\r\n                    padding: 8px 12px;\r\n                    border-radius: 6px;\r\n                }\r\n\r\n                .phase-number {\r\n                    background: #dc2626;\r\n                    color: white;\r\n                    width: 24px;\r\n                    height: 24px;\r\n                    border-radius: 50%;\r\n                    display: flex;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    font-size: 0.9em;\r\n                    font-weight: bold;\r\n                }\r\n\r\n                .phase-name {\r\n                    font-size: 0.9em;\r\n                    color: #d1d5db;\r\n                }\r\n\r\n                .dismiss-recommendation {\r\n                    background: #374151;\r\n                    color: #d1d5db;\r\n                    border: 1px solid #4b5563;\r\n                    padding: 8px 16px;\r\n                    border-radius: 6px;\r\n                    cursor: pointer;\r\n                    margin-top: 20px;\r\n                    transition: all 0.3s ease;\r\n                }\r\n\r\n                .dismiss-recommendation:hover {\r\n                    background: #4b5563;\r\n                    border-color: #6b7280;\r\n                }\r\n\r\n                .phases-grid {\r\n                    display: grid;\r\n                    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\r\n                    gap: 25px;\r\n                    margin-bottom: 40px;\r\n                }\r\n\r\n                .phase-card {\r\n                    background: #1f2937;\r\n                    border: 2px solid #374151;\r\n                    border-radius: 12px;\r\n                    padding: 25px;\r\n                    cursor: pointer;\r\n                    transition: all 0.3s ease;\r\n                    position: relative;\r\n                }\r\n\r\n                .phase-card:hover {\r\n                    border-color: #dc2626;\r\n                    transform: translateY(-2px);\r\n                    box-shadow: 0 8px 25px rgba(220, 38, 38, 0.2);\r\n                }\r\n\r\n                .phase-card.selected {\r\n                    border-color: #dc2626;\r\n                    background: #292524;\r\n                    box-shadow: 0 0 20px rgba(220, 38, 38, 0.3);\r\n                }\r\n\r\n                .phase-card.recommended {\r\n                    border-color: #fbbf24;\r\n                }\r\n\r\n                .phase-header {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    justify-content: space-between;\r\n                    margin-bottom: 15px;\r\n                    flex-wrap: wrap;\r\n                    gap: 10px;\r\n                }\r\n\r\n                .phase-header h3 {\r\n                    color: #dc2626;\r\n                    font-size: 1.3em;\r\n                    margin: 0;\r\n                    font-weight: 600;\r\n                }\r\n\r\n                .phase-category {\r\n                    background: #dc2626;\r\n                    color: white;\r\n                    padding: 4px 12px;\r\n                    border-radius: 20px;\r\n                    font-size: 0.8em;\r\n                    font-weight: 600;\r\n                }\r\n\r\n                .recommended-badge {\r\n                    background: #fbbf24;\r\n                    color: #111827;\r\n                    padding: 4px 12px;\r\n                    border-radius: 20px;\r\n                    font-size: 0.8em;\r\n                    font-weight: 600;\r\n                }\r\n\r\n                .phase-description {\r\n                    margin-bottom: 20px;\r\n                }\r\n\r\n                .phase-description p {\r\n                    color: #d1d5db;\r\n                    line-height: 1.5;\r\n                    margin-bottom: 10px;\r\n                }\r\n\r\n                .phase-details {\r\n                    display: flex;\r\n                    gap: 15px;\r\n                    font-size: 0.9em;\r\n                    color: #9ca3af;\r\n                }\r\n\r\n                .phase-parameters {\r\n                    margin-bottom: 20px;\r\n                }\r\n\r\n                .phase-parameters h4 {\r\n                    color: #dc2626;\r\n                    font-size: 1.1em;\r\n                    margin-bottom: 10px;\r\n                }\r\n\r\n                .parameter-grid {\r\n                    display: grid;\r\n                    grid-template-columns: repeat(2, 1fr);\r\n                    gap: 8px;\r\n                }\r\n\r\n                .parameter {\r\n                    background: #374151;\r\n                    padding: 8px;\r\n                    border-radius: 6px;\r\n                    font-size: 0.9em;\r\n                }\r\n\r\n                .parameter strong {\r\n                    color: #dc2626;\r\n                }\r\n\r\n                .phase-focus {\r\n                    margin-bottom: 20px;\r\n                }\r\n\r\n                .phase-focus h4 {\r\n                    color: #dc2626;\r\n                    font-size: 1.1em;\r\n                    margin-bottom: 10px;\r\n                }\r\n\r\n                .phase-focus ul {\r\n                    list-style: none;\r\n                    padding: 0;\r\n                    margin: 0;\r\n                }\r\n\r\n                .phase-focus li {\r\n                    color: #d1d5db;\r\n                    font-size: 0.9em;\r\n                    padding: 4px 0;\r\n                    border-left: 3px solid #dc2626;\r\n                    padding-left: 12px;\r\n                    margin-bottom: 4px;\r\n                }\r\n\r\n                .client-types h4 {\r\n                    color: #dc2626;\r\n                    font-size: 1.1em;\r\n                    margin-bottom: 10px;\r\n                }\r\n\r\n                .client-type-tags {\r\n                    display: flex;\r\n                    flex-wrap: wrap;\r\n                    gap: 8px;\r\n                }\r\n\r\n                .client-type-tag {\r\n                    background: #374151;\r\n                    color: #d1d5db;\r\n                    padding: 4px 8px;\r\n                    border-radius: 4px;\r\n                    font-size: 0.8em;\r\n                    border: 1px solid #4b5563;\r\n                }\r\n\r\n                .selection-summary {\r\n                    background: #1f2937;\r\n                    border: 2px solid #dc2626;\r\n                    border-radius: 12px;\r\n                    padding: 30px;\r\n                    margin-top: 30px;\r\n                }\r\n\r\n                .selected-phase-summary h3 {\r\n                    color: #dc2626;\r\n                    font-size: 1.5em;\r\n                    margin-bottom: 10px;\r\n                }\r\n\r\n                .selected-phase-summary p {\r\n                    color: #d1d5db;\r\n                    margin-bottom: 20px;\r\n                    font-size: 1.1em;\r\n                }\r\n\r\n                .key-benefits h4 {\r\n                    color: #dc2626;\r\n                    margin-bottom: 10px;\r\n                }\r\n\r\n                .key-benefits ul {\r\n                    list-style: none;\r\n                    padding: 0;\r\n                    margin: 0;\r\n                }\r\n\r\n                .key-benefits li {\r\n                    color: #d1d5db;\r\n                    padding: 6px 0;\r\n                    border-left: 3px solid #dc2626;\r\n                    padding-left: 15px;\r\n                    margin-bottom: 6px;\r\n                }\r\n\r\n                .continue-section {\r\n                    margin-top: 30px;\r\n                    text-align: center;\r\n                }\r\n\r\n                .continue-btn {\r\n                    background: #dc2626;\r\n                    color: white;\r\n                    border: none;\r\n                    padding: 15px 30px;\r\n                    border-radius: 8px;\r\n                    font-size: 1.2em;\r\n                    font-weight: 600;\r\n                    cursor: pointer;\r\n                    transition: all 0.3s ease;\r\n                }\r\n\r\n                .continue-btn:hover {\r\n                    background: #b91c1c;\r\n                    transform: translateY(-2px);\r\n                    box-shadow: 0 8px 25px rgba(220, 38, 38, 0.3);\r\n                }\r\n\r\n                @media (max-width: 768px) {\r\n                    .phases-grid {\r\n                        grid-template-columns: 1fr;\r\n                    }\r\n                    \r\n                    .parameter-grid {\r\n                        grid-template-columns: 1fr;\r\n                    }\r\n                    \r\n                    .progression-timeline {\r\n                        flex-direction: column;\r\n                    }\r\n                }\r\n            `}</style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NASMOPTPhaseStep;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport {\r\n    CheckIcon,\r\n    ChevronDownIcon,\r\n    UserIcon,\r\n    MagnifyingGlassIcon,\r\n    CogIcon,\r\n    PlayIcon\r\n} from '@heroicons/react/24/solid';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useProgramContext } from '../../contexts/ProgramContext';\r\nimport { nasmStepConfig, nasmPhases, getNASMStep, getNextNASMStep, getPreviousNASMStep } from '../../config/nasmStepConfig';\r\nimport PageLayout, { PageSection } from '../../layout/PageLayout';\r\nimport '../../styles/GlobalNASMStyles.css';\r\n\r\n// Import NASM step components\r\nimport NASMIntakeStep from './tabs/NASMIntakeStep';\r\nimport NASMVitalsStep from './tabs/NASMVitalsStep';\r\nimport NASMStaticPostureStep from './tabs/NASMStaticPostureStep';\r\nimport NASMMovementAssessmentStep from './tabs/NASMMovementAssessmentStep';\r\nimport NASMOPTPhaseStep from './tabs/NASMOPTPhaseStep';\r\n\r\n/**\r\n * NASMProgramWorkflow - Complete 17-Step NASM OPT Program Design\r\n * \r\n * Implements the exact NASM OPT Model workflow:\r\n * Foundation (Steps 1-2): Intake & Vitals\r\n * Assessment (Steps 3-6): Posture, Movement, Compensation Mapping, Performance\r\n * Programming (Steps 7-12): Phase Selection, Exercise Prescription\r\n * Implementation (Steps 13-17): Program Structure, Progression, Monitoring\r\n */\r\n\r\nconst NASMProgramWorkflow = () => {\r\n    const { state, actions } = useProgramContext();\r\n    const navigate = useNavigate();\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    // State for tracking completed steps\r\n    const [completedSteps, setCompletedSteps] = useState(new Set());\r\n\r\n    // Animation state for smooth transitions\r\n    const [isContentVisible, setIsContentVisible] = useState(true);\r\n    const [animationKey, setAnimationKey] = useState(0);\r\n    const [mobileSidebarOpen, setMobileSidebarOpen] = useState(false);\r\n    const [isDesktop, setIsDesktop] = useState(false);\r\n\r\n    // Accordion state for phase expansion\r\n    const [openPhases, setOpenPhases] = useState(new Set());\r\n\r\n    // Get current step from URL params or state, default to step 1\r\n    const urlStep = parseInt(searchParams.get('step')) || null;\r\n    const currentStep = urlStep || state.currentStep || 1;\r\n    const currentStepConfig = getNASMStep(currentStep);\r\n\r\n    // Enhanced step navigation with URL routing\r\n    const navigateToStep = (stepId) => {\r\n        // Update URL with step parameter\r\n        setSearchParams(prev => {\r\n            const newParams = new URLSearchParams(prev);\r\n            newParams.set('step', stepId.toString());\r\n            return newParams;\r\n        });\r\n\r\n        // Update context state\r\n        actions.setCurrentStep(stepId);\r\n\r\n        // Close mobile sidebar when navigating\r\n        setMobileSidebarOpen(false);\r\n    };\r\n\r\n    // Update completed steps when current step changes\r\n    useEffect(() => {\r\n        if (currentStep > 1) {\r\n            setCompletedSteps(prev => {\r\n                const newCompleted = new Set(prev);\r\n                // Mark all previous steps as completed\r\n                for (let i = 1; i < currentStep; i++) {\r\n                    newCompleted.add(i);\r\n                }\r\n                return newCompleted;\r\n            });\r\n        }\r\n    }, [currentStep]);\r\n\r\n    // Update URL when step changes from context\r\n    useEffect(() => {\r\n        if (state.currentStep && !urlStep) {\r\n            setSearchParams(prev => {\r\n                const newParams = new URLSearchParams(prev);\r\n                newParams.set('step', state.currentStep.toString());\r\n                return newParams;\r\n            });\r\n        }\r\n    }, [state.currentStep, urlStep, setSearchParams]);\r\n\r\n    // Close mobile sidebar on screen size change\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            const isLargeScreen = window.innerWidth >= 1024;\r\n            setIsDesktop(isLargeScreen);\r\n            if (isLargeScreen) {\r\n                setMobileSidebarOpen(false);\r\n            }\r\n        };\r\n\r\n        // Set initial state\r\n        handleResize();\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    // Initialize current phase as open\r\n    useEffect(() => {\r\n        const currentPhase = getCurrentPhase();\r\n        setOpenPhases(prev => new Set([...prev, currentPhase]));\r\n    }, [currentStep]);\r\n\r\n    // Handle step transitions with smooth animations\r\n    useEffect(() => {\r\n        // Trigger fade-out, then fade-in for smooth transition\r\n        setIsContentVisible(false);\r\n        const timer = setTimeout(() => {\r\n            setIsContentVisible(true);\r\n            setAnimationKey(prev => prev + 1); // Force re-render for framer-motion\r\n        }, 150); // Half the transition duration for smooth overlap\r\n\r\n        return () => clearTimeout(timer);\r\n    }, [currentStep]);\r\n\r\n    // Define all 17 steps with proper titles from nasmStepConfig\r\n    const steps = (nasmStepConfig || []).map(step => ({\r\n        id: step.id,\r\n        title: step.name,\r\n        phase: step.phase\r\n    }));\r\n\r\n    // Helper function to get current phase\r\n    const getCurrentPhase = () => {\r\n        if (steps.length === 0) return 'foundation';\r\n        const currentStepData = steps.find(step => step.id === currentStep);\r\n        const phase = currentStepData?.phase || 'Foundation';\r\n        // Convert to lowercase to match our accordion state keys\r\n        return phase.toLowerCase();\r\n    };\r\n\r\n    // Group steps by phase\r\n    const stepsByPhase = {\r\n        foundation: steps.filter(step => step.phase === 'Foundation'),\r\n        assessment: steps.filter(step => step.phase === 'Assessment'),\r\n        programming: steps.filter(step => step.phase === 'Programming'),\r\n        implementation: steps.filter(step => step.phase === 'Implementation')\r\n    };\r\n\r\n    // Toggle phase accordion\r\n    const togglePhase = (phase) => {\r\n        setOpenPhases(prev => {\r\n            const newOpenPhases = new Set(prev);\r\n            if (newOpenPhases.has(phase)) {\r\n                newOpenPhases.delete(phase);\r\n            } else {\r\n                newOpenPhases.add(phase);\r\n            }\r\n            return newOpenPhases;\r\n        });\r\n    };\r\n\r\n    const getPhaseSteps = (phase) => steps.filter(step => step.phase === phase);\r\n\r\n    const renderStepComponent = (stepId) => {\r\n        switch (stepId) {\r\n            case 1:\r\n                return <NASMIntakeStep />;\r\n            case 2:\r\n                return <NASMVitalsStep />;\r\n            case 3:\r\n                return <NASMStaticPostureStep />;\r\n            case 4:\r\n                return <NASMMovementAssessmentStep />;\r\n            case 5:\r\n                return <div className=\"coming-soon p-6 bg-gray-800 rounded-lg\">\r\n                    <h3 className=\"text-white text-xl font-bold mb-4 tracking-wide\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Step 5: Compensation Mapping</h3>\r\n                    <p className=\"text-sm text-gray-300 mb-4\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Coming soon - Muscle imbalance analysis and corrective strategy</p>\r\n                    <button\r\n                        onClick={() => navigateToStep(6)}\r\n                        className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded transition-colors\"\r\n                        style={{ fontFamily: \"'Roboto', sans-serif\" }}\r\n                    >\r\n                        Skip to Performance Tests →\r\n                    </button>\r\n                </div>;\r\n            case 6:\r\n                return <div className=\"p-6 bg-gray-800 rounded-lg border border-gray-700\">\r\n                    <h3 className=\"text-white text-xl font-bold mb-4 tracking-wide\">Step 6: Performance & Capacity Tests</h3>\r\n                    <p className=\"text-sm text-gray-300 mb-4\">Coming soon - Push-up test, Davies test, Shark skill, 1RM estimation</p>\r\n                    <button\r\n                        onClick={() => navigateToStep(7)}\r\n                        className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded transition-colors\"\r\n                    >\r\n                        Skip to OPT Phase Selection →\r\n                    </button>\r\n                </div>;\r\n            case 7:\r\n                return <div className=\"p-6 bg-gray-800 rounded-lg border border-gray-700\">\r\n                    <h3 className=\"text-white text-xl font-bold mb-4 tracking-wide\">Step 7: Choose Starting OPT Phase</h3>\r\n                    <p className=\"text-sm text-gray-300 mb-4\">Coming soon - Phase 1-5 selection based on assessment findings</p>\r\n                    <button\r\n                        onClick={() => navigateToStep(8)}\r\n                        className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded transition-colors\"\r\n                    >\r\n                        Skip to Corrective Warm-up →\r\n                    </button>\r\n                </div>;\r\n            case 8:\r\n                return <div className=\"p-6 bg-gray-800 rounded-lg border border-gray-700\">\r\n                    <h3 className=\"text-white text-xl font-bold mb-4 tracking-wide\">Step 8: Corrective Warm-up Block</h3>\r\n                    <p className=\"text-sm text-gray-300 mb-4\">Coming soon - SMR and stretching prescription by phase</p>\r\n                    <button\r\n                        onClick={() => navigateToStep(9)}\r\n                        className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded transition-colors\"\r\n                    >\r\n                        Skip to Core/Balance/Plyo →\r\n                    </button>\r\n                </div>;\r\n            case 9:\r\n                return <NASMOPTPhaseStep />;\r\n            case 10:\r\n                return <div className=\"p-6 bg-gray-800 rounded-lg border border-gray-700\">\r\n                    <h3 className=\"text-white text-xl font-bold mb-4\">Step 10: SAQ (Speed, Agility, Quickness)</h3>\r\n                    <p className=\"text-gray-300 mb-4\">Coming soon - Sport-specific drill programming</p>\r\n                    <button\r\n                        onClick={() => navigateToStep(11)}\r\n                        className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded transition-colors\"\r\n                    >\r\n                        Skip to Resistance Training →\r\n                    </button>\r\n                </div>;\r\n            case 11:\r\n                return <div className=\"p-6 bg-gray-800 rounded-lg border border-gray-700\">\r\n                    <h3 className=\"text-white text-xl font-bold mb-4\">Step 11: Resistance Training Block</h3>\r\n                    <p className=\"text-gray-300 mb-4\">Coming soon - Exercise selection, sets, reps, tempo, rest periods</p>\r\n                    <button\r\n                        onClick={() => navigateToStep(12)}\r\n                        className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded transition-colors\"\r\n                    >\r\n                        Skip to Cardio Plan →\r\n                    </button>\r\n                </div>;\r\n            case 12:\r\n                return <div className=\"p-6 bg-gray-800 rounded-lg border border-gray-700\">\r\n                    <h3 className=\"text-white text-xl font-bold mb-4\">Step 12: Cardiorespiratory Plan (FITTE)</h3>\r\n                    <p className=\"text-gray-300 mb-4\">Coming soon - Heart rate zones and cardio prescription</p>\r\n                    <button\r\n                        onClick={() => navigateToStep(13)}\r\n                        className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded transition-colors\"\r\n                    >\r\n                        Skip to Session Template →\r\n                    </button>\r\n                </div>;\r\n            case 13:\r\n                return <div className=\"p-6 bg-gray-800 rounded-lg border border-gray-700\">\r\n                    <h3 className=\"text-white text-xl font-bold mb-4\">Step 13: Session Template & Weekly Split</h3>\r\n                    <p className=\"text-gray-300 mb-4\">Coming soon - Microcycle design and session structure</p>\r\n                    <button\r\n                        onClick={() => navigateToStep(14)}\r\n                        className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded transition-colors\"\r\n                    >\r\n                        Skip to Mesocycle →\r\n                    </button>\r\n                </div>;\r\n            case 14:\r\n                return <div className=\"p-6 bg-gray-800 rounded-lg border border-gray-700\">\r\n                    <h3 className=\"text-white text-xl font-bold mb-4\">Step 14: Monthly Progression Rules (Mesocycle)</h3>\r\n                    <p className=\"text-gray-300 mb-4\">Coming soon - 4-week progression and deload planning</p>\r\n                    <button\r\n                        onClick={() => navigateToStep(15)}\r\n                        className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded transition-colors\"\r\n                    >\r\n                        Skip to Macrocycle →\r\n                    </button>\r\n                </div>;\r\n            case 15:\r\n                return <div className=\"p-6 bg-gray-800 rounded-lg border border-gray-700\">\r\n                    <h3 className=\"text-white text-xl font-bold mb-4\">Step 15: Annual Plan (Macrocycle)</h3>\r\n                    <p className=\"text-gray-300 mb-4\">Coming soon - Yearly periodization and phase transitions</p>\r\n                    <button\r\n                        onClick={() => navigateToStep(16)}\r\n                        className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded transition-colors\"\r\n                    >\r\n                        Skip to Special Populations →\r\n                    </button>\r\n                </div>;\r\n            case 16:\r\n                return <div className=\"p-6 bg-gray-800 rounded-lg border border-gray-700\">\r\n                    <h3 className=\"text-white text-xl font-bold mb-4\">Step 16: Special Population/Constraint Modifications</h3>\r\n                    <p className=\"text-gray-300 mb-4\">Coming soon - Population-specific adaptations and equipment constraints</p>\r\n                    <button\r\n                        onClick={() => navigateToStep(17)}\r\n                        className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded transition-colors\"\r\n                    >\r\n                        Skip to Monitoring →\r\n                    </button>\r\n                </div>;\r\n            case 17:\r\n                return <div className=\"p-6 bg-gray-800 rounded-lg border border-gray-700\">\r\n                    <h3 className=\"text-white text-xl font-bold mb-4\">Step 17: Monitoring & Reassessment</h3>\r\n                    <p className=\"text-gray-300 mb-4\">Coming soon - KPI tracking and reassessment protocols</p>\r\n                    <div className=\"mt-6 p-4 bg-green-800 rounded-lg border border-green-600\">\r\n                        <h4 className=\"text-green-100 text-lg font-semibold mb-2\">🎉 NASM OPT Program Design Complete!</h4>\r\n                        <p className=\"text-green-200\">You have completed the comprehensive 17-step NASM program design process.</p>\r\n                    </div>\r\n                </div>;\r\n            default:\r\n                return <div>Step not found</div>;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <PageLayout\r\n            title=\"NASM Program Workflow\"\r\n            subtitle=\"Assessment, corrective strategy, and phased programming\"\r\n            breadcrumbs={[\r\n                { label: 'Dashboard', to: '/dashboard' },\r\n                { label: 'Programs', to: '/programs' },\r\n                { label: 'NASM Workflow' }\r\n            ]}\r\n            glass\r\n            actions={[\r\n                <span key=\"progress\" className=\"inline-block px-3 py-1 bg-red-600 text-white rounded-full text-sm font-medium\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                    Step {currentStep || 1} of 17\r\n                </span>\r\n            ]}\r\n        >\r\n            <div className=\"workflow-container text-white\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                {/* Main Content - Grid Layout with Sidebar */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-[18rem_1fr] gap-6 pb-20 lg:pb-6\">{/* Mobile Progress Indicator */}\r\n                    <div className=\"w-full bg-gray-700 rounded-full h-2 md:hidden mb-4\">\r\n                        <div\r\n                            className=\"bg-red-600 h-2 rounded-full transition-all duration-300\"\r\n                            style={{ width: `${((currentStep || 1) / 17) * 100}%` }}\r\n                        />\r\n                    </div>\r\n                    {/* Vertical Sidebar Navigation */}\r\n                    <PageSection title=\"Phase Navigation\">\r\n                        <motion.div\r\n                            className=\"order-first\"\r\n                            initial={{ opacity: 0, x: -50 }}\r\n                            animate={{ opacity: 1, x: 0 }}\r\n                            transition={{ duration: 0.6, ease: \"easeOut\" }}\r\n                        >\r\n                            {/* Mobile Toggle Button */}\r\n                            <div className=\"md:hidden mb-4\">\r\n                                <button\r\n                                    onClick={() => setMobileSidebarOpen(!mobileSidebarOpen)}\r\n                                    className=\"w-full p-3 bg-gray-700 rounded-lg border border-gray-600 text-white font-medium flex items-center justify-between hover:bg-gray-600 transition-colors\"\r\n                                >\r\n                                    <span className=\"text-sm text-white tracking-wide\">☰ Step Navigation</span>\r\n                                    <motion.div\r\n                                        animate={{ rotate: mobileSidebarOpen ? 180 : 0 }}\r\n                                        transition={{ duration: 0.2 }}\r\n                                        className=\"text-red-400\"\r\n                                    >\r\n                                        ▼\r\n                                    </motion.div>\r\n                                </button>\r\n                            </div>\r\n\r\n                            {/* Vertical Phase Progress Pills */}\r\n                            <div className={`${mobileSidebarOpen ? 'block' : 'hidden'} md:block flex flex-col space-y-2 mb-6`}>\r\n                                {/* Foundation Phase */}\r\n                                <motion.button\r\n                                    onClick={() => togglePhase('foundation')}\r\n                                    className={`px-4 py-3 rounded-md transition-all duration-200 text-left ${currentStep <= 2\r\n                                        ? 'bg-red-600 text-white'\r\n                                        : currentStep > 2\r\n                                            ? 'bg-green-800 text-green-100 hover:bg-green-700'\r\n                                            : 'bg-gray-700 text-white hover:bg-red-600'\r\n                                        }`}\r\n                                    whileHover={{ scale: 1.02 }}\r\n                                    whileTap={{ scale: 0.98 }}\r\n                                >\r\n                                    <div className=\"flex items-center justify-between\">\r\n                                        <div className=\"flex items-center space-x-3\">\r\n                                            <UserIcon className=\"w-5 h-5 text-white\" />\r\n                                            <div>\r\n                                                <div className=\"text-xl font-medium text-white tracking-wide\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Foundation</div>\r\n                                                <small className=\"text-sm text-gray-300\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Steps 1-2</small>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"flex items-center space-x-2\">\r\n                                            {currentStep > 2 && (\r\n                                                <CheckIcon className=\"w-4 h-4 text-white\" />\r\n                                            )}\r\n                                            <motion.div\r\n                                                animate={{ rotate: openPhases.has('foundation') ? 180 : 0 }}\r\n                                                transition={{ duration: 0.2 }}\r\n                                            >\r\n                                                <ChevronDownIcon className=\"w-4 h-4 text-white\" />\r\n                                            </motion.div>\r\n                                        </div>\r\n                                    </div>\r\n                                </motion.button>\r\n\r\n                                {/* Assessment Phase */}\r\n                                <motion.button\r\n                                    onClick={() => togglePhase('assessment')}\r\n                                    className={`px-4 py-3 rounded-md transition-all duration-200 text-left ${currentStep >= 3 && currentStep <= 6\r\n                                        ? 'bg-red-600 text-white'\r\n                                        : currentStep > 6\r\n                                            ? 'bg-green-800 text-green-100 hover:bg-green-700'\r\n                                            : 'bg-gray-700 text-white hover:bg-red-600'\r\n                                        }`}\r\n                                    whileHover={{ scale: 1.02 }}\r\n                                    whileTap={{ scale: 0.98 }}\r\n                                >\r\n                                    <div className=\"flex items-center justify-between\">\r\n                                        <div className=\"flex items-center space-x-3\">\r\n                                            <MagnifyingGlassIcon className=\"w-5 h-5 text-white\" />\r\n                                            <div>\r\n                                                <div className=\"text-xl font-medium text-white tracking-wide\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Assessment</div>\r\n                                                <small className=\"text-sm text-gray-300\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Steps 3-6</small>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"flex items-center space-x-2\">\r\n                                            {currentStep > 6 && (\r\n                                                <CheckIcon className=\"w-4 h-4 text-white\" />\r\n                                            )}\r\n                                            <motion.div\r\n                                                animate={{ rotate: openPhases.has('assessment') ? 180 : 0 }}\r\n                                                transition={{ duration: 0.2 }}\r\n                                            >\r\n                                                <ChevronDownIcon className=\"w-4 h-4 text-white\" />\r\n                                            </motion.div>\r\n                                        </div>\r\n                                    </div>\r\n                                </motion.button>\r\n\r\n                                {/* Programming Phase */}\r\n                                <motion.button\r\n                                    onClick={() => togglePhase('programming')}\r\n                                    className={`px-4 py-3 rounded-md transition-all duration-200 text-left ${currentStep >= 7 && currentStep <= 12\r\n                                        ? 'bg-red-600 text-white'\r\n                                        : currentStep > 12\r\n                                            ? 'bg-green-800 text-green-100 hover:bg-green-700'\r\n                                            : 'bg-gray-700 text-white hover:bg-red-600'\r\n                                        }`}\r\n                                    whileHover={{ scale: 1.02 }}\r\n                                    whileTap={{ scale: 0.98 }}\r\n                                >\r\n                                    <div className=\"flex items-center justify-between\">\r\n                                        <div className=\"flex items-center space-x-3\">\r\n                                            <CogIcon className=\"w-5 h-5 text-white\" />\r\n                                            <div>\r\n                                                <div className=\"text-xl font-medium text-white tracking-wide\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Programming</div>\r\n                                                <small className=\"text-sm text-gray-300\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Steps 7-12</small>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"flex items-center space-x-2\">\r\n                                            {currentStep > 12 && (\r\n                                                <CheckIcon className=\"w-4 h-4 text-white\" />\r\n                                            )}\r\n                                            <motion.div\r\n                                                animate={{ rotate: openPhases.has('programming') ? 180 : 0 }}\r\n                                                transition={{ duration: 0.2 }}\r\n                                            >\r\n                                                <ChevronDownIcon className=\"w-4 h-4 text-white\" />\r\n                                            </motion.div>\r\n                                        </div>\r\n                                    </div>\r\n                                </motion.button>\r\n\r\n                                {/* Implementation Phase */}\r\n                                <motion.button\r\n                                    onClick={() => togglePhase('implementation')}\r\n                                    className={`px-4 py-3 rounded-md transition-all duration-200 text-left ${currentStep >= 13\r\n                                        ? 'bg-red-600 text-white'\r\n                                        : 'bg-gray-700 text-white hover:bg-red-600'\r\n                                        }`}\r\n                                    whileHover={{ scale: 1.02 }}\r\n                                    whileTap={{ scale: 0.98 }}\r\n                                >\r\n                                    <div className=\"flex items-center justify-between\">\r\n                                        <div className=\"flex items-center space-x-3\">\r\n                                            <PlayIcon className=\"w-5 h-5 text-white\" />\r\n                                            <div>\r\n                                                <div className=\"text-xl font-medium text-white tracking-wide\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Implementation</div>\r\n                                                <small className=\"text-sm text-gray-300\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Steps 13-17</small>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"flex items-center space-x-2\">\r\n                                            {currentStep === 17 && (\r\n                                                <CheckIcon className=\"w-4 h-4 text-white\" />\r\n                                            )}\r\n                                            <motion.div\r\n                                                animate={{ rotate: openPhases.has('implementation') ? 180 : 0 }}\r\n                                                transition={{ duration: 0.2 }}\r\n                                            >\r\n                                                <ChevronDownIcon className=\"w-4 h-4 text-white\" />\r\n                                            </motion.div>\r\n                                        </div>\r\n                                    </div>\r\n                                </motion.button>\r\n                            </div>\r\n\r\n                            {/* Accordion-style All Steps Navigation */}\r\n                            <div className={`${mobileSidebarOpen ? 'block' : 'hidden'} md:block flex flex-col space-y-2`}>\r\n                                <h3 className=\"text-lg font-semibold text-white mb-3\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>All Steps</h3>\r\n\r\n                                {/* Foundation Phase Accordion */}\r\n                                <div className=\"space-y-1\">\r\n                                    <motion.button\r\n                                        onClick={() => togglePhase('foundation')}\r\n                                        className=\"w-full flex items-center justify-between px-3 py-2 bg-gray-700 hover:bg-gray-600 rounded-md transition-all duration-200\"\r\n                                        whileHover={{ scale: 1.01 }}\r\n                                        whileTap={{ scale: 0.99 }}\r\n                                    >\r\n                                        <span className=\"text-white font-medium text-sm\">Foundation (Steps 1-2)</span>\r\n                                        <motion.div\r\n                                            animate={{ rotate: openPhases.has('foundation') ? 180 : 0 }}\r\n                                            transition={{ duration: 0.2 }}\r\n                                        >\r\n                                            <ChevronDownIcon className=\"w-4 h-4 text-gray-300\" />\r\n                                        </motion.div>\r\n                                    </motion.button>\r\n                                    <AnimatePresence>\r\n                                        {openPhases.has('foundation') && (\r\n                                            <motion.div\r\n                                                initial={{ opacity: 0, height: 0 }}\r\n                                                animate={{ opacity: 1, height: 'auto' }}\r\n                                                exit={{ opacity: 0, height: 0 }}\r\n                                                transition={{ duration: 0.2 }}\r\n                                                className=\"ml-4 space-y-1\"\r\n                                            >\r\n                                                {stepsByPhase.foundation.map((step, index) => {\r\n                                                    const isActive = step.id === currentStep;\r\n                                                    const isCompleted = step.id < currentStep;\r\n                                                    return (\r\n                                                        <motion.button\r\n                                                            key={step.id}\r\n                                                            onClick={() => navigateToStep(step.id)}\r\n                                                            className={`w-full px-3 py-2 rounded-md transition-all duration-200 text-left ${isActive\r\n                                                                ? 'bg-red-600 text-white'\r\n                                                                : isCompleted\r\n                                                                    ? 'bg-green-800 text-green-100 hover:bg-green-700'\r\n                                                                    : 'bg-gray-600 text-white hover:bg-red-600'\r\n                                                                }`}\r\n                                                            whileHover={{ scale: 1.01 }}\r\n                                                            whileTap={{ scale: 0.99 }}\r\n                                                            initial={{ opacity: 0, x: -10 }}\r\n                                                            animate={{ opacity: 1, x: 0 }}\r\n                                                            transition={{ duration: 0.2, delay: index * 0.05 }}\r\n                                                        >\r\n                                                            <div className=\"flex items-center justify-between\">\r\n                                                                <div>\r\n                                                                    <div className=\"text-sm font-medium text-white tracking-wide\">Step {step.id}</div>\r\n                                                                    <div className={`text-xs mt-1 ${isActive ? 'text-white' : isCompleted ? 'text-green-200' : 'text-gray-300'}`}>\r\n                                                                        {step.title}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"flex items-center space-x-1\">\r\n                                                                    {isCompleted && <span className=\"text-green-400 text-sm\">✓</span>}\r\n                                                                    {isActive && <span className=\"text-white text-sm\">→</span>}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </motion.button>\r\n                                                    );\r\n                                                })}\r\n                                            </motion.div>\r\n                                        )}\r\n                                    </AnimatePresence>\r\n                                </div>\r\n\r\n                                {/* Assessment Phase Accordion */}\r\n                                <div className=\"space-y-1\">\r\n                                    <motion.button\r\n                                        onClick={() => togglePhase('assessment')}\r\n                                        className=\"w-full flex items-center justify-between px-3 py-2 bg-gray-700 hover:bg-gray-600 rounded-md transition-all duration-200\"\r\n                                        whileHover={{ scale: 1.01 }}\r\n                                        whileTap={{ scale: 0.99 }}\r\n                                    >\r\n                                        <span className=\"text-white font-medium text-sm\">Assessment (Steps 3-6)</span>\r\n                                        <motion.div\r\n                                            animate={{ rotate: openPhases.has('assessment') ? 180 : 0 }}\r\n                                            transition={{ duration: 0.2 }}\r\n                                        >\r\n                                            <ChevronDownIcon className=\"w-4 h-4 text-gray-300\" />\r\n                                        </motion.div>\r\n                                    </motion.button>\r\n                                    <AnimatePresence>\r\n                                        {openPhases.has('assessment') && (\r\n                                            <motion.div\r\n                                                initial={{ opacity: 0, height: 0 }}\r\n                                                animate={{ opacity: 1, height: 'auto' }}\r\n                                                exit={{ opacity: 0, height: 0 }}\r\n                                                transition={{ duration: 0.2 }}\r\n                                                className=\"ml-4 space-y-1\"\r\n                                            >\r\n                                                {stepsByPhase.assessment.map((step, index) => {\r\n                                                    const isActive = step.id === currentStep;\r\n                                                    const isCompleted = step.id < currentStep;\r\n                                                    return (\r\n                                                        <motion.button\r\n                                                            key={step.id}\r\n                                                            onClick={() => navigateToStep(step.id)}\r\n                                                            className={`w-full px-3 py-2 rounded-md transition-all duration-200 text-left text-sm ${isActive\r\n                                                                ? 'bg-red-600 text-white'\r\n                                                                : isCompleted\r\n                                                                    ? 'bg-green-800 text-green-100 hover:bg-green-700'\r\n                                                                    : 'bg-gray-600 text-white hover:bg-red-600'\r\n                                                                }`}\r\n                                                            whileHover={{ scale: 1.01 }}\r\n                                                            whileTap={{ scale: 0.99 }}\r\n                                                            initial={{ opacity: 0, x: -10 }}\r\n                                                            animate={{ opacity: 1, x: 0 }}\r\n                                                            transition={{ duration: 0.2, delay: index * 0.05 }}\r\n                                                        >\r\n                                                            <div className=\"flex items-center justify-between\">\r\n                                                                <div>\r\n                                                                    <div className=\"font-medium text-white\">Step {step.id}</div>\r\n                                                                    <div className={`text-xs mt-1 ${isActive ? 'text-white' : isCompleted ? 'text-green-200' : 'text-gray-300'}`}>\r\n                                                                        {step.title}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"flex items-center space-x-1\">\r\n                                                                    {isCompleted && <span className=\"text-green-400 text-sm\">✓</span>}\r\n                                                                    {isActive && <span className=\"text-white text-sm\">→</span>}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </motion.button>\r\n                                                    );\r\n                                                })}\r\n                                            </motion.div>\r\n                                        )}\r\n                                    </AnimatePresence>\r\n                                </div>\r\n\r\n                                {/* Programming Phase Accordion */}\r\n                                <div className=\"space-y-1\">\r\n                                    <motion.button\r\n                                        onClick={() => togglePhase('programming')}\r\n                                        className=\"w-full flex items-center justify-between px-3 py-2 bg-gray-700 hover:bg-gray-600 rounded-md transition-all duration-200\"\r\n                                        whileHover={{ scale: 1.01 }}\r\n                                        whileTap={{ scale: 0.99 }}\r\n                                    >\r\n                                        <span className=\"text-white font-medium text-sm\">Programming (Steps 7-12)</span>\r\n                                        <motion.div\r\n                                            animate={{ rotate: openPhases.has('programming') ? 180 : 0 }}\r\n                                            transition={{ duration: 0.2 }}\r\n                                        >\r\n                                            <ChevronDownIcon className=\"w-4 h-4 text-gray-300\" />\r\n                                        </motion.div>\r\n                                    </motion.button>\r\n                                    <AnimatePresence>\r\n                                        {openPhases.has('programming') && (\r\n                                            <motion.div\r\n                                                initial={{ opacity: 0, height: 0 }}\r\n                                                animate={{ opacity: 1, height: 'auto' }}\r\n                                                exit={{ opacity: 0, height: 0 }}\r\n                                                transition={{ duration: 0.2 }}\r\n                                                className=\"ml-4 space-y-1\"\r\n                                            >\r\n                                                {stepsByPhase.programming.map((step, index) => {\r\n                                                    const isActive = step.id === currentStep;\r\n                                                    const isCompleted = step.id < currentStep;\r\n                                                    return (\r\n                                                        <motion.button\r\n                                                            key={step.id}\r\n                                                            onClick={() => navigateToStep(step.id)}\r\n                                                            className={`w-full px-3 py-2 rounded-md transition-all duration-200 text-left text-sm ${isActive\r\n                                                                ? 'bg-red-600 text-white'\r\n                                                                : isCompleted\r\n                                                                    ? 'bg-green-800 text-green-100 hover:bg-green-700'\r\n                                                                    : 'bg-gray-600 text-white hover:bg-red-600'\r\n                                                                }`}\r\n                                                            whileHover={{ scale: 1.01 }}\r\n                                                            whileTap={{ scale: 0.99 }}\r\n                                                            initial={{ opacity: 0, x: -10 }}\r\n                                                            animate={{ opacity: 1, x: 0 }}\r\n                                                            transition={{ duration: 0.2, delay: index * 0.05 }}\r\n                                                        >\r\n                                                            <div className=\"flex items-center justify-between\">\r\n                                                                <div>\r\n                                                                    <div className=\"font-medium text-white\">Step {step.id}</div>\r\n                                                                    <div className={`text-xs mt-1 ${isActive ? 'text-white' : isCompleted ? 'text-green-200' : 'text-gray-300'}`}>\r\n                                                                        {step.title}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"flex items-center space-x-1\">\r\n                                                                    {isCompleted && <span className=\"text-green-400 text-sm\">✓</span>}\r\n                                                                    {isActive && <span className=\"text-white text-sm\">→</span>}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </motion.button>\r\n                                                    );\r\n                                                })}\r\n                                            </motion.div>\r\n                                        )}\r\n                                    </AnimatePresence>\r\n                                </div>\r\n\r\n                                {/* Implementation Phase Accordion */}\r\n                                <div className=\"space-y-1\">\r\n                                    <motion.button\r\n                                        onClick={() => togglePhase('implementation')}\r\n                                        className=\"w-full flex items-center justify-between px-3 py-2 bg-gray-700 hover:bg-gray-600 rounded-md transition-all duration-200\"\r\n                                        whileHover={{ scale: 1.01 }}\r\n                                        whileTap={{ scale: 0.99 }}\r\n                                    >\r\n                                        <span className=\"text-white font-medium text-sm\">Implementation (Steps 13-17)</span>\r\n                                        <motion.div\r\n                                            animate={{ rotate: openPhases.has('implementation') ? 180 : 0 }}\r\n                                            transition={{ duration: 0.2 }}\r\n                                        >\r\n                                            <ChevronDownIcon className=\"w-4 h-4 text-gray-300\" />\r\n                                        </motion.div>\r\n                                    </motion.button>\r\n                                    <AnimatePresence>\r\n                                        {openPhases.has('implementation') && (\r\n                                            <motion.div\r\n                                                initial={{ opacity: 0, height: 0 }}\r\n                                                animate={{ opacity: 1, height: 'auto' }}\r\n                                                exit={{ opacity: 0, height: 0 }}\r\n                                                transition={{ duration: 0.2 }}\r\n                                                className=\"ml-4 space-y-1\"\r\n                                            >\r\n                                                {stepsByPhase.implementation.map((step, index) => {\r\n                                                    const isActive = step.id === currentStep;\r\n                                                    const isCompleted = step.id < currentStep;\r\n                                                    return (\r\n                                                        <motion.button\r\n                                                            key={step.id}\r\n                                                            onClick={() => navigateToStep(step.id)}\r\n                                                            className={`w-full px-3 py-2 rounded-md transition-all duration-200 text-left text-sm ${isActive\r\n                                                                ? 'bg-red-600 text-white'\r\n                                                                : isCompleted\r\n                                                                    ? 'bg-green-800 text-green-100 hover:bg-green-700'\r\n                                                                    : 'bg-gray-600 text-white hover:bg-red-600'\r\n                                                                }`}\r\n                                                            whileHover={{ scale: 1.01 }}\r\n                                                            whileTap={{ scale: 0.99 }}\r\n                                                            initial={{ opacity: 0, x: -10 }}\r\n                                                            animate={{ opacity: 1, x: 0 }}\r\n                                                            transition={{ duration: 0.2, delay: index * 0.05 }}\r\n                                                        >\r\n                                                            <div className=\"flex items-center justify-between\">\r\n                                                                <div>\r\n                                                                    <div className=\"font-medium text-white\">Step {step.id}</div>\r\n                                                                    <div className={`text-xs mt-1 ${isActive ? 'text-white' : isCompleted ? 'text-green-200' : 'text-gray-300'}`}>\r\n                                                                        {step.title}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"flex items-center space-x-1\">\r\n                                                                    {isCompleted && <span className=\"text-green-400 text-sm\">✓</span>}\r\n                                                                    {isActive && <span className=\"text-white text-sm\">→</span>}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </motion.button>\r\n                                                    );\r\n                                                })}\r\n                                            </motion.div>\r\n                                        )}\r\n                                    </AnimatePresence>\r\n                                </div>\r\n                            </div>\r\n                        </motion.div>\r\n                    </PageSection>\r\n\r\n                    {/* Main Content Area */}\r\n                    <PageSection title={currentStepConfig ? `Step ${currentStepConfig.id}: ${currentStepConfig.name}` : \"Current Step\"}>\r\n                        <div className=\"space-y-4 lg:space-y-6\">\r\n                            {/* Current Step Info - Responsive padding and text sizes */}\r\n                            <AnimatePresence mode=\"wait\">\r\n                                <motion.div\r\n                                    key={`step-info-${currentStep}`}\r\n                                    initial={{ opacity: 0, y: 20 }}\r\n                                    animate={{ opacity: 1, y: 0 }}\r\n                                    exit={{ opacity: 0, y: -20 }}\r\n                                    transition={{ duration: 0.3, ease: \"easeInOut\" }}\r\n                                >\r\n                                    {currentStepConfig && (\r\n                                        <div className=\"bg-gray-800 rounded-lg p-4 lg:p-6 border border-gray-700\">\r\n                                            <div className=\"flex flex-col sm:flex-row sm:items-start space-y-4 sm:space-y-0 sm:space-x-4 mb-4\">\r\n                                                <div\r\n                                                    className=\"w-10 h-10 lg:w-12 lg:h-12 rounded-lg flex items-center justify-center text-white text-lg lg:text-xl flex-shrink-0\"\r\n                                                    style={{ backgroundColor: nasmPhases[currentStepConfig.phase]?.color || '#dc2626' }}\r\n                                                >\r\n                                                    {currentStepConfig.icon}\r\n                                                </div>\r\n                                                <div className=\"flex-1\">\r\n                                                    <h2 className=\"text-lg lg:text-xl font-bold text-white mb-2\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>\r\n                                                        Step {currentStepConfig.id}: {currentStepConfig.name}\r\n                                                    </h2>\r\n                                                    <p className=\"text-sm lg:text-base leading-6 text-gray-300\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>{currentStepConfig.description}</p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            {/* Requirements & Outputs - Responsive grid */}\r\n                                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\r\n                                                <motion.div\r\n                                                    className=\"bg-gray-900 rounded-lg p-3 lg:p-4\"\r\n                                                    initial={{ opacity: 0, x: -20 }}\r\n                                                    animate={{ opacity: 1, x: 0 }}\r\n                                                    transition={{ duration: 0.4, delay: 0.1 }}\r\n                                                >\r\n                                                    <h4 className=\"font-semibold text-red-400 mb-2 text-sm lg:text-base\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Requires:</h4>\r\n                                                    <ul className=\"space-y-1\">\r\n                                                        {(currentStepConfig.requires || []).map((req, index) => (\r\n                                                            <motion.li\r\n                                                                key={index}\r\n                                                                className=\"text-sm lg:text-base leading-6 text-gray-300\"\r\n                                                                style={{ fontFamily: \"'Roboto', sans-serif\" }}\r\n                                                                initial={{ opacity: 0 }}\r\n                                                                animate={{ opacity: 1 }}\r\n                                                                transition={{ duration: 0.3, delay: 0.2 + (index * 0.1) }}\r\n                                                            >\r\n                                                                • {req}\r\n                                                            </motion.li>\r\n                                                        ))}\r\n                                                    </ul>\r\n                                                </motion.div>\r\n                                                <motion.div\r\n                                                    className=\"bg-gray-900 rounded-lg p-3 lg:p-4\"\r\n                                                    initial={{ opacity: 0, x: 20 }}\r\n                                                    animate={{ opacity: 1, x: 0 }}\r\n                                                    transition={{ duration: 0.4, delay: 0.1 }}\r\n                                                >\r\n                                                    <h4 className=\"font-semibold text-green-400 mb-2 text-sm lg:text-base\" style={{ fontFamily: \"'Roboto', sans-serif\" }}>Outputs:</h4>\r\n                                                    <ul className=\"space-y-1\">\r\n                                                        {(currentStepConfig.outputs || []).map((output, index) => (\r\n                                                            <motion.li\r\n                                                                key={index}\r\n                                                                className=\"text-sm lg:text-base leading-6 text-gray-300\"\r\n                                                                style={{ fontFamily: \"'Roboto', sans-serif\" }}\r\n                                                                initial={{ opacity: 0 }}\r\n                                                                animate={{ opacity: 1 }}\r\n                                                                transition={{ duration: 0.3, delay: 0.2 + (index * 0.1) }}\r\n                                                            >\r\n                                                                • {output}\r\n                                                            </motion.li>\r\n                                                        ))}\r\n                                                    </ul>\r\n                                                </motion.div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </motion.div>\r\n                            </AnimatePresence>\r\n\r\n                            {/* Step Content - Responsive padding */}\r\n                            <AnimatePresence mode=\"wait\">\r\n                                <motion.div\r\n                                    key={`step-content-${currentStep}-${animationKey}`}\r\n                                    initial={{ opacity: 0, scale: 0.95, y: 30 }}\r\n                                    animate={{ opacity: 1, scale: 1, y: 0 }}\r\n                                    exit={{ opacity: 0, scale: 0.95, y: -30 }}\r\n                                    transition={{\r\n                                        duration: 0.4,\r\n                                        ease: \"easeInOut\",\r\n                                        scale: { duration: 0.3 },\r\n                                        y: { duration: 0.4 }\r\n                                    }}\r\n                                    className={`bg-gray-800 rounded-lg p-4 lg:p-6 border border-gray-700 transition-opacity duration-300 ease-in-out ${isContentVisible ? 'opacity-100' : 'opacity-0'\r\n                                        }`}\r\n                                >\r\n                                    {renderStepComponent(currentStep)}\r\n                                </motion.div>\r\n                            </AnimatePresence>\r\n\r\n                            {/* Desktop Navigation Controls - Hidden on mobile */}\r\n                            <motion.div\r\n                                className=\"hidden md:flex items-center justify-between space-x-4\"\r\n                                initial={{ opacity: 0, y: 20 }}\r\n                                animate={{ opacity: 1, y: 0 }}\r\n                                transition={{ duration: 0.5, delay: 0.3 }}\r\n                            >\r\n                                <motion.button\r\n                                    onClick={() => {\r\n                                        const prevStep = getPreviousNASMStep(currentStep);\r\n                                        if (prevStep) navigateToStep(prevStep.id);\r\n                                    }}\r\n                                    disabled={currentStep === 1}\r\n                                    className={`px-6 py-3 rounded-lg font-medium transition-all duration-200 ${currentStep === 1\r\n                                        ? 'bg-gray-700 text-gray-400 cursor-not-allowed'\r\n                                        : 'bg-red-600 hover:bg-red-700 text-white'\r\n                                        }`}\r\n                                    whileHover={{ scale: currentStep === 1 ? 1 : 1.05 }}\r\n                                    whileTap={{ scale: currentStep === 1 ? 1 : 0.95 }}\r\n                                    transition={{ duration: 0.2 }}\r\n                                >\r\n                                    ← Previous Step\r\n                                </motion.button>\r\n\r\n                                <motion.div\r\n                                    className=\"flex-1 max-w-xs\"\r\n                                    whileHover={{ scale: 1.02 }}\r\n                                    transition={{ duration: 0.2 }}\r\n                                >\r\n                                    <select\r\n                                        value={currentStep}\r\n                                        onChange={(e) => navigateToStep(parseInt(e.target.value))}\r\n                                        className=\"w-full px-4 py-3 bg-gray-700 border border-gray-600 rounded-lg text-white focus:ring-2 focus:ring-red-500 focus:border-red-500 transition-all duration-200\"\r\n                                    >\r\n                                        {(nasmStepConfig || []).map(step => (\r\n                                            <option key={step.id} value={step.id}>\r\n                                                Step {step.id}: {step.name}\r\n                                            </option>\r\n                                        ))}\r\n                                    </select>\r\n                                </motion.div>\r\n\r\n                                <motion.button\r\n                                    onClick={() => {\r\n                                        const nextStep = getNextNASMStep(currentStep);\r\n                                        if (nextStep) navigateToStep(nextStep.id);\r\n                                    }}\r\n                                    disabled={currentStep === 17}\r\n                                    className={`px-6 py-3 rounded-lg font-medium transition-all duration-200 ${currentStep === 17\r\n                                        ? 'bg-gray-700 text-gray-400 cursor-not-allowed'\r\n                                        : 'bg-red-600 hover:bg-red-700 text-white'\r\n                                        }`}\r\n                                    whileHover={{ scale: currentStep === 17 ? 1 : 1.05 }}\r\n                                    whileTap={{ scale: currentStep === 17 ? 1 : 0.95 }}\r\n                                    transition={{ duration: 0.2 }}\r\n                                >\r\n                                    Next Step →\r\n                                </motion.button>\r\n                            </motion.div>\r\n                        </div>\r\n                    </PageSection>\r\n                </div>\r\n\r\n                {/* Fixed Mobile Navigation - Always visible at bottom on mobile */}\r\n                <div className=\"md:hidden\">\r\n                    <motion.div\r\n                        className=\"fixed bottom-0 left-0 right-0 bg-gray-800 border-t border-gray-700 p-4 z-50\"\r\n                        initial={{ opacity: 0, y: 100 }}\r\n                        animate={{ opacity: 1, y: 0 }}\r\n                        transition={{ duration: 0.5, delay: 0.3 }}\r\n                    >\r\n                        <div className=\"flex items-center justify-between space-x-4 max-w-screen-xl mx-auto\">\r\n                            <motion.button\r\n                                onClick={() => {\r\n                                    const prevStep = getPreviousNASMStep(currentStep);\r\n                                    if (prevStep) navigateToStep(prevStep.id);\r\n                                }}\r\n                                disabled={currentStep === 1}\r\n                                className={`flex-1 px-4 py-3 rounded-lg font-medium transition-all duration-200 ${currentStep === 1\r\n                                    ? 'bg-gray-700 text-gray-400 cursor-not-allowed'\r\n                                    : 'bg-red-600 hover:bg-red-700 text-white'\r\n                                    }`}\r\n                                whileHover={{ scale: currentStep === 1 ? 1 : 1.02 }}\r\n                                whileTap={{ scale: currentStep === 1 ? 1 : 0.95 }}\r\n                                transition={{ duration: 0.2 }}\r\n                            >\r\n                                ← Previous\r\n                            </motion.button>\r\n\r\n                            {/* Mobile Step Indicator */}\r\n                            <div className=\"flex flex-col items-center px-4\">\r\n                                <div className=\"text-xs text-gray-400 mb-1\">Step</div>\r\n                                <div className=\"text-lg font-bold text-white\">{currentStep}/17</div>\r\n                                <div className=\"w-16 bg-gray-700 rounded-full h-1 mt-1\">\r\n                                    <div\r\n                                        className=\"bg-red-600 h-1 rounded-full transition-all duration-300\"\r\n                                        style={{ width: `${(currentStep / 17) * 100}%` }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <motion.button\r\n                                onClick={() => {\r\n                                    const nextStep = getNextNASMStep(currentStep);\r\n                                    if (nextStep) navigateToStep(nextStep.id);\r\n                                }}\r\n                                disabled={currentStep === 17}\r\n                                className={`flex-1 px-4 py-3 rounded-lg font-medium transition-all duration-200 ${currentStep === 17\r\n                                    ? 'bg-gray-700 text-gray-400 cursor-not-allowed'\r\n                                    : 'bg-red-600 hover:bg-red-700 text-white'\r\n                                    }`}\r\n                                whileHover={{ scale: currentStep === 17 ? 1 : 1.02 }}\r\n                                whileTap={{ scale: currentStep === 17 ? 1 : 0.95 }}\r\n                                transition={{ duration: 0.2 }}\r\n                            >\r\n                                Next →\r\n                            </motion.button>\r\n                        </div>\r\n                    </motion.div>\r\n                </div>\r\n            </div>\r\n        </PageLayout>\r\n    );\r\n};\r\n\r\nexport default NASMProgramWorkflow;\r\n","import React, { useState } from 'react';\r\nimport { useUnsavedChanges } from '../hooks/useUnsavedChanges.js';\r\nimport {\r\n    ProgramProvider, useProgramContext\r\n} from '../contexts/ProgramContext';\r\nimport PageLayout, { PageSection } from '../layout/PageLayout';\r\nimport './StreamlinedProgram.css';\r\n\r\n// Import streamlined step components (reordered for methodology-first workflow)\r\nimport SystemRecommendationStep from '../components/program/tabs/SystemRecommendationStep'; // Now Step 1\r\nimport PrimaryGoalStep from '../components/program/tabs/PrimaryGoalStep'; // Now Step 2\r\nimport ExperienceLevelStep from '../components/program/tabs/ExperienceLevelStep'; // Now Step 3\r\nimport TimelineStep from '../components/program/tabs/TimelineStep'; // Now Step 4\r\nimport InjuryScreeningStep from '../components/program/tabs/InjuryScreeningStep'; // Now Step 6\r\n\r\n// Methodology-specific assessment components (Now Step 5)\r\nimport PHAHealthScreenStep from '../components/program/tabs/PHAHealthScreenStep';\r\nimport GainerTypeStep from '../components/program/tabs/GainerTypeStep';\r\nimport VolumeLandmarksTab from '../components/program/tabs/VolumeLandmarksTab';\r\nimport TrainingMaxStep from '../components/program/tabs/TrainingMaxStep';\r\nimport MovementAssessmentStep from '../components/program/tabs/MovementAssessmentStep';\r\nimport NASMMovementAssessmentStep from '../components/program/tabs/NASMMovementAssessmentStep'; // NASM-specific assessment\r\n\r\n// Program architecture components (Now Steps 7-8)\r\nimport PeriodizationStep from '../components/program/tabs/PeriodizationStep';\r\nimport ProgramDesignStep from '../components/program/tabs/ProgramDesignStep';\r\nimport ImplementationStep from '../components/program/tabs/ImplementationStep';\r\n\r\n// NASM-specific complete workflow\r\nimport NASMProgramWorkflow from '../components/program/NASMProgramWorkflow';\r\n\r\n/**\r\n * StreamlinedProgramDesign - METHODOLOGY-FIRST Workflow Implementation\r\n * \r\n * NEW SIMPLIFIED METHODOLOGY-FIRST WORKFLOW:\r\n * Phase 1: Choose Methodology (Step 1)\r\n * Phase 2: User Info (Steps 2-4: Goals, Experience, Timeline)  \r\n * Phase 3: Assessments (Steps 5-6: Methodology Assessment, Injury Screen)\r\n * Phase 4: Program Design (Steps 7-8: Periodization, Implementation)\r\n */\r\n\r\n// Enhanced Program Navigation with Methodology-First Workflow\r\nconst StreamlinedProgramNavigation = () => {\r\n    const { state, actions } = useProgramContext();\r\n    const [pendingChanges, setPendingChanges] = useState(false);\r\n    useUnsavedChanges(!!pendingChanges);\r\n\r\n    // METHODOLOGY-FIRST 4-PHASE Workflow: Methodology → User Info → Assessments → Program Design\r\n    const streamlinedTabs = [\r\n        // PHASE 1: METHODOLOGY FOUNDATION\r\n        {\r\n            id: 'system-recommendation',\r\n            name: 'Choose Methodology',\r\n            icon: '🏛️',\r\n            step: 1,\r\n            phase: 'Methodology Foundation',\r\n            description: 'Select your training methodology and approach',\r\n            features: ['System Selection', 'Methodology Overview', 'Approach Comparison']\r\n        },\r\n\r\n        // PHASE 2: USER INFO\r\n        {\r\n            id: 'primary-goal',\r\n            name: 'Training Goals',\r\n            icon: '🎯',\r\n            step: 2,\r\n            phase: 'User Info',\r\n            description: 'Training focus and objectives (methodology-specific)',\r\n            features: ['Methodology-Aware Goals', 'Goal-System Integration']\r\n        },\r\n        {\r\n            id: 'experience-level',\r\n            name: 'Experience Level',\r\n            icon: '📈',\r\n            step: 3,\r\n            phase: 'User Info',\r\n            description: 'Program complexity level and methodology experience',\r\n            features: ['Experience Assessment', 'Recovery Capacity', 'Methodology Background']\r\n        },\r\n        {\r\n            id: 'timeline',\r\n            name: 'Timeline',\r\n            icon: '⏱️',\r\n            step: 4,\r\n            phase: 'User Info',\r\n            description: 'Program duration and methodology-specific periodization',\r\n            features: ['Duration Selection', 'Methodology Phases', 'Deload Scheduling']\r\n        },\r\n\r\n        // PHASE 3: ASSESSMENTS\r\n        // Methodology-specific assessment tabs will be inserted here dynamically\r\n\r\n        {\r\n            id: 'injury-screening',\r\n            name: 'Injury Screening',\r\n            icon: '🏥',\r\n            step: 6,\r\n            phase: 'Assessments',\r\n            description: 'Safety assessment with methodology-specific considerations',\r\n            features: ['Injury History', 'Movement Screen', 'Methodology Modifications']\r\n        },\r\n\r\n        // PHASE 4: PROGRAM DESIGN\r\n        {\r\n            id: 'periodization',\r\n            name: 'Periodization',\r\n            icon: '📅',\r\n            step: 7,\r\n            phase: 'Program Design',\r\n            description: 'Methodology-specific periodization strategy and planning',\r\n            features: ['Methodology Periodization', 'Phase Planning', 'Progression Strategy']\r\n        },\r\n        {\r\n            id: 'implementation',\r\n            name: 'Implementation',\r\n            icon: '📊',\r\n            step: 8,\r\n            phase: 'Program Design',\r\n            description: 'Complete implementation with methodology-specific monitoring',\r\n            features: ['Implementation Plan', 'Progress Monitoring', 'Methodology Tracking']\r\n        }\r\n    ];\r\n\r\n    // Dynamic methodology-specific tabs for PHASE 3: ASSESSMENTS (Step 5)\r\n    const getMethodologySpecificTabs = (selectedSystem) => {\r\n        const methodologyTabs = {\r\n            'josh-bryant': [\r\n                {\r\n                    id: 'pha-health-screen',\r\n                    name: 'PHA Health Screen',\r\n                    icon: '❤️',\r\n                    step: 5,\r\n                    phase: 'Assessments',\r\n                    description: 'Physical Activity Readiness for tactical/strongman training'\r\n                },\r\n                {\r\n                    id: 'gainer-type',\r\n                    name: 'Gainer Type',\r\n                    icon: '🧬',\r\n                    step: 5,\r\n                    phase: 'Assessments',\r\n                    description: 'Fiber type assessment for Bryant-specific programming'\r\n                }\r\n            ],\r\n            'RP': [\r\n                {\r\n                    id: 'volume-landmarks',\r\n                    name: 'Volume Landmarks',\r\n                    icon: '📊',\r\n                    step: 5,\r\n                    phase: 'Assessments',\r\n                    description: 'Current training volume and MEV/MAV/MRV establishment'\r\n                }\r\n            ],\r\n            '5/3/1': [\r\n                {\r\n                    id: 'training-max',\r\n                    name: 'Training Max Assessment',\r\n                    icon: '💪',\r\n                    step: 5,\r\n                    phase: 'Assessments',\r\n                    description: 'Current 1RM testing and Training Max establishment'\r\n                }\r\n            ],\r\n            'linear': [\r\n                {\r\n                    id: 'movement-assessment',\r\n                    name: 'Movement Assessment',\r\n                    icon: '🏃',\r\n                    step: 5,\r\n                    phase: 'Assessments',\r\n                    description: 'Movement quality baseline for motor control focus'\r\n                }\r\n            ],\r\n            'NASM': [\r\n                {\r\n                    id: 'nasm-movement-screen',\r\n                    name: 'NASM Movement Screen',\r\n                    icon: '🎯',\r\n                    step: 5,\r\n                    phase: 'Assessments',\r\n                    description: 'NASM movement assessment and muscle imbalance analysis'\r\n                }\r\n            ]\r\n        };\r\n\r\n        return methodologyTabs[selectedSystem] || [];\r\n    };\r\n\r\n    // Get current methodology-specific tabs ONLY if we're at or past assessment phase (step 5+)\r\n    const currentMethodologyTabs = (state.currentStep >= 5) ? getMethodologySpecificTabs(state.selectedSystem) : [];\r\n\r\n    // Combine all tabs in NEW 4-PHASE ORDER: Methodology → User Info → Assessments → Program Design\r\n    const allTabs = [\r\n        // PHASE 1: Methodology Foundation\r\n        ...streamlinedTabs.filter(tab => tab.phase === 'Methodology Foundation'),\r\n\r\n        // PHASE 2: User Info\r\n        ...streamlinedTabs.filter(tab => tab.phase === 'User Info'),\r\n\r\n        // PHASE 3: Assessments (methodology-specific + injury screening) - only show if at assessment phase\r\n        ...currentMethodologyTabs,\r\n        ...(state.currentStep >= 6 ? streamlinedTabs.filter(tab => tab.phase === 'Assessments' && tab.step === 6) : []),\r\n\r\n        // PHASE 4: Program Design - only show if at program design phase\r\n        ...(state.currentStep >= 7 ? streamlinedTabs.filter(tab => tab.phase === 'Program Design') : [])\r\n    ];\r\n\r\n    return (\r\n        <div className=\"program-navigation\">\r\n            <PageSection title=\"Workflow Progress\">\r\n                <p className=\"text-gray-300 mb-6\">\r\n                    NEW 4-Phase Workflow: Choose Methodology → User Info → Assessments → Program Design\r\n                </p>\r\n\r\n                {/* Progress indicator */}\r\n                <div className=\"progress-phases mb-6\">\r\n                    <div className=\"flex justify-between\">\r\n                        <div className=\"phase-indicator\">\r\n                            <span className=\"phase-number\">Phase 1</span>\r\n                            <span className=\"phase-name\">Choose Methodology</span>\r\n                            <span className=\"phase-steps\">System Selection</span>\r\n                        </div>\r\n                        <div className=\"phase-indicator\">\r\n                            <span className=\"phase-number\">Phase 2</span>\r\n                            <span className=\"phase-name\">User Info</span>\r\n                            <span className=\"phase-steps\">Goals, Experience, Timeline</span>\r\n                        </div>\r\n                        <div className=\"phase-indicator\">\r\n                            <span className=\"phase-number\">Phase 3</span>\r\n                            <span className=\"phase-name\">Assessments</span>\r\n                            <span className=\"phase-steps\">Methodology & Safety</span>\r\n                        </div>\r\n                        <div className=\"phase-indicator\">\r\n                            <span className=\"phase-number\">Phase 4</span>\r\n                            <span className=\"phase-name\">Program Design</span>\r\n                            <span className=\"phase-steps\">Periodization & Implementation</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Methodology Context Display */}\r\n                {state.selectedSystem && (\r\n                    <div className=\"methodology-context mb-4\">\r\n                        <div className=\"selected-methodology\">\r\n                            <span className=\"methodology-label\">Selected Methodology:</span>\r\n                            <span className=\"methodology-name\">{state.selectedSystem}</span>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </PageSection>\r\n\r\n            {/* Tab Navigation - Grouped by Phases */}\r\n            <PageSection title=\"Program Steps\">\r\n                {/* Phase 1: Choose Methodology */}\r\n                <div className=\"phase-section\">\r\n                    <div className=\"phase-separator\" data-phase=\"Phase 1: Choose Methodology\"></div>\r\n                    {allTabs\r\n                        .filter(tab => tab.phase === 'Methodology Foundation')\r\n                        .map((tab, index) => (\r\n                            <div\r\n                                key={tab.id}\r\n                                className={`tab-item ${state.currentStep === tab.step ? 'active' : ''}`}\r\n                                onClick={() => actions.setCurrentStep(tab.step)}\r\n                            >\r\n                                <div className=\"tab-header\">\r\n                                    <span className=\"tab-icon\">{tab.icon}</span>\r\n                                    <div className=\"tab-info\">\r\n                                        <div className=\"tab-title\">\r\n                                            <span className=\"tab-step\">Step {tab.step}</span>\r\n                                            <span className=\"tab-name\">{tab.name}</span>\r\n                                        </div>\r\n                                        <div className=\"tab-phase\">{tab.phase}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"tab-description\">{tab.description}</div>\r\n                                {tab.features && (\r\n                                    <div className=\"tab-features\">\r\n                                        {tab.features.map(feature => (\r\n                                            <span key={feature} className=\"feature-tag\">{feature}</span>\r\n                                        ))}\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                </div>\r\n\r\n                {/* Phase 2: User Info */}\r\n                {state.selectedSystem && (\r\n                    <div className=\"phase-section\">\r\n                        <div className=\"phase-separator\" data-phase=\"Phase 2: User Info\"></div>\r\n                        {allTabs\r\n                            .filter(tab => tab.phase === 'User Info')\r\n                            .map((tab, index) => (\r\n                                <div\r\n                                    key={tab.id}\r\n                                    className={`tab-item ${state.currentStep === tab.step ? 'active' : ''}`}\r\n                                    onClick={() => actions.setCurrentStep(tab.step)}\r\n                                >\r\n                                    <div className=\"tab-header\">\r\n                                        <span className=\"tab-icon\">{tab.icon}</span>\r\n                                        <div className=\"tab-info\">\r\n                                            <div className=\"tab-title\">\r\n                                                <span className=\"tab-step\">Step {tab.step}</span>\r\n                                                <span className=\"tab-name\">{tab.name}</span>\r\n                                            </div>\r\n                                            <div className=\"tab-phase\">{tab.phase}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"tab-description\">{tab.description}</div>\r\n                                    {tab.features && (\r\n                                        <div className=\"tab-features\">\r\n                                            {tab.features.map(feature => (\r\n                                                <span key={feature} className=\"feature-tag\">{feature}</span>\r\n                                            ))}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Phase 3: Assessments */}\r\n                {state.selectedSystem && (\r\n                    <div className=\"phase-section\">\r\n                        <div className=\"phase-separator\" data-phase=\"Phase 3: Assessments\"></div>\r\n                        {allTabs\r\n                            .filter(tab => tab.phase === 'Assessments')\r\n                            .map((tab, index) => (\r\n                                <div\r\n                                    key={tab.id}\r\n                                    className={`tab-item ${state.currentStep === tab.step ? 'active' : ''}`}\r\n                                    onClick={() => actions.setCurrentStep(tab.step)}\r\n                                >\r\n                                    <div className=\"tab-header\">\r\n                                        <span className=\"tab-icon\">{tab.icon}</span>\r\n                                        <div className=\"tab-info\">\r\n                                            <div className=\"tab-title\">\r\n                                                <span className=\"tab-step\">Step {tab.step}</span>\r\n                                                <span className=\"tab-name\">{tab.name}</span>\r\n                                            </div>\r\n                                            <div className=\"tab-phase\">{tab.phase}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"tab-description\">{tab.description}</div>\r\n                                    {tab.features && (\r\n                                        <div className=\"tab-features\">\r\n                                            {tab.features.map(feature => (\r\n                                                <span key={feature} className=\"feature-tag\">{feature}</span>\r\n                                            ))}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Phase 4: Program Design */}\r\n                {state.selectedSystem && (\r\n                    <div className=\"phase-section\">\r\n                        <div className=\"phase-separator\" data-phase=\"Phase 4: Program Design\"></div>\r\n                        {allTabs\r\n                            .filter(tab => tab.phase === 'Program Design')\r\n                            .map((tab, index) => (\r\n                                <div\r\n                                    key={tab.id}\r\n                                    className={`tab-item ${state.currentStep === tab.step ? 'active' : ''}`}\r\n                                    onClick={() => actions.setCurrentStep(tab.step)}\r\n                                >\r\n                                    <div className=\"tab-header\">\r\n                                        <span className=\"tab-icon\">{tab.icon}</span>\r\n                                        <div className=\"tab-info\">\r\n                                            <div className=\"tab-title\">\r\n                                                <span className=\"tab-step\">Step {tab.step}</span>\r\n                                                <span className=\"tab-name\">{tab.name}</span>\r\n                                            </div>\r\n                                            <div className=\"tab-phase\">{tab.phase}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"tab-description\">{tab.description}</div>\r\n                                    {tab.features && (\r\n                                        <div className=\"tab-features\">\r\n                                            {tab.features.map(feature => (\r\n                                                <span key={feature} className=\"feature-tag\">{feature}</span>\r\n                                            ))}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                )}\r\n            </PageSection>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Main Program Component with Step Rendering (REORDERED)\r\nconst StreamlinedProgramContent = () => {\r\n    const { state } = useProgramContext();\r\n\r\n    const renderCurrentStep = () => {\r\n        switch (state.currentStep) {\r\n            // PHASE 1: METHODOLOGY SELECTION\r\n            case 1:\r\n                return <SystemRecommendationStep />;\r\n\r\n            // PHASE 2: USER INFO\r\n            case 2:\r\n                return <PrimaryGoalStep />;\r\n\r\n            case 3:\r\n                return <ExperienceLevelStep />;\r\n\r\n            case 4:\r\n                return <TimelineStep />;\r\n\r\n            // PHASE 3: ASSESSMENTS - Methodology-Specific Assessment\r\n            case 5:\r\n                if (state.selectedSystem === 'josh-bryant') {\r\n                    return <PHAHealthScreenStep />;\r\n                } else if (state.selectedSystem === 'RP') {\r\n                    return <VolumeLandmarksTab />;\r\n                } else if (state.selectedSystem === '5/3/1') {\r\n                    return <TrainingMaxStep />;\r\n                } else if (state.selectedSystem === 'linear') {\r\n                    return <MovementAssessmentStep />;\r\n                } else if (state.selectedSystem === 'NASM') {\r\n                    return <NASMMovementAssessmentStep />; // NASM-specific assessment with full protocol\r\n                }\r\n                return <div>Please select a methodology first</div>;\r\n\r\n            case 6:\r\n                return <InjuryScreeningStep />;\r\n\r\n            // PHASE 4: PROGRAM DESIGN\r\n            case 7:\r\n                return <PeriodizationStep />;\r\n\r\n            case 8:\r\n                return <ImplementationStep />;\r\n\r\n            default:\r\n                // Start with methodology selection\r\n                return <SystemRecommendationStep />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"program-content\">\r\n            <div className=\"step-container\">\r\n                {/* Show methodology context in step content */}\r\n                {state.selectedSystem && state.currentStep > 1 && (\r\n                    <div className=\"step-methodology-context\">\r\n                        <div className=\"methodology-badge\">\r\n                            <span className=\"methodology-icon\">🏛️</span>\r\n                            <span className=\"methodology-text\">\r\n                                {state.selectedSystem} Methodology\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {renderCurrentStep()}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Main Program Page Component\r\nconst StreamlinedProgram = () => {\r\n    return (\r\n        <ProgramProvider>\r\n            <StreamlinedProgramRouter />\r\n        </ProgramProvider>\r\n    );\r\n};\r\n\r\n// Router component to determine which workflow to use\r\nconst StreamlinedProgramRouter = () => {\r\n    const { state } = useProgramContext();\r\n\r\n    // If NASM is selected, use the dedicated NASM workflow\r\n    if (state.selectedSystem === 'NASM') {\r\n        return <NASMProgramWorkflow />;\r\n    }\r\n\r\n    // Otherwise use the standard streamlined workflow with PageLayout\r\n    return (\r\n        <PageLayout\r\n            title=\"Streamlined Program\"\r\n            subtitle=\"Design and manage training programs\"\r\n            breadcrumbs={[\r\n                { label: 'Dashboard', to: '/dashboard' },\r\n                { label: 'Programs', to: '/programs' },\r\n                { label: 'Streamlined Program' }\r\n            ]}\r\n            glass\r\n        >\r\n            <div className=\"program-page streamlined-workflow methodology-first\">\r\n                <div className=\"program-container\">\r\n                    <StreamlinedProgramNavigation />\r\n                    <StreamlinedProgramContent />\r\n                </div>\r\n            </div>\r\n        </PageLayout>\r\n    );\r\n};\r\n\r\nexport default StreamlinedProgram;\r\n","import React, { useState } from 'react';\r\nimport { useUnsavedChanges } from '../hooks/useUnsavedChanges.js';\r\nimport BuilderCTA from '../components/program/BuilderCTA.jsx';\r\nimport MethodologySelection from '../components/program/tabs/MethodologySelection';\r\nimport FiveThreeOneWorkflow from '../components/program/FiveThreeOneWorkflow';\r\nimport StreamlinedProgram from './StreamlinedProgram';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * Program.jsx - Updated to include 5/3/1 Training System\r\n * \r\n * FEATURES:\r\n * - Methodology Selection (5/3/1, NASM, RP, Custom)\r\n * - Complete 5/3/1 Implementation\r\n * - Fallback to existing StreamlinedProgram for other methodologies\r\n */\r\n\r\nconst Program = () => {\r\n  const [selectedMethodology, setSelectedMethodology] = useState(null);\r\n  const [pendingChanges, setPendingChanges] = useState(false);\r\n  useUnsavedChanges(!!pendingChanges);\r\n\r\n  const handleMethodologySelect = (methodology) => {\r\n    console.log('Selected methodology:', methodology);\r\n    console.log('Methodology ID:', methodology?.id);\r\n    setSelectedMethodology(methodology);\r\n  };\r\n\r\n  // Debug logging\r\n  console.log('Current selectedMethodology:', selectedMethodology);\r\n  console.log('Should show 5/3/1 workflow?', selectedMethodology?.id === 'fivethreeone');\r\n\r\n  // If 5/3/1 is selected, show the 5/3/1 workflow\r\n  if (selectedMethodology?.id === 'fivethreeone') {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900\">\r\n        <div className=\"container mx-auto px-6 py-8\">\r\n          {/* Header */}\r\n          <div className=\"mb-8 text-center\">\r\n            <h1 className=\"text-3xl font-bold text-white mb-2\">\r\n              💪 5/3/1 Training System\r\n            </h1>\r\n            <p className=\"text-gray-300\">\r\n              Jim Wendler's proven strength training methodology\r\n            </p>\r\n            <button\r\n              onClick={() => setSelectedMethodology(null)}\r\n              className=\"mt-4 text-sm text-blue-400 hover:text-blue-300 underline\"\r\n            >\r\n              ← Back to Methodology Selection\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end mb-4\">\r\n            <Link to=\"/print-week\" className=\"px-3 py-1.5 rounded border border-gray-600 text-gray-100 hover:bg-gray-800 text-sm\">\r\n              Print Week\r\n            </Link>\r\n          </div>\r\n          <FiveThreeOneWorkflow />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If other methodology is selected, use existing system\r\n  if (selectedMethodology && selectedMethodology.id !== 'fivethreeone') {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900\">\r\n        <div className=\"container mx-auto px-6 py-8\">\r\n          <div className=\"mb-8 text-center\">\r\n            <h1 className=\"text-3xl font-bold text-white mb-2\">\r\n              {selectedMethodology.icon} {selectedMethodology.name}\r\n            </h1>\r\n            <p className=\"text-gray-300 mb-4\">\r\n              {selectedMethodology.description}\r\n            </p>\r\n            <button\r\n              onClick={() => setSelectedMethodology(null)}\r\n              className=\"text-sm text-blue-400 hover:text-blue-300 underline\"\r\n            >\r\n              ← Back to Methodology Selection\r\n            </button>\r\n          </div>\r\n\r\n          <StreamlinedProgram />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show methodology selection by default\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900\">\r\n      <div className=\"container mx-auto px-6 py-8\">\r\n        <BuilderCTA />\r\n        <div className=\"flex justify-end mb-4\">\r\n          <Link to=\"/print-week\" className=\"px-3 py-1.5 rounded border border-gray-600 text-gray-100 hover:bg-gray-800 text-sm\">\r\n            Print Week\r\n          </Link>\r\n        </div>\r\n        <MethodologySelection\r\n          onMethodologySelect={handleMethodologySelect}\r\n          selectedMethodology={selectedMethodology}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Program;\r\n"],"file":"assets/Program-BpiUNZTI.js"}