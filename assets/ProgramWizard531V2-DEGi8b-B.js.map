{"version":3,"file":"ProgramWizard531V2-DEGi8b-B.js","sources":["../../src/methods/531/engines/FiveThreeOneEngine.v2.js","../../src/methods/531/components/ToggleButton.jsx","../../src/methods/531/packAdapter.js","../../src/methods/531/decisionAdapter.js","../../src/methods/531/assistanceMapper.js","../../src/methods/531/schedule.js","../../src/methods/531/calc.js","../../src/methods/531/progression.js","../../src/methods/531/scheduleRender.js","../../src/methods/531/components/steps/Step1Fundamentals.jsx","../../src/lib/templates/531.templateSpecs.js","../../src/methods/531/components/assistance/AssistanceCatalogPicker.jsx","../../src/methods/531/components/steps/Step2TemplateOrCustom.jsx","../../src/methods/531/components/steps/Step3DesignCustom.jsx","../../src/methods/531/components/assistance/AssistanceRow.jsx","../../src/methods/531/cardioTemplates.js","../../src/methods/531/components/steps/Step4ReviewExport.jsx","../../src/methods/531/components/steps/Step5ProgressionSmart.jsx","../../src/methods/531/components/ProgramWizard531V2.jsx"],"sourcesContent":["/**\r\n * TODO: FiveThreeOneEngine.v2.js - Canonical 5/3/1 Engine V2\r\n * Pure utility functions for 5/3/1 calculations and cycle generation.\r\n * Legacy FiveThreeOneEngine.js remains for existing pages compatibility.\r\n */\r\n\r\n// Rounds to increment (overloaded for backward compatibility)\r\n// New signature expectation: roundToIncrement(value, increment = 5, mode = 'nearest')\r\n// Legacy calls used: roundToIncrement(value, units('lb'|'kg'), mode)\r\nexport function roundToIncrement(value, increment = 5, mode = 'nearest') {\r\n    if (!Number.isFinite(value)) return 0;\r\n    let inc = 5;\r\n    let roundingMode = mode || 'nearest';\r\n    // Backward compat: if second arg is a string treat it as units\r\n    if (typeof increment === 'string') {\r\n        const units = increment;\r\n        inc = units === 'kg' ? 2.5 : 5;\r\n    } else if (typeof increment === 'number') {\r\n        inc = increment > 0 ? increment : 5;\r\n    }\r\n    if (roundingMode === 'ceil') return Math.ceil(value / inc) * inc;\r\n    if (roundingMode === 'floor') return Math.floor(value / inc) * inc;\r\n    // default nearest\r\n    return Math.round(value / inc) * inc;\r\n}\r\n\r\n// Returns [{pct, reps, amrap}, ...] for weekIndex 0..3\r\nexport function getWeekScheme(option = 1, weekIndex = 0) {\r\n    // Object form (original) for legacy callers when weekIndex provided.\r\n    const legacy = {\r\n        1: [\r\n            [{ pct: 65, reps: 5 }, { pct: 75, reps: 5 }, { pct: 85, reps: 5, amrap: true }],\r\n            [{ pct: 70, reps: 3 }, { pct: 80, reps: 3 }, { pct: 90, reps: 3, amrap: true }],\r\n            [{ pct: 75, reps: 5 }, { pct: 85, reps: 3 }, { pct: 95, reps: 1, amrap: true }],\r\n            [{ pct: 40, reps: 5 }, { pct: 50, reps: 5 }, { pct: 60, reps: 5, amrap: false }]\r\n        ],\r\n        2: [\r\n            [{ pct: 75, reps: 5 }, { pct: 80, reps: 5 }, { pct: 85, reps: 5, amrap: true }],\r\n            [{ pct: 80, reps: 3 }, { pct: 85, reps: 3 }, { pct: 90, reps: 3, amrap: true }],\r\n            [{ pct: 85, reps: 5 }, { pct: 90, reps: 3 }, { pct: 95, reps: 1, amrap: true }],\r\n            [{ pct: 40, reps: 5 }, { pct: 50, reps: 5 }, { pct: 60, reps: 5, amrap: false }]\r\n        ]\r\n    };\r\n    // Percent matrix form (new helpers expect this when only one arg is supplied)\r\n    const percentMatrix = {\r\n        1: [\r\n            [65, 75, 85],\r\n            [70, 80, 90],\r\n            [75, 85, 95],\r\n            [40, 50, 60]\r\n        ],\r\n        2: [\r\n            [75, 80, 85],\r\n            [80, 85, 90],\r\n            [85, 90, 95],\r\n            [40, 50, 60]\r\n        ]\r\n    };\r\n    if (arguments.length === 1) {\r\n        return percentMatrix[option] || percentMatrix[1];\r\n    }\r\n    return legacy[option]?.[weekIndex] || legacy[1][weekIndex] || [];\r\n}\r\n\r\n// Generate warmup sets from program.warmups (default 40/50/60 × 5/5/3)\r\nexport function getWarmupSets(program, liftTM) {\r\n    const sets = program?.warmups?.sets || [{ pct: 40, reps: 5 }, { pct: 50, reps: 5 }, { pct: 60, reps: 3 }];\r\n    return sets.map(s => ({\r\n        ...s,\r\n        weight: calcSetWeight(liftTM, s.pct, program.units, program.rounding)\r\n    }));\r\n}\r\n\r\n// Calculate set weight with rounding\r\nexport function calcSetWeight(tm, pct, units = 'lb', rounding = 'ceil') {\r\n    return roundToIncrement(Number(tm) * (pct / 100), units, rounding);\r\n}\r\n\r\n// Generate a complete training day\r\nexport function generateDay({ lift, weekIndex, program, dayId }) {\r\n    const tm = program.lifts?.[lift]?.tm;\r\n    const warmups = getWarmupSets(program, tm);\r\n\r\n    // Main work sets (3 sets per day)\r\n    const mainSets = getWeekScheme(program.loading.option, weekIndex)\r\n        .map(s => ({\r\n            ...s,\r\n            weight: calcSetWeight(tm, s.pct, program.units, program.rounding)\r\n        }));\r\n\r\n    let supplemental = null;\r\n\r\n    // BBB supplemental work if template is BBB (skip during deload weekIndex 3)\r\n    if (program.template === 'bbb' && program.supplemental?.type === 'BBB' && weekIndex !== 3) {\r\n        const pairing = program.supplemental.pairing || 'same';\r\n        let supplementalLift = lift;\r\n\r\n        // Handle opposite pairing\r\n        if (pairing === 'opposite') {\r\n            const oppositeMap = {\r\n                press: 'bench',\r\n                bench: 'press',\r\n                squat: 'deadlift',\r\n                deadlift: 'squat'\r\n            };\r\n            supplementalLift = oppositeMap[lift] || lift;\r\n        }\r\n\r\n        const supplementalTM = program.lifts?.[supplementalLift]?.tm || tm;\r\n        const supplementalPct = program.supplemental.pct || 50;\r\n\r\n        supplemental = {\r\n            lift: supplementalLift,\r\n            sets: program.supplemental.sets || 5,\r\n            reps: program.supplemental.reps || 10,\r\n            pct: supplementalPct,\r\n            weight: roundToIncrement(supplementalTM * (supplementalPct / 100), program.units, program.rounding)\r\n        };\r\n    }\r\n\r\n    // Assistance work from program.assistance[dayId]\r\n    const assistance = program.assistance?.[dayId] || [];\r\n\r\n    return {\r\n        lift,\r\n        warmups,\r\n        mainSets,\r\n        tm,\r\n        supplemental,\r\n        assistance\r\n    };\r\n}\r\n\r\n// Generate complete 4-week cycle\r\nexport function generateCycle(program) {\r\n    const weekCount = program.loading.includeDeload ? 4 : 3;\r\n    return {\r\n        weeks: Array.from({ length: weekCount }, (_, w) => ({\r\n            index: w + 1,\r\n            days: program.schedule.days.map(day =>\r\n                generateDay({\r\n                    lift: day.lift,\r\n                    weekIndex: w,\r\n                    program,\r\n                    dayId: day.id\r\n                })\r\n            )\r\n        }))\r\n    };\r\n}\r\n\r\n// --- New pure helpers (added per V2 Step 4 spec) ---\r\n// EXACT specification implementation (idempotent; no side effects)\r\nexport function buildMainSetsForLift({ tm, weekIndex, option = 1, roundingIncrement = 5, roundingMode = \"nearest\", units = \"lbs\" }) {\r\n    if (!tm || tm <= 0) return { week: weekIndex + 1, sets: [], amrapOnLast: false };\r\n    const scheme = getWeekScheme(option);\r\n    const week = weekIndex + 1;\r\n    const isDeload = week === 4;\r\n    const percents = scheme[weekIndex]; // e.g., [65,75,85] or [40,50,60]\r\n    const amrapOnLast = !isDeload; // weeks 1–3 only (no AMRAP on deload 40/50/60 ×5)\r\n\r\n    const sets = percents.map((p, i) => {\r\n        const raw = tm * (p / 100);\r\n        const weight = roundToIncrement(raw, roundingIncrement, roundingMode);\r\n\r\n        // Week-specific rep schemes: Week 1=[5,5,5], Week 2=[3,3,3], Week 3=[5,3,1]\r\n        let baseReps;\r\n        if (isDeload) {\r\n            baseReps = [5, 5, 5][i]; // Deload is always 5 reps per set\r\n        } else if (week === 1) {\r\n            baseReps = [5, 5, 5][i]; // Week 1: all sets for 5 reps (5+ on last)\r\n        } else if (week === 2) {\r\n            baseReps = [3, 3, 3][i]; // Week 2: all sets for 3 reps (3+ on last) \r\n        } else {\r\n            baseReps = [5, 3, 1][i]; // Week 3: 5/3/1 scheme (1+ on last)\r\n        }\r\n\r\n        const reps = (i === 2 && !isDeload) ? (baseReps + \"+\") : baseReps;\r\n        return { percent: p, reps, weight, units };\r\n    });\r\n\r\n    return { week, sets, amrapOnLast };\r\n}\r\n\r\nexport function buildWarmupSets({ includeWarmups, warmupScheme, tm, roundingIncrement = 5, roundingMode = \"nearest\", units = \"lbs\" }) {\r\n    if (!includeWarmups || !tm || tm <= 0) return [];\r\n    const perc = Array.isArray(warmupScheme?.percentages) ? warmupScheme.percentages : [40, 50, 60];\r\n    const reps = Array.isArray(warmupScheme?.reps) ? warmupScheme.reps : [5, 5, 3];\r\n    const len = Math.min(perc.length, reps.length);\r\n    const out = [];\r\n    for (let i = 0; i < len; i++) {\r\n        const raw = tm * (perc[i] / 100);\r\n        const weight = roundToIncrement(raw, roundingIncrement, roundingMode);\r\n        out.push({ percent: perc[i], reps: reps[i], weight, units });\r\n    }\r\n    return out;\r\n}\r\n","import React from 'react';\r\n\r\n// Accessible toggle-style button with unified pressed styling\r\nexport function ToggleButton({ on, className = '', children, ...props }) {\r\n    return (\r\n        <button\r\n            type={props.type || 'button'}\r\n            aria-pressed={!!on}\r\n            data-selected={on ? 'true' : 'false'}\r\n            className={[\r\n                'px-3 py-1.5 rounded-xl border text-sm font-medium transition select-none outline-none relative',\r\n                on\r\n                    ? 'bg-indigo-600 text-white border-indigo-400 font-semibold shadow-inner after:absolute after:inset-0 after:rounded-xl after:ring-2 after:ring-indigo-300/70'\r\n                    : 'bg-zinc-100/70 dark:bg-zinc-800/60 text-zinc-800 dark:text-zinc-200 border-zinc-300 dark:border-zinc-600 hover:bg-zinc-200 dark:hover:bg-zinc-700',\r\n                'focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-indigo-400 focus-visible:ring-offset-0',\r\n                'disabled:opacity-50 disabled:cursor-not-allowed',\r\n                className\r\n            ].join(' ')}\r\n            {...props}\r\n        >\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default ToggleButton;\r\n","// Extract supplemental (BBB) configuration from a 5/3/1 method pack.\r\n// Returns null if not found or malformed.\r\nexport function extractSupplementalFromPack(pack, templateId = \"bbb50\") {\r\n    if (!pack || !Array.isArray(pack.templates)) return null;\r\n    const tpl = pack.templates.find(t => t.id === templateId);\r\n    const eff = tpl?.effects?.supplemental;\r\n    if (!eff) return null;\r\n    return {\r\n        mode: eff.mode || \"bbb\",\r\n        pairing: eff.pairing || \"same\",\r\n        intensity: eff.intensity || { kind: \"percent_of\", value: 50, of: \"TM\" },\r\n        sets: eff.sets ?? 5,\r\n        reps: eff.reps ?? 10,\r\n        _provenance: eff.provenance || { source: \"template\", note: \"pack\" }\r\n    };\r\n}\r\n\r\nexport function extractWarmups(pack) {\r\n    return Array.isArray(pack?.progressions?.warmups) ? pack.progressions.warmups : null;\r\n}\r\n\r\nexport function extractWeekByLabel(pack, label) {\r\n    if (!Array.isArray(pack?.progressions?.weeks)) return null;\r\n    const norm = (s) => String(s || \"\").toLowerCase().replace(/\\s+/g, \"\");\r\n    const target = norm(label);\r\n    return pack.progressions.weeks.find(w => norm(w.label) === target) || null;\r\n}\r\n","// decisionAdapter.js\r\n// Maps pack decisionTree + template definitions to wizard state effects given user answers.\r\n// This stays deliberately lightweight; future evolution can handle richer effect merging.\r\n\r\nexport function applyDecisionsFromPack({ pack, answers }) {\r\n    if (!pack) return null;\r\n    const out = { scheduleMode: null, templateId: null, tmMethod: null, _notes: [] };\r\n\r\n    // 1) Days per week -> schedule mode\r\n    const days = Number(answers?.daysPerWeek ?? 4);\r\n    out.scheduleMode = days === 4 ? '4day' : days === 3 ? '3day' : days === 2 ? '2day' : '1day';\r\n\r\n    // 2) Assistance / template selection -> template id\r\n    const a = String(answers?.assistanceChoice || '').toLowerCase();\r\n    if (a.includes('bbb')) out.templateId = 'bbb50';\r\n    else if (a.includes('triumv')) out.templateId = 'triumvirate';\r\n    else if (a.includes('jack')) out.templateId = 'jack_shit';\r\n    else if (a.includes('period') || a.includes('bible')) out.templateId = 'periodization_bible';\r\n    else if (a.includes('bodyweight')) out.templateId = 'bodyweight';\r\n    else out.templateId = pack?.templates?.[0]?.id || 'bbb50';\r\n\r\n    // 3) TM method\r\n    const tmm = String(answers?.tmMethod || '').toLowerCase();\r\n    out.tmMethod = tmm.includes('estimate') ? 'estimate' : 'known_1rm';\r\n\r\n    // Resolve template effects (supplemental / assistance definitions)\r\n    const tpl = (pack.templates || []).find(t => t.id === out.templateId);\r\n    if (!tpl) {\r\n        out._notes.push('template not found');\r\n        return out;\r\n    }\r\n    out.effects = tpl.effects || {};\r\n    return out;\r\n}\r\n\r\nexport default applyDecisionsFromPack;\r\n","// assistanceMapper.js\r\n// Derives concrete assistance item placeholders from a template assistance effects object.\r\n\r\nexport function mapTemplateAssistance(effectsAssistance) {\r\n    if (!effectsAssistance) return [];\r\n    const { slots = [] } = effectsAssistance;\r\n    // Each slot may have id or category plus sets/reps (which can be ranges or AMRAP strings).\r\n    return slots.map((slot, idx) => {\r\n        const baseName = slot.category || slot.id || `Assistance ${idx + 1}`;\r\n        return {\r\n            name: normalizeAssistanceName(baseName),\r\n            sets: slot.sets ?? null,\r\n            reps: slot.reps ?? null\r\n        };\r\n    });\r\n}\r\n\r\nfunction normalizeAssistanceName(raw) {\r\n    if (!raw) return 'Assistance';\r\n    const map = {\r\n        upper_pull_bw: 'Bodyweight Pull (Pull-up/Chin)',\r\n        pushup_or_dip: 'Push-up / Dip',\r\n        core_bw: 'Core (BW)',\r\n        single_leg_or_core: 'Single Leg / Core'\r\n    };\r\n    if (map[raw]) return map[raw];\r\n    // Humanize underscores\r\n    return raw.replace(/_/g, ' ').replace(/\\b\\w/g, c => c.toUpperCase());\r\n}\r\n\r\n// Basic volume validation: ensure each numeric-set*minReps within broad heuristic range.\r\nexport function validateAssistanceVolume(items) {\r\n    const issues = [];\r\n    items.forEach(it => {\r\n        if (!it.sets || !it.reps) return; // skip incomplete\r\n        if (typeof it.reps === 'string') {\r\n            if (/amrap/i.test(it.reps)) return; // skip AMRAP\r\n            const rangeMatch = it.reps.match(/^(\\d+)\\s*[-–]\\s*(\\d+)$/);\r\n            if (rangeMatch) {\r\n                const min = Number(rangeMatch[1]);\r\n                const totalMin = it.sets * min;\r\n                if (totalMin < 20 || totalMin > 80) {\r\n                    issues.push(`${it.name}: sets x minReps (${it.sets}x${min}) out of 20-80 heuristic`);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n        if (Number.isFinite(it.reps)) {\r\n            const total = it.sets * it.reps;\r\n            if (total < 20 || total > 80) {\r\n                issues.push(`${it.name}: volume ${total} outside 20-80 heuristic`);\r\n            }\r\n        }\r\n    });\r\n    return issues;\r\n}\r\n\r\nexport default { mapTemplateAssistance, validateAssistanceVolume };\r\n","// 3-day 5/3/1 rotation per Wendler: roll 4 lifts across 3 weekly sessions.\r\n// Weeks 1–3: loading (3x5, 3x3, 5/3/1). Week 4: loading completes for all lifts that haven't hit wk3 yet.\r\n// Week 5: deload for all four lifts, grouped to fit 3 sessions.\r\nconst LIFTS = [\"press\", \"deadlift\", \"bench\", \"squat\"];\r\nconst WEEK_LABELS = [\"3x5\", \"3x3\", \"5/3/1\"];\r\n\r\nexport function buildSchedule({ mode = \"4day\", liftOrder = LIFTS, state = {} } = {}) {\r\n    if (mode === \"4day\") {\r\n        // Simple 4 weeks x 4 days\r\n        const weeks = [0, 1, 2, 3].map((wIdx) => {\r\n            const label = wIdx === 3 ? \"Deload\" : WEEK_LABELS[wIdx];\r\n            const days = liftOrder.map((lift) => ({\r\n                lift,\r\n                weekLabel: label,\r\n                conditioning: { type: 'LISS', minutes: 30 } // legacy structural path conditioning placeholder\r\n            }));\r\n            return { label, days };\r\n        });\r\n        return { mode, weeks };\r\n    }\r\n\r\n    if (mode !== \"3day\") {\r\n        // TODO: implement 2day/1day later\r\n        return { mode, weeks: [] };\r\n    }\r\n\r\n    // 3-day canonical 5-week rotation:\r\n    // W1:  P(w1), D(w1), B(w1)\r\n    // W2:  S(w1), P(w2), D(w2)\r\n    // W3:  B(w2), S(w2), P(w3)\r\n    // W4:  D(w3), B(w3), S(w3)\r\n    // W5:  Deload grouped to 3 sessions: (P + D), (B), (S)\r\n    const [P, D, B, S] = liftOrder;\r\n\r\n    const weeks = [\r\n        {\r\n            label: \"Week 1\", days: [\r\n                { lift: P, weekLabel: \"3x5\" },\r\n                { lift: D, weekLabel: \"3x5\" },\r\n                { lift: B, weekLabel: \"3x5\" },\r\n            ]\r\n        },\r\n        {\r\n            label: \"Week 2\", days: [\r\n                { lift: S, weekLabel: \"3x5\" },\r\n                { lift: P, weekLabel: \"3x3\" },\r\n                { lift: D, weekLabel: \"3x3\" },\r\n            ]\r\n        },\r\n        {\r\n            label: \"Week 3\", days: [\r\n                { lift: B, weekLabel: \"3x3\" },\r\n                { lift: S, weekLabel: \"3x3\" },\r\n                { lift: P, weekLabel: \"5/3/1\" },\r\n            ]\r\n        },\r\n        {\r\n            label: \"Week 4\", days: [\r\n                { lift: D, weekLabel: \"5/3/1\" },\r\n                { lift: B, weekLabel: \"5/3/1\" },\r\n                { lift: S, weekLabel: \"5/3/1\" },\r\n            ]\r\n        },\r\n        // Deload week (3 sessions). First session carries two deload lifts to fit 4 lifts into 3 days.\r\n        {\r\n            label: \"Deload\", days: [\r\n                { lift: P, weekLabel: \"Deload\", combineWith: D },\r\n                { lift: B, weekLabel: \"Deload\" },\r\n                { lift: S, weekLabel: \"Deload\" },\r\n            ]\r\n        },\r\n    ];\r\n    // Inject conditioning into every day (parity with 4-day preview) using cardio templates when available\r\n    try {\r\n        // eslint-disable-next-line no-undef\r\n        const { CardioTemplates, pickCardio } = require('./cardioTemplates.js');\r\n        const cardioId = pickCardio(3, state || {});\r\n        weeks.forEach(w => w.days.forEach(d => {\r\n            if (!d.conditioning) d.conditioning = CardioTemplates[cardioId];\r\n        }));\r\n    } catch {\r\n        weeks.forEach(w => w.days.forEach(d => { if (!d.conditioning) d.conditioning = { type: 'LISS', minutes: 45 }; }));\r\n    }\r\n    return { mode, weeks };\r\n}\r\n\r\n// 4-day parity support (preview builder consumed by UI via schedulePreview)\r\nexport const SPLIT_4DAY_A = [\"press\", \"deadlift\", \"bench\", \"squat\"]; // default\r\nexport const SPLIT_4DAY_B = [\"bench\", \"squat\", \"press\", \"deadlift\"]; // alternative\r\n\r\n// Generic day factory leveraging unified compute helpers (imported lazily where used)\r\nexport function makeDay({ lift, weekLabel, state, pack, roundingPref, units }) {\r\n    const tmRaw = state?.lifts?.[lift]?.tm || 0;\r\n    const tm = Number(tmRaw);\r\n    let computeWarmups, computeMainSets, computeSupplemental, computeAssistance;\r\n    try {\r\n        // Browser / bundler path (CommonJS interop via require)\r\n        // eslint-disable-next-line no-undef\r\n        ({ computeWarmups, computeMainSets, computeSupplemental, computeAssistance } = require('./calc.js'));\r\n    } catch {\r\n        // Node ESM path for verifier (dynamic import sync not possible; fallback to empty fns)\r\n    }\r\n    // Fallback no-op implementations if import failed (verifier structural path shouldn't need heavy data)\r\n    computeWarmups = computeWarmups || (() => []);\r\n    computeMainSets = computeMainSets || (() => ({ rows: [] }));\r\n    computeSupplemental = computeSupplemental || (() => null);\r\n    computeAssistance = computeAssistance || (() => []);\r\n    const day = {\r\n        lift,\r\n        warmups: computeWarmups(lift, tm, weekLabel, roundingPref, units, pack),\r\n        main: computeMainSets(lift, tm, weekLabel, { amrap: weekLabel === '5/3/1' }, roundingPref, units, pack),\r\n        supplemental: computeSupplemental(pack, lift, tm, state),\r\n        assistance: computeAssistance(pack, lift, state)\r\n    };\r\n    try {\r\n        // eslint-disable-next-line no-undef\r\n        const { CardioTemplates, pickCardio } = require('./cardioTemplates.js');\r\n        const id = pickCardio(state?.advanced?.schedulePreview?.daysPerWeek || 4, state || {});\r\n        day.conditioning = CardioTemplates[id];\r\n    } catch {\r\n        // Minimal deterministic conditioning fallback for verifier\r\n        day.conditioning = { type: 'LISS', minutes: 30 };\r\n    }\r\n    return day;\r\n}\r\n\r\nexport function buildSchedule4Day({ state, pack, split = SPLIT_4DAY_A, weekLabel = '3x5' }) {\r\n    const units = state?.units || 'lbs';\r\n    const roundingPref = state?.roundingPref || { lbs: 5, kg: 2.5 };\r\n    const days = split.map(lift => makeDay({ lift, weekLabel, state, pack, roundingPref, units }));\r\n    // Attach global conditioning reference (each day already has its own)\r\n    return { mode: '4day_live', daysPerWeek: 4, days, meta: { split, weekLabel } };\r\n}\r\n\r\n// 3-day live builder (single-week snapshot with conditioning on all days)\r\nexport function buildSchedule3Day({ state, pack, split = SPLIT_4DAY_A, weekLabel = '3x5' }) {\r\n    const units = state?.units || 'lbs';\r\n    const roundingPref = state?.roundingPref || { lbs: 5, kg: 2.5 };\r\n    // Pick three lifts to show this week (simple rolling window based on week+cycle)\r\n    const week = state?.week ?? 1;\r\n    const cycle = state?.cycle ?? 1;\r\n    const baseIndex = (cycle + week) % 4; // rotate starting lift\r\n    const lifts = [0, 1, 2].map(i => split[(baseIndex + i) % 4]);\r\n    const days = lifts.map(lift => makeDay({ lift, weekLabel, state, pack, roundingPref, units }));\r\n    return { mode: '3day_live', daysPerWeek: 3, days, meta: { split, weekLabel, rotationIndex: baseIndex } };\r\n}\r\n\r\n// 2-day rotating builder: advances two-lift window each (cycle+week) across 4-lift set\r\nexport function buildSchedule2Day({ state, pack, split = SPLIT_4DAY_A, weekLabel = '3x5' }) {\r\n    const week = state?.week ?? 1;\r\n    const cycle = state?.cycle ?? 1;\r\n    const rotationIndex = (cycle + week) % 2; // 0 or 1\r\n    const baseIdx = rotationIndex * 2; // 0 or 2\r\n    const lifts = [split[baseIdx % 4], split[(baseIdx + 1) % 4]];\r\n    const units = state?.units || 'lbs';\r\n    const roundingPref = state?.roundingPref || { lbs: 5, kg: 2.5 };\r\n    const days = lifts.map(lift => makeDay({ lift, weekLabel, state, pack, roundingPref, units }));\r\n    return { mode: '2day_live', daysPerWeek: 2, days, meta: { split, weekLabel, rotationIndex } };\r\n}\r\n\r\n// 1-day rotating builder: advances one lift each (cycle+week) across 4-lift set\r\nexport function buildSchedule1Day({ state, pack, split = SPLIT_4DAY_A, weekLabel = '3x5' }) {\r\n    const week = state?.week ?? 1;\r\n    const cycle = state?.cycle ?? 1;\r\n    const idx = (cycle + week) % 4;\r\n    const lift = split[idx];\r\n    const units = state?.units || 'lbs';\r\n    const roundingPref = state?.roundingPref || { lbs: 5, kg: 2.5 };\r\n    const day = makeDay({ lift, weekLabel, state, pack, roundingPref, units });\r\n    return { mode: '1day_live', daysPerWeek: 1, days: [day], meta: { split, weekLabel, rotationIndex: idx } };\r\n}\r\n","import { extractWarmups, extractWeekByLabel } from \"./packAdapter.js\";\r\n// Static import of assistance rules (was inline require) to avoid duplicate module instantiation\r\nimport { assistanceFor } from './assistanceRules.js';\r\n\r\n// Shared compute helpers (lift + TM + week context). These unify 3-day and 4-day previews.\r\n// Signatures kept simple & stable for plug-and-play usage across schedule builders.\r\n\r\nexport function computeWarmups(lift, tm, weekLabel, roundingPref, units, pack) {\r\n    if (!pack || !tm) return [];\r\n    const wu = extractWarmups(pack) || [];\r\n    const rnd = roundingPref || { lbs: 5, kg: 2.5 };\r\n    return wu.map(s => {\r\n        const pct = s.value ?? s.percentage ?? s.pct;\r\n        const reps = s.reps ?? 0;\r\n        const weight = roundLoad((pct / 100) * tm, units, rnd);\r\n        return { pct, reps, weight };\r\n    });\r\n}\r\n\r\nexport function computeMainSets(lift, tm, weekLabel, { amrap } = {}, roundingPref, units, pack) {\r\n    if (!pack || !tm) return { rows: [], amrapLast: false };\r\n    const wk = extractWeekByLabel(pack, weekLabel);\r\n    const main = wk?.main || [];\r\n    const rnd = roundingPref || { lbs: 5, kg: 2.5 };\r\n    const rows = main.map((s, idx) => {\r\n        const pct = s.value ?? s.percentage ?? s.pct;\r\n        const reps = s.reps ?? 0;\r\n        // Respect pack amrap flag; optionally force only for final heavy week\r\n        const isAmrap = Boolean(s.amrap && (amrap ? true : s.amrap));\r\n        const weight = roundLoad((pct / 100) * tm, units, rnd);\r\n        return { pct, reps, amrap: isAmrap, weight };\r\n    });\r\n    const amrapLast = rows.length ? Boolean(rows[rows.length - 1]?.amrap) : false;\r\n    return { rows, amrapLast };\r\n}\r\n\r\nexport function computeSupplemental(pack, lift, tm, state) {\r\n    const sup = state?.supplemental;\r\n    if (!sup) return null;\r\n    const mode = sup.strategy || sup.mode;\r\n    if (mode !== 'bbb') return null; // future: extend for FSL, SSL, etc.\r\n    // BBB default intensity adjusted from legacy 60% to 50% (still overrideable)\r\n    const pct = sup.percentOfTM ?? sup.intensity?.value ?? 50;\r\n    if (!tm) return null;\r\n    const units = state?.units || 'lbs';\r\n    const rounding = state?.roundingPref || { lbs: 5, kg: 2.5 };\r\n    const load = roundLoad((tm * pct) / 100, units, rounding);\r\n    return { type: 'bbb', sets: sup.sets ?? 5, reps: sup.reps ?? 10, pct, load };\r\n}\r\n\r\nexport function computeAssistance(pack, lift, state) {\r\n    const tplId = state?.templateKey || state?.template || (typeof pack === 'string' ? pack : pack?.program?.id) || 'custom';\r\n    return assistanceFor ? (assistanceFor(tplId, lift, state) || []) : [];\r\n}\r\n\r\nexport function roundLoad(x, units = \"lbs\", rounding = { lbs: 5, kg: 2.5 }) {\r\n    const step = units === \"kg\" ? (rounding.kg ?? 2.5) : (rounding.lbs ?? 5);\r\n    return Math.round(x / step) * step;\r\n}\r\nexport function tmFor(lift, tms = {}) {\r\n    return Number(tms?.[lift] ?? 0) || 0;\r\n}\r\nexport function computeWarmupsFromPack({ pack, lift, tms, units = \"lbs\", rounding }) {\r\n    if (!pack) return [];\r\n    const tm = tmFor(lift, tms);\r\n    if (!tm) return [];\r\n    const wu = extractWarmups(pack) || [];\r\n    const rnd = rounding || pack?.program?.defaults?.rounding || { lbs: 5, kg: 2.5 };\r\n    return wu.map(s => {\r\n        const pct = s.value ?? s.percentage ?? s.pct;\r\n        const reps = s.reps ?? 0;\r\n        const weight = roundLoad((pct / 100) * tm, units, rnd);\r\n        return { pct, reps, weight };\r\n    });\r\n}\r\nexport function computeMainFromPack({ pack, lift, weekLabel, tms, units = \"lbs\", rounding }) {\r\n    if (!pack) return { rows: [], amrapLast: false };\r\n    const tm = tmFor(lift, tms);\r\n    if (!tm) return { rows: [], amrapLast: false };\r\n    const wk = extractWeekByLabel(pack, weekLabel);\r\n    const main = wk?.main || [];\r\n    const rnd = rounding || pack?.program?.defaults?.rounding || { lbs: 5, kg: 2.5 };\r\n    const rows = main.map(s => {\r\n        const pct = s.value ?? s.percentage ?? s.pct;\r\n        const reps = s.reps ?? 0;\r\n        const amrap = Boolean(s.amrap);\r\n        const weight = roundLoad((pct / 100) * tm, units, rnd);\r\n        return { pct, reps, amrap, weight };\r\n    });\r\n    const amrapLast = rows.length ? Boolean(rows[rows.length - 1]?.amrap) : false;\r\n    return { rows, amrapLast };\r\n}\r\nexport function computeBBBFromConfig({ supplemental, lift, tms, units = \"lbs\", rounding, pack }) {\r\n    if (!supplemental) return null;\r\n    const mode = supplemental.strategy || supplemental.mode;\r\n    if (mode !== \"bbb\") return null;\r\n    const tm = tmFor(lift, tms);\r\n    if (!tm) return null;\r\n    const rnd = rounding || pack?.program?.defaults?.rounding || { lbs: 5, kg: 2.5 };\r\n    // Default BBB percent lowered from 60 to 50 (legacy export may still specify 60 explicitly)\r\n    const value = supplemental.percentOfTM ?? supplemental.intensity?.value ?? 50;\r\n    const load = roundLoad((tm * value) / 100, units, rnd);\r\n    return {\r\n        sets: supplemental.sets ?? 5,\r\n        reps: supplemental.reps ?? 10,\r\n        pct: value,\r\n        load\r\n    };\r\n}\r\n\r\n// --- Volume & Stress helpers (for Step 4 mini-panel) ---\r\n// estimateTonnage(sets): expects array of objects each with numeric weight & reps.\r\n// Returns sum(weight * reps); silently skips invalid rows.\r\nexport function estimateTonnage(sets) {\r\n    if (!Array.isArray(sets) || sets.length === 0) return 0;\r\n    return sets.reduce((acc, s) => {\r\n        const w = Number(s.weight);\r\n        const r = Number(s.reps);\r\n        if (Number.isFinite(w) && Number.isFinite(r)) return acc + (w * r);\r\n        return acc;\r\n    }, 0);\r\n}\r\n\r\n// sumRepsByBlock(day): given a day object with assistance: [{block, sets, reps}]\r\n// Returns { blockName: totalEstimatedReps }\r\nexport function sumRepsByBlock(day) {\r\n    const out = {};\r\n    if (!day || !Array.isArray(day.assistance)) return out;\r\n    for (const it of day.assistance) {\r\n        const sets = Number(it.sets) || 0;\r\n        let reps = 0;\r\n        if (typeof it.reps === 'number') reps = it.reps;\r\n        else if (typeof it.reps === 'string') {\r\n            if (/^\\d+-\\d+/.test(it.reps)) {\r\n                const [a, b] = it.reps.split('-').map(n => Number(n));\r\n                if (Number.isFinite(a) && Number.isFinite(b)) reps = Math.round((a + b) / 2);\r\n            } else if (/^\\d+/.test(it.reps)) reps = Number(it.reps);\r\n            else reps = 12; // heuristic fallback\r\n        }\r\n        const total = sets * reps;\r\n        const block = it.block || 'general';\r\n        out[block] = (out[block] || 0) + total;\r\n    }\r\n    return out;\r\n}\r\n\r\n// --- Progression helpers (cycle advancement) ---\r\nexport const LIFTS = [\"squat\", \"bench\", \"deadlift\", \"press\"];\r\n\r\nexport function roundTo(v, step) {\r\n    const s = Number(step || 5);\r\n    return Math.round(Number(v) / s) * s;\r\n}\r\n\r\nfunction incFor(lift, units) {\r\n    const upper = [\"bench\", \"press\"].includes(lift);\r\n    if (units === \"kg\") return upper ? 2.5 : 5;\r\n    return upper ? 5 : 10; // lbs\r\n}\r\n\r\n// Week-3 AMRAP gate: default min=1, overridable per state\r\nexport function passedAmrapWk3(reps, state) {\r\n    if (reps == null) return true; // treat missing data as pass\r\n    const min = Number(state?.amrapMinWk3 ?? 1);\r\n    return Number(reps) >= min;\r\n}\r\n\r\n// Pure TM progression (no I/O)\r\nexport function nextTM(lift, tm, units, passed, rounding) {\r\n    const base = Number(tm) || 0;\r\n    const inc = incFor(lift, units);\r\n    const next = passed ? (base + inc) : Math.max(0, base - inc);\r\n    // Use unit-appropriate rounding step (previously always preferred lbs key which broke kg increments)\r\n    const step = units === 'kg' ? (rounding?.kg ?? 2.5) : (rounding?.lbs ?? 5);\r\n    return roundTo(next, step);\r\n}\r\n\r\n// Batch apply based on recorded wk3 AMRAP reps\r\nexport function computeNextTMs({ tms, units, rounding, amrapWk3 = {}, state }) {\r\n    const out = {};\r\n    for (const lift of LIFTS) {\r\n        const reps = amrapWk3?.[lift];\r\n        const passed = passedAmrapWk3(reps, state);\r\n        out[lift] = nextTM(lift, Number(tms?.[lift] || 0), units, passed, rounding);\r\n    }\r\n    return out;\r\n}\r\n","import { computeNextTMs, passedAmrapWk3, LIFTS } from './calc';\r\n\r\n// advanceCycle: produce next cycle state snapshot with updated TMs and history entry\r\nexport function advanceCycle(prevState, { amrapWk3 = {} } = {}) {\r\n    if (!prevState) return prevState;\r\n    const units = prevState.units || 'lbs';\r\n    const rounding = prevState.roundingPref || { lbs: 5, kg: 2.5 };\r\n    // Build current TM map (state.lifts may hold tm values)\r\n    const tms = {};\r\n    for (const l of LIFTS) tms[l] = prevState.lifts?.[l]?.tm || prevState.tms?.[l] || 0;\r\n    const nextTms = computeNextTMs({ tms, units, rounding, amrapWk3, state: prevState });\r\n    const cycleNum = (prevState.cycle ?? 1);\r\n    return {\r\n        ...prevState,\r\n        tms: nextTms,\r\n        lifts: {\r\n            ...prevState.lifts,\r\n            ...Object.fromEntries(Object.entries(prevState.lifts || {}).map(([k, v]) => [k, { ...v, tm: nextTms[k] }]))\r\n        },\r\n        cycle: cycleNum + 1,\r\n        week: 1,\r\n        history: [\r\n            ...(prevState.history || []),\r\n            { cycle: cycleNum, amrapWk3, tms, at: Date.now() }\r\n        ]\r\n    };\r\n}\r\n\r\n// advanceCycleSelective: allow user to opt specific lifts in/out of progression (keeps others unchanged)\r\nexport function advanceCycleSelective(prevState, { amrapWk3 = {}, include = {}, customIncrements = {} } = {}) {\r\n    if (!prevState) return prevState;\r\n    const units = prevState.units || 'lbs';\r\n    const rounding = prevState.roundingPref || { lbs: 5, kg: 2.5 };\r\n    const tms = {}; // current\r\n    for (const l of LIFTS) tms[l] = prevState.lifts?.[l]?.tm || prevState.tms?.[l] || 0;\r\n\r\n    // Use custom increments if provided, otherwise compute standard progression\r\n    let fullNext;\r\n    if (Object.keys(customIncrements).length > 0) {\r\n        fullNext = { ...tms };\r\n        for (const l of LIFTS) {\r\n            const current = tms[l];\r\n            const increment = customIncrements[l] || 0;\r\n            const passed = passedAmrapWk3(amrapWk3[l], prevState);\r\n\r\n            if (passed && increment > 0) {\r\n                fullNext[l] = current + increment;\r\n            } else if (!passed && increment > 0) {\r\n                // If failed AMRAP but custom increment provided, hold or reduce\r\n                fullNext[l] = Math.max(0, current - increment);\r\n            } else {\r\n                fullNext[l] = current; // Hold TM\r\n            }\r\n        }\r\n    } else {\r\n        fullNext = computeNextTMs({ tms, units, rounding, amrapWk3, state: prevState });\r\n    }\r\n\r\n    const finalNext = { ...tms };\r\n    for (const l of LIFTS) {\r\n        if (include[l]) finalNext[l] = fullNext[l]; // only progress if user opted in\r\n    }\r\n    const cycleNum = (prevState.cycle ?? 1);\r\n    return {\r\n        ...prevState,\r\n        tms: finalNext,\r\n        lifts: {\r\n            ...prevState.lifts,\r\n            ...Object.fromEntries(Object.entries(prevState.lifts || {}).map(([k, v]) => [k, { ...v, tm: finalNext[k] }]))\r\n        },\r\n        cycle: cycleNum + 1,\r\n        week: 1,\r\n        history: [\r\n            ...(prevState.history || []),\r\n            {\r\n                cycle: cycleNum,\r\n                amrapWk3,\r\n                tmsBefore: tms,\r\n                tmsAfter: finalNext,\r\n                include,\r\n                customIncrements: Object.keys(customIncrements).length > 0 ? customIncrements : null,\r\n                at: Date.now()\r\n            }\r\n        ]\r\n    };\r\n}\r\n\r\nexport default { advanceCycle, advanceCycleSelective };\r\n","// Flattens schedulePreview into UI-friendly rows per week/session\r\nexport function toUiDays(schedulePreview) {\r\n    if (!schedulePreview?.weeks?.length) return [];\r\n    return schedulePreview.weeks.map((w) => {\r\n        const rows = (w.days || []).map((d) => {\r\n            const lifts = d.combineWith ? [d.lift, d.combineWith] : [d.lift];\r\n            return { weekLabel: w.label, sessionWeekLabel: d.weekLabel, lifts };\r\n        });\r\n        return { label: w.label, sessions: rows };\r\n    });\r\n}\r\n","/**\r\n * Step1Fundamentals.jsx - Program Fundamentals Step\r\n * Units, rounding, TM%, 1RM/rep tests with real-time calculation and validation\r\n */\r\n\r\nimport React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\r\nimport ToggleButton from '../ToggleButton.jsx';\r\nimport { Info, AlertTriangle, Calculator, Copy, CheckCircle2 } from 'lucide-react';\r\nimport { useProgramV2 } from '../../contexts/ProgramContextV2.jsx';\r\nimport { roundToIncrement } from '../..'; // barrel export\r\n\r\n// Wendler e1RM formula: e1RM = weight * (1 + 0.0333 * reps)\r\nconst calculateE1RM = (weight, reps) => {\r\n    if (!weight || !reps || reps < 1) return null;\r\n    return weight * (1 + 0.0333 * reps);\r\n};\r\n\r\n// Calculate TM from base weight\r\nconst calculateTM = (baseWeight, tmPct) => {\r\n    if (!baseWeight || !tmPct) return null;\r\n    return baseWeight * tmPct;\r\n};\r\n\r\n// Validate TM relative to e1RM\r\nconst validateTM = (tm, e1rm) => {\r\n    if (!tm || !e1rm) return { level: 'neutral', message: 'Enter data to see validation' };\r\n\r\n    const ratio = tm / e1rm;\r\n    if (ratio > 0.95) return { level: 'danger', message: 'TM too high (>95% of e1RM). Risk of missing reps.' };\r\n    if (ratio < 0.80) return { level: 'warning', message: 'TM very conservative (<80% of e1RM). Room to increase.' };\r\n    return { level: 'success', message: 'TM in recommended range (80-95% of e1RM).' };\r\n};\r\n\r\nconst LIFT_LABELS = {\r\n    squat: 'Squat',\r\n    bench: 'Bench Press',\r\n    deadlift: 'Deadlift',\r\n    press: 'Overhead Press'\r\n};\r\n\r\nexport default function Step1Fundamentals({ onValidChange, flashToken, missing = [] }) {\r\n    const { state, dispatch } = useProgramV2();\r\n\r\n    // Local working state for smooth typing\r\n    const [localState, setLocalState] = useState({\r\n        units: state.units,\r\n        rounding: state.rounding,\r\n        tmPct: state.tmPct,\r\n        lifts: {\r\n            squat: { oneRM: state.lifts.squat.oneRM || '', repWeight: '', repCount: '', tmOverride: '', activeMethod: 'oneRM' },\r\n            bench: { oneRM: state.lifts.bench.oneRM || '', repWeight: '', repCount: '', tmOverride: '', activeMethod: 'oneRM' },\r\n            deadlift: { oneRM: state.lifts.deadlift.oneRM || '', repWeight: '', repCount: '', tmOverride: '', activeMethod: 'oneRM' },\r\n            press: { oneRM: state.lifts.press.oneRM || '', repWeight: '', repCount: '', tmOverride: '', activeMethod: 'oneRM' }\r\n        }\r\n    });\r\n\r\n    // Auto-save flash indicator\r\n    const [autoSaved, setAutoSaved] = useState(false);\r\n    const autoSaveTimerRef = useRef(null);\r\n\r\n    // Overall progress (count lifts with a valid computed or overridden TM > 0)\r\n    const tmProgress = useMemo(() => {\r\n        let completed = 0;\r\n        const total = Object.keys(localState.lifts).length;\r\n        Object.entries(localState.lifts).forEach(([liftKey, lift]) => {\r\n            let oneRM = null;\r\n            if (lift.oneRM && Number(lift.oneRM) > 0) oneRM = Number(lift.oneRM);\r\n            else if (lift.repWeight && lift.repCount && Number(lift.repWeight) > 0 && Number(lift.repCount) > 0) {\r\n                oneRM = calculateE1RM(Number(lift.repWeight), Number(lift.repCount));\r\n            }\r\n            let tm = null;\r\n            if (lift.tmOverride && Number(lift.tmOverride) > 0) tm = Number(lift.tmOverride);\r\n            else if (oneRM) tm = calculateTM(oneRM, localState.tmPct);\r\n            if (tm && tm > 0) completed += 1;\r\n        });\r\n        const percent = total ? Math.min(100, Math.round((completed / total) * 100)) : 0;\r\n        return { completed, total, percent };\r\n    }, [localState.lifts, localState.tmPct]);\r\n\r\n    // Debounced dispatch to V2 context\r\n    useEffect(() => {\r\n        const timeoutId = setTimeout(() => {\r\n            dispatch({ type: 'SET_UNITS', units: localState.units });\r\n            dispatch({ type: 'SET_ROUNDING', rounding: localState.rounding });\r\n            dispatch({ type: 'SET_TM_PCT', tmPct: localState.tmPct });\r\n\r\n            // Calculate and dispatch final lift data\r\n            const liftData = {};\r\n            Object.keys(localState.lifts).forEach(liftKey => {\r\n                const lift = localState.lifts[liftKey];\r\n                let oneRM = null;\r\n                let tm = null;\r\n\r\n                // Determine oneRM source\r\n                if (lift.oneRM && Number(lift.oneRM) > 0) {\r\n                    oneRM = Number(lift.oneRM);\r\n                } else if (lift.repWeight && lift.repCount && Number(lift.repWeight) > 0 && Number(lift.repCount) > 0) {\r\n                    oneRM = calculateE1RM(Number(lift.repWeight), Number(lift.repCount));\r\n                }\r\n\r\n                // Calculate TM\r\n                if (lift.tmOverride && Number(lift.tmOverride) > 0) {\r\n                    tm = roundToIncrement(Number(lift.tmOverride), localState.units, localState.rounding);\r\n                } else if (oneRM) {\r\n                    tm = roundToIncrement(calculateTM(oneRM, localState.tmPct), localState.units, localState.rounding);\r\n                }\r\n\r\n                liftData[liftKey] = { name: liftKey, oneRM, tm };\r\n            });\r\n\r\n            dispatch({ type: 'BULK_SET_LIFTS', lifts: liftData });\r\n\r\n            // Trigger auto-saved flash\r\n            setAutoSaved(true);\r\n            if (autoSaveTimerRef.current) clearTimeout(autoSaveTimerRef.current);\r\n            autoSaveTimerRef.current = setTimeout(() => setAutoSaved(false), 1200);\r\n        }, 250);\r\n\r\n        return () => clearTimeout(timeoutId);\r\n    }, [localState, dispatch]);\r\n\r\n    // Validation check\r\n    const isValid = useMemo(() => {\r\n        return Object.keys(localState.lifts).every(liftKey => {\r\n            const lift = localState.lifts[liftKey];\r\n            const hasOneRM = lift.oneRM && Number(lift.oneRM) > 0;\r\n            const hasRepTest = lift.repWeight && lift.repCount && Number(lift.repWeight) > 0 && Number(lift.repCount) > 0;\r\n            return hasOneRM || hasRepTest;\r\n        });\r\n    }, [localState.lifts]);\r\n\r\n    const prevValidRef = useRef(isValid);\r\n    useEffect(() => {\r\n        if (prevValidRef.current !== isValid) {\r\n            onValidChange?.(isValid);\r\n            prevValidRef.current = isValid;\r\n        }\r\n    }, [isValid, onValidChange]);\r\n\r\n    const updateLocalState = useCallback((updates) => {\r\n        setLocalState(prev => ({ ...prev, ...updates }));\r\n    }, []);\r\n\r\n    const updateLift = useCallback((liftKey, updates) => {\r\n        setLocalState(prev => ({\r\n            ...prev,\r\n            lifts: {\r\n                ...prev.lifts,\r\n                [liftKey]: { ...prev.lifts[liftKey], ...updates }\r\n            }\r\n        }));\r\n    }, []);\r\n\r\n    const copyRepTestToAll = useCallback((sourceLift) => {\r\n        const source = localState.lifts[sourceLift];\r\n        if (!source.repWeight || !source.repCount) return;\r\n\r\n        const updates = {};\r\n        Object.keys(localState.lifts).forEach(liftKey => {\r\n            if (liftKey !== sourceLift) {\r\n                updates[liftKey] = {\r\n                    ...localState.lifts[liftKey],\r\n                    repWeight: source.repWeight,\r\n                    repCount: source.repCount,\r\n                    oneRM: '' // Clear oneRM when copying rep test\r\n                };\r\n            }\r\n        });\r\n\r\n        setLocalState(prev => ({\r\n            ...prev,\r\n            lifts: { ...prev.lifts, ...updates }\r\n        }));\r\n    }, [localState.lifts]);\r\n\r\n    const renderLiftRow = (liftKey) => {\r\n        const lift = localState.lifts[liftKey];\r\n        const hasOneRM = lift.oneRM && Number(lift.oneRM) > 0;\r\n        const hasRepTest = lift.repWeight && lift.repCount && Number(lift.repWeight) > 0 && Number(lift.repCount) > 0;\r\n        const hasOverride = lift.tmOverride && Number(lift.tmOverride) > 0;\r\n        let e1rm = null;\r\n        if (hasOneRM) e1rm = Number(lift.oneRM); else if (hasRepTest) e1rm = calculateE1RM(Number(lift.repWeight), Number(lift.repCount));\r\n        const suggestedTM = e1rm ? roundToIncrement(calculateTM(e1rm, localState.tmPct), localState.units, localState.rounding) : null;\r\n        const finalTM = hasOverride ? roundToIncrement(Number(lift.tmOverride), localState.units, localState.rounding) : suggestedTM;\r\n        const validation = validateTM(finalTM, e1rm);\r\n        const needsAttention = (missing.includes(`${liftKey} TM`) || missing.includes(liftKey)) && flashToken > 0;\r\n\r\n        const methods = [\r\n            { id: 'oneRM', label: 'Tested 1RM', hint: \"Enter the heaviest weight you've successfully lifted for 1 rep.\" },\r\n            { id: 'reps', label: 'Rep Calculator', hint: 'Enter weight and reps from a recent set (3–10 reps work best).' },\r\n            { id: 'override', label: 'Manual Override', hint: 'Enter your desired training max directly (typically 85–90% of 1RM).' }\r\n        ];\r\n        const setActiveMethod = (m) => updateLift(liftKey, { activeMethod: m });\r\n        const isActive = (m) => lift.activeMethod === m;\r\n        const methodCompleted = { oneRM: hasOneRM, reps: hasRepTest, override: hasOverride };\r\n\r\n        return (\r\n            <div key={liftKey} className={`p-4 rounded-xl bg-gray-800/40 border ${needsAttention ? 'border-amber-500/70 animate-pulse' : 'border-gray-700/60'} space-y-3`}>\r\n                <div className=\"flex flex-wrap items-start justify-between gap-3\">\r\n                    <div>\r\n                        <h4 className=\"text-lg font-semibold text-white tracking-tight flex items-center gap-1\">\r\n                            {LIFT_LABELS[liftKey]}\r\n                            {finalTM ? <CheckCircle2 className=\"w-4 h-4 text-green-500\" aria-label=\"Training max set\" /> : null}\r\n                        </h4>\r\n                        <div className=\"text-[12px] text-gray-400 mt-0.5 flex flex-wrap items-center gap-1\">\r\n                            {e1rm ? <><span>e1RM</span><span className=\"text-gray-300 font-mono\">{Math.round(e1rm)}</span></> : <span>Select a method</span>}\r\n                            {finalTM && <><span className=\"text-gray-600\">•</span><span>TM</span><span className=\"text-gray-200 font-mono\">{finalTM}</span></>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2 self-start\">\r\n                        <span className={`px-3 py-1.5 rounded-md text-[12px] font-semibold flex items-center gap-1 bg-gray-900/80 border shadow-sm ${finalTM ? 'border-green-600/60 text-green-300' : 'border-gray-700 text-gray-500'}`}>\r\n                            TM <span className={`${finalTM ? 'text-green-400 font-bold' : 'text-gray-500 font-medium'}`}>{finalTM || '—'}</span>\r\n                        </span>\r\n                        {(validation.level === 'warning' || validation.level === 'danger') && (\r\n                            <span className={`px-2 py-1 rounded text-[12px] font-medium border ${validation.level === 'warning' ? 'bg-yellow-500/15 text-yellow-400 border-yellow-600/40' : 'bg-red-500/15 text-red-400 border-red-600/40'}`}>{validation.level === 'warning' ? 'Low' : 'High'}</span>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                        <span className=\"text-[13px] uppercase tracking-wide text-gray-400 font-medium\">Choose one method:</span>\r\n                    </div>\r\n                    <div role=\"tablist\" className=\"inline-flex flex-wrap gap-1 bg-gray-900/70 backdrop-blur-sm p-1.5 rounded-lg border border-gray-700/70 shadow-inner\">\r\n                        {methods.map(m => (\r\n                            <button\r\n                                key={m.id}\r\n                                role=\"tab\"\r\n                                aria-selected={isActive(m.id)}\r\n                                onClick={() => setActiveMethod(m.id)}\r\n                                className={`px-3.5 py-1.5 text-[12px] md:text-sm font-semibold rounded-md border transition-colors flex items-center gap-1 focus:outline-none focus:ring-2 focus:ring-offset-0 focus:ring-red-600/40 ${isActive(m.id)\r\n                                    ? 'bg-red-600/30 border-red-500/70 text-red-200 shadow-sm'\r\n                                    : methodCompleted[m.id]\r\n                                        ? 'bg-gray-800/90 border-green-600/60 text-green-400 hover:bg-gray-700'\r\n                                        : 'bg-gray-800/70 border-gray-700 text-gray-400 hover:text-gray-200 hover:border-gray-600'}`}\r\n                            >\r\n                                {m.label}\r\n                                {methodCompleted[m.id] && !isActive(m.id) && <span className=\"text-green-500\">✓</span>}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        {lift.activeMethod === 'oneRM' && (\r\n                            <div className=\"space-y-2\">\r\n                                <p className=\"text-[13px] text-gray-400\">Enter the heaviest weight you've successfully lifted for 1 rep.</p>\r\n                                <div>\r\n                                    <label className=\"block text-[12px] uppercase tracking-wide text-gray-400 mb-1\">Weight</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={lift.oneRM}\r\n                                        onChange={(e) => updateLift(liftKey, { oneRM: e.target.value, repWeight: '', repCount: '', tmOverride: '' })}\r\n                                        className=\"w-full bg-gray-900 border border-gray-700 rounded px-3 py-2 text-sm text-white focus:border-red-500 focus:outline-none\"\r\n                                        placeholder=\"e.g. 280\"\r\n                                    />\r\n                                </div>\r\n                                {suggestedTM && hasOneRM && (\r\n                                    <div className=\"text-[13px] bg-gray-900/70 border border-red-500/40 rounded p-2 flex justify-between items-center\">\r\n                                        <span className=\"text-gray-400\">TM ({Math.round(localState.tmPct * 100)}%)</span>\r\n                                        <span className=\"text-red-400 font-semibold\">{suggestedTM}</span>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                        {lift.activeMethod === 'reps' && (\r\n                            <div className=\"space-y-2\">\r\n                                <p className=\"text-[13px] text-gray-400\">Enter weight and reps from a recent set (3–10 reps work best).</p>\r\n                                <div className=\"flex gap-2 flex-wrap\">\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={lift.repWeight}\r\n                                        onChange={(e) => updateLift(liftKey, { repWeight: e.target.value, oneRM: '', tmOverride: '' })}\r\n                                        className=\"flex-1 min-w-[120px] bg-gray-900 border border-gray-700 rounded px-3 py-2 text-sm text-white focus:border-red-500 focus:outline-none\"\r\n                                        placeholder=\"Weight\"\r\n                                    />\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={lift.repCount}\r\n                                        onChange={(e) => updateLift(liftKey, { repCount: e.target.value, oneRM: '', tmOverride: '' })}\r\n                                        className=\"w-28 bg-gray-900 border border-gray-700 rounded px-3 py-2 text-sm text-white focus:border-red-500 focus:outline-none\"\r\n                                        placeholder=\"Reps\"\r\n                                        min={1}\r\n                                        max={12}\r\n                                    />\r\n                                    {hasRepTest && (\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={(e) => { e.stopPropagation(); copyRepTestToAll(liftKey); }}\r\n                                            className=\"text-[12px] px-3 py-2 rounded bg-gray-800 hover:bg-gray-700 text-gray-200 border border-gray-600\"\r\n                                        >Copy to All</button>\r\n                                    )}\r\n                                </div>\r\n                                {hasRepTest && suggestedTM && (\r\n                                    <div className=\"text-[13px] bg-gray-900/70 border border-red-500/40 rounded p-2\">\r\n                                        <span className=\"text-gray-400\">Est. 1RM </span>\r\n                                        <span className=\"text-gray-300 font-mono\">{e1rm && Math.round(e1rm)}</span>\r\n                                        <span className=\"mx-1\">→</span>\r\n                                        <span className=\"text-gray-400\">TM </span>\r\n                                        <span className=\"text-red-400 font-semibold\">{suggestedTM}</span>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                        {lift.activeMethod === 'override' && (\r\n                            <div className=\"space-y-2\">\r\n                                <p className=\"text-[13px] text-gray-400\">Enter your desired training max directly (typically 85–90% of 1RM).</p>\r\n                                <div>\r\n                                    <label className=\"block text-[12px] uppercase tracking-wide text-gray-400 mb-1\">Training Max</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        value={lift.tmOverride}\r\n                                        onChange={(e) => updateLift(liftKey, { tmOverride: e.target.value, oneRM: '', repWeight: '', repCount: '' })}\r\n                                        className=\"w-full bg-gray-900 border border-gray-700 rounded px-3 py-2 text-sm text-white focus:border-red-500 focus:outline-none\"\r\n                                        placeholder=\"e.g. 250\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-5\">\r\n            {/* Header */}\r\n            <div className=\"bg-gray-800/60 border border-gray-700 rounded-lg px-5 py-4 flex flex-col gap-3 md:gap-2 md:flex-row md:items-center md:justify-between\">\r\n                <div className=\"w-full md:w-auto flex-1\">\r\n                    <h2 className=\"text-2xl md:text-3xl font-bold text-white mb-1 tracking-tight\">Step 1 — Program Fundamentals</h2>\r\n                    <p className=\"text-gray-300 text-sm md:text-base mb-2 md:mb-1 leading-snug\">Configure base settings and establish training maxes (TMs) for all four main lifts.</p>\r\n                    <div className=\"flex items-center gap-3\" aria-label=\"Training max progress\">\r\n                        <div className=\"w-48 h-2.5 bg-gray-700/50 rounded-full overflow-hidden\">\r\n                            <div className=\"h-full bg-gradient-to-r from-green-500 via-green-400 to-emerald-400 transition-all duration-300\" style={{ width: `${tmProgress.percent}%` }} />\r\n                        </div>\r\n                        <span className=\"text-xs font-medium text-gray-400 tabular-nums\">{tmProgress.completed}/{tmProgress.total} set</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                    {autoSaved && (\r\n                        <div className=\"inline-flex items-center gap-1 text-[12px] font-medium text-green-400 bg-green-500/10 border border-green-500/30 px-2 py-1 rounded-md shadow-sm transition-opacity animate-pulse\">\r\n                            <span className=\"inline-block w-2 h-2 rounded-full bg-green-400\" /> Auto-saved\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Settings */}\r\n            <div className=\"bg-gray-800/60 border border-gray-700 rounded-lg px-4 py-3\">\r\n                <div className=\"flex items-center justify-start mb-2 gap-4\">\r\n                    <h3 className=\"text-lg font-semibold text-white tracking-wide uppercase\">Settings</h3>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-3 lg:gap-4 items-start\">\r\n                    {/* Units */}\r\n                    <div>\r\n                        <label className=\"block text-[12px] font-semibold text-gray-300 mb-1 uppercase tracking-wide\">Units</label>\r\n                        <div className=\"flex gap-2 mb-1\">\r\n                            {['lb', 'kg'].map(unit => (\r\n                                <ToggleButton\r\n                                    key={unit}\r\n                                    on={localState.units === unit}\r\n                                    onClick={() => updateLocalState({ units: unit })}\r\n                                    className=\"text-xs px-4\"\r\n                                >{unit.toUpperCase()}</ToggleButton>\r\n                            ))}\r\n                        </div>\r\n                        <p className=\"text-[12px] leading-snug text-gray-400\">Choose weight units. <span className=\"font-medium text-gray-300\">LB</span> uses 2.5 / 5 lb increments, <span className=\"font-medium text-gray-300\">KG</span> uses 1.25 / 2.5 kg increments.</p>\r\n                    </div>\r\n\r\n                    {/* Rounding */}\r\n                    <div>\r\n                        <label className=\"block text-[12px] font-semibold text-gray-300 mb-1 uppercase tracking-wide\">Rounding</label>\r\n                        <select\r\n                            value={localState.rounding}\r\n                            onChange={(e) => updateLocalState({ rounding: e.target.value })}\r\n                            className=\"w-full bg-gray-800 border border-gray-600 rounded px-3 py-2 text-white text-sm focus:border-red-500 focus:outline-none mb-1\"\r\n                        >\r\n                            <option value=\"ceil\">Round up</option>\r\n                            <option value=\"nearest\">Nearest</option>\r\n                            <option value=\"floor\">Round down</option>\r\n                        </select>\r\n                        <ul className=\"text-[12px] leading-snug text-gray-400 space-y-0.5\">\r\n                            <li><span className=\"text-gray-400 font-medium\">Round up:</span> Always to next increment (slightly heavier).</li>\r\n                            <li><span className=\"text-gray-400 font-medium\">Nearest:</span> Standard rounding (recommended).</li>\r\n                            <li><span className=\"text-gray-400 font-medium\">Round down:</span> Slightly lighter / conservative.</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    {/* TM Percentage */}\r\n                    <div>\r\n                        <label className=\"block text-[12px] font-semibold text-gray-300 mb-1 uppercase tracking-wide\">Training Max %</label>\r\n                        <div className=\"flex gap-2 mb-1\">\r\n                            {[0.90, 0.85].map(pct => (\r\n                                <ToggleButton\r\n                                    key={pct}\r\n                                    on={localState.tmPct === pct}\r\n                                    onClick={() => updateLocalState({ tmPct: pct })}\r\n                                    className=\"text-xs px-4\"\r\n                                >{Math.round(pct * 100)}%</ToggleButton>\r\n                            ))}\r\n                        </div>\r\n                        <ul className=\"text-[12px] leading-snug text-gray-400 space-y-0.5\">\r\n                            <li><span className=\"text-gray-400 font-medium\">90%:</span> Standard starting point for most lifters.</li>\r\n                            <li><span className=\"text-gray-400 font-medium\">85%:</span> Conservative (new lifters, return from layoff/injury).</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Training Max Inputs */}\r\n            <div className=\"bg-gray-800/60 border border-gray-700 rounded-lg px-5 py-6 space-y-6\">\r\n                <h3 className=\"text-3xl md:text-4xl font-extrabold text-white tracking-tight leading-tight\">Training Maxes</h3>\r\n                <div className=\"prose prose-invert max-w-none text-sm md:text-[15px] leading-relaxed [&_strong]:text-gray-100 [&_strong]:font-semibold\">\r\n                    <p className=\"text-gray-200\">Establish your training max for each lift using <strong>ONE</strong> of three methods. Your training max should be <strong>85–90% of your true 1RM</strong> to allow sustainable progress without burnout.</p>\r\n                    <div className=\"space-y-5 mt-4\">\r\n                        <div className=\"bg-gray-900/60 border border-gray-700/70 rounded-lg p-4 shadow-sm\">\r\n                            <h4 className=\"text-base font-semibold text-white mb-1\">Tested 1RM <span className=\"text-xs font-medium text-gray-500\">— Use your actual tested maximum</span></h4>\r\n                            <p className=\"text-gray-300 text-sm\">Enter the heaviest weight you can lift for 1 clean rep with solid form (no grind). Wendler suggests it should feel like you could perform 2–3 more reps on a fresh day.</p>\r\n                        </div>\r\n                        <div className=\"bg-gray-900/60 border border-gray-700/70 rounded-lg p-4 shadow-sm\">\r\n                            <h4 className=\"text-base font-semibold text-white mb-1\">Rep Calculator <span className=\"text-xs font-medium text-gray-500\">— Calculate from recent rep test (3–10 reps)</span></h4>\r\n                            <p className=\"text-gray-300 text-sm\">Use Wendler's formula: <span className=\"font-mono\">Est. 1RM = Weight × Reps × 0.0333 + Weight</span>. Most accurate with sets of 3–5 reps. Enter weight and reps from your most recent heavy set.</p>\r\n                        </div>\r\n                        <div className=\"bg-gray-900/60 border border-gray-700/70 rounded-lg p-4 shadow-sm\">\r\n                            <h4 className=\"text-base font-semibold text-white mb-1\">Manual Override <span className=\"text-xs font-medium text-gray-500\">— Set custom training max (85–90% of 1RM)</span></h4>\r\n                            <p className=\"text-gray-300 text-sm\">Directly input your desired training max. Use <strong>85%</strong> if returning from a break, managing fatigue, or prioritizing long runway. Use <strong>90%</strong> for standard progression. Better to start <em>too light</em> than too heavy.</p>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"mt-2 text-gray-400 text-sm\">Only one method is needed per lift. Switching tabs preserves previous entries but only the active tab's data is used.</p>\r\n                </div>\r\n                <div className=\"grid md:grid-cols-2 gap-4 md:gap-5\">\r\n                    {Object.keys(localState.lifts).map(renderLiftRow)}\r\n                </div>\r\n            </div>\r\n\r\n            {/* Info Boxes */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                {/* Info */}\r\n                <div className=\"bg-blue-900/20 border border-blue-700/50 rounded-lg p-4\">\r\n                    <div className=\"flex items-start space-x-3\">\r\n                        <Info className=\"w-5 h-5 text-blue-400 mt-0.5 flex-shrink-0\" />\r\n                        <div>\r\n                            <h4 className=\"font-semibold text-blue-300 mb-1\">Training Max Philosophy</h4>\r\n                            <p className=\"text-blue-100 text-sm\">\r\n                                TM should be 85-90% of your true 1RM. Rounding increments: {localState.units === 'kg' ? '2.5 kg' : '5 lb'} ({localState.rounding}).\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Warning */}\r\n                <div className=\"bg-yellow-900/20 border border-yellow-700/50 rounded-lg p-4\">\r\n                    <div className=\"flex items-start space-x-3\">\r\n                        <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5 flex-shrink-0\" />\r\n                        <div>\r\n                            <h4 className=\"font-semibold text-yellow-300 mb-1\">Training Max Validation</h4>\r\n                            <p className=\"text-yellow-100 text-sm\">\r\n                                If you can't get 5+ reps at your TM on Week 1's top set, your TM is too high.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","// 5/3/1 Template Specifications\r\nimport { TEMPLATE_KEYS } from './531.presets.v2.js';\r\n\r\nconst TIME = {\r\n    FAST: '30-40 min',\r\n    MODERATE: '45-60 min',\r\n    LONG: '60-90 min'\r\n};\r\n\r\nexport const TEMPLATE_SPECS = {\r\n    [TEMPLATE_KEYS.BBB]: {\r\n        key: TEMPLATE_KEYS.BBB,\r\n        name: 'Boring But Big (BBB)',\r\n        blurb: 'High-volume supplemental work (5×10) for size and work capacity. Start conservative with 50% and progress slowly. Book-accurate assistance pairings from pages 46-47.',\r\n        metaBadges: {\r\n            time: TIME.LONG,\r\n            difficulty: 'Intermediate',\r\n            focus: 'Hypertrophy'\r\n        },\r\n        structure: [\r\n            'Main 5/3/1 sets',\r\n            'Supplemental 5×10 @ 50-60% TM (book range)',\r\n            'ONE assistance movement (25-50 reps)',\r\n            'Optional conditioning 2-3x weekly'\r\n        ],\r\n        time: TIME.LONG,\r\n        recovery: 'High local muscular fatigue; manage assistance & conditioning carefully. Deload as prescribed. Cut back on everything during Week 4.',\r\n        who: 'Intermediate/advanced lifters pursuing hypertrophy with significant main‑lift volume; not ideal for novices still grooving technique under lower fatigue.',\r\n        assistanceHint: {\r\n            intent: 'BBB assistance should be ONE movement only (book-accurate). 25-50 reps total. Opposite movement pattern for balance.',\r\n            examples: {\r\n                Press: ['Chin-ups: 5×10'], // Book-accurate from pages 46-47\r\n                Bench: ['Dumbbell Row: 5×10'], // Book-accurate from pages 46-47\r\n                Deadlift: ['Hanging Leg Raise: 5×15'], // Book-accurate from pages 46-47\r\n                Squat: ['Leg Curl: 5×10'] // Book-accurate from pages 46-47\r\n            },\r\n            totalReps: '25-50 reps total assistance work'\r\n        }\r\n    },\r\n    [TEMPLATE_KEYS.TRIUMVIRATE]: {\r\n        key: TEMPLATE_KEYS.TRIUMVIRATE,\r\n        name: 'Triumvirate',\r\n        blurb: 'Main lift + exactly two focused assistance movements (5 sets each). Balanced, time‑efficient baseline. For lifters wanting a sustainable structure without large assistance volume. 3–4 training days; avoid >2 consecutive days.',\r\n        metaBadges: {\r\n            time: '45-60 min',\r\n            difficulty: 'Intermediate',\r\n            focus: 'Balanced'\r\n        },\r\n        structure: [\r\n            'Main 5/3/1 sets',\r\n            '2 assistance exercises (5 sets each)',\r\n            'Optional conditioning'\r\n        ],\r\n        time: TIME.MODERATE,\r\n        recovery: 'Moderate systemic stress. Sustainable long-term baseline template.',\r\n        who: 'Beginner to early intermediate lifters building consistency; also useful as anchor between higher volume cycles.',\r\n        assistanceHint: {\r\n            intent: 'Exactly three total movements per day: main lift + two assistance (book-accurate from pages 47-49).',\r\n            examples: {\r\n                Press: ['Dips: 5×15', 'Chin-ups: 5×10'], // Book-accurate\r\n                Bench: ['Dumbbell Bench Press: 5×15', 'Dumbbell Row: 5×10'], // Book-accurate p.48\r\n                Deadlift: ['Good Mornings: 5×12', 'Hanging Leg Raises: 5×15'], // Book-accurate\r\n                Squat: ['Leg Press: 5×15', 'Leg Curl: 5×10'] // Book-accurate p.48\r\n            },\r\n            totalReps: '50-100 reps total assistance work'\r\n        }\r\n    },\r\n    [TEMPLATE_KEYS.PERIODIZATION_BIBLE]: {\r\n        key: TEMPLATE_KEYS.PERIODIZATION_BIBLE,\r\n        name: 'Periodization Bible',\r\n        blurb: 'Layered assistance blocks emphasizing multiple movement patterns (Dave Tate style). For lifters seeking broad movement pattern coverage and higher assistance volume in a four‑day split.',\r\n        metaBadges: {\r\n            time: '60-90 min',\r\n            difficulty: 'Advanced',\r\n            focus: 'Periodized'\r\n        },\r\n        structure: [\r\n            'Main 5/3/1 sets',\r\n            '4–5 varied assistance blocks (10–20 rep ranges)',\r\n            'Core & posterior chain emphasis',\r\n            'Conditioning kept brief'\r\n        ],\r\n        time: TIME.LONG,\r\n        recovery: 'High total volume; monitor joints & sleep. Scale blocks down if recovery degrades.',\r\n        who: 'Experienced lifters needing structured variation and comprehensive pattern balance over a training block.',\r\n        assistanceHint: {\r\n            intent: 'Higher volume assistance: 100-200 reps total. Multiple movement patterns per day (Dave Tate style).',\r\n            examples: {\r\n                Press: ['Shoulders: 5×10-20', 'Lats: 5×10-20', 'Triceps: 5×10-20'], // Book-accurate categories\r\n                Bench: ['Chest: 5×10-20', 'Upper Back: 5×10-20', 'Triceps: 5×10-20'], // Book-accurate categories\r\n                Deadlift: ['Hamstrings: 5×10-20', 'Abs: 5×10-20', 'Low Back: 5×10-20'], // Book-accurate categories\r\n                Squat: ['Quads: 5×10-20', 'Hamstrings: 5×10-20', 'Abs: 5×10-20'] // Book-accurate categories\r\n            },\r\n            totalReps: '100-200 reps total assistance work'\r\n        }\r\n    },\r\n    [TEMPLATE_KEYS.BODYWEIGHT]: {\r\n        key: TEMPLATE_KEYS.BODYWEIGHT,\r\n        name: 'Bodyweight Assistance',\r\n        blurb: 'Leverages bodyweight variations for assistance when equipment is limited. Good for beginners, older lifters, or joint‑sensitive phases needing lower external loading.',\r\n        metaBadges: {\r\n            time: '30-40 min',\r\n            difficulty: 'Beginner Friendly',\r\n            focus: 'Equipment-Free'\r\n        },\r\n        structure: [\r\n            'Main 5/3/1 sets',\r\n            'Calisthenics assistance (push / pull / squat / core)',\r\n            'Short conditioning or finishers'\r\n        ],\r\n        time: TIME.FAST,\r\n        recovery: 'Lower external loading; easier joint stress but watch elbow/shoulder volume from high push/pull reps.',\r\n        who: 'Novice / detrained / equipment‑limited lifters focusing on movement quality and joint friendliness.',\r\n        assistanceHint: {\r\n            intent: 'Bodyweight movements: Minimum 75 reps per exercise. Book-accurate pairings from page 52.',\r\n            examples: {\r\n                Press: ['Chin-ups: 75+ reps', 'Dips: 75+ reps'], // Book-accurate from p.52\r\n                Bench: ['Chin-ups: 75+ reps', 'Dips: 75+ reps'], // Book-accurate from p.52\r\n                Deadlift: ['Good Morning: 75+ reps', 'Leg Raises: 75+ reps'], // Book-accurate from p.52\r\n                Squat: ['Good Morning: 75+ reps', 'Leg Raises: 75+ reps'] // Book-accurate from p.52\r\n            },\r\n            totalReps: '75+ reps per exercise minimum'\r\n        }\r\n    },\r\n    [TEMPLATE_KEYS.JACK_SHIT]: {\r\n        key: TEMPLATE_KEYS.JACK_SHIT,\r\n        name: 'Jack Shit',\r\n        blurb: 'Only the main 5/3/1 work. No supplemental or assistance. For experienced lifters during highly stressful or time‑constrained weeks—maintain momentum without added fatigue.',\r\n        metaBadges: {\r\n            time: '30-40 min',\r\n            difficulty: 'Beginner Friendly',\r\n            focus: 'Strength Only'\r\n        },\r\n        structure: [\r\n            'Main 5/3/1 sets only',\r\n            'Leave gym (or do light mobility)',\r\n            'Add conditioning if energy allows'\r\n        ],\r\n        time: TIME.FAST,\r\n        recovery: 'Very low auxiliary fatigue. Ideal for stressful life phases or resetting motivation.',\r\n        who: 'Any lifter needing a strategic low‑stress microcycle (travel, finals week, high job stress).',\r\n        assistanceHint: {\r\n            intent: 'Deliberately none. Focus only on main lifts. If you routinely add accessories, switch templates.',\r\n            examples: {},\r\n            totalReps: '0 reps assistance work'\r\n        }\r\n    }\r\n};\r\n\r\nexport function getTemplateSpec(key) {\r\n    return TEMPLATE_SPECS[key] || null;\r\n}\r\n\r\nexport default TEMPLATE_SPECS;\r\n","import React, { useMemo, useState } from \"react\";\r\nimport { ASSISTANCE_CATALOG, EXERCISE_NOTES } from \"../../assistance/index.js\";\r\n\r\n// Helper: flatten category object -> annotated array\r\nfunction useFlatCatalog() {\r\n    return useMemo(() => {\r\n        if (!ASSISTANCE_CATALOG) return [];\r\n        // If already an array (future proof), just return\r\n        if (Array.isArray(ASSISTANCE_CATALOG)) return ASSISTANCE_CATALOG;\r\n        // Otherwise treat as object keyed by category (push, pull, ...)\r\n        return Object.entries(ASSISTANCE_CATALOG).flatMap(([cat, arr]) => (\r\n            (arr || []).map(item => ({\r\n                ...item,\r\n                block: item.block || (cat === 'singleLeg' ? 'Single-Leg' : cat.charAt(0).toUpperCase() + cat.slice(1)),\r\n                equipment: item.equipment || item.equip || []\r\n            }))\r\n        ));\r\n    }, []);\r\n}\r\n\r\nexport default function AssistanceCatalogPicker({ block, equipment = [], onPick, onClose, limitIds = null, keepOpen = false }) {\r\n    const [q, setQ] = useState(\"\");\r\n    const [categoryFilter, setCategoryFilter] = useState('All');\r\n    const flat = useFlatCatalog();\r\n\r\n    // Category mappings for book-accurate BBB assistance\r\n    const categories = {\r\n        'All': 'All Exercises',\r\n        'Push': 'Push Pattern',\r\n        'Pull': 'Pull Pattern',\r\n        'Core': 'Core/Abs',\r\n        'Single-Leg': 'Single-Leg/Unilateral'\r\n    };\r\n\r\n    const filtered = useMemo(() => {\r\n        return flat.filter(x => {\r\n            if (limitIds && !limitIds.includes(x.id)) return false;\r\n            const byBlock = block && block !== 'All' ? (x.block === block) : true;\r\n\r\n            // Category filter logic (book-accurate BBB patterns)\r\n            const byCategory = categoryFilter === 'All' ? true : (() => {\r\n                const exerciseBlock = (x.block || '').toLowerCase();\r\n                const exerciseName = (x.name || '').toLowerCase();\r\n\r\n                switch (categoryFilter) {\r\n                    case 'Push':\r\n                        return exerciseBlock.includes('push') || exerciseName.includes('dip') || exerciseName.includes('press') || exerciseName.includes('tricep');\r\n                    case 'Pull':\r\n                        return exerciseBlock.includes('pull') || exerciseName.includes('chin') || exerciseName.includes('pullup') || exerciseName.includes('row') || exerciseName.includes('curl');\r\n                    case 'Core':\r\n                        return exerciseBlock.includes('core') || exerciseName.includes('leg raise') || exerciseName.includes('hang') || exerciseName.includes('abs') || exerciseName.includes('plank');\r\n                    case 'Single-Leg':\r\n                        return exerciseBlock.includes('single') || exerciseName.includes('lunge') || exerciseName.includes('leg curl') || exerciseName.includes('step') || exerciseName.includes('unilateral');\r\n                    default:\r\n                        return true;\r\n                }\r\n            })();\r\n\r\n            // Exercise is allowed if all its required equipment are contained in user equipment selection\r\n            const req = x.equipment || [];\r\n            const byEquip = req.every(tag => equipment.includes(tag));\r\n            const byQuery = q ? (x.name.toLowerCase().includes(q.toLowerCase())) : true;\r\n            return byBlock && byEquip && byQuery && byCategory;\r\n        });\r\n    }, [q, block, equipment, flat, limitIds, categoryFilter]);\r\n\r\n    return (\r\n        <div\r\n            className=\"p-3 border border-gray-600 rounded bg-gray-900 shadow-xl space-y-2 text-xs max-w-md\"\r\n            onClick={(e) => e.stopPropagation()}\r\n        >\r\n            <div className=\"flex gap-2\">\r\n                <input\r\n                    className=\"flex-1 border border-gray-600 bg-gray-800 rounded px-2 py-1 text-xs text-gray-100\"\r\n                    placeholder=\"Search exercises…\"\r\n                    value={q}\r\n                    onChange={e => setQ(e.target.value)}\r\n                    onClick={(e) => e.stopPropagation()}\r\n                />\r\n                <button\r\n                    className=\"border border-gray-600 hover:border-gray-400 rounded px-2 py-1 text-gray-300\"\r\n                    onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        onClose();\r\n                    }}\r\n                    type=\"button\"\r\n                >Close</button>\r\n            </div>\r\n\r\n            {keepOpen && (\r\n                <div className=\"text-[10px] text-blue-300 bg-blue-900/20 border border-blue-500/40 rounded px-2 py-1\">\r\n                    💡 Modal stays open - browse and select multiple exercises\r\n                </div>\r\n            )}\r\n\r\n            {/* Category Filter Radio Buttons - Book-accurate BBB assistance patterns */}\r\n            <div className=\"space-y-1\">\r\n                <div className=\"text-[10px] text-gray-400 font-medium\">Filter by Movement Pattern:</div>\r\n                <div className=\"flex flex-wrap gap-1\">\r\n                    {Object.entries(categories).map(([key, label]) => (\r\n                        <label key={key} className=\"flex items-center gap-1 cursor-pointer\" onClick={(e) => e.stopPropagation()}>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"categoryFilter\"\r\n                                value={key}\r\n                                checked={categoryFilter === key}\r\n                                onChange={e => setCategoryFilter(e.target.value)}\r\n                                onClick={(e) => e.stopPropagation()}\r\n                                className=\"w-3 h-3 text-indigo-600 bg-gray-800 border-gray-600 focus:ring-indigo-500\"\r\n                            />\r\n                            <span className={`text-[10px] px-1 py-0.5 rounded ${categoryFilter === key ? 'bg-indigo-600/20 text-indigo-300' : 'text-gray-400'}`}>\r\n                                {label}\r\n                            </span>\r\n                        </label>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"max-h-64 overflow-auto divide-y divide-gray-700\">\r\n                {filtered.map(x => {\r\n                    const note = EXERCISE_NOTES[x.id];\r\n                    return (\r\n                        <div key={x.id} className=\"flex items-center justify-between py-1\" title={note || ''}>\r\n                            <div className=\"pr-3\">\r\n                                <div className=\"font-medium text-gray-200 leading-tight flex items-center gap-1\">\r\n                                    {x.block && <span className=\"text-[9px] px-1 py-0.5 rounded bg-gray-700/60 border border-gray-600 text-gray-300\">{x.block}</span>}\r\n                                    <span>{x.name}</span>\r\n                                </div>\r\n                                <div className=\"text-[10px] text-gray-500\">{(x.equipment || []).join(', ') || 'Any'}{note && <span className=\"text-gray-600\"> — {note}</span>}</div>\r\n                            </div>\r\n                            <button\r\n                                className=\"border border-indigo-600/60 hover:border-indigo-400 rounded px-2 py-1 text-[10px] text-indigo-300\"\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    onPick(x);\r\n                                    // Only close modal if keepOpen is false (default behavior)\r\n                                    if (!keepOpen) {\r\n                                        onClose();\r\n                                    }\r\n                                }}\r\n                                type=\"button\"\r\n                            >Select</button>\r\n                        </div>\r\n                    );\r\n                })}\r\n                {!filtered.length && <div className=\"py-2 text-gray-500\">No matches for \"{categoryFilter}\" category.</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { useProgramV2 } from '../../contexts/ProgramContextV2.jsx';\nimport { TEMPLATE_KEYS, getTemplatePreset } from '../../../../lib/templates/531.presets.v2.js';\nimport { getTemplateSpec, TEMPLATE_SPECS } from '../../../../lib/templates/531.templateSpecs.js';\nimport { CheckCircle2, Info, X, AlertTriangle } from 'lucide-react';\nimport ToggleButton from '../ToggleButton.jsx';\nimport { normalizeAssistance } from '../../assistance/index.js';\nimport AssistanceCatalogPicker from '../assistance/AssistanceCatalogPicker.jsx';\nimport { buildWarmupSets, buildMainSetsForLift } from '../..';\n\n/**\n * Step2TemplateOrCustom.jsx\n * Choose a built-in template (auto-config + jump to review) or continue custom design.\n */\nexport default function Step2TemplateOrCustom({ onChoose, onAutoNext }) {\n    const ctx = useProgramV2();\n    const { state, dispatch } = ctx;\n    const [selectedTemplate, setSelectedTemplate] = useState(null);\n    const [expandedTemplate, setExpandedTemplate] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [errors, setErrors] = useState([]);\n\n    const templateCards = useMemo(() => Object.values(TEMPLATE_SPECS).map(spec => ({\n        key: spec.key,\n        title: spec.name,\n        blurb: spec.blurb,\n        detail: spec.recovery,\n        spec\n    })), []);\n\n    function logTemplate(stage, payload) {\n        try {\n            if (typeof window !== 'undefined' && window.localStorage?.getItem('debug.531.template') === 'off') return;\n            // eslint-disable-next-line no-console\n            console.info('[531:TEMPLATE_SYNC] Step2', stage, payload);\n        } catch { /* ignore */ }\n    }\n\n    function handleSelectTemplate(key) {\n        setSelectedTemplate(key);\n        setExpandedTemplate(prev => prev === key ? null : key);\n        setErrors([]);\n        logTemplate('select', { key });\n\n        // Validate template requirements\n        const validation = validateTemplateRequirements(key, state);\n        if (!validation.isValid) {\n            setErrors(validation.errors);\n        }\n    }\n\n    function validateTemplateRequirements(templateKey, currentState) {\n        const errors = [];\n\n        if (!currentState?.lifts) {\n            errors.push('Complete Step 1 (Training Maxes) before selecting a template');\n            return { isValid: false, errors };\n        }\n\n        const lifts = ['press', 'bench', 'squat', 'deadlift'];\n        const missingTMs = lifts.filter(lift => !currentState.lifts[lift]?.tm || currentState.lifts[lift].tm <= 0);\n\n        if (missingTMs.length > 0) {\n            errors.push(`Missing training maxes for: ${missingTMs.map(l => l.charAt(0).toUpperCase() + l.slice(1)).join(', ')}`);\n        }\n\n        return { isValid: errors.length === 0, errors };\n    }\n\n    // Local BBB variant state (book-accurate BBB only)\n    const [bbbVariant, setBbbVariant] = useState('standard'); // always standard (book-accurate)\n    const [bbbPairing, setBbbPairing] = useState('same'); // 'same' | 'opposite'\n    const [bbbStartPercent, setBbbStartPercent] = useState(50); // 50|55|60 (book range)\n    const [bbbProgressTo, setBbbProgressTo] = useState(60); // target escalation within book range\n\n    // Assistance editing state per template key -> map of Lift -> array of movements\n    const [assistEdit, setAssistEdit] = useState({});\n    const [openPicker, setOpenPicker] = useState(null); // { templateKey, lift, index } or null\n\n    // Book-accurate BBB assistance defaults based on Wendler's \"opposite movement pattern\" guidance\n    function getBBBAssistanceDefaults() {\n        return {\n            'Press': [{ name: 'Chin-up', sets: 5, reps: 10, block: 'Pull' }],\n            'Bench': [{ name: 'DB Row', sets: 5, reps: 10, block: 'Pull' }],\n            'Squat': [{ name: 'Leg Curl', sets: 5, reps: 10, block: 'Single-Leg' }],\n            'Deadlift': [{ name: 'Hanging Leg Raise', sets: 5, reps: 15, block: 'Core' }]\n        };\n    }\n\n    function initAssistanceForTemplate(templateKey, assistancePreview) {\n        setAssistEdit(prev => {\n            if (prev[templateKey]) return prev; // already initialized\n            const mapped = {};\n\n            // Pre-populate BBB with book-accurate assistance defaults\n            if (templateKey === TEMPLATE_KEYS.BBB) {\n                const bbbDefaults = getBBBAssistanceDefaults();\n                assistancePreview.forEach(ap => {\n                    const liftDefaults = bbbDefaults[ap.lift] || [];\n                    mapped[ap.lift] = liftDefaults.length > 0 ? liftDefaults :\n                        [{ name: '', sets: 5, reps: 10, block: null }]; // Empty slot with BBB defaults\n                });\n            } else {\n                // Other templates use their existing logic\n                assistancePreview.forEach(ap => {\n                    const limit = templateKey === TEMPLATE_KEYS.BBB ? 1 : 2;\n                    mapped[ap.lift] = (ap.items || []).slice(0, limit).map(it => ({\n                        name: it.name,\n                        sets: it.sets || 3,\n                        reps: it.reps || 10,\n                        block: it.block || null\n                    }));\n                });\n            }\n            return { ...prev, [templateKey]: mapped };\n        });\n    }\n\n    // Initialize assistance editing structure once when a template is first expanded\n    useEffect(() => {\n        if (!expandedTemplate) return;\n        if (assistEdit[expandedTemplate]) return; // already done\n        const spec = getTemplateSpec(expandedTemplate);\n        if (!spec) return;\n        const lifts = ['Press', 'Deadlift', 'Bench', 'Squat'];\n        const assistancePreview = lifts.map(l => ({ lift: l, items: normalizeAssistance(spec.key, l, state) }));\n        initAssistanceForTemplate(expandedTemplate, assistancePreview);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [expandedTemplate, state]);\n\n    function updateAssist(templateKey, lift, idx, patch) {\n        setAssistEdit(prev => {\n            const tpl = { ...(prev[templateKey] || {}) };\n            const arr = [...(tpl[lift] || [])];\n            if (idx >= 0 && idx < arr.length) arr[idx] = { ...arr[idx], ...patch };\n            tpl[lift] = arr;\n            return { ...prev, [templateKey]: tpl };\n        });\n    }\n    function addAssistRow(templateKey, lift, limit) {\n        setAssistEdit(prev => {\n            const tpl = { ...(prev[templateKey] || {}) };\n            const arr = [...(tpl[lift] || [])];\n            if (arr.length >= limit) return prev;\n\n            // Use BBB defaults (5x10) vs standard defaults (3x10)\n            const defaultSets = templateKey === TEMPLATE_KEYS.BBB ? 5 : 3;\n            const defaultReps = 10;\n\n            arr.push({ name: '', sets: defaultSets, reps: defaultReps, block: null });\n            tpl[lift] = arr;\n            return { ...prev, [templateKey]: tpl };\n        });\n    }\n    function removeAssistRow(templateKey, lift, idx) {\n        setAssistEdit(prev => {\n            const tpl = { ...(prev[templateKey] || {}) };\n            const arr = [...(tpl[lift] || [])];\n            arr.splice(idx, 1);\n            tpl[lift] = arr;\n            return { ...prev, [templateKey]: tpl };\n        });\n    }\n\n    function applyTemplate(templateKeyOverride) {\n        const key = templateKeyOverride || selectedTemplate;\n        if (!key || errors.length > 0) return;\n\n        setIsLoading(true);\n        setErrors([]);\n\n        try {\n            const opts = {};\n            if (key === TEMPLATE_KEYS.BBB) {\n                opts.bbb = {\n                    variant: bbbVariant,\n                    pairing: bbbPairing,\n                    startPercent: bbbVariant === 'standard' ? bbbStartPercent : 30,\n                    progressTo: bbbVariant === 'standard' ? bbbProgressTo : 60\n                };\n            }\n\n            const preset = getTemplatePreset(key, ctx, opts);\n            if (!preset) {\n                throw new Error(`Template ${key} configuration not found`);\n            }\n\n            const spec = getTemplateSpec(key);\n\n            // For BBB template, ensure all required fields are properly set\n            if (key === TEMPLATE_KEYS.BBB) {\n                // Ensure supplemental has percentage set\n                preset.supplemental = {\n                    ...preset.supplemental,\n                    percentOfTM: bbbStartPercent,\n                    percentage: bbbStartPercent, // Also set percentage field for compatibility\n                    strategy: 'bbb',\n                    sets: 5,\n                    reps: 10,\n                    pairing: bbbPairing\n                };\n                \n                // Ensure assistance is in template mode unless user customized\n                if (!assistEdit[key]) {\n                    preset.assistance = {\n                        mode: 'template',\n                        templateId: key\n                    };\n                } else {\n                    // User has customized - use custom mode\n                    const plan = assistEdit[key];\n                    preset.assistance = {\n                        mode: 'custom',\n                        customPlan: plan\n                    };\n                }\n            } else {\n                // Inject custom assistance if user edited (for non-BBB templates)\n                if (assistEdit[key]) {\n                    const plan = assistEdit[key];\n                    preset.assistance = {\n                        mode: 'custom',\n                        customPlan: plan\n                    };\n                }\n            }\n\n            dispatch({ type: 'SET_TEMPLATE_KEY', payload: preset.key });\n            dispatch({ type: 'APPLY_TEMPLATE_CONFIG', payload: preset });\n            logTemplate('apply', { key: preset.key, schedule: preset.schedule, assistanceMode: preset.assistance?.mode, hasCustomAssist: !!assistEdit[key] });\n\n            if (spec) {\n                dispatch({ type: 'SET_TEMPLATE_SPEC', payload: spec });\n                if (spec.assistanceHint) dispatch({ type: 'SET_ASSISTANCE_HINT', payload: spec.assistanceHint });\n            }\n\n            // Ensure we're in template mode\n            dispatch({ type: 'SET_FLOW_MODE', payload: 'template' });\n            dispatch({ type: 'SET_ASSIST_MODE', payload: preset.assistance?.mode || 'template' });\n\n            setTimeout(() => {\n                setIsLoading(false);\n                // post-dispatch state snapshot\n                try {\n                    const st = ctx.state;\n                    logTemplate('postDispatchState', { order: st?.schedule?.order, days: st?.schedule?.days });\n                } catch { /* ignore */ }\n\n                onChoose && onChoose('template');\n                onAutoNext && onAutoNext();\n                setExpandedTemplate(null);\n            }, 300);\n\n        } catch (error) {\n            console.error('Template application error:', error);\n            setErrors([error.message]);\n            setIsLoading(false);\n        }\n    }\n\n    function chooseCustom() {\n        onChoose && onChoose('custom');\n    }\n\n    // Map an exercise block to a normalized movement pattern\n    function mapBlockAlias(block) {\n        if (!block) return '';\n        const b = block.toLowerCase();\n        if (/(chin|pull|row|face|lat)/.test(b)) return 'Pull';\n        if (/(press|push|dip|triceps|bench|pushup)/.test(b)) return 'Push';\n        if (/(single|split|lunge|step|pistol|cossack)/.test(b)) return 'Single-Leg';\n        if (/(ab|core|plank|wheel|crunch|pallof|situp|side_plank|hanging|windshield)/.test(b)) return 'Core';\n        if (/(back ext|good|rdl|ghr|ham|glute|hip|posterior|swing|reverse_hyper)/.test(b)) return 'Posterior';\n        if (/(curl)/.test(b)) return 'Arms';\n        return block;\n    }\n\n    function repSchemeDescriptor(templateKey, variant, row, blockAlias, isMainLiftSupplemental = false) {\n        if (!templateKey) return '';\n        const key = templateKey.toLowerCase();\n        const blk = blockAlias || mapBlockAlias(row?.block);\n\n        if (key === TEMPLATE_KEYS.BBB) {\n            // Only show percentages for BBB supplemental work (same lift), not assistance\n            if (isMainLiftSupplemental) {\n                return `5×10 @ ${bbbStartPercent}% TM` + (bbbProgressTo && bbbProgressTo !== bbbStartPercent ? ` (progress toward ${bbbProgressTo}%)` : '');\n            } else {\n                // BBB assistance exercises just show fixed reps\n                return '5×10';\n            }\n        }\n        if (key === TEMPLATE_KEYS.TRIUMVIRATE) {\n            if (blk === 'Pull') return '5×10';\n            if (blk === 'Push') return '5×15';\n            if (blk === 'Posterior') return '5×12';\n            if (blk === 'Core') return '5×15';\n            if (blk === 'Single-Leg') return '5×15-10';\n            return '5×10';\n        }\n        if (key === TEMPLATE_KEYS.BODYWEIGHT) return 'Multiple sets to reach 75–100 reps';\n        if (key === TEMPLATE_KEYS.PERIODIZATION_BIBLE) return '5×10-20';\n        if (key === TEMPLATE_KEYS.JACK_SHIT) return 'None';\n        return '';\n    }\n\n    return (\n        <div className=\"space-y-6 relative\">\n            {isLoading && (\n                <div className=\"absolute inset-0 bg-gray-900/60 backdrop-blur-sm rounded-lg flex items-center justify-center z-10\">\n                    <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4 flex items-center gap-3\">\n                        <div className=\"animate-spin w-5 h-5 border-2 border-blue-500 border-t-transparent rounded-full\"></div>\n                        <span className=\"text-white text-sm\">Configuring template...</span>\n                    </div>\n                </div>\n            )}\n\n            <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-6\">\n                <h2 className=\"text-2xl font-bold text-white mb-2\">Step 2 — Template or Custom</h2>\n                <p className=\"text-gray-400\">Select a proven Wendler template for instant configuration or continue with a fully custom build.</p>\n            </div>\n\n            {errors.length > 0 && (\n                <div className=\"bg-red-900/20 border border-red-500/50 rounded-lg p-4\">\n                    <div className=\"flex items-start gap-3\">\n                        <div className=\"text-red-400 mt-0.5\">⚠️</div>\n                        <div>\n                            <h4 className=\"text-red-300 font-medium mb-2\">Template Selection Issues</h4>\n                            <ul className=\"space-y-1\">\n                                {errors.map((error, idx) => (\n                                    <li key={idx} className=\"text-red-200 text-sm\">• {error}</li>\n                                ))}\n                            </ul>\n                            <div className=\"mt-3 text-xs text-red-300\">\n                                💡 Complete Step 1 (Training Maxes) before selecting a template\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            <div className=\"bg-blue-900/20 border border-blue-700/40 rounded-lg p-4 flex space-x-3\">\n                <Info className=\"w-5 h-5 text-blue-300 flex-shrink-0\" />\n                <div className=\"text-sm text-blue-100\">\n                    Applying a template will auto-configure schedule, supplemental, and assistance settings. Beginners typically start with <span className=\"font-semibold text-white\">Triumvirate</span> or <span className=\"font-semibold text-white\">Bodyweight Assistance</span>. Intermediate lifters chasing size may choose <span className=\"font-semibold text-white\">Boring But Big</span>. Adjust after 1–2 cycles based on recovery.\n                </div>\n            </div>\n\n            {/* Mode selection */}\n            <div className=\"grid grid-cols-1 gap-6\">\n                {/* Template selection area */}\n                <div className=\"space-y-6\">\n                    <div>\n                        <h3 className=\"text-lg font-semibold text-white mb-3\">Choose a Proven Template</h3>\n                        <p className=\"text-sm text-gray-400 mb-4\">Each template provides complete configuration based on Jim Wendler's proven methodologies. Click to expand details and configure.</p>\n                        <div className=\"flex flex-col gap-4\">\n                            {templateCards.map(card => {\n                                const active = selectedTemplate === card.key;\n                                const expanded = expandedTemplate === card.key;\n                                const spec = card.spec;\n                                // Build expanded content data only if expanded\n                                let expandedContent = null;\n                                if (expanded) {\n                                    const units = state?.units === 'kg' ? 'kg' : 'lbs';\n                                    const roundingMode = typeof state?.rounding === 'string' ? state?.rounding : (state?.rounding?.mode || 'nearest');\n                                    const roundingIncrement = typeof state?.rounding === 'object' ? (state?.rounding.increment || 5) : (units === 'kg' ? 2.5 : 5);\n                                    const exampleLift = 'Bench';\n                                    const tmBench = state?.lifts?.bench?.tm || 0;\n                                    const warmupScheme = state?.schedule?.warmupScheme || { percentages: [40, 50, 60], reps: [5, 5, 3] };\n                                    const includeWarmups = state?.schedule?.includeWarmups !== false;\n                                    const loadingOption = state?.loadingOption || state?.loading?.option || 1;\n                                    const weekIndex = 0;\n                                    const warmups = includeWarmups ? buildWarmupSets({ includeWarmups: true, warmupScheme, tm: tmBench, roundingIncrement, roundingMode, units }) : [];\n                                    const main = buildMainSetsForLift({ tm: tmBench, weekIndex, option: loadingOption, roundingIncrement, roundingMode, units }).sets;\n                                    // assistance initialization now handled by useEffect\n                                    const editing = assistEdit[card.key] || {};\n                                    const configComplete = ['Press', 'Deadlift', 'Bench', 'Squat'].every(l => (editing[l] || []).length > 0);\n                                    // Variant naming logic (BBB % + Jack Shit) mirroring modal\n                                    let dynamicName = spec?.name;\n                                    if (spec?.key === 'bbb') {\n                                        const supp = state?.supplemental;\n                                        if (supp?.strategy === 'bbb' && (supp?.pairing === 'same' || !supp?.pairing)) {\n                                            if (supp?.percentOfTM === 50) dynamicName = 'BBB 50% (Same-Lift Start)';\n                                            else if (supp?.percentOfTM === 60) dynamicName = 'BBB 60% (Same-Lift)';\n                                        }\n                                    }\n                                    const isBBBVariant = /^BBB (50% \\(Same-Lift Start\\)|60% \\(Same-Lift\\))$/.test(dynamicName || '');\n                                    const isJackShit = spec?.key === 'jack_shit';\n                                    const suppPct = state?.supplemental?.percentOfTM;\n                                    const variantStructure = isBBBVariant ? [\n                                        'Main 5/3/1 sets (Week 1–3 AMRAP, Week 4 deload)',\n                                        `Supplemental: 5×10 @ ${suppPct || 50}% TM (same lift)`,\n                                        'Assistance: ONE movement (classic BBB) – e.g. chins, dips, rows, back raises, abs'\n                                    ] : spec?.structure;\n                                    const variantRecovery = isBBBVariant ? 'High supplemental volume – start lighter (50%) and progress cautiously to 60% over time. Favor easy conditioning (LISS) and cap assistance at 25–50 quality reps per movement. Deload Week 4.' : spec?.recovery;\n                                    const jackShitStructure = [\n                                        'Main 5/3/1 sets only (Week 1–3 AMRAP, Week 4 deload)',\n                                        'Optional: 1–2 easy assistance movements (chins / dips / core)'\n                                    ];\n                                    const jackShitRecovery = 'Extremely low systemic stress. Ideal when time, equipment, or recovery is limited, or when re‑establishing training momentum.';\n                                    expandedContent = (\n                                        <div className=\"mt-4 border-t border-gray-700 pt-4 space-y-6 transition-all duration-300\">\n                                            <div className=\"flex items-start justify-between\">\n                                                <div>\n                                                    <h5 className=\"text-sm font-semibold text-white flex items-center gap-2\">{isJackShit ? 'Jack Shit' : (dynamicName || spec?.name)} <span className=\"px-1.5 py-0.5 rounded bg-indigo-600/20 border border-indigo-500/40 text-indigo-300 text-[10px] uppercase tracking-wide\">Details</span></h5>\n                                                    <p className=\"text-xs text-indigo-200 mt-1 leading-snug\">{isBBBVariant ? `High‑volume BBB same‑lift at ${suppPct || 50}% TM. Start light (50%)—only increase when recovery is solid.` : isJackShit ? 'Bare‑bones 5/3/1: main work only. Add a little optional assistance if fresh.' : spec?.blurb}</p>\n                                                    {spec?.who && <p className=\"text-[11px] text-gray-400 mt-2\"><span className=\"font-semibold text-gray-300\">Who This Is For:</span> {spec.who}</p>}\n                                                </div>\n                                                <button onClick={() => setExpandedTemplate(null)} className=\"text-gray-500 hover:text-gray-300\" aria-label=\"Collapse template\"><X className=\"w-4 h-4\" /></button>\n                                            </div>\n                                            {/* BBB Variant Controls */}\n                                            {spec.key === 'bbb' && (\n                                                <section className=\"bg-gray-800/60 border border-gray-700 rounded p-3 space-y-4 text-xs\">\n                                                    <h6 className=\"text-[11px] font-semibold uppercase tracking-wide text-indigo-300\">BBB Configuration</h6>\n                                                    <div className=\"text-[11px] text-gray-300 space-y-2\">\n                                                        <p><span className=\"font-semibold text-indigo-300\">Book-Accurate BBB:</span> Start at 50% of Training Max and work up to 60% over several cycles. Keep assistance minimal (1-2 exercises, 25-50 reps total).</p>\n                                                    </div>\n                                                    <div className=\"grid sm:grid-cols-3 gap-4\">\n                                                        <div className=\"space-y-1\">\n                                                            <label className=\"block text-[10px] uppercase text-gray-400\">Start %</label>\n                                                            <select value={bbbStartPercent} onChange={e => setBbbStartPercent(Number(e.target.value))} className=\"w-full bg-gray-900 border border-gray-700 rounded px-2 py-1.5 text-[11px] text-white\">\n                                                                {[50, 55, 60].map(p => <option key={p} value={p}>{p}%</option>)}\n                                                            </select>\n                                                        </div>\n                                                        <div className=\"space-y-1\">\n                                                            <label className=\"block text-[10px] uppercase text-gray-400\">Progress To</label>\n                                                            <select value={bbbProgressTo} onChange={e => setBbbProgressTo(Number(e.target.value))} className=\"w-full bg-gray-900 border border-gray-700 rounded px-2 py-1.5 text-[11px] text-white\">\n                                                                {[55, 60].map(p => <option key={p} value={p}>{p}%</option>)}\n                                                            </select>\n                                                        </div>\n                                                        <div className=\"space-y-1\">\n                                                            <label className=\"block text-[10px] uppercase text-gray-400\">Pairing</label>\n                                                            <select value={bbbPairing} onChange={e => setBbbPairing(e.target.value)} className=\"w-full bg-gray-900 border border-gray-700 rounded px-2 py-1.5 text-[11px] text-white\">\n                                                                <option value=\"same\">Same Lift</option>\n                                                                <option value=\"opposite\">Opposite Lift</option>\n                                                            </select>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"text-[10px] text-gray-400 leading-snug\">\n                                                        <p><strong className=\"text-gray-300\">Book Guidance:</strong> Begin at 50% and only increase when recovery is solid. Most lifters should stay at 50-60% range as described in the original 5/3/1 manual.</p>\n                                                    </div>\n                                                </section>\n                                            )}\n                                            <section className=\"grid md:grid-cols-3 gap-4 text-xs\">\n                                                <div className=\"bg-gray-800/60 rounded p-3\">\n                                                    <div className=\"text-[10px] uppercase tracking-wide text-gray-400 mb-1\">Session Time</div>\n                                                    <div className=\"text-gray-200\">{isJackShit ? 'Very short (10–25 min)' : (isBBBVariant ? 'Moderate (45–60 min)' : spec?.time)}</div>\n                                                </div>\n                                                <div className=\"bg-gray-800/60 rounded p-3 md:col-span-2\">\n                                                    <div className=\"text-[10px] uppercase tracking-wide text-gray-400 mb-1\">Recovery</div>\n                                                    <div className=\"text-gray-300 leading-snug text-[11px]\">{isJackShit ? jackShitRecovery : variantRecovery}</div>\n                                                </div>\n                                            </section>\n                                            <section>\n                                                <h6 className=\"text-[11px] font-semibold uppercase tracking-wide text-gray-400 mb-1\">Structure</h6>\n                                                <ul className=\"list-disc list-inside text-[11px] text-gray-300 space-y-0.5\">\n                                                    {(isJackShit ? jackShitStructure : variantStructure)?.map((s, i) => <li key={i}>{s}</li>)}\n                                                </ul>\n                                            </section>\n                                            {spec.assistanceHint && !isJackShit && (\n                                                <section className=\"space-y-3\">\n                                                    <h6 className=\"text-[11px] font-semibold uppercase tracking-wide text-gray-400 mb-1\">Assistance Guidance</h6>\n                                                    <p className=\"text-[11px] text-gray-300 leading-snug\">{isBBBVariant ? 'Choose ONE assistance movement only (book example). 25–50 quality reps. Keep it simple (e.g., chins, dips, rows, back raises, ab wheel). Progress load or reps slowly once recovery is rock solid.' : spec.assistanceHint.intent}</p>\n                                                    {spec.assistanceHint.examples && Object.keys(spec.assistanceHint.examples).length > 0 && (\n                                                        <div className=\"grid sm:grid-cols-2 md:grid-cols-4 gap-2\">\n                                                            {Object.entries(spec.assistanceHint.examples).map(([lift, arr]) => (\n                                                                <div key={lift} className=\"bg-gray-800/50 rounded p-2\">\n                                                                    <div className=\"text-[10px] uppercase tracking-wide text-gray-500 mb-1\">{lift}</div>\n                                                                    <ul className=\"text-[11px] text-gray-300 space-y-0.5\">\n                                                                        {arr.map((ex, i) => <li key={i}>{ex}</li>)}\n                                                                    </ul>\n                                                                </div>\n                                                            ))}\n                                                        </div>\n                                                    )}\n                                                </section>\n                                            )}\n                                            {isJackShit && (\n                                                <section className=\"space-y-2\">\n                                                    <h6 className=\"text-[11px] font-semibold uppercase tracking-wide text-gray-400 mb-1\">Guidance</h6>\n                                                    <ul className=\"list-disc list-inside text-[11px] text-gray-300 space-y-0.5\">\n                                                        <li>Main 5/3/1 work only; optionally add chins / dips / core if very fresh.</li>\n                                                        <li>Use when life stress or time is high, or re‑starting after a layoff.</li>\n                                                        <li>Great base for layering conditioning or mobility.</li>\n                                                    </ul>\n                                                </section>\n                                            )}\n                                            <section className=\"bg-gray-800/50 border border-gray-700 rounded p-3 text-[11px] text-gray-300 space-y-1\">\n                                                <h6 className=\"text-[10px] font-semibold uppercase tracking-wide text-indigo-300\">Week 4 Deload</h6>\n                                                <p className=\"leading-snug\">Main work: 40% ×5, 50% ×5, 60% ×5 of Training Max (no AMRAP). Cut back on everything - reduce or skip supplemental work and keep assistance light and restorative (easy pulls, core work) if desired.</p>\n                                                <p className=\"leading-snug text-gray-400\">Goal: \"If you're deloading, DELOAD\" - reduce all volume and intensity to prepare for the next cycle.</p>\n                                            </section>\n                                            <section>\n                                                <div className=\"flex items-center justify-between mb-2\">\n                                                    <h6 className=\"text-[11px] font-semibold uppercase tracking-wide text-gray-400\">Assistance Configuration</h6>\n                                                    {configComplete && <span className=\"text-[10px] px-2 py-0.5 rounded bg-green-600/20 border border-green-500/40 text-green-300\">✓ Configured</span>}\n                                                </div>\n                                                <div className=\"mb-4 text-[11px] text-gray-400 leading-snug bg-gray-800/40 border border-gray-700 rounded p-3\">\n                                                    <strong className=\"text-gray-300\">Guidance:</strong> Balance push / pull / single‑leg / core patterns. Pick movements that complement the main lift without duplicating its stress. Favor high quality reps over fatigue.\n                                                </div>\n                                                {(() => {\n                                                    // pattern recommendation map\n                                                    return null; // placeholder to show structure if needed later\n                                                })()}\n                                                <div className=\"space-y-4\">\n                                                    {['Press', 'Deadlift', 'Bench', 'Squat'].map(liftName => {\n                                                        const rows = editing[liftName] || [];\n                                                        const limit = card.key === TEMPLATE_KEYS.BBB ? 1 : 2;\n                                                        const showAdd = rows.length < limit;\n                                                        const ensureRow = () => { if (rows.length === 0) addAssistRow(card.key, liftName, limit); };\n                                                        const recommended = {\n                                                            Press: ['Pull'],\n                                                            Deadlift: ['Core', 'Single-Leg'],\n                                                            Bench: ['Pull'],\n                                                            Squat: ['Posterior', 'Pull', 'Core', 'Single-Leg']\n                                                        };\n                                                        const usedPatterns = new Set(rows.map(r => mapBlockAlias(r.block)).filter(Boolean));\n                                                        const needed = (recommended[liftName] || []);\n                                                        const matches = needed.length ? needed.some(n => usedPatterns.has(n)) : true;\n                                                        const warn = rows.length && !matches;\n                                                        const warnMsg = warn ? (liftName === 'Press' || liftName === 'Bench' ? 'Consider a Pull movement for shoulder balance.' : liftName === 'Deadlift' ? 'Add Core or Single‑Leg for balance.' : 'Add posterior chain or upper back assistance.') : null;\n                                                        return (\n                                                            <div key={liftName} className=\"rounded-lg border border-gray-700 bg-gray-900/60 p-4 shadow-sm\">\n                                                                <div className=\"flex items-center justify-between mb-3\">\n                                                                    <h4 className=\"text-xs font-semibold tracking-wide uppercase text-indigo-300\">{liftName}</h4>\n                                                                    {showAdd && rows.length === 0 && (\n                                                                        <button\n                                                                            type=\"button\"\n                                                                            onClick={(e) => {\n                                                                                e.stopPropagation();\n                                                                                ensureRow();\n                                                                            }}\n                                                                            className=\"text-[10px] px-2 py-1 rounded bg-gray-700/60 hover:bg-gray-700 text-gray-200 border border-gray-600\"\n                                                                        >Add</button>\n                                                                    )}\n                                                                </div>\n                                                                {warn && (\n                                                                    <div className=\"mb-2 text-[10px] flex items-center gap-2 text-amber-300 bg-amber-600/10 border border-amber-500/40 rounded px-2 py-1\">\n                                                                        <span className=\"font-medium\">Pattern Tip:</span> {warnMsg}\n                                                                    </div>\n                                                                )}\n                                                                {rows.length === 0 && (\n                                                                    <p className=\"text-[11px] text-gray-500 italic mb-1\">No assistance selected.</p>\n                                                                )}\n                                                                {rows.map((r, idx) => {\n                                                                    const empty = !r.name;\n                                                                    return (\n                                                                        <div key={idx} className={`relative mb-2 last:mb-0`}>\n                                                                            <div className=\"flex items-center gap-3 mb-2\">\n                                                                                <button\n                                                                                    type=\"button\"\n                                                                                    className={`flex-shrink-0 flex-1 basis-[60%] text-left text-[11px] px-3 py-2 rounded border ${empty ? 'bg-gray-800/40 border-amber-500/40 text-amber-200' : 'bg-gray-900/70 border-gray-600 text-gray-100 hover:bg-gray-700/70'} truncate`}\n                                                                                    title={r.name || 'Pick assistance movement'}\n                                                                                    onClick={(e) => {\n                                                                                        e.stopPropagation();\n                                                                                        setOpenPicker({ templateKey: card.key, lift: liftName, index: idx });\n                                                                                    }}\n                                                                                >{r.name || 'Select Movement'}</button>\n                                                                                <label className=\"flex items-center gap-1 basis-[15%] text-[10px] text-gray-400\">\n                                                                                    <span className=\"uppercase tracking-wide\">Sets</span>\n                                                                                    <input\n                                                                                        type=\"number\"\n                                                                                        min={1}\n                                                                                        max={10}\n                                                                                        value={r.sets}\n                                                                                        onChange={e => updateAssist(card.key, liftName, idx, { sets: Number(e.target.value) })}\n                                                                                        onClick={(e) => e.stopPropagation()}\n                                                                                        className=\"w-full bg-gray-900 border border-gray-600 rounded px-1 py-1 text-[10px] text-gray-100 focus:outline-none focus:ring-1 focus:ring-indigo-400\"\n                                                                                    />\n                                                                                </label>\n                                                                                <label className=\"flex items-center gap-1 basis-[15%] text-[10px] text-gray-400\">\n                                                                                    <span className=\"uppercase tracking-wide\">Reps</span>\n                                                                                    <input\n                                                                                        type=\"number\"\n                                                                                        min={1}\n                                                                                        max={50}\n                                                                                        value={r.reps}\n                                                                                        onChange={e => updateAssist(card.key, liftName, idx, { reps: Number(e.target.value) })}\n                                                                                        onClick={(e) => e.stopPropagation()}\n                                                                                        className=\"w-full bg-gray-900 border border-gray-600 rounded px-1 py-1 text-[10px] text-gray-100 focus:outline-none focus:ring-1 focus:ring-indigo-400\"\n                                                                                    />\n                                                                                </label>\n                                                                                <button\n                                                                                    type=\"button\"\n                                                                                    onClick={(e) => {\n                                                                                        e.stopPropagation();\n                                                                                        removeAssistRow(card.key, liftName, idx);\n                                                                                    }}\n                                                                                    className=\"basis-[10%] text-right text-[12px] font-bold text-red-400 hover:text-red-300\"\n                                                                                    aria-label=\"Remove assistance movement\"\n                                                                                >✕</button>\n                                                                            </div>\n                                                                            {/* Rep scheme descriptor */}\n                                                                            {(() => {\n                                                                                const scheme = repSchemeDescriptor(card.key, bbbVariant, r, mapBlockAlias(r.block), false); // assistance exercises are never main lift supplemental\n                                                                                if (!scheme) return null;\n                                                                                return <div className=\"text-[10px] text-gray-500 mt-1 pl-1\">Scheme: {scheme}</div>;\n                                                                            })()}\n                                                                            {openPicker && openPicker.templateKey === card.key && openPicker.lift === liftName && openPicker.index === idx && (\n                                                                                <div\n                                                                                    className=\"relative z-30 mb-2\"\n                                                                                    onClick={(e) => e.stopPropagation()}\n                                                                                >\n                                                                                    <AssistanceCatalogPicker\n                                                                                        equipment={state.equipment || []}\n                                                                                        onPick={(x) => {\n                                                                                            updateAssist(card.key, liftName, openPicker.index, {\n                                                                                                name: x.name,\n                                                                                                block: x.block,\n                                                                                                sets: rows[openPicker.index].sets || (x.sets || 5), // Default 5 sets for BBB assistance \n                                                                                                reps: rows[openPicker.index].reps || (Number(x.reps) || 10) // Default 10 reps for BBB assistance\n                                                                                            });\n                                                                                            // Keep modal open for easier multi-selection\n                                                                                        }}\n                                                                                        onClose={() => setOpenPicker(null)}\n                                                                                        keepOpen={true}\n                                                                                    />\n                                                                                </div>\n                                                                            )}\n                                                                        </div>\n                                                                    );\n                                                                })}\n                                                                {showAdd && rows.length > 0 && (\n                                                                    <button\n                                                                        type=\"button\"\n                                                                        onClick={(e) => {\n                                                                            e.stopPropagation();\n                                                                            addAssistRow(card.key, liftName, limit);\n                                                                        }}\n                                                                        className=\"text-[10px] px-2 py-1 rounded bg-gray-700/60 hover:bg-gray-700 text-gray-200 border border-gray-600\"\n                                                                    >+ Add Movement</button>\n                                                                )}\n                                                            </div>\n                                                        );\n                                                    })}\n                                                </div>\n                                                <p className=\"mt-3 text-[10px] text-gray-500 leading-snug\">Adjust assistance now to skip the Design step. BBB keeps assistance to ONE simple movement (25–50 quality reps total). Jack Shit: leave blank or add one easy core / pull if very fresh.</p>\n                                            </section>\n                                            <section>\n                                                <h6 className=\"text-[11px] font-semibold uppercase tracking-wide text-gray-400 mb-2\">Example Day (Week 1 – {exampleLift})</h6>\n                                                <div className=\"overflow-x-auto text-[11px]\">\n                                                    <table className=\"min-w-full text-left border-separate border-spacing-y-1\">\n                                                        <thead>\n                                                            <tr className=\"text-gray-500\">\n                                                                <th className=\"pr-4 font-medium\">Block</th>\n                                                                <th className=\"pr-4 font-medium\">Details</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            {includeWarmups && warmups.map((w, i) => (\n                                                                <tr key={i}>\n                                                                    <td className=\"pr-4 text-gray-400\">Warm-up</td>\n                                                                    <td className=\"pr-4 font-mono\">{w.percent}% x {w.reps} @ {w.weight}{units}</td>\n                                                                </tr>\n                                                            ))}\n                                                            {main.map((m, i) => (\n                                                                <tr key={i}>\n                                                                    <td className=\"pr-4 text-gray-400\">Main</td>\n                                                                    <td className=\"pr-4 font-mono\">{m.percent}% x {m.reps} @ {m.weight}{units}</td>\n                                                                </tr>\n                                                            ))}\n                                                            {(editing[exampleLift] || []).map((a, i) => (\n                                                                <tr key={i}>\n                                                                    <td className=\"pr-4 text-gray-400\">Assist</td>\n                                                                    <td className=\"pr-4 font-mono\">{a.name || '—'} {a.sets}x{a.reps}</td>\n                                                                </tr>\n                                                            ))}\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n                                            </section>\n                                            <div className=\"flex flex-wrap items-center justify-between gap-3 pt-1\">\n                                                <div className=\"text-[11px] text-gray-500\">Review details then apply to auto-configure your cycle (assistance saved).</div>\n                                                <div className=\"flex items-center gap-3\">\n                                                    <button\n                                                        onClick={() => applyTemplate(card.key)}\n                                                        type=\"button\"\n                                                        className=\"inline-flex items-center space-x-2 px-4 py-2 rounded-lg bg-indigo-600/20 border border-indigo-500 text-indigo-200 text-xs font-medium hover:bg-indigo-600/30\"\n                                                    >\n                                                        <CheckCircle2 className=\"w-4 h-4\" />\n                                                        <span>Use This Template</span>\n                                                    </button>\n                                                    <button onClick={() => setExpandedTemplate(null)} type=\"button\" className=\"text-[11px] text-gray-500 hover:text-gray-300\">Collapse</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    );\n                                }\n                                const badge = spec?.metaBadges || {};\n                                function badgeClasses(label, value) {\n                                    const base = 'px-2 py-0.5 rounded text-[10px] font-medium tracking-wide';\n                                    // Difficulty coloring priority\n                                    if (label === 'difficulty') {\n                                        if (value === 'Beginner Friendly') return base + ' bg-green-600/20 text-green-300 border border-green-500/40';\n                                        if (value === 'Intermediate') return base + ' bg-blue-600/20 text-blue-300 border border-blue-500/40';\n                                        if (value === 'Advanced') return base + ' bg-amber-600/20 text-amber-300 border border-amber-500/40';\n                                    }\n                                    if (label === 'time') return base + ' bg-gray-700/60 text-gray-300 border border-gray-600';\n                                    if (label === 'focus') return base + ' bg-indigo-600/20 text-indigo-300 border border-indigo-500/40';\n                                    return base + ' bg-gray-700/60 text-gray-300 border border-gray-600';\n                                }\n                                const orderedBadges = [\n                                    { key: 'time', label: 'time', value: badge.time, tip: badge.time === '60-90 min' ? 'Longer workouts due to higher volume supplemental work.' : (badge.time === '45-60 min' ? 'Standard full 5/3/1 training session length.' : 'Short, minimalist session focusing only on main work.') },\n                                    { key: 'difficulty', label: 'difficulty', value: badge.difficulty, tip: badge.difficulty === 'Advanced' ? 'Higher total volume and recovery demand.' : (badge.difficulty === 'Intermediate' ? 'Moderate volume; balanced recovery demand.' : 'Simple, low stress structure.') },\n                                    { key: 'focus', label: 'focus', value: badge.focus, tip: badge.focus }\n                                ].filter(b => b.value).slice(0, 3);\n                                return (\n                                    <div\n                                        key={card.key}\n                                        className={[\n                                            'relative rounded-lg border group transition-all duration-200 p-6 flex flex-col justify-between outline-none cursor-pointer',\n                                            expanded ? 'border-indigo-500 bg-indigo-600/10 ring-2 ring-indigo-400 shadow-lg' : (active ? 'border-green-500 bg-green-600/10 ring-1 ring-green-400' : 'border-gray-700 bg-gray-800/40 hover:border-gray-500 hover:bg-gray-800/60')\n                                        ].join(' ')}\n                                        onClick={() => handleSelectTemplate(card.key)}\n                                    >\n                                        <div className=\"flex flex-col flex-1\">\n                                            <div className=\"flex items-start justify-between mb-3\">\n                                                <h4 className=\"font-bold text-white text-base leading-snug pr-6\">{card.title}</h4>\n                                                {active && <CheckCircle2 className=\"w-6 h-6 text-green-400\" />}\n                                            </div>\n                                            <div className=\"flex flex-wrap gap-2 mb-3\">\n                                                {orderedBadges.map(b => (\n                                                    <span key={b.key} className={badgeClasses(b.label, b.value)} title={b.tip}>{b.value}</span>\n                                                ))}\n                                            </div>\n                                            <p className=\"text-sm text-gray-300 leading-relaxed mb-4 flex-1\">{card.blurb}</p>\n\n                                            {/* Template benefits/key features */}\n                                            <div className=\"mb-4\">\n                                                <h5 className=\"text-xs font-semibold text-gray-400 uppercase tracking-wide mb-2\">Key Features</h5>\n                                                <ul className=\"text-xs text-gray-400 space-y-1\">\n                                                    {spec?.structure?.slice(0, 3).map((feature, idx) => (\n                                                        <li key={idx} className=\"flex items-start gap-2\">\n                                                            <span className=\"text-indigo-400 mt-0.5\">•</span>\n                                                            <span>{feature}</span>\n                                                        </li>\n                                                    ))}\n                                                </ul>\n                                            </div>\n\n                                            <div className=\"flex items-center gap-3 mt-auto\">\n                                                <ToggleButton\n                                                    on={expanded}\n                                                    className=\"text-sm px-4 py-2\"\n                                                    onClick={(e) => {\n                                                        e.stopPropagation();\n                                                        handleSelectTemplate(card.key);\n                                                    }}\n                                                >{expanded ? 'Collapse Details' : (active ? 'View Details' : 'Select & Configure')}</ToggleButton>\n\n                                                {active && !expanded && (\n                                                    <button\n                                                        onClick={(e) => {\n                                                            e.stopPropagation();\n                                                            applyTemplate(card.key);\n                                                        }}\n                                                        disabled={errors.length > 0}\n                                                        className=\"text-sm px-4 py-2 bg-green-600 hover:bg-green-500 disabled:bg-gray-600 disabled:cursor-not-allowed text-white rounded-lg transition-colors\"\n                                                    >\n                                                        Use This Template →\n                                                    </button>\n                                                )}\n                                            </div>\n                                        </div>\n                                        {expanded && expandedContent}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n\n                    {/* Custom build card */}\n                    <div className=\"bg-gradient-to-br from-blue-900/20 to-purple-900/20 border border-blue-700/50 rounded-lg p-6 hover:border-blue-600/70 transition-all duration-200\">\n                        <div className=\"flex items-start gap-4\">\n                            <div className=\"bg-blue-600/20 rounded-lg p-3 flex-shrink-0\">\n                                <svg className=\"w-6 h-6 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4\" />\n                                </svg>\n                            </div>\n                            <div className=\"flex-1\">\n                                <h3 className=\"text-lg font-bold text-white mb-2\">Want Full Control?</h3>\n                                <p className=\"text-sm text-gray-300 mb-4 leading-relaxed\">Skip presets and design every layer yourself: supplemental strategy, assistance volume, conditioning, and advanced options. Perfect for experienced lifters with specific needs.</p>\n\n                                <div className=\"mb-4\">\n                                    <h5 className=\"text-xs font-semibold text-gray-400 uppercase tracking-wide mb-2\">You'll Configure</h5>\n                                    <ul className=\"text-xs text-gray-400 space-y-1\">\n                                        <li className=\"flex items-start gap-2\">\n                                            <span className=\"text-blue-400 mt-0.5\">•</span>\n                                            <span>Training schedule (3-day, 4-day splits)</span>\n                                        </li>\n                                        <li className=\"flex items-start gap-2\">\n                                            <span className=\"text-blue-400 mt-0.5\">•</span>\n                                            <span>Supplemental work (BBB, FSL, etc.)</span>\n                                        </li>\n                                        <li className=\"flex items-start gap-2\">\n                                            <span className=\"text-blue-400 mt-0.5\">•</span>\n                                            <span>Assistance exercises & volume</span>\n                                        </li>\n                                    </ul>\n                                </div>\n\n                                <ToggleButton\n                                    on={false}\n                                    onClick={chooseCustom}\n                                    className=\"text-sm px-6 py-3 bg-gradient-to-r from-blue-700 to-blue-600 hover:from-blue-600 hover:to-blue-500\"\n                                >\n                                    Continue with Custom Design →\n                                </ToggleButton>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Enhanced Navigation - More Prominent */}\n                    <div className=\"bg-gradient-to-r from-gray-800/80 to-gray-700/80 border border-gray-600 rounded-lg p-6 shadow-lg\">\n                        <div className=\"flex items-center gap-3 mb-4\">\n                            <div className=\"bg-indigo-600/20 rounded-lg p-2\">\n                                <svg className=\"w-5 h-5 text-indigo-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7l5 5m0 0l-5 5m5-5H6\" />\n                                </svg>\n                            </div>\n                            <h4 className=\"text-lg font-bold text-white\">Ready to Continue?</h4>\n                        </div>\n\n                        <div className=\"space-y-4\">\n                            {selectedTemplate ? (\n                                <div className=\"space-y-4\">\n                                    {/* Template Selected State */}\n                                    <div className=\"bg-green-900/30 border border-green-500/50 rounded-lg p-4\">\n                                        <div className=\"flex items-center gap-3 mb-2\">\n                                            <CheckCircle2 className=\"w-5 h-5 text-green-400\" />\n                                            <span className=\"text-green-300 font-semibold\">\n                                                Template Selected: {TEMPLATE_SPECS[selectedTemplate]?.name}\n                                            </span>\n                                        </div>\n                                        <p className=\"text-green-200 text-sm leading-relaxed\">\n                                            This template will automatically configure your schedule, supplemental work, and assistance exercises\n                                            based on Jim Wendler's proven methodology. You can review and adjust everything before generating your program.\n                                        </p>\n                                    </div>\n\n                                    {errors.length > 0 && (\n                                        <div className=\"bg-red-900/30 border border-red-500/50 rounded-lg p-4\">\n                                            <div className=\"flex items-center gap-2 mb-2\">\n                                                <AlertTriangle className=\"w-4 h-4 text-red-400\" />\n                                                <span className=\"text-red-300 font-medium\">Issues to Fix</span>\n                                            </div>\n                                            <ul className=\"text-red-200 text-sm space-y-1\">\n                                                {errors.map((error, idx) => (\n                                                    <li key={idx}>• {error}</li>\n                                                ))}\n                                            </ul>\n                                        </div>\n                                    )}\n\n                                    <div className=\"flex items-center gap-4\">\n                                        <ToggleButton\n                                            on={true}\n                                            disabled={errors.length > 0}\n                                            onClick={() => applyTemplate(selectedTemplate)}\n                                            className=\"text-base px-8 py-4 bg-gradient-to-r from-green-700 to-green-600 hover:from-green-600 hover:to-green-500 disabled:from-gray-700 disabled:to-gray-600 disabled:cursor-not-allowed\"\n                                        >\n                                            {errors.length > 0 ? 'Fix Issues Above First' : `Use ${TEMPLATE_SPECS[selectedTemplate]?.name} Template →`}\n                                        </ToggleButton>\n\n                                        {!errors.length && (\n                                            <span className=\"text-xs text-gray-400\">\n                                                Will jump to Step 4 (Review & Export)\n                                            </span>\n                                        )}\n                                    </div>\n                                </div>\n                            ) : (\n                                <div className=\"space-y-4\">\n                                    {/* No Template Selected State */}\n                                    <div className=\"bg-blue-900/30 border border-blue-500/50 rounded-lg p-4\">\n                                        <div className=\"flex items-center gap-3 mb-2\">\n                                            <Info className=\"w-5 h-5 text-blue-400\" />\n                                            <span className=\"text-blue-300 font-semibold\">Choose Your Path</span>\n                                        </div>\n                                        <p className=\"text-blue-200 text-sm leading-relaxed\">\n                                            Select a proven template above for instant configuration, or continue with custom design\n                                            to build your program step-by-step with full control over every detail.\n                                        </p>\n                                    </div>\n\n                                    <div className=\"flex items-center gap-4\">\n                                        <ToggleButton\n                                            on={false}\n                                            onClick={chooseCustom}\n                                            className=\"text-base px-8 py-4 bg-gradient-to-r from-blue-700 to-blue-600 hover:from-blue-600 hover:to-blue-500\"\n                                        >\n                                            Continue with Custom Design →\n                                        </ToggleButton>\n\n                                        <span className=\"text-xs text-gray-400\">\n                                            Will proceed to Step 3 (Design Custom)\n                                        </span>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n            {/* Modal removed: inline expansion now handles details */}\n        </div>\n    );\n}\n","import React, { useEffect, useMemo, useState, useRef } from 'react';\r\nimport { useProgramV2, setSchedule, setSupplemental, setAssistance } from '../../contexts/ProgramContextV2.jsx';\r\nimport AssistanceCatalogPicker from '../assistance/AssistanceCatalogPicker.jsx';\r\nimport { ASSISTANCE_CATALOG, normalizeAssistance } from '../../assistance/index.js';\r\nimport { Info, AlertTriangle, CheckCircle2, BarChart3, AlertCircle } from 'lucide-react';\r\nimport ToggleButton from '../ToggleButton.jsx';\r\n\r\nconst CORE_LIFTS = ['Press', 'Deadlift', 'Bench', 'Squat'];\r\n\r\n// 3-day rotation pattern based on Wendler's methodology\r\nconst THREE_DAY_ROTATION = [\r\n    { week: 1, days: ['Press', 'Deadlift', 'Bench'] },\r\n    { week: 2, days: ['Squat', 'Press', 'Deadlift'] },\r\n    { week: 3, days: ['Bench', 'Squat', 'Press'] },\r\n    { week: 4, days: ['Deadlift', 'Bench', 'Squat'] },\r\n    { week: 5, days: ['Deload All', 'Deload All', 'Deload All'] }\r\n];\r\n\r\nconst DAY_LABELS = ['Monday', 'Wednesday', 'Friday'];\r\n\r\nfunction parseCsvNums(str) {\r\n    if (!str) return [];\r\n    return str.split(',').map(s => s.trim()).filter(s => s.length > 0).map(n => Number(n)).filter(n => Number.isFinite(n));\r\n}\r\n\r\n/**\r\n * @deprecated This component is being consolidated with Step3ScheduleWarmup.jsx.\r\n * Use the FiveThreeOneWorkflow implementation instead which includes the complete functionality\r\n * with all sections (A-F) including Programming Approach (C) and Assistance Work (E).\r\n * \r\n * UPDATE: This component has been enhanced with the missing Sections C and E from Step3ScheduleWarmup.jsx\r\n * as part of Phase 1 of the consolidation plan.\r\n */\r\nexport default function Step3DesignCustom(props) {\r\n    const { onValidChange } = props || {};\r\n    const { state, dispatch } = useProgramV2();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [configErrors, setConfigErrors] = useState([]);\r\n\r\n    // Early return or default state if context is not ready\r\n    if (!state) {\r\n        console.warn('ProgramV2 state not available, using defaults');\r\n        return <div className=\"p-4 text-red-500\">Loading program data...</div>;\r\n    }\r\n\r\n    // Initialize supplemental and other state if missing\r\n    useEffect(() => {\r\n        if (!state.supplemental) {\r\n            console.log('Initializing supplemental state');\r\n            dispatch({\r\n                type: 'SET_SUPPLEMENTAL',\r\n                supplemental: { strategy: 'none', type: 'fsl', details: {} }\r\n            });\r\n        }\r\n    }, [state, dispatch]);\r\n\r\n    const sched = state?.schedule || {};\r\n    const [frequency, setFrequency] = useState(sched.frequency || '4day');\r\n    const [order, setOrder] = useState(sched.order || ['Press', 'Deadlift', 'Bench', 'Squat']);\r\n    const [includeWarmups, setIncludeWarmups] = useState(sched.includeWarmups !== false);\r\n    const [warmPctCsv, setWarmPctCsv] = useState((sched.warmupScheme?.percentages || [40, 50, 60]).join(','));\r\n    const [warmRepsCsv, setWarmRepsCsv] = useState((sched.warmupScheme?.reps || [5, 5, 3]).join(','));\r\n    const [rotationWeek, setRotationWeek] = useState(1); // Track current week in 3-day rotation\r\n\r\n    const [deadliftRepStyle, setDeadliftRepStyle] = useState(state?.deadliftRepStyle || 'dead_stop');\r\n    const [activeLift, setActiveLift] = useState((sched?.order && sched.order[0]) || 'Press');\r\n\r\n    // Enhanced frequency handler for 3-day rotation\r\n    const handleFrequencyChange = (newFreq) => {\r\n        setFrequency(newFreq);\r\n        if (newFreq === '3day') {\r\n            // Reset rotation to week 1 when switching to 3-day\r\n            setRotationWeek(1);\r\n            // Update order to reflect the current week's rotation\r\n            setOrder(THREE_DAY_ROTATION[0].days);\r\n        } else if (newFreq === '4day') {\r\n            // Reset to standard 4-day order\r\n            setOrder(['Press', 'Deadlift', 'Bench', 'Squat']);\r\n        } else if (newFreq === '2day') {\r\n            // Set up for 2-day split (future implementation)\r\n            setOrder(['Press', 'Deadlift']); // Start with upper/lower\r\n        }\r\n    };\r\n\r\n    // Track template-driven synchronization so we don't overwrite user edits repeatedly\r\n    const syncedTemplateRef = useRef(null);\r\n\r\n    // Template schedule reconciliation (align local UI state when a new template is applied)\r\n    useEffect(() => {\r\n        try {\r\n            const templateKey = state?.templateKey || state?.template;\r\n            const schedOrder = state?.schedule?.order;\r\n            const schedFreq = state?.schedule?.frequency;\r\n            if (!templateKey || !Array.isArray(schedOrder) || !schedOrder.length) return;\r\n            // Only sync once per template selection\r\n            if (syncedTemplateRef.current === templateKey) return;\r\n            // Adopt schedule order from context (normalize casing for display)\r\n            const displayOrder = schedOrder.map(l => {\r\n                if (!l) return 'Press';\r\n                const lower = l.toLowerCase();\r\n                if (lower === 'press') return 'Press';\r\n                if (lower === 'deadlift') return 'Deadlift';\r\n                if (lower === 'bench') return 'Bench';\r\n                if (lower === 'squat') return 'Squat';\r\n                // Fallback capitalize first letter\r\n                return l.charAt(0).toUpperCase() + l.slice(1);\r\n            });\r\n            setOrder(displayOrder);\r\n            if (schedFreq) setFrequency(schedFreq);\r\n            syncedTemplateRef.current = templateKey;\r\n            if (typeof window !== 'undefined' && window?.localStorage?.getItem('debug.531.template') !== 'off') {\r\n                // eslint-disable-next-line no-console\r\n                console.info('[531:TEMPLATE_SYNC]', 'step3.reconciledFromTemplate', { templateKey, order: displayOrder, frequency: schedFreq });\r\n            }\r\n        } catch (e) {\r\n            // eslint-disable-next-line no-console\r\n            console.warn('[531:TEMPLATE_SYNC]', 'step3.reconcileError', e.message);\r\n        }\r\n    }, [state?.templateKey, state?.template, state?.schedule?.order, state?.schedule?.frequency]);\r\n\r\n    // Added state for Programming Approach section\r\n    const [programmingApproach, setProgrammingApproach] = useState(state?.programmingApproach || 'basic');\r\n    const [leaderAnchorPattern, setLeaderAnchorPattern] = useState(state?.leaderAnchorPattern || '2+1');\r\n\r\n    // Supplemental (custom path)\r\n    const [suppStrategy, setSuppStrategy] = useState((state?.supplemental && state.supplemental.strategy) || 'none');\r\n    const [suppPairing, setSuppPairing] = useState((state?.supplemental && state.supplemental.pairing) || 'same');\r\n    const [suppPct, setSuppPct] = useState((state?.supplemental && state.supplemental.percentOfTM) || 50);\r\n\r\n    // Assistance\r\n    const [assistMode, setAssistMode] = useState((state?.assistance && state.assistance.mode) || 'minimal');\r\n    const initialCustomPlan = (state?.assistance && state.assistance.customPlan) || {};\r\n    const [customPlan, setCustomPlan] = useState(initialCustomPlan);\r\n    const [showDayPicker, setShowDayPicker] = useState(null); // day lift name or null\r\n    const [swapTarget, setSwapTarget] = useState(null); // { lift, rowIdx }\r\n    const flatCatalog = useMemo(() => {\r\n        if (!ASSISTANCE_CATALOG) return [];\r\n        if (Array.isArray(ASSISTANCE_CATALOG)) return ASSISTANCE_CATALOG;\r\n        return Object.entries(ASSISTANCE_CATALOG).flatMap(([cat, arr]) => (arr || []).map(item => ({\r\n            ...item,\r\n            block: item.block || (cat === 'singleLeg' ? 'Single-Leg' : cat.charAt(0).toUpperCase() + cat.slice(1)),\r\n            equipment: item.equip || item.equipment || []\r\n        })));\r\n    }, []);\r\n    const BLOCKS = ['All', 'Push', 'Pull', 'Single-Leg', 'Posterior', 'Core'];\r\n    const [blockFilter, setBlockFilter] = useState('All');\r\n\r\n    // Equipment selector (drives automatic assistance filtering)\r\n    const ALL_EQUIP = [\"bw\", \"db\", \"bb\", \"machine\", \"cable\", \"band\", \"kb\", \"dip\", \"rings\", \"bench\", \"box\", \"landmine\", \"plate\", \"abwheel\", \"bar\"];\r\n    const [equip, setEquip] = useState(state?.equipment || ['bw', 'db', 'bb']);\r\n    function toggleEquip(key) {\r\n        setEquip(prev => prev.includes(key) ? prev.filter(k => k !== key) : [...prev, key]);\r\n    }\r\n\r\n    // Removed debug JSON inspector (was showInspector)\r\n\r\n    // Frequency change resets order length\r\n    useEffect(() => {\r\n        setOrder(prev => {\r\n            const desired = frequency === '4day' ? 4 : frequency === '3day' ? 3 : 2;\r\n            let base = prev.slice(0, desired);\r\n            while (base.length < desired) base.push(CORE_LIFTS[base.length] || 'Press');\r\n            return base;\r\n        });\r\n    }, [frequency]);\r\n\r\n    function updateOrder(idx, val) {\r\n        setOrder(o => o.map((v, i) => i === idx ? val : v));\r\n        if (val === 'Deadlift') setActiveLift('Deadlift');\r\n        else if (activeLift === 'Deadlift' && !oIncludesDeadliftExceptIdx(idx, val)) {\r\n            // if we replaced the only deadlift slot, switch active lift to first\r\n            setActiveLift(val);\r\n        }\r\n    }\r\n\r\n    function oIncludesDeadliftExceptIdx(changeIdx, newVal) {\r\n        // helper to know if Deadlift still present after change\r\n        return order.some((l, i) => (i === changeIdx ? newVal : l) === 'Deadlift');\r\n    }\r\n\r\n    function setCanonical() {\r\n        setFrequency('4day');\r\n        setOrder(['Press', 'Deadlift', 'Bench', 'Squat']);\r\n        setRotationWeek(1); // Reset rotation week if switching away from 3-day\r\n    }\r\n\r\n    function resetOrder() {\r\n        if (frequency === '4day') {\r\n            setOrder(['Press', 'Deadlift', 'Bench', 'Squat']);\r\n        } else if (frequency === '3day') {\r\n            setRotationWeek(1);\r\n            setOrder(THREE_DAY_ROTATION[0].days);\r\n        } else {\r\n            // 2-day default\r\n            setOrder(['Press', 'Deadlift']);\r\n        }\r\n    }\r\n\r\n    // Assistance custom handlers\r\n    function addCustomRow(dayIdx) {\r\n        setCustomPlan(prev => {\r\n            const key = order[dayIdx];\r\n            const list = prev[key] ? [...prev[key]] : [];\r\n            if (list.length >= 2) return prev; // cap at 2 items per spec\r\n            list.push({ name: '', sets: 3, reps: 10 });\r\n            return { ...prev, [key]: list };\r\n        });\r\n    }\r\n    function updateCustomRow(dayLift, rowIdx, patch) {\r\n        setCustomPlan(prev => {\r\n            const list = prev[dayLift] ? [...prev[dayLift]] : [];\r\n            if (!list[rowIdx]) return prev;\r\n            list[rowIdx] = { ...list[rowIdx], ...patch };\r\n            return { ...prev, [dayLift]: list };\r\n        });\r\n    }\r\n    function removeCustomRow(dayLift, rowIdx) {\r\n        setCustomPlan(prev => {\r\n            const list = prev[dayLift] ? [...prev[dayLift]] : [];\r\n            list.splice(rowIdx, 1);\r\n            if (list.length === 0) {\r\n                const clone = { ...prev };\r\n                delete clone[dayLift];\r\n                return clone;\r\n            }\r\n            return { ...prev, [dayLift]: list };\r\n        });\r\n    }\r\n\r\n    // Enhanced validation with specific error messages and warnings\r\n    const comprehensiveValidation = useMemo(() => {\r\n        const errors = [];\r\n        const warnings = [];\r\n\r\n        // Schedule validation\r\n        const desired = frequency === '4day' ? 4 : frequency === '3day' ? 3 : 2;\r\n        if (order.length !== desired) {\r\n            errors.push(`Schedule must have ${desired} days for ${frequency} frequency`);\r\n        }\r\n\r\n        const unique = new Set(order);\r\n        if (unique.size !== order.length) {\r\n            errors.push('Each training day must use a different main lift');\r\n        }\r\n\r\n        if (!order.every(l => CORE_LIFTS.includes(l))) {\r\n            errors.push('All lifts must be from the core 4: Press, Deadlift, Bench, Squat');\r\n        }\r\n\r\n        // Warmup validation\r\n        if (includeWarmups) {\r\n            const warmPercentages = parseCsvNums(warmPctCsv);\r\n            const warmReps = parseCsvNums(warmRepsCsv);\r\n\r\n            if (warmPercentages.length === 0 || warmPercentages.length !== warmReps.length) {\r\n                errors.push('Warmup percentages and reps must have matching counts');\r\n            }\r\n\r\n            if (warmPercentages.length > 5) {\r\n                warnings.push('More than 5 warmup sets may cause fatigue');\r\n            }\r\n\r\n            if (!warmPercentages.every(n => n > 0 && n < 100)) {\r\n                errors.push('Warmup percentages must be between 1-99%');\r\n            }\r\n\r\n            if (!warmReps.every(r => r > 0 && r < 30)) {\r\n                errors.push('Warmup reps must be between 1-29');\r\n            }\r\n        }\r\n\r\n        // Programming approach validation\r\n        if (!programmingApproach) {\r\n            errors.push('Select a programming approach');\r\n        } else if (programmingApproach === 'leaderAnchor' && !leaderAnchorPattern) {\r\n            errors.push('Select a Leader/Anchor pattern');\r\n        }\r\n\r\n        // Supplemental validation\r\n        if (suppStrategy === 'bbb') {\r\n            if (!(suppPct >= 50 && suppPct <= 70)) {\r\n                warnings.push('BBB percentage should be 50-60% of TM (book range)');\r\n            }\r\n            if (suppPct < 40) {\r\n                errors.push('BBB percentage too low (minimum 40%)');\r\n            }\r\n            if (suppPct > 80) {\r\n                errors.push('BBB percentage too high (maximum 80%)');\r\n            }\r\n        }\r\n\r\n        // Assistance validation\r\n        if (assistMode === 'custom') {\r\n            for (const lift of order) {\r\n                const rows = customPlan[lift] || [];\r\n                if (rows.length > 2) {\r\n                    warnings.push(`${lift} has more than recommended 2 assistance exercises`);\r\n                }\r\n\r\n                for (const r of rows) {\r\n                    if (!r.name || r.name.trim().length === 0) {\r\n                        errors.push(`${lift} has unnamed assistance exercise`);\r\n                    }\r\n                    if (!(r.sets >= 1 && r.sets <= 10)) {\r\n                        errors.push(`${lift} assistance sets must be 1-10`);\r\n                    }\r\n                    if (!(r.reps >= 1 && r.reps <= 30)) {\r\n                        errors.push(`${lift} assistance reps must be 1-30`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Equipment validation\r\n        if (!equip || equip.length === 0) {\r\n            warnings.push('No equipment selected - this will limit exercise options');\r\n        }\r\n\r\n        return {\r\n            isValid: errors.length === 0,\r\n            errors,\r\n            warnings,\r\n            hasWarnings: warnings.length > 0\r\n        };\r\n    }, [frequency, order, includeWarmups, warmPctCsv, warmRepsCsv, programmingApproach, leaderAnchorPattern, suppStrategy, suppPct, assistMode, customPlan, equip]);\r\n\r\n    // Update validation errors state\r\n    useEffect(() => {\r\n        setConfigErrors(comprehensiveValidation.errors);\r\n    }, [comprehensiveValidation]);\r\n\r\n    // Validation logic\r\n    const validation = useMemo(() => {\r\n        const desired = frequency === '4day' ? 4 : frequency === '3day' ? 3 : 2;\r\n        let scheduleOk = order.length === desired;\r\n        // Unique check (allow duplicates only for 2-day simple version? spec says unique lifts still)\r\n        const unique = new Set(order);\r\n        if (unique.size !== order.length) scheduleOk = false;\r\n        if (!order.every(l => CORE_LIFTS.includes(l))) scheduleOk = false;\r\n\r\n        let warmupsOk = true;\r\n        let warmPercentages = parseCsvNums(warmPctCsv);\r\n        let warmReps = parseCsvNums(warmRepsCsv);\r\n        if (includeWarmups) {\r\n            if (warmPercentages.length === 0 || warmPercentages.length !== warmReps.length) warmupsOk = false;\r\n            if (warmPercentages.length > 5) warmupsOk = false;\r\n            if (!warmPercentages.every(n => n > 0 && n < 100) || !warmReps.every(r => r > 0 && r < 30)) warmupsOk = false;\r\n        }\r\n\r\n        let supplementalOk = true;\r\n        if (suppStrategy === 'bbb') {\r\n            if (!(suppPct >= 50 && suppPct <= 70)) supplementalOk = false;\r\n        }\r\n\r\n        let assistanceOk = true;\r\n        if (assistMode === 'custom') {\r\n            for (const lift of order) {\r\n                const rows = customPlan[lift] || [];\r\n                if (rows.length > 2) { assistanceOk = false; break; }\r\n                for (const r of rows) {\r\n                    if (!r.name || r.name.trim().length === 0) { assistanceOk = false; break; }\r\n                    if (!(r.sets >= 1 && r.sets <= 10)) { assistanceOk = false; break; }\r\n                    if (!(r.reps >= 1 && r.reps <= 30)) { assistanceOk = false; break; }\r\n                }\r\n                if (!assistanceOk) break;\r\n            }\r\n        }\r\n\r\n        // Programming approach validation\r\n        let programmingOk = true;\r\n        if (programmingApproach === 'leaderAnchor') {\r\n            if (!['2+1', '3+1'].includes(leaderAnchorPattern)) programmingOk = false;\r\n        }\r\n\r\n        // Conditioning validation\r\n        let conditioningOk = true;\r\n        if (!(state?.conditioning?.protocols || []).length) conditioningOk = false;\r\n\r\n        const valid = scheduleOk && warmupsOk && supplementalOk && assistanceOk && programmingOk && conditioningOk;\r\n        return { valid, scheduleOk, warmupsOk, supplementalOk, assistanceOk, programmingOk, conditioningOk };\r\n    }, [frequency, order, includeWarmups, warmPctCsv, warmRepsCsv, suppStrategy, suppPct, assistMode, customPlan, programmingApproach, leaderAnchorPattern]);\r\n\r\n    useEffect(() => { onValidChange && onValidChange(validation.valid); }, [validation, onValidChange]);\r\n\r\n    // Dispatch to context (debounced-ish via effect on dependencies)\r\n    useEffect(() => {\r\n        const id = setTimeout(() => {\r\n            const scheduleData = {\r\n                frequency,\r\n                order,\r\n                includeWarmups,\r\n                warmupScheme: { percentages: parseCsvNums(warmPctCsv), reps: parseCsvNums(warmRepsCsv) }\r\n            };\r\n\r\n            // Add rotation data for 3-day schedules\r\n            if (frequency === '3day') {\r\n                scheduleData.rotationWeek = rotationWeek;\r\n                scheduleData.rotationPattern = THREE_DAY_ROTATION;\r\n            }\r\n\r\n            setSchedule(dispatch, scheduleData);\r\n            dispatch({ type: 'SET_DEADLIFT_REP_STYLE', payload: deadliftRepStyle });\r\n            if (suppStrategy === 'bbb') {\r\n                setSupplemental(dispatch, { strategy: 'bbb', pairing: suppPairing, percentOfTM: suppPct, sets: 5, reps: 10 });\r\n            } else {\r\n                setSupplemental(dispatch, { strategy: 'none' });\r\n            }\r\n            if (assistMode === 'custom') {\r\n                setAssistance(dispatch, { mode: 'custom', customPlan });\r\n            } else {\r\n                setAssistance(dispatch, { mode: assistMode });\r\n            }\r\n        }, 250);\r\n        return () => clearTimeout(id);\r\n    }, [frequency, order, includeWarmups, warmPctCsv, warmRepsCsv, deadliftRepStyle, suppStrategy, suppPairing, suppPct, assistMode, customPlan, rotationWeek, dispatch]);\r\n\r\n    // Persist equipment selection (separate effect to avoid coupling with other debounce)\r\n    useEffect(() => {\r\n        const id = setTimeout(() => dispatch({ type: 'SET_EQUIPMENT', payload: equip }), 200);\r\n        return () => clearTimeout(id);\r\n    }, [equip, dispatch]);\r\n\r\n    // Persist programming approach selection\r\n    useEffect(() => {\r\n        const id = setTimeout(() => {\r\n            dispatch({\r\n                type: 'SET_PROGRAMMING_APPROACH',\r\n                payload: {\r\n                    programmingApproach,\r\n                    leaderAnchorPattern: programmingApproach === 'leaderAnchor' ? leaderAnchorPattern : undefined,\r\n                    userProfile: state?.userProfile || {\r\n                        experience: 'intermediate',\r\n                        recovery: 'average'\r\n                    },\r\n                    advanced: {\r\n                        ...(state?.advanced || {}),\r\n                        // Default settings for each approach\r\n                        useJokerSets: programmingApproach === 'competition' ? (state?.advanced?.useJokerSets || false) : false,\r\n                        strictPrSets: programmingApproach === 'traditional' ? (state?.advanced?.strictPrSets || true) : false,\r\n                        deloadStrategy: programmingApproach === 'traditional' ? (state?.advanced?.deloadStrategy || 'every7th') : 'every7th'\r\n                    }\r\n                }\r\n            });\r\n        }, 200);\r\n        return () => clearTimeout(id);\r\n    }, [programmingApproach, leaderAnchorPattern, state?.advanced, state?.userProfile, dispatch]);\r\n\r\n    return (\r\n        <div className=\"space-y-8 relative\">\r\n            {isLoading && (\r\n                <div className=\"absolute inset-0 bg-gray-900/60 backdrop-blur-sm rounded-lg flex items-center justify-center z-10\">\r\n                    <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4 flex items-center gap-3\">\r\n                        <div className=\"animate-spin w-5 h-5 border-2 border-blue-500 border-t-transparent rounded-full\"></div>\r\n                        <span className=\"text-white text-sm\">Saving configuration...</span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Configuration Status */}\r\n            <div className=\"bg-gray-800/60 border border-gray-700 rounded-lg p-4\">\r\n                <h2 className=\"text-lg font-semibold text-white mb-2\">Step 3: Design Your Cycle</h2>\r\n                <p className=\"text-sm text-gray-400 mb-4\">Configure your training schedule, supplemental work, and assistance exercises.</p>\r\n\r\n                {comprehensiveValidation.isValid ? (\r\n                    <div className=\"bg-green-900/20 border border-green-500/50 rounded-lg p-3\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                            <CheckCircle2 className=\"w-4 h-4 text-green-400\" />\r\n                            <span className=\"text-green-300 text-sm font-medium\">Configuration Complete</span>\r\n                        </div>\r\n                        {comprehensiveValidation.hasWarnings && (\r\n                            <div className=\"mt-2 text-xs text-yellow-300\">\r\n                                {comprehensiveValidation.warnings.length} recommendation(s) below\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"bg-red-900/20 border border-red-500/50 rounded-lg p-3\">\r\n                        <div className=\"flex items-start gap-2\">\r\n                            <AlertTriangle className=\"w-4 h-4 text-red-400 mt-0.5\" />\r\n                            <div>\r\n                                <div className=\"text-red-300 text-sm font-medium\">\r\n                                    {comprehensiveValidation.errors.length} issue(s) need attention\r\n                                </div>\r\n                                <ul className=\"mt-1 space-y-1\">\r\n                                    {comprehensiveValidation.errors.slice(0, 3).map((error, idx) => (\r\n                                        <li key={idx} className=\"text-red-200 text-xs\">• {error}</li>\r\n                                    ))}\r\n                                    {comprehensiveValidation.errors.length > 3 && (\r\n                                        <li className=\"text-red-200 text-xs\">• ... and {comprehensiveValidation.errors.length - 3} more</li>\r\n                                    )}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {comprehensiveValidation.hasWarnings && (\r\n                    <div className=\"bg-yellow-900/20 border border-yellow-500/50 rounded-lg p-3 mt-3\">\r\n                        <div className=\"flex items-start gap-2\">\r\n                            <Info className=\"w-4 h-4 text-yellow-400 mt-0.5\" />\r\n                            <div>\r\n                                <div className=\"text-yellow-300 text-sm font-medium\">Recommendations</div>\r\n                                <ul className=\"mt-1 space-y-1\">\r\n                                    {comprehensiveValidation.warnings.map((warning, idx) => (\r\n                                        <li key={idx} className=\"text-yellow-200 text-xs\">• {warning}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Training Schedule Configuration */}\r\n            <div className=\"bg-gray-800/60 border border-gray-700 rounded-lg p-4\">\r\n                <h2 className=\"text-lg font-semibold text-white\">Design your cycle</h2>\r\n                <p className=\"text-sm text-gray-400 mt-1\">Set your warm-ups, main % by week, and supplemental style. You can convert assistance to custom later.</p>\r\n                <ul className=\"mt-3 space-y-1 text-sm list-disc pl-5 text-gray-300\">\r\n                    <li><strong>Warm-ups:</strong> 40/50/60% of TM ramps without fatigue.</li>\r\n                    <li><strong>Main:</strong> Week 1–3 last set AMRAP; Week 4 deload (no AMRAP) <span className=\"text-gray-400\">(can optionally skip below if running a longer Leader block).</span></li>\r\n                    <li><strong>Supplemental (BBB):</strong> 5×10 @ 50–60% (book-accurate range).</li>\r\n                </ul>\r\n                <p className=\"text-xs text-gray-500 mt-3 flex flex-col gap-1\">\r\n                    <span>Change days/split in Step 2. Rounding set in Step 1.</span>\r\n                    <span className=\"text-gray-400 italic\">Conditioning: 2 easy LISS sessions weekly; don’t let conditioning hurt lifting.</span>\r\n                </p>\r\n                <div className=\"mt-4 bg-gray-900/40 border border-gray-700 rounded-md p-3\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <div className=\"text-xs font-semibold tracking-wide text-gray-300\">Deload Week 4</div>\r\n                        <label className=\"inline-flex items-center gap-2 text-xs text-gray-400\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                className=\"h-3 w-3\"\r\n                                checked={!(state?.advanced?.skipDeload)}\r\n                                onChange={(e) => {\r\n                                    dispatch({ type: 'SET_ADVANCED', advanced: { ...(state?.advanced || {}), skipDeload: !e.target.checked } });\r\n                                }}\r\n                            />\r\n                            <span>{state?.advanced?.skipDeload ? 'Off (skipped this cycle)' : 'On (default)'}</span>\r\n                        </label>\r\n                    </div>\r\n                    <p className=\"mt-2 text-[11px] leading-relaxed text-gray-400\">\r\n                        Keep ON for standard 4-week cycles. Advanced users running multi-phase (Leader/Anchor) can disable interim deloads (e.g. only deload after final Anchor). When OFF, export will show only 3 loading weeks; progression still expects full recovery management on you.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Schedule */}\r\n            <section className=\"bg-gray-800/60 border border-gray-700 rounded-lg p-6 space-y-6 shadow-lg\">\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div>\r\n                        <h3 className=\"text-lg font-semibold text-white\">A) Schedule</h3>\r\n                        <p className=\"text-xs text-gray-400 mt-1\">Configure your training frequency and lift order</p>\r\n                    </div>\r\n                    <div className=\"flex space-x-2\">\r\n                        <ToggleButton on={false} onClick={setCanonical} className=\"text-xs bg-gray-700/50 hover:bg-gray-700\">Standard Order</ToggleButton>\r\n                        <ToggleButton on={false} onClick={resetOrder} className=\"text-xs bg-gray-700/50 hover:bg-gray-700\">Reset Order</ToggleButton>\r\n                    </div>\r\n                </div>\r\n                <div className=\"space-y-5\">\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-200 mb-3\">Training Frequency</label>\r\n                        <div className=\"flex flex-wrap gap-3 items-center\">\r\n                            {['4day', '3day', '2day'].map(f => (\r\n                                <ToggleButton\r\n                                    key={f}\r\n                                    on={frequency === f}\r\n                                    onClick={() => handleFrequencyChange(f)}\r\n                                    className=\"px-4 py-2 font-medium\"\r\n                                >{f.replace('day', '-day')}</ToggleButton>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm font-medium text-gray-200 mb-3\">\r\n                            {frequency === '3day' ? 'Rotation Schedule' : 'Lift Order'}\r\n                        </label>\r\n\r\n                        {frequency === '4day' && (\r\n                            <div className=\"grid sm:grid-cols-2 md:grid-cols-4 gap-4\">\r\n                                {order.map((lift, idx) => (\r\n                                    <div key={idx} className=\"space-y-1\">\r\n                                        <label className=\"text-xs uppercase tracking-wide text-gray-400\">Slot {idx + 1}</label>\r\n                                        <select\r\n                                            value={lift}\r\n                                            onFocus={() => setActiveLift(lift)}\r\n                                            onChange={(e) => { updateOrder(idx, e.target.value); setActiveLift(e.target.value); }}\r\n                                            className={`w-full bg-gray-800 border rounded px-2 py-2 text-sm text-white focus:border-red-500 ${activeLift === lift ? 'border-red-500' : 'border-gray-600'}`}\r\n                                        >\r\n                                            {CORE_LIFTS.map(l => <option key={l} value={l}>{l}</option>)}\r\n                                        </select>\r\n                                        {activeLift === 'Deadlift' && lift === 'Deadlift' && (\r\n                                            <div className=\"mt-2 bg-gray-800/60 border border-gray-700 rounded p-2 space-y-1\">\r\n                                                <label className=\"text-[11px] font-medium text-gray-200\">Deadlift rep style</label>\r\n                                                <p className=\"text-[10px] text-gray-500\">Affects how reps are performed.</p>\r\n                                                <div className=\"flex items-center gap-3 text-[11px]\" role=\"radiogroup\" aria-label=\"Deadlift rep style\">\r\n                                                    <label className=\"inline-flex items-center gap-1\">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            name=\"dlRepStyle\"\r\n                                                            value=\"dead_stop\"\r\n                                                            checked={deadliftRepStyle === 'dead_stop'}\r\n                                                            onChange={() => setDeadliftRepStyle('dead_stop')}\r\n                                                        />\r\n                                                        <span>Reset each rep</span>\r\n                                                    </label>\r\n                                                    <label className=\"inline-flex items-center gap-1\">\r\n                                                        <input\r\n                                                            type=\"radio\"\r\n                                                            name=\"dlRepStyle\"\r\n                                                            value=\"touch_and_go\"\r\n                                                            checked={deadliftRepStyle === 'touch_and_go'}\r\n                                                            onChange={() => setDeadliftRepStyle('touch_and_go')}\r\n                                                        />\r\n                                                        <span>Touch-and-go</span>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n\r\n                        {frequency === '3day' && (\r\n                            <div className=\"space-y-4\">\r\n                                {/* Current Week Summary */}\r\n                                <div className=\"bg-red-900/20 border border-red-500/30 rounded-lg p-4\">\r\n                                    <div className=\"flex items-center justify-between mb-2\">\r\n                                        <h4 className=\"text-sm font-semibold text-red-300\">\r\n                                            Current Week {rotationWeek} Schedule\r\n                                        </h4>\r\n                                        {rotationWeek === 5 && (\r\n                                            <span className=\"text-xs bg-blue-800/40 border border-blue-500/40 text-blue-200 px-2 py-1 rounded\">\r\n                                                Deload Week\r\n                                            </span>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"grid grid-cols-3 gap-3 text-sm\">\r\n                                        {DAY_LABELS.map((day, idx) => (\r\n                                            <div key={day} className=\"text-center\">\r\n                                                <div className=\"text-xs text-gray-400 mb-1\">{day}</div>\r\n                                                <div className=\"text-white font-medium\">\r\n                                                    {THREE_DAY_ROTATION[rotationWeek - 1].days[idx]}\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"bg-gray-800/40 border border-gray-700 rounded-lg p-4\">\r\n                                    <div className=\"flex items-center justify-between mb-3\">\r\n                                        <h4 className=\"text-sm font-semibold text-white\">5-Week Rotation Pattern</h4>\r\n                                        <div className=\"flex items-center gap-2\">\r\n                                            <span className=\"text-xs text-gray-400\">Current Week:</span>\r\n                                            <select\r\n                                                value={rotationWeek}\r\n                                                onChange={(e) => {\r\n                                                    const week = parseInt(e.target.value);\r\n                                                    setRotationWeek(week);\r\n                                                    setOrder(THREE_DAY_ROTATION[week - 1].days);\r\n                                                }}\r\n                                                className=\"bg-gray-700 border border-gray-600 rounded px-2 py-1 text-xs text-white\"\r\n                                            >\r\n                                                {THREE_DAY_ROTATION.map((week, idx) => (\r\n                                                    <option key={idx} value={week.week}>\r\n                                                        Week {week.week} {week.week === 5 ? '(Deload)' : ''}\r\n                                                    </option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"overflow-x-auto\">\r\n                                        <table className=\"w-full text-sm\">\r\n                                            <thead>\r\n                                                <tr className=\"border-b border-gray-600\">\r\n                                                    <th className=\"text-left py-2 px-3 text-gray-300 font-medium\">Week</th>\r\n                                                    <th className=\"text-left py-2 px-3 text-gray-300 font-medium\">Monday</th>\r\n                                                    <th className=\"text-left py-2 px-3 text-gray-300 font-medium\">Wednesday</th>\r\n                                                    <th className=\"text-left py-2 px-3 text-gray-300 font-medium\">Friday</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {THREE_DAY_ROTATION.map((week, idx) => (\r\n                                                    <tr\r\n                                                        key={week.week}\r\n                                                        className={`border-b border-gray-700/50 ${week.week === rotationWeek ? 'bg-red-900/20 border-red-500/30' : ''}`}\r\n                                                    >\r\n                                                        <td className=\"py-2 px-3\">\r\n                                                            <span className={`font-medium ${week.week === rotationWeek ? 'text-red-300' : 'text-gray-200'}`}>\r\n                                                                Week {week.week}\r\n                                                            </span>\r\n                                                            {week.week === 5 && (\r\n                                                                <span className=\"ml-2 text-xs text-gray-400\">(Deload)</span>\r\n                                                            )}\r\n                                                        </td>\r\n                                                        {week.days.map((lift, dayIdx) => (\r\n                                                            <td key={dayIdx} className=\"py-2 px-3\">\r\n                                                                <span className={`text-sm ${week.week === rotationWeek ? 'text-white font-medium' : 'text-gray-300'}`}>\r\n                                                                    {lift}\r\n                                                                </span>\r\n                                                            </td>\r\n                                                        ))}\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"mt-3 text-xs text-gray-400\">\r\n                                        <p>• Each lift follows the same 5/3/1 progression across the 4-week cycle</p>\r\n                                        <p>• All four lifts progress together, rotating through 3 training days</p>\r\n                                        <p>• Week 5 is optional deload for all lifts</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {frequency === '2day' && (\r\n                            <div className=\"bg-gray-800/40 border border-gray-700 rounded-lg p-4\">\r\n                                <div className=\"text-center text-gray-400\">\r\n                                    <Info className=\"w-8 h-8 mx-auto mb-2\" />\r\n                                    <p className=\"text-sm\">2-Day Split Configuration</p>\r\n                                    <p className=\"text-xs mt-1\">Coming soon - Upper/Lower split options</p>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {!validation.scheduleOk && frequency === '4day' && (\r\n                            <div className=\"flex items-start space-x-2 text-yellow-300 text-xs bg-yellow-900/20 border border-yellow-700/40 rounded p-3\">\r\n                                <AlertTriangle className=\"w-4 h-4 mt-0.5\" />\r\n                                <span>Schedule invalid: ensure unique lifts and correct number of slots.</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            {/* Warm-up Scheme */}\r\n            <section className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-6 space-y-5\">\r\n                <h3 className=\"text-lg font-semibold text-white\">B) Warm-up Scheme</h3>\r\n                <div className=\"flex items-center space-x-3 text-sm\">\r\n                    <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                        <input type=\"checkbox\" checked={includeWarmups} onChange={(e) => setIncludeWarmups(e.target.checked)} />\r\n                        <span className=\"text-gray-300\">Include warm-ups</span>\r\n                    </label>\r\n                    {includeWarmups && (\r\n                        <div className=\"flex space-x-2\">\r\n                            {(() => {\r\n                                const pct = warmPctCsv.replace(/\\s/g, '');\r\n                                const reps = warmRepsCsv.replace(/\\s/g, '');\r\n                                const isStandard = pct === '40,50,60' && reps === '5,5,3';\r\n                                const isMinimal = pct === '40,55' && reps === '5,3';\r\n                                return (\r\n                                    <>\r\n                                        <ToggleButton\r\n                                            on={isStandard}\r\n                                            className=\"text-xs\"\r\n                                            title=\"Classic Wendler 3-set ramp\"\r\n                                            onClick={() => { setWarmPctCsv('40,50,60'); setWarmRepsCsv('5,5,3'); }}\r\n                                        >Standard (3 sets)</ToggleButton>\r\n                                        <ToggleButton\r\n                                            on={isMinimal}\r\n                                            className=\"text-xs\"\r\n                                            title=\"Fast ramp: first two sets only\"\r\n                                            onClick={() => { setWarmPctCsv('40,55'); setWarmRepsCsv('5,3'); }}\r\n                                        >Minimal (2 quick)</ToggleButton>\r\n                                    </>\r\n                                );\r\n                            })()}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {includeWarmups ? (\r\n                    <div className=\"bg-blue-900/20 border border-blue-700/40 rounded p-3 text-[11px] text-blue-100 flex space-x-2 leading-snug\">\r\n                        <Info className=\"w-4 h-4 mt-0.5\" />\r\n                        <span>\r\n                            Choose a ramp that wakes tissues without stealing performance. Standard (40/50/60 x 5/5/3) gives more gradual practice; Minimal (40/55 x 5/3) is a faster primer for time‑crunched sessions. Adjust percentages or reps if bar speed feels off.\r\n                        </span>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"bg-gray-800/40 border border-gray-700/60 rounded p-3 text-[11px] text-gray-400 flex space-x-2 leading-snug\">\r\n                        <Info className=\"w-4 h-4 mt-0.5\" />\r\n                        <span>Warm-ups skipped. Make sure you still perform a few empty bar / light acclimation sets before main work.</span>\r\n                    </div>\r\n                )}\r\n                {includeWarmups && (\r\n                    <div className=\"grid md:grid-cols-2 gap-4\">\r\n                        <div>\r\n                            <label className=\"block text-xs uppercase text-gray-400 mb-1\">Percentages</label>\r\n                            <input value={warmPctCsv} onChange={e => setWarmPctCsv(e.target.value)} className=\"w-full bg-gray-800 border border-gray-600 rounded px-2 py-2 text-sm text-white focus:border-red-500\" placeholder=\"40,50,60\" />\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"block text-xs uppercase text-gray-400 mb-1\">Reps</label>\r\n                            <input value={warmRepsCsv} onChange={e => setWarmRepsCsv(e.target.value)} className=\"w-full bg-gray-800 border border-gray-600 rounded px-2 py-2 text-sm text-white focus:border-red-500\" placeholder=\"5,5,3\" />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                {includeWarmups && !validation.warmupsOk && (\r\n                    <div className=\"text-xs text-yellow-300 flex items-start space-x-2 bg-yellow-900/20 border border-yellow-700/40 rounded p-3\">\r\n                        <AlertTriangle className=\"w-4 h-4 mt-0.5\" />\r\n                        <span>Warm-up arrays must be equal length numeric lists (1-5 entries).</span>\r\n                    </div>\r\n                )}\r\n            </section>\r\n\r\n            {/* Programming Approach (NEW Section C) */}\r\n            <section className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-6 space-y-5\">\r\n                <div>\r\n                    <h3 className=\"text-lg font-semibold text-white\">C) Programming Approach</h3>\r\n                    <p className=\"text-sm text-gray-400 mt-1\">Choose your periodization strategy and training philosophy.</p>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-3\">\r\n                    {[{\r\n                        id: 'traditional',\r\n                        title: 'Traditional 5/3/1',\r\n                        label: 'CLASSIC APPROACH',\r\n                        desc: 'Standard progression with PR sets and simple wave loading (5/3/1 pattern)',\r\n                        best: 'All lifters seeking balanced strength progress with auto-regulation',\r\n                        features: ['AMRAP final sets', 'Wave loading percentages', 'Time-tested progression']\r\n                    }, {\r\n                        id: 'leaderAnchor',\r\n                        title: 'Leader/Anchor Cycles',\r\n                        label: 'ADVANCED PERIODIZATION',\r\n                        desc: 'Alternating volume (Leader) and intensity (Anchor) phases in strategic patterns',\r\n                        best: 'Intermediate to advanced lifters seeking optimized long-term gains',\r\n                        features: ['Volume accumulation (Leader)', 'Intensity realization (Anchor)', '7th Week Protocol', 'Strategic deloads']\r\n                    }, {\r\n                        id: 'fivespro',\r\n                        title: '5\\'s PRO Progression',\r\n                        label: 'CONTROLLED INTENSITY',\r\n                        desc: 'All main work sets performed for clean sets of 5 reps without AMRAP tests',\r\n                        best: 'Recovery-focused lifters or those prioritizing supplemental volume',\r\n                        features: ['No PR sets/AMRAPs', 'Technique refinement', 'Better bar speed', 'Lower CNS fatigue']\r\n                    }, {\r\n                        id: 'competition',\r\n                        title: 'Competition Prep',\r\n                        label: 'PERFORMANCE PEAKING',\r\n                        desc: 'Modified loading with 3/5/1 order and optional Joker sets for peak preparation',\r\n                        best: 'Powerlifters and those preparing for max testing',\r\n                        features: ['3/5/1 wave loading', 'Joker sets', 'Heavier top sets', 'Peaking protocols']\r\n                    }].map(card => {\r\n                        const active = programmingApproach === card.id;\r\n                        return (\r\n                            <div key={card.id} className=\"relative\">\r\n                                <button\r\n                                    onClick={() => setProgrammingApproach(card.id)}\r\n                                    type=\"button\"\r\n                                    className={`w-full text-left bg-gray-800/50 border rounded p-3 hover:bg-gray-800 transition ${active ? 'border-red-500 ring-2 ring-red-600' : 'border-gray-700'}`}\r\n                                >\r\n                                    <div className=\"flex items-start justify-between\">\r\n                                        <div>\r\n                                            <div className=\"text-[11px] tracking-wide font-semibold text-red-300\">{card.label}</div>\r\n                                            <div className=\"text-sm font-semibold text-white leading-tight mt-0.5\">{card.title}</div>\r\n                                        </div>\r\n                                        {active && <CheckCircle2 className=\"w-4 h-4 text-green-400\" />}\r\n                                    </div>\r\n                                    <div className=\"text-xs text-gray-300 mt-2 leading-snug\">{card.desc}</div>\r\n                                    <div className=\"mt-2 text-[10px] text-gray-400\"><span className=\"font-medium text-gray-300\">Best for:</span> {card.best}</div>\r\n                                    <ul className=\"mt-2 text-[10px] text-gray-400 list-disc ml-4 space-y-0.5\">\r\n                                        {card.features.map(f => <li key={f}>{f}</li>)}\r\n                                    </ul>\r\n                                </button>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n\r\n                {/* Traditional 5/3/1 Configuration */}\r\n                {programmingApproach === 'traditional' && (\r\n                    <div className=\"bg-gray-800/60 border border-gray-700 rounded p-4 space-y-3\">\r\n                        <div className=\"text-white font-medium\">Traditional 5/3/1 Configuration</div>\r\n                        <p className=\"text-xs text-gray-400\">The classic 5/3/1 approach with standard wave loading and PR sets.</p>\r\n\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                            <div>\r\n                                <div className=\"text-[11px] font-medium text-gray-200 mb-1\">Wave Loading Pattern</div>\r\n                                <table className=\"w-full text-[10px] text-gray-300 mt-2\">\r\n                                    <thead>\r\n                                        <tr className=\"text-gray-400\">\r\n                                            <th className=\"text-left py-1\">Week</th>\r\n                                            <th className=\"text-center py-1\">Sets/Reps</th>\r\n                                            <th className=\"text-center py-1\">Percentages</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr className=\"border-t border-gray-700/60\">\r\n                                            <td className=\"py-1\">Week 1</td>\r\n                                            <td className=\"py-1 text-center\">5/5/5+</td>\r\n                                            <td className=\"py-1 text-center\">65/75/85%</td>\r\n                                        </tr>\r\n                                        <tr className=\"border-t border-gray-700/60\">\r\n                                            <td className=\"py-1\">Week 2</td>\r\n                                            <td className=\"py-1 text-center\">3/3/3+</td>\r\n                                            <td className=\"py-1 text-center\">70/80/90%</td>\r\n                                        </tr>\r\n                                        <tr className=\"border-t border-gray-700/60\">\r\n                                            <td className=\"py-1\">Week 3</td>\r\n                                            <td className=\"py-1 text-center\">5/3/1+</td>\r\n                                            <td className=\"py-1 text-center\">75/85/95%</td>\r\n                                        </tr>\r\n                                        <tr className=\"border-t border-gray-700/60\">\r\n                                            <td className=\"py-1\">Week 4 (Optional)</td>\r\n                                            <td className=\"py-1 text-center\">Deload</td>\r\n                                            <td className=\"py-1 text-center\">40/50/60%</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div className=\"text-[11px] font-medium text-gray-200 mb-1\">PR Set Guidelines</div>\r\n                                <p className=\"text-[10px] text-gray-400 mb-2\">The \"+\" sets are AMRAP (As Many Reps As Possible) sets for progressive overload.</p>\r\n\r\n                                <div className=\"space-y-2\">\r\n                                    <label className=\"inline-flex items-center gap-2 text-[11px]\">\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            checked={state?.advanced?.strictPrSets || false}\r\n                                            onChange={(e) => {\r\n                                                dispatch({\r\n                                                    type: 'SET_ADVANCED',\r\n                                                    advanced: {\r\n                                                        ...(state?.advanced || {}),\r\n                                                        strictPrSets: e.target.checked\r\n                                                    }\r\n                                                });\r\n                                            }}\r\n                                        />\r\n                                        <span className=\"text-gray-300\">Use strict form on PR sets</span>\r\n                                    </label>\r\n\r\n                                    <div className=\"bg-blue-900/20 border border-blue-700/40 rounded p-2 text-[10px] text-blue-100 leading-snug\">\r\n                                        <p>For PR sets:</p>\r\n                                        <ul className=\"list-disc pl-4 mt-1 space-y-1\">\r\n                                            <li>Stop when form breaks down</li>\r\n                                            <li>Leave 1-2 reps in reserve on Week 1-2</li>\r\n                                            <li>Push harder on Week 3 PR sets</li>\r\n                                            <li>Record your rep PRs for progress tracking</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"space-y-2\">\r\n                            <div className=\"text-[11px] font-medium text-gray-200\">Deload Configuration</div>\r\n                            <div className=\"flex gap-3\">\r\n                                {[\r\n                                    { id: 'every4th', label: 'Every 4th Week' },\r\n                                    { id: 'every7th', label: '7th Week Protocol' },\r\n                                    { id: 'asNeeded', label: 'As Needed' }\r\n                                ].map(option => (\r\n                                    <button\r\n                                        key={option.id}\r\n                                        type=\"button\"\r\n                                        onClick={() => dispatch({\r\n                                            type: 'SET_ADVANCED',\r\n                                            advanced: {\r\n                                                ...(state?.advanced || {}),\r\n                                                deloadStrategy: option.id\r\n                                            }\r\n                                        })}\r\n                                        className={`px-2 py-1 rounded border text-[10px] ${(state?.advanced?.deloadStrategy || 'every7th') === option.id ? 'border-red-500 ring-1 ring-red-600 text-white' : 'border-gray-600 text-gray-300 hover:bg-gray-700/40'}`}\r\n                                    >\r\n                                        {option.label}\r\n                                    </button>\r\n                                ))}\r\n                            </div>\r\n                            <p className=\"text-[10px] text-gray-500 italic\">\r\n                                7th Week Protocol (recommended) places deloads after two full 3-week cycles for better progress.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Leader/Anchor Configuration */}\r\n                {programmingApproach === 'leaderAnchor' && (\r\n                    <div className=\"bg-gray-800/60 border border-gray-700 rounded p-4 space-y-3\">\r\n                        <div className=\"text-white font-medium\">Leader/Anchor Pattern</div>\r\n                        <p className=\"text-xs text-gray-400\">Select how many leader cycles before each anchor cycle.</p>\r\n\r\n                        {/* Auto-Selection Logic Section */}\r\n                        <div className=\"bg-gray-900/50 border border-gray-700/70 rounded p-3 space-y-2 mb-2\">\r\n                            <div className=\"text-[11px] font-medium text-gray-200 flex items-center gap-2\">\r\n                                <span>Auto-Selection Guidance</span>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                        // Autoselect pattern based on training experience\r\n                                        const experienceLevel = state?.userProfile?.experience || 'intermediate';\r\n                                        const recoveryLevel = state?.userProfile?.recovery || 'average';\r\n\r\n                                        // More experienced lifters with better recovery can handle longer leader phases\r\n                                        if (experienceLevel === 'advanced' || recoveryLevel === 'excellent') {\r\n                                            setLeaderAnchorPattern('3+1');\r\n                                        } else {\r\n                                            setLeaderAnchorPattern('2+1');\r\n                                        }\r\n                                    }}\r\n                                    className=\"px-2 py-0.5 bg-blue-600/50 hover:bg-blue-600/70 rounded text-[10px] text-blue-100\"\r\n                                >\r\n                                    Auto-Select\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3 text-[10px]\">\r\n                                <div className=\"space-y-1\">\r\n                                    <div className=\"text-gray-300\">Training Experience:</div>\r\n                                    <div className=\"flex gap-1\">\r\n                                        {['beginner', 'intermediate', 'advanced'].map(level => (\r\n                                            <button\r\n                                                key={level}\r\n                                                type=\"button\"\r\n                                                onClick={() => {\r\n                                                    dispatch({\r\n                                                        type: 'SET_USER_PROFILE',\r\n                                                        profile: {\r\n                                                            ...(state?.userProfile || {}),\r\n                                                            experience: level\r\n                                                        }\r\n                                                    });\r\n\r\n                                                    // Auto-adjust pattern based on selection\r\n                                                    if (level === 'advanced') {\r\n                                                        setLeaderAnchorPattern('3+1');\r\n                                                    } else if (level === 'beginner') {\r\n                                                        setLeaderAnchorPattern('2+1');\r\n                                                    }\r\n                                                }}\r\n                                                className={`px-2 py-0.5 rounded border ${(state?.userProfile?.experience || 'intermediate') === level ? 'border-red-500 bg-red-900/20 text-white' : 'border-gray-600 text-gray-300 hover:bg-gray-800'}`}\r\n                                            >\r\n                                                {level.charAt(0).toUpperCase() + level.slice(1)}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"space-y-1\">\r\n                                    <div className=\"text-gray-300\">Recovery Capacity:</div>\r\n                                    <div className=\"flex gap-1\">\r\n                                        {['limited', 'average', 'excellent'].map(level => (\r\n                                            <button\r\n                                                key={level}\r\n                                                type=\"button\"\r\n                                                onClick={() => {\r\n                                                    dispatch({\r\n                                                        type: 'SET_USER_PROFILE',\r\n                                                        profile: {\r\n                                                            ...(state?.userProfile || {}),\r\n                                                            recovery: level\r\n                                                        }\r\n                                                    });\r\n\r\n                                                    // Auto-adjust pattern based on selection\r\n                                                    if (level === 'excellent') {\r\n                                                        setLeaderAnchorPattern('3+1');\r\n                                                    } else if (level === 'limited') {\r\n                                                        setLeaderAnchorPattern('2+1');\r\n                                                    }\r\n                                                }}\r\n                                                className={`px-2 py-0.5 rounded border ${(state?.userProfile?.recovery || 'average') === level ? 'border-red-500 bg-red-900/20 text-white' : 'border-gray-600 text-gray-300 hover:bg-gray-800'}`}\r\n                                            >\r\n                                                {level.charAt(0).toUpperCase() + level.slice(1)}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-gray-400 text-[10px] italic mt-1\">\r\n                                More advanced lifters with better recovery typically benefit from longer accumulation phases (3+1).\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex gap-2\">\r\n                            {['2+1', '3+1'].map(pattern => (\r\n                                <button\r\n                                    key={pattern}\r\n                                    type=\"button\"\r\n                                    onClick={() => setLeaderAnchorPattern(pattern)}\r\n                                    className={`px-3 py-1 rounded border text-sm ${leaderAnchorPattern === pattern ? 'border-red-500 ring-2 ring-red-600 text-white' : 'border-gray-600 text-gray-200 hover:bg-gray-700/40'}`}\r\n                                >\r\n                                    {pattern}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"text-[11px] text-gray-300\">\r\n                            <p className=\"font-medium mb-1\">Pattern Explanation:</p>\r\n                            <ul className=\"list-disc pl-5 space-y-1 text-gray-400\">\r\n                                <li><span className=\"text-gray-300\">2+1:</span> Two leader cycles (volume focus) followed by one anchor cycle (intensity focus)</li>\r\n                                <li><span className=\"text-gray-300\">3+1:</span> Three leader cycles followed by one anchor cycle (longer accumulation phase)</li>\r\n                            </ul>\r\n                            <p className=\"mt-2 text-gray-500\">Leaders focus on volume using FSL, BBB, or 5s PRO. Anchors use PR sets with SSL or heavy FSL.</p>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* 5's PRO Configuration */}\r\n                {programmingApproach === 'fivespro' && (\r\n                    <div className=\"bg-gray-800/60 border border-gray-700 rounded p-4 space-y-3\">\r\n                        <div className=\"text-white font-medium\">5's PRO Implementation Notes</div>\r\n                        <p className=\"text-xs text-gray-400\">All main work sets performed as sets of 5 reps regardless of week.</p>\r\n                        <div className=\"bg-blue-900/20 border border-blue-700/40 rounded p-3 text-[11px] text-blue-100 flex space-x-2 leading-snug\">\r\n                            <Info className=\"w-4 h-4 mt-0.5\" />\r\n                            <span>\r\n                                5's PRO removes AMRAP sets for consistent performance. This allows higher supplemental volume while reducing CNS fatigue. PR tracking shifts to supplemental weight increases rather than rep PRs.\r\n                            </span>\r\n                        </div>\r\n                        <table className=\"w-full text-xs text-gray-300 mt-2\">\r\n                            <thead>\r\n                                <tr className=\"text-gray-400\">\r\n                                    <th className=\"text-left py-1\">Week</th>\r\n                                    <th className=\"text-center py-1\">Standard Pattern</th>\r\n                                    <th className=\"text-center py-1\">5's PRO Pattern</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr className=\"border-t border-gray-700/60\">\r\n                                    <td className=\"py-1\">Week 1</td>\r\n                                    <td className=\"py-1 text-center\">5/5/5+ (AMRAP)</td>\r\n                                    <td className=\"py-1 text-center\">5/5/5 (No AMRAP)</td>\r\n                                </tr>\r\n                                <tr className=\"border-t border-gray-700/60\">\r\n                                    <td className=\"py-1\">Week 2</td>\r\n                                    <td className=\"py-1 text-center\">3/3/3+ (AMRAP)</td>\r\n                                    <td className=\"py-1 text-center\">5/5/5 (No AMRAP)</td>\r\n                                </tr>\r\n                                <tr className=\"border-t border-gray-700/60\">\r\n                                    <td className=\"py-1\">Week 3</td>\r\n                                    <td className=\"py-1 text-center\">5/3/1+ (AMRAP)</td>\r\n                                    <td className=\"py-1 text-center\">5/5/5 (No AMRAP)</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <p className=\"text-[10px] text-gray-500\">Use 5's PRO with higher supplemental volume (FSL 5×5, BBB, etc.) or during Leader phases of the Leader/Anchor system.</p>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Competition Configuration */}\r\n                {programmingApproach === 'competition' && (\r\n                    <div className=\"bg-gray-800/60 border border-gray-700 rounded p-4 space-y-3\">\r\n                        <div className=\"text-white font-medium\">Competition Prep Configuration</div>\r\n                        <p className=\"text-xs text-gray-400\">Modified loading pattern to optimize for max testing and competition.</p>\r\n\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                            <div>\r\n                                <div className=\"text-[11px] font-medium text-gray-200 mb-1\">3/5/1 Wave Loading</div>\r\n                                <p className=\"text-[10px] text-gray-400\">Reverses week 1 and 2 to put heavier work closer to competition.</p>\r\n                                <table className=\"w-full text-[10px] text-gray-300 mt-2\">\r\n                                    <thead>\r\n                                        <tr className=\"text-gray-400\">\r\n                                            <th className=\"text-left py-1\">Week</th>\r\n                                            <th className=\"text-center py-1\">Sets/Reps</th>\r\n                                            <th className=\"text-center py-1\">Percentages</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr className=\"border-t border-gray-700/60\">\r\n                                            <td className=\"py-1\">Week 1</td>\r\n                                            <td className=\"py-1 text-center\">3/3/3+</td>\r\n                                            <td className=\"py-1 text-center\">70/80/90%</td>\r\n                                        </tr>\r\n                                        <tr className=\"border-t border-gray-700/60\">\r\n                                            <td className=\"py-1\">Week 2</td>\r\n                                            <td className=\"py-1 text-center\">5/5/5+</td>\r\n                                            <td className=\"py-1 text-center\">65/75/85%</td>\r\n                                        </tr>\r\n                                        <tr className=\"border-t border-gray-700/60\">\r\n                                            <td className=\"py-1\">Week 3</td>\r\n                                            <td className=\"py-1 text-center\">5/3/1+</td>\r\n                                            <td className=\"py-1 text-center\">75/85/95%</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div className=\"text-[11px] font-medium text-gray-200 mb-1\">Joker Sets</div>\r\n                                <p className=\"text-[10px] text-gray-400\">Optional heavier singles, doubles or triples after your main work on good days.</p>\r\n                                <div className=\"mt-2 grid grid-cols-2 gap-2\">\r\n                                    <div className=\"col-span-2\">\r\n                                        <label className=\"inline-flex items-center gap-2 text-[11px]\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={state?.advanced?.useJokerSets || false}\r\n                                                onChange={(e) => {\r\n                                                    dispatch({\r\n                                                        type: 'SET_ADVANCED',\r\n                                                        advanced: {\r\n                                                            ...(state?.advanced || {}),\r\n                                                            useJokerSets: e.target.checked\r\n                                                        }\r\n                                                    });\r\n                                                }}\r\n                                            />\r\n                                            <span className=\"text-gray-300\">Enable Joker Sets</span>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"text-[10px] text-gray-400 col-span-2\">\r\n                                        Only attempt Joker sets when feeling strong and bar speed is excellent. Start with +5% increments above your top set.\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </section>\r\n\r\n            {/* Programming Influence - Auto-Recommendations based on Programming Approach */}\r\n            <section className=\"bg-blue-900/20 border border-blue-700/40 rounded-lg p-4 space-y-3\">\r\n                <div className=\"flex items-start gap-2\">\r\n                    <Info className=\"w-5 h-5 text-blue-300 flex-shrink-0 mt-0.5\" />\r\n                    <div>\r\n                        <h4 className=\"text-sm font-medium text-blue-100\">Programming Approach Integration</h4>\r\n                        <p className=\"text-xs text-blue-200/70 mt-1\">Your selected approach ({programmingApproach === 'traditional' ? 'Traditional 5/3/1' :\r\n                            programmingApproach === 'leaderAnchor' ? 'Leader/Anchor Cycles' :\r\n                                programmingApproach === 'fivespro' ? '5\\'s PRO' :\r\n                                    'Competition Prep'}) influences the recommended settings below.</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3 text-[11px]\">\r\n                    {(() => {\r\n                        // Define recommendations based on programming approach\r\n                        const recommendations = {\r\n                            traditional: {\r\n                                supplemental: 'BBB or FSL',\r\n                                assistance: 'Standard (balanced)',\r\n                                conditioning: 'Standard to Extensive'\r\n                            },\r\n                            leaderAnchor: {\r\n                                supplemental: 'Leader: BBB/SSL, Anchor: FSL/Jokers',\r\n                                assistance: 'Minimal in Leaders, Standard in Anchors',\r\n                                conditioning: 'Based on current phase'\r\n                            },\r\n                            fivespro: {\r\n                                supplemental: 'Higher volume (BBB or BBS)',\r\n                                assistance: 'Standard or Minimal',\r\n                                conditioning: 'Standard (recovery-focused)'\r\n                            },\r\n                            competition: {\r\n                                supplemental: 'SSL or Limited FSL',\r\n                                assistance: 'Minimal (technique focus)',\r\n                                conditioning: 'Reduced (performance focus)'\r\n                            }\r\n                        };\r\n\r\n                        // Defensive: derive recommendation with fallback (prevents undefined access)\r\n                        const rec = recommendations[programmingApproach] || recommendations.basic || { supplemental: 'N/A', assistance: 'N/A', conditioning: 'N/A' };\r\n                        if (!recommendations[programmingApproach]) {\r\n                            console.warn('STEP3 DEBUG missing recommendation for programmingApproach=', programmingApproach, 'available keys=', Object.keys(recommendations));\r\n                        }\r\n\r\n                        return (\r\n                            <>\r\n                                <div className=\"bg-blue-950/50 border border-blue-800/40 rounded p-2\">\r\n                                    <div className=\"font-medium text-blue-300\">Supplemental Work</div>\r\n                                    <p className=\"mt-1 text-blue-100/80\">{rec?.supplemental || '—'}</p>\r\n                                </div>\r\n                                <div className=\"bg-blue-950/50 border border-blue-800/40 rounded p-2\">\r\n                                    <div className=\"font-medium text-blue-300\">Assistance Approach</div>\r\n                                    <p className=\"mt-1 text-blue-100/80\">{rec?.assistance || '—'}</p>\r\n                                </div>\r\n                                <div className=\"bg-blue-950/50 border border-blue-800/40 rounded p-2\">\r\n                                    <div className=\"font-medium text-blue-300\">Conditioning Focus</div>\r\n                                    <p className=\"mt-1 text-blue-100/80\">{rec?.conditioning || '—'}</p>\r\n                                </div>\r\n                            </>\r\n                        );\r\n                    })()}\r\n                </div>\r\n\r\n                <div className=\"flex justify-end\">\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            // Auto-configure settings based on programming approach\r\n                            let suppStrategy = 'none';\r\n                            let assistMode = 'minimal';\r\n                            let conditioningApproach = 'standard';\r\n\r\n                            switch (programmingApproach) {\r\n                                case 'traditional':\r\n                                    suppStrategy = 'fsl';\r\n                                    assistMode = 'standard';\r\n                                    conditioningApproach = 'standard';\r\n                                    break;\r\n                                case 'leaderAnchor':\r\n                                    // For leader phase\r\n                                    suppStrategy = 'bbb';\r\n                                    assistMode = 'minimal';\r\n                                    conditioningApproach = 'extensive';\r\n                                    break;\r\n                                case 'fivespro':\r\n                                    suppStrategy = 'bbb';\r\n                                    assistMode = 'minimal';\r\n                                    conditioningApproach = 'standard';\r\n                                    break;\r\n                                case 'competition':\r\n                                    suppStrategy = 'ssl';\r\n                                    assistMode = 'minimal';\r\n                                    conditioningApproach = 'minimal';\r\n                                    break;\r\n                            }\r\n\r\n                            // Set supplemental strategy\r\n                            setSuppStrategy(suppStrategy);\r\n\r\n                            // Set assistance mode\r\n                            setAssistMode(assistMode);\r\n\r\n                            // Set conditioning approach\r\n                            dispatch({\r\n                                type: 'SET_CONDITIONING',\r\n                                conditioning: {\r\n                                    ...(state?.conditioning || {}),\r\n                                    approach: conditioningApproach\r\n                                }\r\n                            });\r\n                        }}\r\n                        className=\"px-3 py-1 bg-blue-600/60 hover:bg-blue-600/80 rounded text-xs text-white flex items-center gap-2\"\r\n                    >\r\n                        <span>Auto-Configure Program</span>\r\n                    </button>\r\n                </div>\r\n            </section>\r\n\r\n            {/* Deadlift rep style moved inline with schedule (above) */}\r\n\r\n            {/* Section D: Supplemental */}\r\n            <section className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-6 space-y-5\">\r\n                <div className=\"space-y-1\">\r\n                    <h3 className=\"text-lg font-semibold text-white\">D) Supplemental</h3>\r\n                    <p className=\"text-sm text-gray-400 mt-1\">Choose your supplemental lifting strategy to build volume and drive hypertrophy.</p>\r\n                    <p className=\"text-[11px] text-gray-500\">Supplemental work is the foundation of your training volume and a key driver of long-term progress.</p>\r\n                </div>\r\n\r\n                {/* Supplemental Categories */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 mb-2\">\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => dispatch({\r\n                            type: 'SET_SUPPLEMENTAL_DETAILS',\r\n                            details: { ...(state?.supplemental?.details || {}), category: 'standard' }\r\n                        })}\r\n                        className={`flex justify-between items-center p-3 rounded border ${(state?.supplemental?.details?.category || 'standard') === 'standard' ? 'bg-red-900/20 border-red-500 ring-1 ring-red-500' : 'bg-gray-900/50 border-gray-700 hover:bg-gray-800'}`}\r\n                    >\r\n                        <div>\r\n                            <div className=\"text-sm font-semibold text-white\">Standard Templates</div>\r\n                            <div className=\"text-[11px] text-gray-300 mt-0.5\">FSL, SSL, BBB, BBS</div>\r\n                        </div>\r\n                        {(state?.supplemental?.details?.category || 'standard') === 'standard' && (\r\n                            <div className=\"bg-red-500/20 border border-red-500/30 rounded-full p-1\">\r\n                                <CheckCircle2 className=\"w-4 h-4 text-red-400\" />\r\n                            </div>\r\n                        )}\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={() => dispatch({\r\n                            type: 'SET_SUPPLEMENTAL_DETAILS',\r\n                            details: { ...(state?.supplemental?.details || {}), category: 'specialized' }\r\n                        })}\r\n                        className={`flex justify-between items-center p-3 rounded border ${(state?.supplemental?.details?.category || 'standard') === 'specialized' ? 'bg-red-900/20 border-red-500 ring-1 ring-red-500' : 'bg-gray-900/50 border-gray-700 hover:bg-gray-800'}`}\r\n                    >\r\n                        <div>\r\n                            <div className=\"text-sm font-semibold text-white\">Specialized Templates</div>\r\n                            <div className=\"text-[11px] text-gray-300 mt-0.5\">Widowmakers, SSL+BBS, Pyramids</div>\r\n                        </div>\r\n                        {(state?.supplemental?.details?.category || 'standard') === 'specialized' && (\r\n                            <div className=\"bg-red-500/20 border border-red-500/30 rounded-full p-1\">\r\n                                <CheckCircle2 className=\"w-4 h-4 text-red-400\" />\r\n                            </div>\r\n                        )}\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Standard Supplemental Templates */}\r\n                {(state?.supplemental?.details?.category || 'standard') === 'standard' && (\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-3\">\r\n                        {[{\r\n                            id: 'none',\r\n                            title: 'None',\r\n                            desc: 'Main work only without supplemental volume',\r\n                            best: 'Very advanced lifters or special situations',\r\n                            note: 'Focus on main lift performance'\r\n                        }, {\r\n                            id: 'fsl',\r\n                            title: 'FSL (First Set Last)',\r\n                            desc: 'Additional sets using first week percentage',\r\n                            best: 'Balanced approach for most lifters',\r\n                            note: 'Typically 5×5 @ Week 1 percentage'\r\n                        }, {\r\n                            id: 'ssl',\r\n                            title: 'SSL (Second Set Last)',\r\n                            desc: 'Additional sets using second week percentage',\r\n                            best: 'More advanced lifters seeking higher intensity',\r\n                            note: 'Typically 5×5 @ Week 2 percentage'\r\n                        }, {\r\n                            id: 'bbb',\r\n                            title: 'BBB (Boring But Big)',\r\n                            desc: '5×10 volume approach for hypertrophy',\r\n                            best: 'Size-focused lifters, volume accumulation',\r\n                            note: 'Typically 5×10 @ 50-60% TM (book range)'\r\n                        }, {\r\n                            id: 'bbs',\r\n                            title: 'BBS (Boring But Strong)',\r\n                            desc: 'Higher intensity BBB variant',\r\n                            best: 'Advanced lifters seeking both strength/size',\r\n                            note: 'Typically 5×5 @ 65-75% TM'\r\n                        }].map(strategy => {\r\n                            const isSelected = suppStrategy === strategy.id;\r\n                            return (\r\n                                <button\r\n                                    key={strategy.id}\r\n                                    type=\"button\"\r\n                                    onClick={() => setSuppStrategy(strategy.id)}\r\n                                    className={`text-left bg-gray-900/50 border rounded p-3 hover:bg-gray-900 transition ${isSelected ? 'border-red-500 ring-2 ring-red-600' : 'border-gray-700'}`}\r\n                                >\r\n                                    <div className=\"flex items-start justify-between\">\r\n                                        <div className=\"text-sm font-semibold text-white\">{strategy.title}</div>\r\n                                        {isSelected && <CheckCircle2 className=\"w-4 h-4 text-green-400\" />}\r\n                                    </div>\r\n                                    <div className=\"text-[11px] text-gray-300 mt-1\">{strategy.desc}</div>\r\n                                    <div className=\"mt-2 text-[10px] text-gray-400\">\r\n                                        <span className=\"text-gray-300 font-medium\">Best for: </span>\r\n                                        {strategy.best}\r\n                                    </div>\r\n                                    <div className=\"mt-1 text-[10px] text-gray-500 italic\">{strategy.note}</div>\r\n                                </button>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Specialized Supplemental Templates */}\r\n                {(state?.supplemental?.details?.category || 'standard') === 'specialized' && (\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\r\n                        {[{\r\n                            id: 'widowmaker',\r\n                            title: 'Widowmakers',\r\n                            desc: '1×20 reps at FSL weight (65%)',\r\n                            best: 'High threshold training, mental toughness',\r\n                            note: 'Used primarily with squat, can be applied to other lifts',\r\n                            recovery: 'High',\r\n                            volume: 'Moderate-High',\r\n                            icon: 'Skull'\r\n                        }, {\r\n                            id: 'pyramid',\r\n                            title: 'Descending Pyramids',\r\n                            desc: 'Sets of 5/3/1 after main work at same percentages',\r\n                            best: 'Pure strength focus with moderate volume',\r\n                            note: 'Efficient strength-building with minimal assistance needed',\r\n                            recovery: 'Moderate',\r\n                            volume: 'Moderate',\r\n                            icon: 'Triangle'\r\n                        }, {\r\n                            id: 'sslbbs',\r\n                            title: 'SSL + BBS Hybrid',\r\n                            desc: '5×5 starting at SSL% (70-80% TM)',\r\n                            best: 'Advanced lifters needing strength and size',\r\n                            note: 'Combines intensity of SSL with volume approach of BBS',\r\n                            recovery: 'Very High',\r\n                            volume: 'High',\r\n                            icon: 'Zap'\r\n                        }, {\r\n                            id: 'joker',\r\n                            title: 'Joker Sets + FSL',\r\n                            desc: 'Heavy singles above TM, then FSL volume',\r\n                            best: 'Testing strength while still building volume',\r\n                            note: 'Only on days feeling exceptional, not programmed every week',\r\n                            recovery: 'High',\r\n                            volume: 'Moderate',\r\n                            icon: 'Joker'\r\n                        }, {\r\n                            id: 'fslpr',\r\n                            title: 'FSL PR Sets',\r\n                            desc: 'AMRAP sets using FSL weight',\r\n                            best: 'Building work capacity and volume tolerance',\r\n                            note: 'Leave 1-2 reps in tank on all but final set',\r\n                            recovery: 'Moderate-High',\r\n                            volume: 'High',\r\n                            icon: 'Timer'\r\n                        }, {\r\n                            id: 'bbbbeef',\r\n                            title: 'BBB Beefcake',\r\n                            desc: '5×10 @ FSL% (65-75% TM)',\r\n                            best: 'Size focus, high work capacity',\r\n                            note: 'High volume, high intensity BBB variation',\r\n                            recovery: 'Very High',\r\n                            volume: 'Very High',\r\n                            icon: 'Beef'\r\n                        }].map(strategy => {\r\n                            // For specialized templates, we'll use state.supplemental.type instead of the local suppStrategy\r\n                            const isSelected = state?.supplemental?.type === strategy.id;\r\n                            return (\r\n                                <button\r\n                                    key={strategy.id}\r\n                                    type=\"button\"\r\n                                    onClick={() => dispatch({\r\n                                        type: 'SET_SUPPLEMENTAL',\r\n                                        supplemental: { type: strategy.id }\r\n                                    })}\r\n                                    className={`flex flex-col bg-gray-900/50 border rounded p-3 hover:bg-gray-900 transition ${isSelected ? 'border-red-500 ring-2 ring-red-600' : 'border-gray-700'}`}\r\n                                >\r\n                                    <div className=\"flex items-start justify-between\">\r\n                                        <div className=\"text-sm font-semibold text-white\">{strategy.title}</div>\r\n                                        {isSelected && <CheckCircle2 className=\"w-4 h-4 text-green-400\" />}\r\n                                    </div>\r\n                                    <div className=\"text-[11px] text-gray-300 mt-1\">{strategy.desc}</div>\r\n                                    <div className=\"mt-2 text-[10px] text-gray-400\">\r\n                                        <span className=\"text-gray-300 font-medium\">Best for: </span>\r\n                                        {strategy.best}\r\n                                    </div>\r\n                                    <div className=\"grid grid-cols-2 gap-1 mt-2 text-[10px]\">\r\n                                        <div>\r\n                                            <span className=\"text-gray-400\">Recovery: </span>\r\n                                            <span className={`${strategy.recovery.includes('High') ? 'text-red-300' : strategy.recovery.includes('Moderate') ? 'text-yellow-300' : 'text-green-300'}`}>\r\n                                                {strategy.recovery}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div>\r\n                                            <span className=\"text-gray-400\">Volume: </span>\r\n                                            <span className={`${strategy.volume.includes('High') ? 'text-blue-300' : strategy.volume.includes('Moderate') ? 'text-teal-300' : 'text-gray-300'}`}>\r\n                                                {strategy.volume}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mt-1 text-[10px] text-gray-500 italic\">{strategy.note}</div>\r\n                                </button>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n                {/* Supplemental Configuration Section */}\r\n                <div className=\"mt-5\">\r\n                    {/* BBB Configuration */}\r\n                    {suppStrategy === 'bbb' && (\r\n                        <div className=\"bg-gray-800/60 border border-gray-700 rounded p-4 space-y-4\">\r\n                            <div className=\"flex items-center\">\r\n                                <div className=\"text-white font-medium\">BBB Configuration</div>\r\n                                <div className=\"ml-auto flex items-center bg-blue-500/20 border border-blue-500/30 rounded-full px-2 py-0.5 text-[10px] text-blue-300\">\r\n                                    <BarChart3 className=\"w-3 h-3 mr-1\" />\r\n                                    <span>High Volume</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <label className=\"text-sm font-medium text-gray-200\">Supplemental Pairing</label>\r\n                                <p className=\"text-xs text-gray-400 mb-2\">Choose how BBB is paired after your main lift.</p>\r\n                                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n                                    <label className=\"inline-flex items-center justify-between gap-2 text-xs bg-gray-900/50 border border-gray-700 rounded p-3 cursor-pointer\">\r\n                                        <div>\r\n                                            <div className=\"font-medium text-white\">Same Lift</div>\r\n                                            <div className=\"text-[11px] text-gray-400 mt-1\">BBB sets use same movement as main work</div>\r\n                                            <div className=\"mt-2 text-[10px] text-blue-300\">Recommended for pure hypertrophy focus</div>\r\n                                        </div>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name=\"suppPairing\"\r\n                                            value=\"same\"\r\n                                            checked={suppPairing === 'same'}\r\n                                            onChange={() => setSuppPairing('same')}\r\n                                        />\r\n                                    </label>\r\n                                    <label className=\"inline-flex items-center justify-between gap-2 text-xs bg-gray-900/50 border border-gray-700 rounded p-3 cursor-pointer\">\r\n                                        <div>\r\n                                            <div className=\"font-medium text-white\">Opposite Lift</div>\r\n                                            <div className=\"text-[11px] text-gray-400 mt-1\">Press + Bench, Squat + Deadlift pairings</div>\r\n                                            <div className=\"mt-2 text-[10px] text-green-300\">Better recovery between workouts</div>\r\n                                        </div>\r\n                                        <input\r\n                                            type=\"radio\"\r\n                                            name=\"suppPairing\"\r\n                                            value=\"opposite\"\r\n                                            checked={suppPairing === 'opposite'}\r\n                                            onChange={() => setSuppPairing('opposite')}\r\n                                        />\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"grid sm:grid-cols-2 gap-4\">\r\n                                <div className=\"space-y-2\">\r\n                                    <label className=\"block text-xs uppercase text-gray-400\">Percentage of TM</label>\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <input\r\n                                            type=\"range\"\r\n                                            min=\"50\"\r\n                                            max=\"60\"\r\n                                            step=\"5\"\r\n                                            value={suppPct}\r\n                                            onChange={e => setSuppPct(Number(e.target.value))}\r\n                                            className=\"w-full\"\r\n                                        />\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            value={suppPct}\r\n                                            min={50}\r\n                                            max={60}\r\n                                            onChange={e => setSuppPct(Number(e.target.value))}\r\n                                            className=\"w-16 bg-gray-800 border border-gray-600 rounded px-2 py-1 text-sm text-white focus:border-red-500\"\r\n                                        />\r\n                                        <span className=\"text-gray-400\">%</span>\r\n                                    </div>\r\n                                    {!validation.supplementalOk && <p className=\"text-xs text-yellow-300\">Range 50-60% (book)</p>}\r\n                                </div>\r\n                                <div className=\"space-y-2\">\r\n                                    <label className=\"block text-xs uppercase text-gray-400\">Sets × Reps</label>\r\n                                    <div className=\"text-gray-300 text-sm font-mono flex items-center h-full\">5 × 10</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"bg-blue-900/20 border border-blue-700/40 rounded p-3 text-[11px] text-blue-100 flex space-x-2 leading-snug\">\r\n                                <Info className=\"w-4 h-4 mt-0.5\" />\r\n                                <span>\r\n                                    BBB is a hypertrophy-focused protocol. Book range is 50-60% TM. Start at 50% and progress slowly to 60% only when recovery is excellent.\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* FSL Configuration */}\r\n                    {suppStrategy === 'fsl' && (\r\n                        <div className=\"bg-gray-800/60 border border-gray-700 rounded p-4 space-y-4\">\r\n                            <div className=\"text-white font-medium\">FSL Configuration</div>\r\n\r\n                            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-200\">Format</label>\r\n                                    <div className=\"flex flex-wrap gap-2 mt-2\">\r\n                                        {[\r\n                                            { id: '5x5', label: '5×5', desc: 'Standard format' },\r\n                                            { id: '5x8', label: '5×8', desc: 'Higher volume' },\r\n                                            { id: '3x8', label: '3×8', desc: 'Moderate volume' }\r\n                                        ].map(format => (\r\n                                            <button\r\n                                                key={format.id}\r\n                                                type=\"button\"\r\n                                                onClick={() => dispatch({\r\n                                                    type: 'SET_SUPPLEMENTAL_DETAILS',\r\n                                                    details: { ...(state?.supplemental?.details || {}), fslFormat: format.id }\r\n                                                })}\r\n                                                className={`px-3 py-1 rounded border text-sm ${(state?.supplemental?.details?.fslFormat || '5x5') === format.id ? 'border-red-500 ring-2 ring-red-600 text-white' : 'border-gray-600 text-gray-200 hover:bg-gray-700/40'}`}\r\n                                            >\r\n                                                {format.label}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                    <p className=\"text-[11px] text-gray-400 mt-2\">First Set Last uses your first working set percentage for additional volume.</p>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-200\">Percentage Info</label>\r\n                                    <div className=\"text-[11px] text-gray-300 mt-2\">\r\n                                        <div className=\"flex justify-between\">\r\n                                            <span>Week 1:</span>\r\n                                            <span className=\"font-mono\">65% TM</span>\r\n                                        </div>\r\n                                        <div className=\"flex justify-between\">\r\n                                            <span>Week 2:</span>\r\n                                            <span className=\"font-mono\">70% TM</span>\r\n                                        </div>\r\n                                        <div className=\"flex justify-between\">\r\n                                            <span>Week 3:</span>\r\n                                            <span className=\"font-mono\">75% TM</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* SSL Configuration */}\r\n                    {suppStrategy === 'ssl' && (\r\n                        <div className=\"bg-gray-800/60 border border-gray-700 rounded p-4 space-y-4\">\r\n                            <div className=\"text-white font-medium\">SSL Configuration</div>\r\n\r\n                            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-200\">Format</label>\r\n                                    <div className=\"flex flex-wrap gap-2 mt-2\">\r\n                                        {[\r\n                                            { id: '5x5', label: '5×5', desc: 'Standard format' },\r\n                                            { id: '5x3', label: '5×3', desc: 'Lower volume' },\r\n                                            { id: '3x5', label: '3×5', desc: 'Moderate volume' }\r\n                                        ].map(format => (\r\n                                            <button\r\n                                                key={format.id}\r\n                                                type=\"button\"\r\n                                                onClick={() => dispatch({\r\n                                                    type: 'SET_SUPPLEMENTAL_DETAILS',\r\n                                                    details: { ...(state?.supplemental?.details || {}), sslFormat: format.id }\r\n                                                })}\r\n                                                className={`px-3 py-1 rounded border text-sm ${(state?.supplemental?.details?.sslFormat || '5x5') === format.id ? 'border-red-500 ring-2 ring-red-600 text-white' : 'border-gray-600 text-gray-200 hover:bg-gray-700/40'}`}\r\n                                            >\r\n                                                {format.label}\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                    <p className=\"text-[11px] text-gray-400 mt-2\">Second Set Last uses your second working set percentage for increased intensity.</p>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <label className=\"block text-sm font-medium text-gray-200\">Percentage Info</label>\r\n                                    <div className=\"text-[11px] text-gray-300 mt-2\">\r\n                                        <div className=\"flex justify-between\">\r\n                                            <span>Week 1:</span>\r\n                                            <span className=\"font-mono\">70% TM</span>\r\n                                        </div>\r\n                                        <div className=\"flex justify-between\">\r\n                                            <span>Week 2:</span>\r\n                                            <span className=\"font-mono\">80% TM</span>\r\n                                        </div>\r\n                                        <div className=\"flex justify-between\">\r\n                                            <span>Week 3:</span>\r\n                                            <span className=\"font-mono\">85% TM</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* BBS Configuration */}\r\n                    {suppStrategy === 'bbs' && (\r\n                        <div className=\"bg-gray-800/60 border border-gray-700 rounded p-4 space-y-4\">\r\n                            <div className=\"text-white font-medium\">BBS Configuration</div>\r\n\r\n                            <div className=\"grid sm:grid-cols-2 gap-4\">\r\n                                <div className=\"space-y-2\">\r\n                                    <label className=\"block text-xs uppercase text-gray-400\">Percentage of TM</label>\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <input\r\n                                            type=\"range\"\r\n                                            min=\"65\"\r\n                                            max=\"75\"\r\n                                            step=\"5\"\r\n                                            value={state?.supplemental?.details?.bbsPercentage || 65}\r\n                                            onChange={e => dispatch({\r\n                                                type: 'SET_SUPPLEMENTAL_DETAILS',\r\n                                                details: { ...(state?.supplemental?.details || {}), bbsPercentage: Number(e.target.value) }\r\n                                            })}\r\n                                            className=\"w-full\"\r\n                                        />\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            value={state?.supplemental?.details?.bbsPercentage || 65}\r\n                                            min={65}\r\n                                            max={75}\r\n                                            onChange={e => dispatch({\r\n                                                type: 'SET_SUPPLEMENTAL_DETAILS',\r\n                                                details: { ...(state?.supplemental?.details || {}), bbsPercentage: Number(e.target.value) }\r\n                                            })}\r\n                                            className=\"w-16 bg-gray-800 border border-gray-600 rounded px-2 py-1 text-sm text-white focus:border-red-500\"\r\n                                        />\r\n                                        <span className=\"text-gray-400\">%</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"space-y-2\">\r\n                                    <label className=\"block text-xs uppercase text-gray-400\">Sets × Reps</label>\r\n                                    <div className=\"text-gray-300 text-sm font-mono flex items-center h-full\">5 × 5</div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"bg-blue-900/20 border border-blue-700/40 rounded p-3 text-[11px] text-blue-100 flex space-x-2 leading-snug\">\r\n                                <Info className=\"w-4 h-4 mt-0.5\" />\r\n                                <span>\r\n                                    Boring But Strong is a higher intensity variant of BBB. The heavier weight (65-75%) with moderate reps (5×5) provides a balance of volume and intensity for strength-focused hypertrophy.\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </section>\r\n\r\n            {/* Equipment & Exercise Options (Redesigned Section F) */}\r\n            <section className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-6 space-y-6\">\r\n                <div className=\"space-y-1\">\r\n                    <h3 className=\"text-lg font-semibold text-white\">F) Equipment & Exercise Options</h3>\r\n                    <p className=\"text-xs text-gray-400\">Select available equipment to filter assistance exercise recommendations.</p>\r\n                    <p className=\"text-[11px] text-gray-500\">Equipment selection determines which assistance exercises will be suggested and available for your program.</p>\r\n                </div>\r\n                {/* Profile Cards */}\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3\">\r\n                    {[{\r\n                        id: 'full', title: 'Commercial Gym / Full Setup', badge: 'All Exercises Available', desc: 'Complete equipment access including machines, cables, specialty items', items: [...ALL_EQUIP]\r\n                    }, {\r\n                        id: 'home', title: 'Home Gym Essentials', badge: 'Most Exercises Available', desc: 'Basic home setup with key equipment for comprehensive training', items: ['bb', 'plate', 'bench', 'db', 'dip', 'rings', 'bw']\r\n                    }, {\r\n                        id: 'minimal', title: 'Minimal Equipment', badge: 'Core + Bodyweight', desc: 'Barbell‑centric with bodyweight accessories', items: ['bb', 'plate', 'bw', 'dip', 'rings', 'bench']\r\n                    }, {\r\n                        id: 'bodyweight', title: 'Bodyweight Only', badge: 'Bodyweight Only', desc: 'Calisthenics / core focus', items: ['bw', 'rings', 'dip', 'abwheel', 'box']\r\n                    }].map(card => {\r\n                        const active = JSON.stringify([...equip].sort()) === JSON.stringify([...card.items].sort());\r\n                        return (\r\n                            <button key={card.id} type=\"button\" onClick={() => setEquip([...new Set(card.items)])} className={`text-left bg-gray-900/50 border rounded p-3 hover:bg-gray-900 transition relative ${active ? 'border-red-500 ring-2 ring-red-600' : 'border-gray-700'}`}>\r\n                                <div className=\"flex items-start justify-between\">\r\n                                    <div className=\"text-sm font-semibold text-white leading-snug pr-4\">{card.title}</div>\r\n                                    {active && <span className=\"text-green-400 text-[11px] font-medium\">Active</span>}\r\n                                </div>\r\n                                <div className=\"text-[11px] text-gray-300 mt-2 leading-snug\">{card.desc}</div>\r\n                                <div className=\"mt-3 inline-block text-[10px] px-2 py-0.5 rounded border border-red-500 text-red-300 tracking-wide\">{card.badge}</div>\r\n                            </button>\r\n                        );\r\n                    })}\r\n                </div>\r\n                {/* Categorized Custom Selection */}\r\n                <div className=\"space-y-5\">\r\n                    {[{\r\n                        id: 'essential', label: 'Essential Equipment', note: 'Core barbell requirements', items: [['bb', 'Barbell'], ['plate', 'Plates'], ['bench', 'Bench'], ['bar', 'Straight Bar (Alt)']]\r\n                    }, {\r\n                        id: 'assistance', label: 'Assistance Equipment', note: 'Expands accessory selection', items: [['db', 'Dumbbells'], ['machine', 'Machines'], ['cable', 'Cable Machine'], ['band', 'Resistance Bands']]\r\n                    }, {\r\n                        id: 'specialty', label: 'Specialty Equipment', note: 'Variation / overload tools', items: [['kb', 'Kettlebell'], ['landmine', 'Landmine'], ['box', 'Plyo Box'], ['abwheel', 'Ab Wheel']]\r\n                    }, {\r\n                        id: 'bodyweight', label: 'Bodyweight Accessories', note: 'Calisthenics & core tools', items: [['bw', 'Bodyweight'], ['dip', 'Dip Station'], ['rings', 'Rings']]\r\n                    }].map(cat => (\r\n                        <div key={cat.id} className=\"bg-gray-900/40 border border-gray-700 rounded p-4 space-y-3\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <div className=\"text-white font-medium text-sm\">{cat.label}</div>\r\n                                    <div className=\"text-[11px] text-gray-400\">{cat.note}</div>\r\n                                </div>\r\n                                {cat.id === 'essential' && !(['bb', 'plate', 'bench'].every(k => equip.includes(k))) && <span className=\"text-[10px] text-red-400\">Incomplete</span>}\r\n                            </div>\r\n                            <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2\">\r\n                                {cat.items.map(([id, label]) => {\r\n                                    const on = equip.includes(id);\r\n                                    return (\r\n                                        <button key={id} type=\"button\" onClick={() => toggleEquip(id)} className={`px-2 py-1 rounded border text-[11px] flex items-center justify-between gap-2 ${on ? 'border-red-500 bg-red-600/10 text-white' : 'border-gray-600 bg-gray-900/40 text-gray-300 hover:bg-gray-800/60'}`}>\r\n                                            <span className=\"truncate\">{label}</span>\r\n                                            <span className={`w-3 h-3 rounded-full ${on ? 'bg-green-500' : 'bg-gray-600'}`}></span>\r\n                                        </button>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                {/* Impact Preview (heuristic) */}\r\n                <div>\r\n                    {(() => {\r\n                        const base = { pull: 4, push: 6, core: 6, single: 4, posterior: 3 };\r\n                        const impact = {\r\n                            bb: { push: 2, posterior: 3, single: 1 }, plate: { push: 1, posterior: 1 }, bench: { push: 4 }, db: { pull: 4, push: 3, single: 3 },\r\n                            cable: { pull: 4, push: 3, core: 2 }, machine: { push: 3, pull: 2 }, band: { pull: 2, push: 1, core: 1 }, kb: { posterior: 2, core: 2, single: 1 },\r\n                            bw: { core: 2, pull: 1, push: 1 }, dip: { push: 3 }, rings: { pull: 3, push: 2, core: 1 }, abwheel: { core: 4 }, box: { single: 2, posterior: 1 }, landmine: { posterior: 2, push: 1, single: 1 }\r\n                        };\r\n                        const tally = { ...base };\r\n                        equip.forEach(k => { if (impact[k]) Object.entries(impact[k]).forEach(([c, v]) => { tally[c] += v; }); });\r\n                        return (\r\n                            <div className=\"bg-gray-900/40 border border-gray-700 rounded p-4 space-y-3\">\r\n                                <div className=\"flex items-center gap-2\">\r\n                                    <span className=\"text-white font-medium text-sm\">Available Exercise Categories</span>\r\n                                </div>\r\n                                <p className=\"text-[11px] text-gray-400\">With current selection: {tally.pull} pull, {tally.push} push, {tally.core} core ({tally.single} single‑leg, {tally.posterior} posterior).</p>\r\n                                <div className=\"grid grid-cols-2 md:grid-cols-5 gap-2 text-[11px]\">\r\n                                    {Object.entries(tally).map(([cat, val]) => (\r\n                                        <div key={cat} className=\"bg-gray-800/50 border border-gray-700 rounded p-2 flex flex-col gap-1\">\r\n                                            <div className=\"text-gray-300 font-medium capitalize\">{cat}</div>\r\n                                            <div className=\"flex items-center gap-2\">\r\n                                                <div className=\"flex-1 h-2 bg-gray-700 rounded overflow-hidden\">\r\n                                                    <div style={{ width: Math.min(100, (val / (base[cat] + 20)) * 100) + '%' }} className=\"h-full bg-red-600/70\"></div>\r\n                                                </div>\r\n                                                <div className=\"text-[10px] text-gray-400 w-6 text-right\">{val}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                                <div className=\"text-[10px] text-gray-500 italic\">Illustrative counts only; final assistance builder will refine further.</div>\r\n                            </div>\r\n                        );\r\n                    })()}\r\n                </div>\r\n            </section>\r\n\r\n            {/* Assistance */}\r\n            <section className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-6 space-y-5\">\r\n                <h3 className=\"text-lg font-semibold text-white\">E) Assistance</h3>\r\n                <p className=\"text-sm text-gray-400 mt-1\">Choose your assistance approach and configure exercises.</p>\r\n                <p className=\"text-[11px] text-gray-500\">Assistance work addresses weaknesses and adds volume without interfering with main lifts.</p>\r\n\r\n                {/* Mode selection cards */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-3\">\r\n                    {[{\r\n                        id: 'minimal', title: 'Minimal', subtitle: 'Low Volume', desc: 'Basic push/pull/core (25–50 total reps). Keep work small while TMs settle.', best: 'New cycle starts | limited recovery', features: ['Fast sessions', 'Low fatigue', 'Foundational balance']\r\n                    }, {\r\n                        id: 'standard', title: 'Standard', subtitle: 'Balanced', desc: 'Balanced assistance across movement patterns (50–75 reps per category).', best: 'General strength & physique', features: ['Push / Pull / Core', 'Single-Leg optional', 'Posterior chain focus']\r\n                    }, {\r\n                        id: 'custom', title: 'Custom', subtitle: 'Full Control', desc: 'Full control over assistance exercise selection and volume.', best: 'Advanced needs / targeting', features: ['Manual curation', 'Fine volume tuning', 'Specialization friendly']\r\n                    }, {\r\n                        id: 'template', title: 'Template-Based', subtitle: 'Wendler Sets', desc: 'Use proven assistance patterns from Wendler templates.', best: 'Hypertrophy blocks / structured variety', features: ['Preset volumes', 'Synergistic pairing', 'Reliable progression']\r\n                    }].map(card => {\r\n                        const active = assistMode === card.id;\r\n                        return (\r\n                            <button\r\n                                key={card.id}\r\n                                type=\"button\"\r\n                                onClick={() => setAssistMode(card.id)}\r\n                                className={`text-left bg-gray-800/50 border rounded p-3 hover:bg-gray-800 transition relative ${active ? 'border-red-500 ring-2 ring-red-600' : 'border-gray-700'}`}\r\n                            >\r\n                                <div className=\"flex items-start justify-between\">\r\n                                    <div>\r\n                                        <div className=\"text-[11px] tracking-wide font-semibold text-red-300\">{card.subtitle.toUpperCase()}</div>\r\n                                        <div className=\"text-sm font-semibold text-white leading-tight mt-0.5\">{card.title}</div>\r\n                                    </div>\r\n                                    {active && <CheckCircle2 className=\"w-4 h-4 text-green-400\" />}\r\n                                </div>\r\n                                <div className=\"text-xs text-gray-300 mt-2 leading-snug\">{card.desc}</div>\r\n                                <div className=\"mt-2 text-[10px] text-gray-400\"><span className=\"font-medium text-gray-300\">Best for:</span> {card.best}</div>\r\n                                <ul className=\"mt-2 text-[10px] text-gray-400 list-disc ml-4 space-y-0.5\">\r\n                                    {card.features.map(f => <li key={f}>{f}</li>)}\r\n                                </ul>\r\n                            </button>\r\n                        );\r\n                    })}\r\n                </div>\r\n\r\n                {/* Original custom assistance UI that follows */}\r\n                {assistMode === 'custom' && (\r\n                    <div className=\"md:col-span-2 space-y-4\">\r\n                        {order.map((lift, idx) => {\r\n                            const dayRows = customPlan[lift] || [];\r\n                            return (\r\n                                <div key={lift} className=\"bg-gray-800/40 border border-gray-700 rounded p-3 relative\">\r\n                                    <div className=\"flex items-center justify-between mb-2\">\r\n                                        <h4 className=\"text-sm font-semibold text-white\">{lift} Day Assistance</h4>\r\n                                        <div className=\"flex gap-2\">\r\n                                            <ToggleButton on={false} onClick={() => setShowDayPicker(showDayPicker === lift ? null : lift)} className=\"text-xs px-2 py-1\">{showDayPicker === lift ? 'Close Picker' : 'Browse Catalog'}</ToggleButton>\r\n                                            <ToggleButton on={false} onClick={() => addCustomRow(idx)} className=\"text-xs px-2 py-1\">Add Blank</ToggleButton>\r\n                                        </div>\r\n                                    </div>\r\n                                    {showDayPicker === lift && (\r\n                                        <div className=\"mb-3\">\r\n                                            <AssistanceCatalogPicker\r\n                                                equipment={equip}\r\n                                                onPick={(x) => {\r\n                                                    setCustomPlan(prev => {\r\n                                                        const list = prev[lift] ? [...prev[lift]] : [];\r\n                                                        if (list.length >= 2) return prev;\r\n                                                        list.push({ name: x.name, sets: x.sets || 5, reps: x.reps || 10, block: x.block }); // Default 5 sets for BBB-style assistance\r\n                                                        return { ...prev, [lift]: list };\r\n                                                    });\r\n                                                    // Keep modal open for easier multi-selection\r\n                                                }}\r\n                                                onClose={() => setShowDayPicker(null)}\r\n                                                keepOpen={true}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                    <div className=\"space-y-3\">\r\n                                        {dayRows.map((row, rowIdx) => {\r\n                                            const rowVolume = (Number(row.sets) || 0) * (Number(row.reps) || 0);\r\n                                            return (\r\n                                                <div key={rowIdx} className=\"border border-gray-700/60 rounded p-2 space-y-2 bg-gray-800/30\">\r\n                                                    <div className=\"grid grid-cols-12 gap-2 items-end\">\r\n                                                        <div className=\"col-span-4\">\r\n                                                            <label className=\"block text-[10px] uppercase text-gray-500 mb-1\">Name</label>\r\n                                                            <input value={row.name} onChange={e => updateCustomRow(lift, rowIdx, { name: e.target.value })} className=\"w-full bg-gray-800 border border-gray-600 rounded px-2 py-1.5 text-xs text-white focus:border-red-500\" placeholder=\"Movement\" />\r\n                                                        </div>\r\n                                                        <div className=\"col-span-2\">\r\n                                                            <label className=\"block text-[10px] uppercase text-gray-500 mb-1\">Sets</label>\r\n                                                            <input type=\"number\" value={row.sets} min={1} max={10} onChange={e => updateCustomRow(lift, rowIdx, { sets: Number(e.target.value) })} className=\"w-full bg-gray-800 border border-gray-600 rounded px-2 py-1.5 text-xs text-white focus:border-red-500\" />\r\n                                                        </div>\r\n                                                        <div className=\"col-span-2\">\r\n                                                            <label className=\"block text-[10px] uppercase text-gray-500 mb-1\">Reps</label>\r\n                                                            <input type=\"number\" value={row.reps} min={1} max={30} onChange={e => updateCustomRow(lift, rowIdx, { reps: Number(e.target.value) })} className=\"w-full bg-gray-800 border border-gray-600 rounded px-2 py-1.5 text-xs text-white focus:border-red-500\" />\r\n                                                        </div>\r\n                                                        <div className=\"col-span-2\">\r\n                                                            <label className=\"block text-[10px] uppercase text-gray-500 mb-1\">Block</label>\r\n                                                            <input value={row.block || ''} onChange={e => updateCustomRow(lift, rowIdx, { block: e.target.value })} className=\"w-full bg-gray-800 border border-gray-600 rounded px-2 py-1.5 text-xs text-white focus:border-red-500\" placeholder=\"(opt)\" />\r\n                                                        </div>\r\n                                                        <div className=\"col-span-2 flex items-center gap-1\">\r\n                                                            <div className=\"text-[10px] px-1.5 py-1 rounded bg-gray-700/50 border border-gray-600 text-gray-300 font-mono\" title=\"Sets × Reps volume\">\r\n                                                                {(row.sets || 0)}×{(row.reps || 0)}\r\n                                                            </div>\r\n                                                            <ToggleButton on={false} onClick={() => setSwapTarget({ lift, rowIdx })} className=\"text-xs px-2 py-1\">Swap</ToggleButton>\r\n                                                            <ToggleButton on={false} onClick={() => removeCustomRow(lift, rowIdx)} className=\"text-xs px-2 py-1\">✕</ToggleButton>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {swapTarget && swapTarget.lift === lift && swapTarget.rowIdx === rowIdx && (\r\n                                                        <div className=\"mt-1\">\r\n                                                            <AssistanceCatalogPicker\r\n                                                                block={row.block}\r\n                                                                equipment={equip}\r\n                                                                onPick={(x) => {\r\n                                                                    // Preserve existing sets/reps; update name/id/block\r\n                                                                    updateCustomRow(lift, rowIdx, { name: x.name, id: x.id, block: x.block || row.block });\r\n                                                                    // Simple volume mismatch hint (if default sets*approxReps differs > 60%)\r\n                                                                    try {\r\n                                                                        const parseReps = (r) => (typeof r === 'string' ? Number(r.split(/[^0-9]/).filter(Boolean)[0]) : r) || 0;\r\n                                                                        const curVol = (row.sets || 0) * (row.reps || 0);\r\n                                                                        const newVol = (x.sets || 0) * parseReps(x.reps);\r\n                                                                        if (curVol && newVol && (newVol / curVol > 1.6 || curVol / newVol > 1.6)) {\r\n                                                                            // attach transient flag\r\n                                                                            updateCustomRow(lift, rowIdx, { volumeWarn: true });\r\n                                                                            setTimeout(() => updateCustomRow(lift, rowIdx, { volumeWarn: false }), 3000);\r\n                                                                        }\r\n                                                                    } catch { /* noop */ }\r\n                                                                    // Modal stays open for easier browsing\r\n                                                                }}\r\n                                                                onClose={() => setSwapTarget(null)}\r\n                                                                keepOpen={true}\r\n                                                            />\r\n                                                        </div>\r\n                                                    )}\r\n                                                    {row.volumeWarn && <div className=\"text-[10px] text-amber-300\">Volume mismatch vs default suggestion – adjust if needed.</div>}\r\n                                                </div>\r\n                                            );\r\n                                        })}\r\n                                        {dayRows.length === 0 && <div className=\"text-xs text-gray-500\">No assistance added.</div>}\r\n                                        {dayRows.length > 0 && (() => {\r\n                                            const dailyVolume = dayRows.reduce((sum, r) => sum + ((Number(r.sets) || 0) * (Number(r.reps) || 0)), 0);\r\n                                            return (\r\n                                                <div className={`mt-1 text-[11px] flex items-center gap-2 ${dailyVolume > 100 ? 'text-amber-300' : 'text-gray-400'}`}>\r\n                                                    <span className=\"font-mono px-1.5 py-0.5 rounded bg-gray-700/40 border border-gray-600 text-gray-300\">Total: {dailyVolume}</span>\r\n                                                    {dailyVolume > 100 && <span className=\"text-amber-300\">High assistance volume – ensure recovery.</span>}\r\n                                                </div>\r\n                                            );\r\n                                        })()}\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Template preview for non-custom modes */}\r\n                {assistMode !== 'custom' && (\r\n                    <div className=\"space-y-3\">\r\n                        <div className=\"text-[11px] text-gray-300 bg-gray-800/60 border border-gray-700 rounded p-3 leading-snug\">\r\n                            <p className=\"font-semibold text-gray-200 mb-1\">Template Assistance Preview</p>\r\n                            <p className=\"text-gray-400\">Below is the assistance that will be applied per main lift day using the selected mode.</p>\r\n                        </div>\r\n                        <div className=\"flex flex-wrap gap-2 text-[10px]\">\r\n                            {BLOCKS.map(b => (\r\n                                <ToggleButton key={b} on={blockFilter === b} onClick={() => setBlockFilter(b)} className=\"px-2 py-1\">{b}</ToggleButton>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"grid md:grid-cols-2 gap-4\">\r\n                            {order.map(lift => {\r\n                                const itemsRaw = normalizeAssistance(assistMode === 'minimal' ? 'triumvirate' : assistMode, lift, state) || [];\r\n                                // Apply equipment + block filter for visibility\r\n                                const items = itemsRaw.filter(it => {\r\n                                    const okEquip = (it.equipment || []).every(tag => equip.includes(tag));\r\n                                    const okBlock = blockFilter === 'All' || it.block === blockFilter;\r\n                                    return okEquip && okBlock;\r\n                                });\r\n                                return (\r\n                                    <div key={lift} className=\"bg-gray-800/40 border border-gray-700 rounded p-3\">\r\n                                        <h4 className=\"text-xs font-semibold text-gray-300 mb-2\">{lift} Day</h4>\r\n                                        {items.length ? (\r\n                                            <ul className=\"space-y-1 text-[11px]\">\r\n                                                {items.map(it => <li key={it.name} className=\"flex flex-col gap-0.5\">\r\n                                                    <div className=\"flex items-center gap-2\">\r\n                                                        <span className=\"text-[9px] px-1 py-0.5 rounded bg-gray-700/40 border border-gray-600 text-gray-400\">{it.block || '—'}</span>\r\n                                                        <span className=\"text-gray-200\">{it.name}</span>\r\n                                                        <span className=\"text-gray-500\">{it.sets}×{it.reps}</span>\r\n                                                        <span className=\"text-[9px] text-gray-500\">{(it.equipment || []).join(', ')}</span>\r\n                                                    </div>\r\n                                                    {it.note && <div className=\"text-[9px] text-gray-500 ml-5 leading-snug\">{it.note}</div>}\r\n                                                </li>)}\r\n                                            </ul>\r\n                                        ) : <div className=\"text-[11px] text-gray-500\">None</div>}\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {assistMode === 'custom' && !validation.assistanceOk && (\r\n                    <div className=\"text-xs text-yellow-300 flex items-start space-x-2 bg-yellow-900/20 border border-yellow-700/40 rounded p-3\">\r\n                        <AlertTriangle className=\"w-4 h-4 mt-0.5\" />\r\n                        <span>Custom assistance invalid: ensure names & reps/sets within allowed ranges.</span>\r\n                    </div>\r\n                )}\r\n\r\n                {assistMode === 'custom' && (() => {\r\n                    // Weekly cumulative assistance volume (sum of all sets*reps across days)\r\n                    const weeklyVolume = order.reduce((sum, lift) => {\r\n                        const rows = customPlan[lift] || [];\r\n                        return sum + rows.reduce((s, r) => s + ((Number(r.sets) || 0) * (Number(r.reps) || 0)), 0);\r\n                    }, 0);\r\n                    if (!weeklyVolume) return null;\r\n                    const high = weeklyVolume > 400; // heuristic threshold; > ~400 reps/week of assistance can be high alongside main + supplemental\r\n                    return (\r\n                        <div className={`mt-3 text-[11px] flex items-center gap-2 ${high ? 'text-amber-300' : 'text-gray-400'}`}>\r\n                            <span className=\"font-mono px-1.5 py-0.5 rounded bg-gray-700/40 border border-gray-600 text-gray-300\">Weekly assistance reps: {weeklyVolume}</span>\r\n                            {high && <span className=\"text-amber-300\">High cumulative assistance – monitor recovery.</span>}\r\n                        </div>\r\n                    );\r\n                })()}\r\n\r\n                {assistMode !== 'custom' && (\r\n                    <div className=\"bg-blue-900/20 border border-blue-700/40 rounded p-3 text-[11px] text-blue-100 flex space-x-2 leading-snug\">\r\n                        <Info className=\"w-4 h-4 mt-0.5\" />\r\n                        <span>\r\n                            Assistance philosophy: Find push, pull, and single-leg/core exercises that address individual weaknesses without overtaxing recovery. Fewer but higher quality assistance exercises yield better results than exhaustive lists.\r\n                        </span>\r\n                    </div>\r\n                )}\r\n            </section>\r\n\r\n            {/* Section G: Conditioning */}\r\n            <section className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-6 space-y-5\">\r\n                <div className=\"space-y-1\">\r\n                    <h3 className=\"text-lg font-semibold text-white\">G) Conditioning</h3>\r\n                    <p className=\"text-sm text-gray-400 mt-1\">Configure your conditioning approach to complement strength work.</p>\r\n                    <p className=\"text-[11px] text-gray-500\">Well-designed conditioning enhances recovery, improves work capacity, and supports long-term progress.</p>\r\n                </div>\r\n\r\n                {/* Conditioning Approach Selection */}\r\n                <div>\r\n                    <label className=\"block text-sm font-medium text-gray-200 mb-2\">Conditioning Approach</label>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\r\n                        {[\r\n                            {\r\n                                id: 'minimal',\r\n                                title: 'Minimal',\r\n                                desc: 'Basic recovery work and light activity',\r\n                                examples: ['Easy walking', 'Light rowing', 'Mobility circuits'],\r\n                                note: 'For strength focus or limited time'\r\n                            },\r\n                            {\r\n                                id: 'standard',\r\n                                title: 'Standard',\r\n                                desc: 'Balanced conditioning for overall fitness',\r\n                                examples: ['Hill sprints', 'Prowler pushes', 'Circuit training'],\r\n                                note: 'Recommended for most lifters'\r\n                            },\r\n                            {\r\n                                id: 'extensive',\r\n                                title: 'Extensive',\r\n                                desc: 'Higher volume for improved work capacity',\r\n                                examples: ['HIIT sessions', 'Sport practice', 'Dedicated cardio'],\r\n                                note: 'For athletes or conditioning focus'\r\n                            }\r\n                        ].map(option => {\r\n                            const isSelected = (state?.conditioning?.approach || 'standard') === option.id;\r\n                            return (\r\n                                <button\r\n                                    key={option.id}\r\n                                    type=\"button\"\r\n                                    onClick={() => dispatch({\r\n                                        type: 'SET_CONDITIONING',\r\n                                        conditioning: { ...(state?.conditioning || {}), approach: option.id }\r\n                                    })}\r\n                                    className={`text-left bg-gray-900/50 border rounded p-3 hover:bg-gray-900 transition ${isSelected ? 'border-red-500 ring-2 ring-red-600' : 'border-gray-700'}`}\r\n                                >\r\n                                    <div className=\"flex items-start justify-between\">\r\n                                        <div className=\"text-sm font-semibold text-white\">{option.title}</div>\r\n                                        {isSelected && <CheckCircle2 className=\"w-4 h-4 text-green-400\" />}\r\n                                    </div>\r\n                                    <div className=\"text-[11px] text-gray-300 mt-1\">{option.desc}</div>\r\n                                    <div className=\"mt-2 text-[10px] text-gray-400\">\r\n                                        <span className=\"text-gray-300 font-medium\">Examples: </span>\r\n                                        {option.examples.join(', ')}\r\n                                    </div>\r\n                                    <div className=\"mt-1 text-[10px] text-gray-500 italic\">{option.note}</div>\r\n                                </button>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Auto-Limiting Matrix Information */}\r\n                <div className=\"bg-red-900/20 border border-red-800/30 rounded-md p-3 text-xs\">\r\n                    <div className=\"flex items-start space-x-2\">\r\n                        <AlertCircle className=\"w-4 h-4 text-red-400 mt-0.5 flex-shrink-0\" />\r\n                        <div>\r\n                            <div className=\"text-red-300 font-medium\">Conditioning Auto-Limiter</div>\r\n                            <p className=\"text-gray-300 mt-1\">Your conditioning options are automatically adjusted based on your supplemental work selection:</p>\r\n                            <div className=\"mt-2 grid grid-cols-1 sm:grid-cols-3 gap-2 text-[10px] text-gray-400\">\r\n                                <div>\r\n                                    <span className=\"text-red-300 font-medium\">BBB/BBS:</span> Reduces high-intensity conditioning options\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"text-yellow-300 font-medium\">SSL/FSL:</span> Balanced conditioning approach\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"text-green-300 font-medium\">Minimal:</span> Allows more intense conditioning\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mt-2 flex items-center space-x-2\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    id=\"overrideAutoLimiter\"\r\n                                    checked={state?.conditioning?.overrideAutoLimiter || false}\r\n                                    onChange={() => dispatch({\r\n                                        type: 'SET_CONDITIONING',\r\n                                        conditioning: {\r\n                                            ...(state?.conditioning || {}),\r\n                                            overrideAutoLimiter: !(state?.conditioning?.overrideAutoLimiter || false)\r\n                                        }\r\n                                    })}\r\n                                    className=\"form-checkbox rounded text-red-500\"\r\n                                />\r\n                                <label htmlFor=\"overrideAutoLimiter\" className=\"text-red-300\">Override auto-limiting (not recommended)</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Conditioning Protocol Options - With Auto-Limiting */}\r\n                <div className=\"space-y-4\">\r\n                    <label className=\"block text-sm font-medium text-gray-200\">Select Conditioning Protocols</label>\r\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-3\">\r\n                        {[\r\n                            {\r\n                                id: 'prowler',\r\n                                title: 'Prowler/Sled Work',\r\n                                desc: 'Push, pull or drag for power and conditioning',\r\n                                intensity: 'Moderate-High',\r\n                                recovery: 'Medium',\r\n                                placement: 'After main training or separate day',\r\n                                limited: ['bbb', 'bbs'], // Limited with high-volume supplemental\r\n                                template: '10 x 40yd pushes w/ 60-90s rest (load: 90-135 lbs)'\r\n                            },\r\n                            {\r\n                                id: 'sprints',\r\n                                title: 'Hill Sprints',\r\n                                desc: 'Short, intense uphill sprints',\r\n                                intensity: 'High',\r\n                                recovery: 'High',\r\n                                placement: 'Separate from leg training days',\r\n                                limited: ['bbb', 'bbs', 'ssl'], // Most limited due to highest intensity\r\n                                template: '6-10 x 30yd hill sprints w/ walk back recovery'\r\n                            },\r\n                            {\r\n                                id: 'circuits',\r\n                                title: 'Complexes/Circuits',\r\n                                desc: 'Multi-exercise flows with minimal rest',\r\n                                intensity: 'Moderate',\r\n                                recovery: 'Medium',\r\n                                placement: 'After training or separate day',\r\n                                limited: ['bbb'], // Limited with highest volume supplemental\r\n                                template: '3-5 rounds of 5 exercises, 30-60s work/15-30s rest'\r\n                            },\r\n                            {\r\n                                id: 'walking',\r\n                                title: 'Recovery Walking',\r\n                                desc: 'Brisk walking for active recovery',\r\n                                intensity: 'Low',\r\n                                recovery: 'Low',\r\n                                placement: 'Daily activity, including rest days',\r\n                                limited: [], // Never limited\r\n                                template: '30-60 min brisk walk at conversational pace'\r\n                            },\r\n                            {\r\n                                id: 'jumps',\r\n                                title: 'Jumps & Throws',\r\n                                desc: 'Explosive power development',\r\n                                intensity: 'Medium-High',\r\n                                recovery: 'Medium',\r\n                                placement: 'Before main training (as activation)',\r\n                                limited: [], // Never limited as this is more power than conditioning\r\n                                template: '3-5 sets of 3-5 reps of explosive movements'\r\n                            },\r\n                            {\r\n                                id: 'bikes',\r\n                                title: 'Bike/Rower/Stair',\r\n                                desc: 'Steady-state or interval machine cardio',\r\n                                intensity: 'Variable',\r\n                                recovery: 'Low-Medium',\r\n                                placement: 'Flexible, can be done frequently',\r\n                                limited: [], // Never limited\r\n                                template: '20-40 min steady state or 10-20 min intervals'\r\n                            }\r\n                        ].map(option => {\r\n                            const selectedProtocols = state?.conditioning?.protocols || ['walking'];\r\n                            const isSelected = selectedProtocols.includes(option.id);\r\n\r\n                            // Auto-limiting logic - ultra-defensive check for state and its properties\r\n                            let supplementalType = 'fsl'; // Default if state or its properties are undefined\r\n                            if (state && typeof state === 'object' && state.supplemental && typeof state.supplemental === 'object' && 'type' in state.supplemental) {\r\n                                supplementalType = state.supplemental.type;\r\n                            }\r\n\r\n                            const isLimited = option.limited.includes(supplementalType) && !(state?.conditioning?.overrideAutoLimiter);\r\n                            const isDisabled = isLimited && !isSelected;\r\n\r\n                            return (\r\n                                <div\r\n                                    key={option.id}\r\n                                    className={`bg-gray-900/50 border rounded p-3 ${isSelected ? 'border-red-500 ring-1 ring-red-600' : isDisabled ? 'border-gray-700 opacity-50' : 'border-gray-700'}`}\r\n                                >\r\n                                    <div className=\"flex items-start justify-between\">\r\n                                        <div className=\"text-sm font-semibold text-white\">{option.title}</div>\r\n                                        <label className=\"inline-flex items-center\">\r\n                                            <input\r\n                                                type=\"checkbox\"\r\n                                                checked={isSelected}\r\n                                                disabled={isDisabled}\r\n                                                onChange={() => {\r\n                                                    if (isDisabled) return;\r\n\r\n                                                    const newProtocols = isSelected\r\n                                                        ? selectedProtocols.filter(id => id !== option.id)\r\n                                                        : [...selectedProtocols, option.id];\r\n\r\n                                                    dispatch({\r\n                                                        type: 'SET_CONDITIONING',\r\n                                                        conditioning: { ...(state?.conditioning || {}), protocols: newProtocols }\r\n                                                    });\r\n                                                }}\r\n                                                className=\"form-checkbox rounded\"\r\n                                            />\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"text-[11px] text-gray-300 mt-1\">{option.desc}</div>\r\n                                    {isDisabled && (\r\n                                        <div className=\"mt-1 text-[10px] text-red-400 flex items-center space-x-1\">\r\n                                            <LockIcon className=\"w-3 h-3\" />\r\n                                            <span>Limited with {supplementalType.toUpperCase()} supplemental</span>\r\n                                        </div>\r\n                                    )}\r\n                                    <div className=\"mt-2 grid grid-cols-3 gap-2 text-[10px]\">\r\n                                        <div>\r\n                                            <span className=\"text-gray-400\">Intensity: </span>\r\n                                            <span className=\"text-gray-300\">{option.intensity}</span>\r\n                                        </div>\r\n                                        <div>\r\n                                            <span className=\"text-gray-400\">Recovery: </span>\r\n                                            <span className=\"text-gray-300\">{option.recovery}</span>\r\n                                        </div>\r\n                                        <div className=\"col-span-3 text-gray-400\">\r\n                                            <span className=\"font-medium\">Timing: </span>\r\n                                            <span>{option.placement}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    {isSelected && (\r\n                                        <div className=\"mt-2 pt-2 border-t border-gray-700 text-[10px] text-gray-300\">\r\n                                            <span className=\"text-gray-400 font-medium\">Template: </span>\r\n                                            {option.template}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Integration Rules */}\r\n                <div className=\"bg-gray-900/40 border border-gray-700 rounded p-4 space-y-3\">\r\n                    <div className=\"text-sm font-medium text-white\">Integration Guidelines</div>\r\n                    <div className=\"text-[11px] text-gray-300 space-y-3\">\r\n                        <div>\r\n                            <p className=\"font-medium text-gray-200\">Recommended Frequency:</p>\r\n                            <ul className=\"list-disc pl-5 space-y-1 text-gray-400 mt-1\">\r\n                                <li><span className=\"text-gray-300\">Hard Conditioning:</span> 2-3x per week (hill sprints, prowler work)</li>\r\n                                <li><span className=\"text-gray-300\">Easy/Recovery:</span> 3-7x per week (walking, light bike/rowing)</li>\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <p className=\"font-medium text-gray-200\">Workout Placement:</p>\r\n                            <ul className=\"list-disc pl-5 space-y-1 text-gray-400 mt-1\">\r\n                                <li><span className=\"text-gray-300\">High Intensity:</span> Separate days from heavy lower body training</li>\r\n                                <li><span className=\"text-gray-300\">Recovery Work:</span> Can be done daily, including after workouts</li>\r\n                                <li><span className=\"text-gray-300\">Explosive Work:</span> Early in workout or on separate days</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            {/* Validation Summary */}\r\n            <section className=\"bg-gray-800/40 border border-gray-700 rounded-lg p-4 text-xs text-gray-300 flex flex-wrap gap-4\">\r\n                <div className={`flex items-center space-x-2 ${validation.scheduleOk ? 'text-green-400' : 'text-yellow-300'}`}><CheckCircle2 className=\"w-4 h-4\" /><span>Schedule</span></div>\r\n                <div className={`flex items-center space-x-2 ${(!includeWarmups || validation.warmupsOk) ? 'text-green-400' : 'text-yellow-300'}`}><CheckCircle2 className=\"w-4 h-4\" /><span>Warm-ups</span></div>\r\n                <div className={`flex items-center space-x-2 ${validation.supplementalOk ? 'text-green-400' : 'text-yellow-300'}`}><CheckCircle2 className=\"w-4 h-4\" /><span>Supplemental</span></div>\r\n                <div className={`flex items-center space-x-2 ${validation.assistanceOk ? 'text-green-400' : 'text-yellow-300'}`}><CheckCircle2 className=\"w-4 h-4\" /><span>Assistance</span></div>\r\n                <div className={`flex items-center space-x-2 ${validation.programmingOk ? 'text-green-400' : 'text-yellow-300'}`}><CheckCircle2 className=\"w-4 h-4\" /><span>Programming</span></div>\r\n                <div className={`flex items-center space-x-2 ${state?.conditioning?.protocols?.length > 0 ? 'text-green-400' : 'text-yellow-300'}`}><CheckCircle2 className=\"w-4 h-4\" /><span>Conditioning</span></div>\r\n            </section>\r\n\r\n            {/* Debug JSON inspector removed */}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function AssistanceRow({ item, onChange, onSwap, onDelete }) {\r\n    const onSets = (e) => onChange({ ...item, sets: e.target.value });\r\n    const onReps = (e) => onChange({ ...item, reps: e.target.value });\r\n\r\n    return (\r\n        <div className=\"flex items-center gap-2 py-1\">\r\n            <span className=\"text-xs shrink-0 rounded px-1.5 py-0.5 bg-gray-700/30 border border-gray-600 text-gray-300 font-mono min-w-[1.5rem] text-center\">\r\n                {item.block ?? \"—\"}\r\n            </span>\r\n            <span className=\"flex-1 truncate text-[11px] text-gray-200\">{item.name}</span>\r\n            <input\r\n                className=\"w-14 border border-gray-600 bg-gray-800 rounded px-2 py-1 text-xs text-gray-100\"\r\n                value={item.sets}\r\n                onChange={onSets}\r\n                aria-label=\"sets\"\r\n            />\r\n            <span className=\"text-gray-500 text-xs\">×</span>\r\n            <input\r\n                className=\"w-14 border border-gray-600 bg-gray-800 rounded px-2 py-1 text-xs text-gray-100\"\r\n                value={item.reps}\r\n                onChange={onReps}\r\n                aria-label=\"reps\"\r\n            />\r\n            <button\r\n                className=\"border border-indigo-600/60 hover:border-indigo-400 rounded px-2 py-1 text-[10px] text-indigo-300\"\r\n                onClick={onSwap}\r\n                type=\"button\"\r\n            >\r\n                Swap\r\n            </button>\r\n            <button\r\n                className=\"border border-red-600/60 hover:border-red-400 rounded px-2 py-1 text-[10px] text-red-300\"\r\n                onClick={onDelete}\r\n                type=\"button\"\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n","// Cardio / Conditioning MVP templates\r\nexport const CardioTemplates = {\r\n    LISS30: { id: 'LISS30', type: 'LISS', minutes: 30, intensity: 'Zone2' },\r\n    LISS45: { id: 'LISS45', type: 'LISS', minutes: 45, intensity: 'Zone2' },\r\n    HIIT10x1: { id: 'HIIT10x1', type: 'HIIT', work: '1:00', rest: '1:00', rounds: 10 },\r\n    Tempo20: { id: 'Tempo20', type: 'Tempo', minutes: 20 }\r\n};\r\n\r\nexport function pickCardio(daysPerWeek, state) {\r\n    if (state?.cardioMode && CardioTemplates[state.cardioMode]) return state.cardioMode;\r\n    return daysPerWeek >= 4 ? 'LISS30' : 'LISS45';\r\n}\r\n\r\nexport default { CardioTemplates, pickCardio };\r\n","import { buildAssistanceForDay } from \"../..\"; // barrel export\r\nimport React, { useEffect, useMemo, useState, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useProgramV2 } from '../../contexts/ProgramContextV2.jsx';\r\nimport { buildMainSetsForLift, buildWarmupSets, roundToIncrement, getWeekScheme } from '../..'; // barrel export\r\nimport { Info, AlertTriangle, Download, Copy, Printer, CheckCircle2, BookOpen } from 'lucide-react';\r\nimport TemplateExplainerModal from '../../components/TemplateExplainerModal.jsx';\r\nimport { getTemplateSpec, TEMPLATE_SPECS } from '../../../../lib/templates/531.templateSpecs.js';\r\nimport { getTemplatePreset } from '../../../../lib/templates/531.presets.v2.js';\r\n// Static imports (avoid dynamic require duplication during build)\r\nimport { normalizeAssistance, CATALOG_VERSION } from '../../assistance/index.js';\r\n// Volume & stress helpers\r\nimport { estimateTonnage, sumRepsByBlock } from '../../calc.js';\r\nimport AssistanceCatalogData, { AssistanceCatalog } from '../../assistanceCatalog.js';\r\nimport AssistanceRow from '../assistance/AssistanceRow.jsx';\r\nimport AssistanceCatalogPicker from '../assistance/AssistanceCatalogPicker.jsx';\r\nimport ToggleButton from '../ToggleButton.jsx';\r\nimport { CardioTemplates, pickCardio } from '../../cardioTemplates.js';\r\n// New planner (hiit/liss distribution + weekday placement logic)\r\nimport { buildConditioningPlan, planConditioningFromState, normalizeConditioningModalities } from '../../../../lib/fiveThreeOne/conditioningPlanner.js';\r\n\r\nconst LIFT_KEY_MAP = {\r\n    Squat: 'squat',\r\n    Bench: 'bench',\r\n    Deadlift: 'deadlift',\r\n    Press: 'press',\r\n    Overhead: 'press'\r\n};\r\nconst DISPLAY_LIFT_NAMES = { squat: 'Squat', bench: 'Bench', deadlift: 'Deadlift', press: 'Press' };\r\n\r\nfunction deriveEffectiveConfig(state) {\r\n    const merged = { ...state };\r\n    if (state.flowMode === 'template' && state.templateKey && state.templateAppliedConfig) {\r\n        const cfg = state.templateAppliedConfig;\r\n        if (cfg.schedule) {\r\n            merged.schedule = { ...merged.schedule, ...cfg.schedule };\r\n        }\r\n        if (cfg.supplemental) {\r\n            merged.supplemental = { ...merged.supplemental, ...cfg.supplemental };\r\n        }\r\n        if (cfg.assistance) {\r\n            merged.assistance = { ...merged.assistance, ...cfg.assistance };\r\n        }\r\n        if (cfg.loadingOption) {\r\n            merged.loadingOption = cfg.loadingOption;\r\n        }\r\n    }\r\n    return merged;\r\n}\r\n\r\nfunction TableBlock({ title, rows, units }) {\r\n    if (!rows || !rows.length) return null;\r\n    return (\r\n        <div className=\"mt-4\">\r\n            <h4 className=\"text-sm md:text-base font-semibold mb-2 tracking-wide text-white\">{title}</h4>\r\n            <div className=\"overflow-x-auto rounded border border-gray-700\">\r\n                <table className=\"min-w-[420px] w-full text-xs md:text-sm\">\r\n                    <thead className=\"bg-gray-800 text-gray-300\">\r\n                        <tr>\r\n                            <th className=\"text-left py-1.5 px-3 font-medium\">% TM</th>\r\n                            <th className=\"text-left py-1.5 px-3 font-medium\">Reps</th>\r\n                            <th className=\"text-left py-1.5 px-3 font-medium\">Load</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {rows.map((r, i) => (\r\n                            <tr key={i} className={`border-t border-gray-700 ${i % 2 ? 'bg-gray-900/80' : 'bg-gray-900'} text-gray-300`}>\r\n                                <td className=\"py-1 px-3 font-mono text-gray-200\">{r.pct}%</td>\r\n                                <td className=\"py-1 px-3 font-mono\">{r.reps}{r.amrap ? '+' : ''}</td>\r\n                                <td className=\"py-1 px-3 font-mono text-gray-100\">{r.weight}{units}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction useSafeNavigate() {\r\n    try {\r\n        return useNavigate();\r\n    } catch {\r\n        // Outside a Router (e.g., isolated unit test) – provide no-op\r\n        return () => { };\r\n    }\r\n}\r\n\r\nexport default function Step4ReviewExport({ onReadyChange }) {\r\n    const navigate = useSafeNavigate();\r\n    const { state, dispatch } = useProgramV2();\r\n    const [starting, setStarting] = useState(false);\r\n    const [showTemplateExplainer, setShowTemplateExplainer] = useState(false);\r\n    const [showChangeTemplate, setShowChangeTemplate] = useState(false);\r\n    const [pendingTemplate, setPendingTemplate] = useState(null);\r\n    const [confirmSwitch, setConfirmSwitch] = useState(false);\r\n    const [weekIndex, setWeekIndex] = useState(0);\r\n    const [exportError, setExportError] = useState(null);\r\n    const [copied, setCopied] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errors, setErrors] = useState([]);\r\n    const [warnings, setWarnings] = useState([]);\r\n\r\n    const effective = useMemo(() => deriveEffectiveConfig(state), [state]);\r\n\r\n    // Normalized schedule days (custom design vs legacy schedule.order)\r\n    const scheduleDesign = effective.schedule || {};\r\n    const frequencyRaw = scheduleDesign.frequency || '4day';\r\n    const frequency = typeof frequencyRaw === 'number' ? frequencyRaw : (frequencyRaw || '4day');\r\n    // Normalize order to capitalized format for consistent validation\r\n    const rawOrder = scheduleDesign.order || scheduleDesign.days || ['Press', 'Deadlift', 'Bench', 'Squat'];\r\n    const order = rawOrder.map(lift => {\r\n        // Convert to lowercase first, then capitalize properly\r\n        const normalized = typeof lift === 'string' ? lift.toLowerCase() : lift;\r\n        if (normalized === 'press') return 'Press';\r\n        if (normalized === 'deadlift') return 'Deadlift';\r\n        if (normalized === 'bench') return 'Bench';\r\n        if (normalized === 'squat') return 'Squat';\r\n        return lift; // fallback to original if unknown\r\n    });\r\n    const includeWarmups = scheduleDesign.includeWarmups !== false;\r\n    const warmupScheme = scheduleDesign.warmupScheme || { percentages: [40, 50, 60], reps: [5, 5, 3] };\r\n\r\n    const trainingMaxes = {\r\n        squat: effective.lifts?.squat?.tm || 0,\r\n        bench: effective.lifts?.bench?.tm || 0,\r\n        deadlift: effective.lifts?.deadlift?.tm || 0,\r\n        press: effective.lifts?.press?.tm || 0\r\n    };\r\n\r\n    // Declare variables before useMemo to avoid \"Cannot access before initialization\" error\r\n    const supplemental = effective.supplemental || { strategy: 'none' };\r\n    const assistance = effective.assistance || { mode: 'minimal' };\r\n    const assistMode = state.assistMode || 'template';\r\n    const assistCustom = state.assistCustom || {};\r\n\r\n    // Comprehensive validation for Step 4\r\n    const comprehensiveValidation = useMemo(() => {\r\n        const errors = [];\r\n        const warnings = [];\r\n\r\n        // Training maxes validation\r\n        const trainingMaxes = effective.trainingMax || {};\r\n        order.forEach(lift => {\r\n            if (!trainingMaxes[lift.toLowerCase()] || trainingMaxes[lift.toLowerCase()] <= 0) {\r\n                errors.push(`Training max for ${lift} is required`);\r\n            }\r\n        });\r\n\r\n        // Schedule validation\r\n        if (!effective.schedule?.order?.length) {\r\n            errors.push('Training schedule not configured');\r\n        }\r\n\r\n        // Supplemental validation\r\n        if (supplemental.strategy === 'bbb' && !supplemental.percentage) {\r\n            warnings.push('BBB percentage not set - defaulting to 50%');\r\n        }\r\n\r\n        // Assistance validation\r\n        if (assistance.mode === 'custom' && assistMode === 'template') {\r\n            warnings.push('Assistance set to custom but using template mode');\r\n        }\r\n\r\n        return {\r\n            isValid: errors.length === 0,\r\n            hasWarnings: warnings.length > 0,\r\n            errors,\r\n            warnings\r\n        };\r\n    }, [effective, order, supplemental, assistance, assistMode]);\r\n\r\n    // Update state based on validation results\r\n    useEffect(() => {\r\n        if (comprehensiveValidation.errors.length === 0 && !starting) {\r\n            setErrors([]);\r\n        } else {\r\n            setErrors(comprehensiveValidation.errors);\r\n        }\r\n        setWarnings(comprehensiveValidation.warnings);\r\n    }, [comprehensiveValidation, starting]);\r\n\r\n    const roundingMode = typeof effective.rounding === 'string' ? effective.rounding : (effective.rounding?.mode || 'nearest');\r\n    const roundingIncrement = typeof effective.rounding === 'object' ? (effective.rounding.increment || 5) : (effective.units === 'kg' ? 2.5 : 5);\r\n    const units = effective.units === 'kg' ? 'kg' : 'lbs';\r\n    const loadingOption = effective.loadingOption || effective.loading?.option || 1;\r\n    const conditioning = effective.conditioning || {\r\n        sessionsPerWeek: 3,\r\n        hiitPerWeek: 2,\r\n        modalities: { hiit: ['Prowler Pushes', 'Hill Sprints'], liss: ['Walking'] },\r\n        note: 'Target 3–4 conditioning sessions (hill sprints / prowler). Keep after lifting or on off days.'\r\n    };\r\n\r\n    // Build a weekly conditioning session array (slim object) for export & per-day injection\r\n    const plannedConditioning = useMemo(() => planConditioningFromState(state).map(s => ({\r\n        day: s.day, mode: s.mode, modality: s.modality, notes: s.notes, prescription: s.prescription\r\n    })), [state]);\r\n\r\n    // Diagnostic: log any mismatch between schedule.order and rendered order (once per mount or when underlying changes)\r\n    useEffect(() => {\r\n        try {\r\n            const schedOrder = state?.schedule?.order;\r\n            if (!Array.isArray(schedOrder) || !schedOrder.length) return;\r\n            const displaySched = schedOrder.map(l => l && l.charAt(0).toUpperCase() + l.slice(1));\r\n            const mismatch = JSON.stringify(displaySched) !== JSON.stringify(order);\r\n            if (mismatch) {\r\n                if (typeof window !== 'undefined' && window?.localStorage?.getItem('debug.531.template') === 'off') return;\r\n                // eslint-disable-next-line no-console\r\n                console.info('[531:TEMPLATE_SYNC]', 'step4.orderMismatch', { scheduleOrder: displaySched, uiOrder: order });\r\n            } else {\r\n                if (typeof window !== 'undefined' && window?.localStorage?.getItem('debug.531.template') === 'off') return;\r\n                // eslint-disable-next-line no-console\r\n                console.info('[531:TEMPLATE_SYNC]', 'step4.orderAligned', { order: displaySched });\r\n            }\r\n        } catch (e) {\r\n            // eslint-disable-next-line no-console\r\n            console.warn('[531:TEMPLATE_SYNC]', 'step4.orderCheckError', e.message);\r\n        }\r\n    }, [state?.schedule?.order, order]);\r\n\r\n    // Validation collection\r\n    const validation = useMemo(() => {\r\n        const messages = [];\r\n        // TMs\r\n        if (!Object.values(trainingMaxes).every(v => v && v > 0)) {\r\n            messages.push('All four training maxes must be established.');\r\n        }\r\n        // Schedule frequency & order\r\n        const freqNum = frequency === '4day' ? 4 : frequency === '3day' ? 3 : 2;\r\n        if (!Array.isArray(order) || order.length !== freqNum) {\r\n            messages.push('Schedule order length must match selected frequency.');\r\n        } else {\r\n            const allowed = ['Press', 'Deadlift', 'Bench', 'Squat'];\r\n            const dup = new Set(order);\r\n            if (dup.size !== order.length) messages.push('Schedule days must be unique lifts.');\r\n            if (!order.every(l => allowed.includes(l))) messages.push('Schedule contains invalid lift identifiers.');\r\n        }\r\n        // Warmups\r\n        if (includeWarmups) {\r\n            const p = warmupScheme?.percentages || [];\r\n            const r = warmupScheme?.reps || [];\r\n            if (!(Array.isArray(p) && Array.isArray(r) && p.length === r.length && p.length > 0)) {\r\n                messages.push('Warm-up scheme percentages & reps must be equal length.');\r\n            }\r\n        }\r\n        // BBB\r\n        if (supplemental.strategy === 'bbb') {\r\n            if (!(supplemental.sets === 5 && supplemental.reps === 10)) messages.push('BBB requires 5x10.');\r\n            if (!(supplemental.percentOfTM >= 50 && supplemental.percentOfTM <= 70)) messages.push('BBB % of TM must be 50–70.');\r\n            if (!['same', 'opposite'].includes(supplemental.pairing)) messages.push('BBB pairing must be same or opposite.');\r\n        }\r\n        return { valid: messages.length === 0, messages };\r\n    }, [trainingMaxes, frequency, order, includeWarmups, warmupScheme, supplemental]);\r\n\r\n    useEffect(() => { onReadyChange && onReadyChange(validation.valid); }, [validation, onReadyChange]);\r\n\r\n    const percentMatrix = useMemo(() => getWeekScheme(loadingOption), [loadingOption]);\r\n\r\n    function mapLiftDisplayName(liftDisplay) {\r\n        const key = LIFT_KEY_MAP[liftDisplay] || liftDisplay.toLowerCase();\r\n        return key;\r\n    }\r\n\r\n    function getTMForDisplayLift(display) {\r\n        const key = mapLiftDisplayName(display);\r\n        return trainingMaxes[key] || 0;\r\n    }\r\n\r\n    function getBbbPairLift(mainDisplay) {\r\n        if (supplemental.pairing === 'same') return mainDisplay;\r\n        // Opposite pairing map\r\n        const map = { Press: 'Bench', Bench: 'Press', Squat: 'Deadlift', Deadlift: 'Squat' };\r\n        return map[mainDisplay] || mainDisplay;\r\n    }\r\n\r\n    function getBbbExerciseName(liftDisplay) {\r\n        const exerciseNames = {\r\n            'Press': 'Overhead Press',\r\n            'Bench': 'Bench Press',\r\n            'Squat': 'Back Squat',\r\n            'Deadlift': 'Deadlift'\r\n        };\r\n        return exerciseNames[liftDisplay] || liftDisplay;\r\n    }\r\n\r\n    // Build weeks JSON for export (optionally omit Deload week if user skipped)\r\n    const weeksData = useMemo(() => {\r\n        const skipDeload = state?.advanced?.skipDeload === true;\r\n        const assistancePack = state.templateKey || state.assistance?.templateId || (assistance.mode === 'jack_shit' ? 'jack_shit' : 'triumvirate');\r\n        const indexes = skipDeload ? [0, 1, 2] : [0, 1, 2, 3];\r\n        const weeks = indexes.map(wi => {\r\n            const daysData = order.map((displayLift) => {\r\n                const tm = getTMForDisplayLift(displayLift);\r\n                const warmups = buildWarmupSets({ includeWarmups, warmupScheme, tm, roundingIncrement, roundingMode, units });\r\n                const main = buildMainSetsForLift({ tm, weekIndex: wi, option: loadingOption, roundingIncrement, roundingMode, units }).sets;\r\n                let supplementalBlock = undefined;\r\n                if (supplemental.strategy === 'bbb') {\r\n                    const bbbTargetLiftDisplay = getBbbPairLift(displayLift);\r\n                    const bbbTm = getTMForDisplayLift(bbbTargetLiftDisplay);\r\n                    const bbbWeight = roundToIncrement(bbbTm * (supplemental.percentOfTM / 100), roundingIncrement, roundingMode);\r\n                    const bbbExerciseName = getBbbExerciseName(bbbTargetLiftDisplay);\r\n                    supplementalBlock = {\r\n                        type: 'bbb',\r\n                        exercise: bbbExerciseName,\r\n                        targetLift: bbbTargetLiftDisplay,\r\n                        sets: supplemental.sets, reps: supplemental.reps,\r\n                        weight: bbbWeight, units,\r\n                        percentOfTM: supplemental.percentOfTM\r\n                    };\r\n                }\r\n                // Normalized assistance via template rules (ignores legacy state.assistance shape)\r\n                // Assistance via template normalization\r\n                let assistanceComputed = [];\r\n                if (assistMode === 'template') {\r\n                    const tplKey = state.templateKey || state.pack || assistance.templateId || assistance.mode || 'custom';\r\n                    const rawAssist = normalizeAssistance(tplKey, displayLift, state) || [];\r\n                    assistanceComputed = rawAssist.map(it => ({\r\n                        id: it.id || it.name,\r\n                        name: it.name,\r\n                        sets: it.sets,\r\n                        reps: it.reps,\r\n                        block: it.block,\r\n                        equipment: it.equipment || [],\r\n                        note: it.note || null\r\n                    }));\r\n                } else {\r\n                    // custom: day index +1 mapping (assistCustom stores by numeric day)\r\n                    const dayIdx = order.indexOf(displayLift) + 1;\r\n                    const customList = assistCustom[dayIdx] || [];\r\n                    assistanceComputed = customList.map(it => ({\r\n                        id: it.id || it.name,\r\n                        name: it.name,\r\n                        sets: it.sets,\r\n                        reps: it.reps,\r\n                        block: it.block,\r\n                        equipment: it.equipment || [],\r\n                        note: it.note || null\r\n                    }));\r\n                }\r\n                // Conditioning: inject planned session if weekday matches; fallback to legacy placeholder when none\r\n                let conditioningBlock = null;\r\n                if (plannedConditioning.length) {\r\n                    // Determine weekday label index wise (assume Mon/Tue/Thu/Fri for 4-day, sequential otherwise)\r\n                    const defaultDays = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\r\n                    const weekday = defaultDays[idxForWeekday(order, displayLift, frequency)];\r\n                    const match = plannedConditioning.find(pc => pc.day === weekday);\r\n                    if (match) {\r\n                        conditioningBlock = {\r\n                            type: match.mode === 'hiit' ? 'HIIT' : 'LISS',\r\n                            modality: match.modality,\r\n                            minutes: match.prescription?.minutes || match.prescription?.duration || undefined,\r\n                            intensity: match.prescription?.intensity || undefined,\r\n                            notes: match.notes || undefined\r\n                        };\r\n                    }\r\n                }\r\n                if (!conditioningBlock) {\r\n                    const cardioId = pickCardio(frequency === '4day' ? 4 : frequency === '3day' ? 3 : 2, state || {});\r\n                    const legacy = CardioTemplates[cardioId] || { type: 'LISS', minutes: 30 };\r\n                    conditioningBlock = legacy;\r\n                }\r\n                return {\r\n                    lift: displayLift,\r\n                    warmups,\r\n                    main,\r\n                    supplemental: supplementalBlock,\r\n                    assistance: assistanceComputed, // plain array for UI/export\r\n                    conditioning: conditioningBlock\r\n                };\r\n            });\r\n            return { week: wi + 1, deload: (!skipDeload && wi === 3), days: daysData };\r\n        });\r\n        return weeks;\r\n    }, [order, includeWarmups, warmupScheme, roundingIncrement, roundingMode, units, supplemental, assistance, loadingOption, trainingMaxes, state?.bodyweight, state.templateKey, frequency, state?.advanced?.skipDeload, plannedConditioning, state]);\r\n\r\n    // helper to map order index to a weekday label consistently (Mon/Tue/Thu/Fri default for 4-day classic split)\r\n    function idxForWeekday(orderArr, liftDisplay, freq) {\r\n        const i = orderArr.indexOf(liftDisplay);\r\n        if (freq === '4day' || freq === 4) {\r\n            // classic 4-day pressing & lower spacing: Mon/Tue/Thu/Fri\r\n            return [0, 1, 3, 4][i] ?? i; // map Day3 -> Thu\r\n        }\r\n        if (freq === '3day' || freq === 3) {\r\n            // Mon/Wed/Fri spacing\r\n            return [0, 2, 4][i] ?? i;\r\n        }\r\n        if (freq === '2day' || freq === 2) {\r\n            return [1, 4][i] ?? i; // Tue/Fri\r\n        }\r\n        return i;\r\n    }\r\n\r\n    // Derive template variant display name (BBB same‑lift special cases 50% start / 60% legacy)\r\n    const isBBBSame = supplemental?.strategy === 'bbb' && supplemental.pairing === 'same';\r\n    let templateVariantName = state.templateSpec?.name || state.templateKey || null;\r\n    if (isBBBSame) {\r\n        const pct = Number(supplemental.percentOfTM);\r\n        if (pct === 50) templateVariantName = 'BBB 50% (Same-Lift Start)';\r\n        else if (pct === 60) templateVariantName = 'BBB 60% (Same-Lift)';\r\n    }\r\n\r\n    const exportJson = useMemo(() => {\r\n        const freqNum = frequency === '4day' ? 4 : frequency === '3day' ? 3 : 2;\r\n        const assistancePack = state.templateKey || state.assistance?.templateId || (assistance.mode === 'jack_shit' ? 'jack_shit' : 'triumvirate');\r\n        return {\r\n            meta: {\r\n                schemaVersion: '1.0.0',\r\n                catalogVersion: CATALOG_VERSION,\r\n                createdAt: new Date().toISOString(),\r\n                templateKey: state.flowMode === 'template' ? state.templateKey : null,\r\n                templateName: templateVariantName || null,\r\n                pack: assistancePack,\r\n                assistanceMode: assistMode,\r\n                units,\r\n                loadingOption,\r\n                daysPerWeek: freqNum,\r\n                split4: freqNum === 4 ? (state.schedule?.split4 || state.advanced?.split4 || 'A') : undefined,\r\n                equipment: state.equipment || []\r\n            },\r\n            trainingMaxes,\r\n            rounding: typeof state.rounding === 'object' ? state.rounding : { increment: roundingIncrement, mode: roundingMode },\r\n            schedule: {\r\n                frequency: freqNum,\r\n                days: order,\r\n                includeWarmups,\r\n                warmupScheme\r\n            },\r\n            conditioning: conditioning ? {\r\n                sessionsPerWeek: conditioning.sessionsPerWeek || conditioning.options?.frequency,\r\n                hiitPerWeek: conditioning.hiitPerWeek || conditioning.options?.hiitPerWeek,\r\n                modalities: normalizeConditioningModalities(\r\n                    conditioning.modalities || {\r\n                        hiit: conditioning.options?.hiitModalities,\r\n                        liss: conditioning.options?.lissModalities\r\n                    }\r\n                ),\r\n                note: conditioning.note,\r\n                placement: conditioning.options?.placement || conditioning.placement,\r\n                sessions: plannedConditioning\r\n            } : undefined,\r\n            supplemental,\r\n            assistance,\r\n            weeks: weeksData\r\n        };\r\n    }, [assistMode, state.pack, state.flowMode, state.templateKey, state.assistance?.templateId, state.schedule?.split4, state.advanced?.split4, state.equipment, units, loadingOption, trainingMaxes, state.rounding, roundingIncrement, roundingMode, frequency, order, includeWarmups, warmupScheme, supplemental, assistance, weeksData, templateVariantName, conditioning, plannedConditioning]);\r\n\r\n    const handleDownload = useCallback(() => {\r\n        try {\r\n            const blob = new Blob([JSON.stringify(exportJson, null, 2)], { type: 'application/json' });\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = `program-531-${new Date().toISOString().slice(0, 10)}.json`;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n            setExportError(null);\r\n        } catch (e) {\r\n            setExportError(e.message || 'Download failed');\r\n        }\r\n    }, [exportJson]);\r\n\r\n    const handleCopy = useCallback(() => {\r\n        navigator.clipboard.writeText(JSON.stringify(exportJson, null, 2)).then(() => {\r\n            setCopied(true);\r\n            setTimeout(() => setCopied(false), 1500);\r\n        });\r\n    }, [exportJson]);\r\n\r\n    const handlePrint = useCallback(() => { window.print(); }, []);\r\n\r\n    // Week view preview building\r\n    const previewWeek = weeksData[weekIndex];\r\n\r\n    // Volume & Stress metrics (memoized)\r\n    const dayMetrics = useMemo(() => {\r\n        if (!previewWeek) return [];\r\n        return previewWeek.days.map(day => {\r\n            // Main: day.main entries have percent/weight/reps (percent key named percent in weeksData builder as s.percent)\r\n            const mainReps = Array.isArray(day.main) ? day.main.reduce((a, s) => a + (Number(s.reps) || 0), 0) : 0;\r\n            const mainTonnage = estimateTonnage(day.main || []);\r\n            // Supplemental (only BBB currently)\r\n            let suppReps = 0, suppTonnage = 0, suppPctWarning = false;\r\n            if (day.supplemental && day.supplemental.type === 'bbb') {\r\n                suppReps = (Number(day.supplemental.sets) || 0) * (Number(day.supplemental.reps) || 0);\r\n                if (Number(day.supplemental.weight) && Number(day.supplemental.reps) && Number(day.supplemental.sets)) {\r\n                    suppTonnage = Number(day.supplemental.weight) * Number(day.supplemental.reps) * Number(day.supplemental.sets);\r\n                }\r\n                // BBB > 50% TM warning: we only know % indirectly; we can infer if weight > (0.5 * TM of paired lift)\r\n                // Reconstruct TM of BBB target lift by dividing weight by (%/100). We only stored weight; we have percent via supplemental.percentOfTM in state.supplemental\r\n                const cfgPct = supplemental.percentOfTM || supplemental.intensity?.value || 0;\r\n                if (supplemental.strategy === 'bbb' && cfgPct > 50) suppPctWarning = true;\r\n            }\r\n            // Assistance reps & category tallies\r\n            const assistReps = Array.isArray(day.assistance) ? day.assistance.reduce((a, it) => {\r\n                const sets = Number(it.sets) || 0;\r\n                let reps = 0;\r\n                if (typeof it.reps === 'number') reps = it.reps; else if (typeof it.reps === 'string') {\r\n                    if (/^\\d+-\\d+/.test(it.reps)) { const [x, y] = it.reps.split('-').map(n => Number(n)); if (Number.isFinite(x) && Number.isFinite(y)) reps = Math.round((x + y) / 2); }\r\n                    else if (/^\\d+/.test(it.reps)) reps = Number(it.reps); else reps = 12;\r\n                }\r\n                return a + sets * reps;\r\n            }, 0) : 0;\r\n            const totalReps = mainReps + suppReps + assistReps;\r\n            const totalTonnage = mainTonnage + suppTonnage; // assistance tonnage ignored (no load data)\r\n            const byBlock = sumRepsByBlock(day);\r\n            const blockWarnings = Object.entries(byBlock).filter(([_, v]) => v > 100).map(([blk]) => `High ${blk} volume (>100 reps)`);\r\n            const warnings = [];\r\n            if (blockWarnings.length) warnings.push(...blockWarnings);\r\n            if (suppPctWarning) warnings.push('BBB >50% TM');\r\n            return { mainReps, suppReps, assistReps, totalReps, mainTonnage, suppTonnage, totalTonnage, warnings };\r\n        });\r\n        // Dependencies cover anything affecting loads or reps\r\n    }, [previewWeek, supplemental.percentOfTM, supplemental.strategy]);\r\n\r\n    // Assistance editing (custom mode only)\r\n    const [showAssistEditor, setShowAssistEditor] = useState(false);\r\n    useEffect(() => {\r\n        if (assistMode === 'custom') setShowAssistEditor(true);\r\n    }, [assistMode]);\r\n\r\n    async function onStartCycle() {\r\n        setStarting(true);\r\n        try {\r\n            // Reuse exportJson as payload (already structured)\r\n            const programPayload = exportJson;\r\n            // Persist using existing helper for consistency with TrainToday\r\n            try {\r\n                const { persistActiveCycle } = await import('../../../../lib/fiveThreeOne/persistCycle.js');\r\n                persistActiveCycle(programPayload);\r\n            } catch { /* ignore dynamic import issues */ }\r\n            window.dispatchEvent(new CustomEvent('cycle:started'));\r\n            navigate('/train');\r\n        } finally {\r\n            setStarting(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"space-y-8 text-sm md:text-base leading-6 relative\">\r\n            {isLoading && (\r\n                <div className=\"absolute inset-0 bg-gray-900/60 backdrop-blur-sm rounded-lg flex items-center justify-center z-10\">\r\n                    <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4 flex items-center gap-3\">\r\n                        <div className=\"animate-spin w-5 h-5 border-2 border-blue-500 border-t-transparent rounded-full\"></div>\r\n                        <span className=\"text-white text-sm\">Processing program...</span>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Program Status */}\r\n            <div className=\"bg-gray-800/60 border border-gray-700 rounded-lg p-4\">\r\n                <h2 className=\"text-lg font-semibold text-white mb-2\">Step 4: Review & Export</h2>\r\n                <p className=\"text-sm text-gray-400 mb-4\">Final review of your 4-week 5/3/1 cycle before starting training.</p>\r\n\r\n                {comprehensiveValidation.isValid ? (\r\n                    <div className=\"bg-green-900/20 border border-green-500/50 rounded-lg p-3\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                            <CheckCircle2 className=\"w-4 h-4 text-green-400\" />\r\n                            <span className=\"text-green-300 text-sm font-medium\">Program Ready to Start</span>\r\n                        </div>\r\n                        {comprehensiveValidation.hasWarnings && (\r\n                            <div className=\"mt-2 text-xs text-yellow-300\">\r\n                                {comprehensiveValidation.warnings.length} recommendation(s) below\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"bg-red-900/20 border border-red-500/50 rounded-lg p-3\">\r\n                        <div className=\"flex items-start gap-2\">\r\n                            <AlertTriangle className=\"w-4 h-4 text-red-400 mt-0.5\" />\r\n                            <div>\r\n                                <div className=\"text-red-300 text-sm font-medium\">\r\n                                    {comprehensiveValidation.errors.length} issue(s) preventing start\r\n                                </div>\r\n                                <ul className=\"mt-1 space-y-1\">\r\n                                    {comprehensiveValidation.errors.map((error, idx) => (\r\n                                        <li key={idx} className=\"text-red-200 text-xs\">• {error}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {comprehensiveValidation.hasWarnings && (\r\n                    <div className=\"bg-yellow-900/20 border border-yellow-500/50 rounded-lg p-3 mt-3\">\r\n                        <div className=\"flex items-start gap-2\">\r\n                            <Info className=\"w-4 h-4 text-yellow-400 mt-0.5\" />\r\n                            <div>\r\n                                <div className=\"text-yellow-300 text-sm font-medium\">Recommendations</div>\r\n                                <ul className=\"mt-1 space-y-1\">\r\n                                    {comprehensiveValidation.warnings.map((warning, idx) => (\r\n                                        <li key={idx} className=\"text-yellow-200 text-xs\">• {warning}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-6 flex flex-col md:flex-row md:items-center md:justify-between gap-4\">\r\n                <div>\r\n                    <h2 className=\"text-2xl font-bold text-white mb-1\">Program Overview</h2>\r\n                    <p className=\"text-gray-400 text-sm\">Preview the full 4-week cycle, confirm details, then export or print.</p>\r\n                    <div className=\"mt-2 flex flex-wrap items-center gap-2 text-[10px]\">\r\n                        <span className=\"px-2 py-1 rounded-full bg-gray-700/50 border border-gray-600 text-gray-300 tracking-wide\">{frequency === '4day' ? 4 : frequency === '3day' ? 3 : 2}-Day</span>\r\n                        {templateVariantName && (\r\n                            <span className=\"px-2 py-1 rounded-full bg-red-600/20 border border-red-500/60 text-red-300 tracking-wide\">Template: {templateVariantName}</span>\r\n                        )}\r\n                        {frequency === '4day' && (state.schedule?.split4 || state.advanced?.split4) && (\r\n                            <span className=\"px-2 py-1 rounded-full bg-gray-700/50 border border-gray-600 text-gray-300 tracking-wide\">Split {(state.schedule?.split4 || state.advanced?.split4)}</span>\r\n                        )}\r\n                        <span className=\"px-2 py-1 rounded-full bg-gray-700/30 border border-gray-600 text-gray-400 italic\" title=\"Wendler: 'Lift weights. Condition: run hills, push Prowler. Do this 3–4 times a week.'\">Condition: hills / prowler 3–4x weekly (after lifts or off‑days) — keep easy enough to recover.</span>\r\n                    </div>\r\n                    <div className=\"mt-3 flex flex-wrap items-center gap-2\">\r\n                        {state?.templateSpec && (\r\n                            <ToggleButton\r\n                                on={false}\r\n                                type=\"button\"\r\n                                onClick={() => { setPendingTemplate(state.templateKey); setShowTemplateExplainer(true); }}\r\n                                className=\"!rounded-full !px-3 !py-1 text-[11px] flex items-center gap-1.5\"\r\n                            >\r\n                                <BookOpen className=\"w-3.5 h-3.5 opacity-80\" />\r\n                                <span>{templateVariantName || state.templateSpec.name}</span>\r\n                                <span className=\"opacity-60\">Info</span>\r\n                            </ToggleButton>\r\n                        )}\r\n                        <div className=\"ml-auto flex gap-2\">\r\n                            <ToggleButton\r\n                                on={showChangeTemplate}\r\n                                type=\"button\"\r\n                                onClick={() => setShowChangeTemplate(v => !v)}\r\n                                className=\"text-[11px] px-3 py-1.5\"\r\n                            >Change Template</ToggleButton>\r\n                            {assistMode === 'template' && (\r\n                                <ToggleButton\r\n                                    on={false}\r\n                                    type=\"button\"\r\n                                    onClick={() => dispatch({ type: 'CONVERT_ASSIST_TO_CUSTOM', order })}\r\n                                    className=\"text-[11px] px-3 py-1.5\"\r\n                                >Convert to Custom Assistance</ToggleButton>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex flex-col gap-2 items-start\">\r\n                    <div className=\"px-3 py-1 text-[10px] rounded-full bg-gray-700/40 text-gray-300 border border-gray-600 uppercase tracking-wide self-start md:self-auto\">Assistance Mode: {assistMode}</div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Validation */}\r\n            {!validation.valid && (\r\n                <div className=\"bg-red-900/30 border border-red-700 rounded-lg p-4 space-y-2 text-sm\">\r\n                    <div className=\"flex items-center space-x-2 text-red-300 font-medium\"><AlertTriangle className=\"w-4 h-4\" /><span>Issues Detected</span></div>\r\n                    <ul className=\"list-disc list-inside text-red-200 text-xs space-y-1\">\r\n                        {validation.messages.map((m, i) => <li key={i}>{m}</li>)}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"grid grid-cols-1 xl:grid-cols-12 gap-8\">\r\n                {/* Left: Week Preview */}\r\n                <div className=\"xl:col-span-8 space-y-6\">\r\n                    <div className=\"flex flex-wrap gap-2\">\r\n                        {weeksData.map((w, i) => (\r\n                            <ToggleButton key={w.week} on={weekIndex === i} onClick={() => setWeekIndex(i)} className=\"text-xs px-4 py-2\">\r\n                                Week {w.week}{w.deload ? ' (Deload)' : ''}\r\n                            </ToggleButton>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {previewWeek && (\r\n                        <div className=\"space-y-6\">\r\n                            {previewWeek.days.map((day, idx) => {\r\n                                // Map warmups/main into table row objects\r\n                                const warmupRows = includeWarmups ? (day.warmups || []).map(w => ({ pct: w.percent, reps: w.reps, weight: w.weight })) : [];\r\n                                const mainRows = (day.main || []).map(m => ({ pct: m.percent, reps: m.reps, weight: m.weight, amrap: !!m.amrap }));\r\n                                return (\r\n                                    <div key={idx} className=\"bg-gray-800/50 border border-gray-700 rounded-xl p-5 space-y-4\">\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <h3 className=\"text-base md:text-lg font-semibold text-white\">Day {idx + 1} — {day.lift}</h3>\r\n                                            {day.supplemental?.type === 'bbb' && (\r\n                                                <span className=\"text-xs px-2 py-1 rounded bg-red-600/20 text-red-300 border border-red-500\">BBB</span>\r\n                                            )}\r\n                                        </div>\r\n                                        <TableBlock title=\"WARM-UPS\" rows={warmupRows} units={units} />\r\n                                        <TableBlock title=\"MAIN SETS\" rows={mainRows} units={units} />\r\n                                        {/* Supplemental */}\r\n                                        {day.supplemental && day.supplemental.type === 'bbb' && (\r\n                                            <div className=\"text-xs text-red-200 bg-red-900/10 border border-red-700/40 rounded p-3 font-mono\">\r\n                                                BBB {day.supplemental.exercise}: {day.supplemental.sets} × {day.supplemental.reps} @ {day.supplemental.weight}{units} ({day.supplemental.percentOfTM}% TM)\r\n                                            </div>\r\n                                        )}\r\n                                        {/* Assistance */}\r\n                                        {/* Assistance (inline condensed) */}\r\n                                        <div className=\"mt-2\">\r\n                                            <div className=\"font-medium text-xs text-gray-300\">Assistance</div>\r\n                                            {Array.isArray(day.assistance) && day.assistance.length > 0 ? (\r\n                                                <div className=\"text-[11px] opacity-80 text-gray-400 space-y-0.5\">\r\n                                                    {day.assistance.map((a, i) => (\r\n                                                        <div key={i}>\r\n                                                            {a.displayName ? a.displayName :\r\n                                                                a.block ? (<><span className=\"text-gray-300 font-semibold\">{a.block}:</span> {a.name} {a.sets}×{a.reps}</>) :\r\n                                                                    (<>{a.name} {a.sets}×{a.reps}</>)\r\n                                                            }\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </div>\r\n                                            ) : (\r\n                                                <div className=\"text-[11px] opacity-80 text-gray-500\">\r\n                                                    {state.templateKey === 'jack_shit' ? 'Main lift only' : 'None'}\r\n                                                </div>\r\n                                            )}\r\n                                            {/* Inline custom editor (advanced) */}\r\n                                            {assistMode === 'custom' && (\r\n                                                <InlinePerDayCustomEditor\r\n                                                    dayIndex={idx}\r\n                                                    displayLift={day.lift}\r\n                                                    state={state}\r\n                                                    dispatch={dispatch}\r\n                                                    templateKey={state.templateKey || state.pack || 'triumvirate'}\r\n                                                />\r\n                                            )}\r\n                                        </div>\r\n                                        {/* Conditioning (if available on day) */}\r\n                                        {day.conditioning && (\r\n                                            <div className=\"mt-2\">\r\n                                                <div className=\"font-medium text-xs text-gray-300\">Conditioning</div>\r\n                                                <div className=\"text-[11px] opacity-80 text-gray-400\">\r\n                                                    {day.conditioning.type}\r\n                                                    {day.conditioning.minutes ? ` • ${day.conditioning.minutes} min` : ''}\r\n                                                    {day.conditioning.intensity ? ` • ${day.conditioning.intensity}` : ''}\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                        {/* Volume & Stress mini-panel */}\r\n                                        {dayMetrics[idx] && (\r\n                                            <div className=\"mt-2 border-t border-gray-700 pt-2 text-[11px] text-gray-400 leading-snug\">\r\n                                                <div className=\"flex flex-wrap gap-x-4 gap-y-1\">\r\n                                                    <span className=\"text-gray-300 font-medium\">Reps:</span>\r\n                                                    <span>main {dayMetrics[idx].mainReps}</span>\r\n                                                    <span>supp {dayMetrics[idx].suppReps}</span>\r\n                                                    <span>assist {dayMetrics[idx].assistReps}</span>\r\n                                                    <span className=\"text-gray-300\">(total {dayMetrics[idx].totalReps})</span>\r\n                                                </div>\r\n                                                <div className=\"flex flex-wrap gap-x-4 gap-y-1 mt-1\">\r\n                                                    <span className=\"text-gray-300 font-medium\">Tonnage:</span>\r\n                                                    <span>main {dayMetrics[idx].mainTonnage}</span>\r\n                                                    <span>supp {dayMetrics[idx].suppTonnage}</span>\r\n                                                    <span className=\"text-gray-300\">(total {dayMetrics[idx].totalTonnage})</span>\r\n                                                    {dayMetrics[idx].warnings.map((w, wi) => (\r\n                                                        <span key={wi} title={w} className=\"px-1.5 py-0.5 bg-amber-700/30 border border-amber-500/50 text-amber-200 rounded inline-flex items-center gap-1\">⚠</span>\r\n                                                    ))}\r\n                                                </div>\r\n                                                {/* Legend (shown once per day card) */}\r\n                                                <div className=\"mt-1 text-[10px] text-gray-500 italic\">\r\n                                                    Legend: ⚠ badge appears when a category exceeds ~100 reps (soft guardrail). Aim for roughly 50–100 assistance reps per block. BBB recommended 50–60% TM (book range).\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Right: Summary / Actions */}\r\n                <div className=\"xl:col-span-4 space-y-6\">\r\n                    {assistMode === 'custom' && (\r\n                        <InlineCustomAssistanceEditor\r\n                            order={order}\r\n                            assistCustom={assistCustom}\r\n                            dispatch={dispatch}\r\n                            state={state}\r\n                        />\r\n                    )}\r\n                    <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-5 space-y-4\">\r\n                        <h3 className=\"text-sm font-semibold text-white uppercase tracking-wide\">Summary</h3>\r\n                        <div className=\"grid grid-cols-2 gap-3 text-xs\">\r\n                            {Object.entries(trainingMaxes).map(([k, v]) => (\r\n                                <div key={k} className=\"bg-gray-800/70 border border-gray-700 rounded p-2 flex flex-col\">\r\n                                    <span className=\"text-gray-500 uppercase tracking-wide text-[10px]\">{DISPLAY_LIFT_NAMES[k] || k}</span>\r\n                                    <span className=\"font-mono text-gray-200\">{v || '—'}{units}</span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        <div className=\"text-xs text-gray-400 space-y-1\">\r\n                            <div>Loading Option: {loadingOption} {loadingOption === 1 ? '(Conservative)' : '(Aggressive)'}</div>\r\n                            <div>Schedule: {(frequency === '4day' ? 4 : frequency === '3day' ? 3 : 2)} days – {order.join(' / ')}</div>\r\n                            {state.deadliftRepStyle && <div>Deadlift Style: {state.deadliftRepStyle.replace('_', ' ')}</div>}\r\n                            <div>Units: {units}</div>\r\n                            {conditioning && (\r\n                                <div className=\"pt-1 border-t border-gray-700/50\">\r\n                                    <div className=\"text-gray-300 font-medium mb-0.5\">Conditioning Plan</div>\r\n                                    <div className=\"text-[11px] leading-snug\">\r\n                                        Sessions Target: {conditioning.sessionsPerWeek || 3}{conditioning.sessionsPerWeek < 2 ? ' (below guideline – aim for ≥2)' : ''}<br />\r\n                                        HIIT: {conditioning.hiitPerWeek || 0} · Modalities: {(conditioning.modalities?.hiit || []).join(', ') || '—'}<br />\r\n                                        LISS: {Math.max(0, (conditioning.sessionsPerWeek || 0) - (conditioning.hiitPerWeek || 0))} · Modalities: {(conditioning.modalities?.liss || []).join(', ') || '—'}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-5 space-y-4\">\r\n                        <h4 className=\"text-sm font-semibold text-white uppercase tracking-wide\">Export</h4>\r\n                        <div className=\"flex flex-col space-y-2\">\r\n                            <ToggleButton on={false} disabled={!comprehensiveValidation.isValid} onClick={handleDownload} className=\"flex items-center justify-center gap-2 text-xs\">\r\n                                <Download className=\"w-4 h-4\" /> <span>Download JSON</span>\r\n                            </ToggleButton>\r\n                            <ToggleButton on={copied} disabled={!comprehensiveValidation.isValid} onClick={handleCopy} className=\"flex items-center justify-center gap-2 text-xs\">\r\n                                <Copy className=\"w-4 h-4\" /> <span>{copied ? 'Copied!' : 'Copy JSON'}</span>\r\n                            </ToggleButton>\r\n                            <ToggleButton on={false} disabled={!comprehensiveValidation.isValid} onClick={handlePrint} className=\"flex items-center justify-center gap-2 text-xs\">\r\n                                <Printer className=\"w-4 h-4\" /> <span>Print</span>\r\n                            </ToggleButton>\r\n                            <ToggleButton\r\n                                on={starting}\r\n                                disabled={!comprehensiveValidation.isValid || starting}\r\n                                onClick={async () => {\r\n                                    if (!comprehensiveValidation.isValid) return;\r\n                                    setIsLoading(true);\r\n                                    try {\r\n                                        await handleStartProgram();\r\n                                    } finally {\r\n                                        setIsLoading(false);\r\n                                    }\r\n                                }}\r\n                                className=\"flex items-center justify-center gap-2 text-xs !bg-green-600/30 !border-green-500/60 hover:!bg-green-600/40 disabled:!bg-gray-600/30 disabled:!border-gray-500/60\"\r\n                                data-testid=\"start-program\"\r\n                            >\r\n                                {starting ? (\r\n                                    <>\r\n                                        <div className=\"animate-spin w-3 h-3 border border-white border-t-transparent rounded-full\"></div>\r\n                                        <span>Starting...</span>\r\n                                    </>\r\n                                ) : comprehensiveValidation.isValid ? (\r\n                                    <span>Start Program</span>\r\n                                ) : (\r\n                                    <span>Fix Issues Above</span>\r\n                                )}\r\n                            </ToggleButton>\r\n                            {exportError && <div className=\"text-xs text-red-400\">{exportError}</div>}\r\n                        </div>\r\n                        {comprehensiveValidation.isValid && (\r\n                            <div className=\"flex items-center space-x-2 text-green-400 text-xs\"><CheckCircle2 className=\"w-4 h-4\" /><span>Ready to start cycle.</span></div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {(showTemplateExplainer || showChangeTemplate) && (\r\n                <TemplateChangeOverlay\r\n                    open={showTemplateExplainer || showChangeTemplate}\r\n                    onClose={() => { setShowTemplateExplainer(false); setShowChangeTemplate(false); setPendingTemplate(null); setConfirmSwitch(false); }}\r\n                    state={state}\r\n                    dispatch={dispatch}\r\n                    currentKey={state.templateKey}\r\n                    pendingKey={pendingTemplate}\r\n                    setPendingKey={setPendingTemplate}\r\n                    assistMode={state.assistMode}\r\n                    confirmSwitch={confirmSwitch}\r\n                    setConfirmSwitch={setConfirmSwitch}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TemplateChangeOverlay({ open, onClose, state, dispatch, currentKey, pendingKey, setPendingKey, assistMode, confirmSwitch, setConfirmSwitch }) {\r\n    const [tab, setTab] = useState('pick');\r\n    if (!open) return null;\r\n    const specs = Object.values(TEMPLATE_SPECS);\r\n\r\n    function applyTemplateKey(key) {\r\n        const preset = getTemplatePreset(key, { state });\r\n        if (!preset) return;\r\n        const spec = getTemplateSpec(key);\r\n        if (assistMode === 'custom' && !confirmSwitch) {\r\n            setPendingKey(key);\r\n            setConfirmSwitch(true);\r\n            return;\r\n        }\r\n        // Proceed applying template; clear custom assistance\r\n        dispatch({ type: 'SET_TEMPLATE_KEY', payload: preset.key });\r\n        dispatch({ type: 'APPLY_TEMPLATE_CONFIG', payload: preset });\r\n        if (spec) {\r\n            dispatch({ type: 'SET_TEMPLATE_SPEC', payload: spec });\r\n            if (spec.assistanceHint) dispatch({ type: 'SET_ASSISTANCE_HINT', payload: spec.assistanceHint });\r\n        }\r\n        dispatch({ type: 'SET_FLOW_MODE', payload: 'template' });\r\n        dispatch({ type: 'SET_ASSIST_MODE', payload: 'template' });\r\n        dispatch({ type: 'SET_ASSIST_CUSTOM', payload: null });\r\n        setConfirmSwitch(false);\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <div className=\"fixed inset-0 z-50 flex items-start justify-center bg-black/70 backdrop-blur-sm overflow-y-auto py-10 px-4\">\r\n            <div className=\"relative w-full max-w-5xl bg-gray-900/95 border border-gray-700 rounded-xl p-6 space-y-6 shadow-2xl\">\r\n                <ToggleButton on={false} onClick={onClose} className=\"absolute top-3 right-3 !px-2 !py-1 text-xs\">✕</ToggleButton>\r\n                <header className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3\">\r\n                    <div>\r\n                        <h2 className=\"text-lg font-semibold text-white\">Change Template</h2>\r\n                        <p className=\"text-xs text-gray-400 mt-1\">Switching updates assistance & schedule defaults. Training maxes are preserved.</p>\r\n                    </div>\r\n                    {assistMode === 'custom' && <span className=\"px-2 py-1 rounded bg-amber-600/10 border border-amber-500/40 text-amber-300 text-[11px]\">Custom Assistance Active</span>}\r\n                </header>\r\n                {!confirmSwitch && (\r\n                    <div className=\"grid sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\r\n                        {specs.map(spec => {\r\n                            const active = spec.key === currentKey;\r\n                            return (\r\n                                <div key={spec.key} className={`rounded-lg border p-4 cursor-pointer flex flex-col ${active ? 'border-indigo-500 bg-indigo-600/10' : 'border-gray-700 bg-gray-800/40 hover:border-gray-500'}`} onClick={() => { setPendingKey(spec.key); applyTemplateKey(spec.key); }}>\r\n                                    <div className=\"flex items-start justify-between mb-2\">\r\n                                        <h3 className=\"text-sm font-semibold text-white leading-snug pr-4\">{spec.name}</h3>\r\n                                        {active && <CheckCircle2 className=\"w-4 h-4 text-green-400\" />}\r\n                                    </div>\r\n                                    <p className=\"text-[11px] text-gray-400 leading-snug flex-1 mb-2\">{spec.blurb}</p>\r\n                                    <div className=\"text-[10px] text-indigo-300 uppercase tracking-wide\">Select</div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n                {confirmSwitch && assistMode === 'custom' && (\r\n                    <div className=\"space-y-4\">\r\n                        <div className=\"bg-amber-900/30 border border-amber-700 rounded p-4 text-sm text-amber-200\">\r\n                            <p className=\"font-medium mb-1\">Replace Custom Assistance?</p>\r\n                            <p className=\"text-xs leading-snug\">Switching templates will replace your custom assistance with the new template defaults. This cannot be undone.</p>\r\n                        </div>\r\n                        <div className=\"flex flex-wrap gap-3 justify-end\">\r\n                            <ToggleButton on={false} className=\"text-xs\" onClick={() => { setConfirmSwitch(false); setPendingKey(null); }}>Keep Custom</ToggleButton>\r\n                            <ToggleButton on={true} className=\"text-xs\" onClick={() => { if (pendingKey) { setConfirmSwitch(false); applyTemplateKey(pendingKey); } }}>Replace with Template</ToggleButton>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction DevInspector({ effective, exportJson }) {\r\n    const [open, setOpen] = useState(false);\r\n    return (\r\n        <div className=\"bg-gray-800/30 border border-gray-700 rounded-lg p-4 space-y-3 text-xs\">\r\n            <ToggleButton title=\"Debug: inspect generated config & weeks (dev only)\" on={open} onClick={() => setOpen(o => !o)} className=\"text-xs\">{open ? 'Hide' : 'Show'} Program JSON (Debug)</ToggleButton>\r\n            {open && (\r\n                <div className=\"space-y-4\">\r\n                    <div>\r\n                        <div className=\"font-semibold text-gray-400 mb-1\">Effective Config</div>\r\n                        <pre className=\"max-h-64 overflow-auto bg-black/40 p-3 rounded text-[11px] leading-snug text-gray-200\">{JSON.stringify(effective, null, 2)}</pre>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"font-semibold text-gray-400 mb-1\">Generated Weeks</div>\r\n                        <pre className=\"max-h-64 overflow-auto bg-black/40 p-3 rounded text-[11px] leading-snug text-gray-200\">{JSON.stringify(exportJson.weeks, null, 2)}</pre>\r\n                    </div>\r\n                    <ToggleButton on={false} className=\"text-xs\" onClick={() => navigator.clipboard.writeText(JSON.stringify(exportJson, null, 2))}>Copy Full JSON</ToggleButton>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\n// Inline custom assistance editor (Step 4) ----------------------------------\r\nfunction InlineCustomAssistanceEditor({ order, assistCustom, dispatch, state }) {\r\n    const [activeDay, setActiveDay] = useState(1);\r\n    const equipment = state.equipment || [];\r\n    const templateKey = state.templateKey || state.pack || 'triumvirate';\r\n\r\n    function dayItems(dayIdx) { return assistCustom?.[dayIdx] || []; }\r\n\r\n    function updateDay(dayIdx, items) {\r\n        dispatch({ type: 'SET_ASSIST_CUSTOM', dayId: dayIdx, items });\r\n    }\r\n\r\n    function addItem(dayIdx) {\r\n        const items = [...dayItems(dayIdx)];\r\n        items.push({ id: 'new_' + Date.now(), name: '', sets: 3, reps: 10, block: undefined });\r\n        updateDay(dayIdx, items);\r\n    }\r\n\r\n    function removeItem(dayIdx, idx) {\r\n        const items = [...dayItems(dayIdx)];\r\n        items.splice(idx, 1);\r\n        updateDay(dayIdx, items);\r\n    }\r\n\r\n    function swapItem(dayIdx, idx) { setPicker({ day: dayIdx, row: idx }); }\r\n\r\n    function resetDay(dayIdx) {\r\n        // Use display lift name\r\n        const displayLift = order[dayIdx - 1];\r\n        const tpl = normalizeAssistance(templateKey, displayLift, state) || [];\r\n        const mapped = tpl.map(it => ({ id: it.id || it.name, name: it.name, sets: it.sets, reps: it.reps, block: it.block }));\r\n        dispatch({ type: 'RESET_ASSIST_DAY', dayId: dayIdx, items: mapped });\r\n    }\r\n\r\n    // Catalog filtering\r\n    const [picker, setPicker] = useState(null); // { day, row }\r\n\r\n    function applyCatalog(it) {\r\n        if (!picker) return;\r\n        const { day, row } = picker;\r\n        const items = [...dayItems(day)];\r\n        if (!items[row]) return;\r\n        const prev = items[row];\r\n        // Preserve existing sets/reps; swap id/name/block only\r\n        items[row] = { id: it.id, name: it.name, sets: prev.sets, reps: prev.reps, block: prev.block || it.block };\r\n        // Volume mismatch soft warning (compare suggested vs retained)\r\n        try {\r\n            const parseReps = (r) => (typeof r === 'string' ? Number(r.split(/[^0-9]/).filter(Boolean)[0]) : r) || 0;\r\n            const retainedVol = (prev.sets || 0) * (parseReps(prev.reps) || 0);\r\n            const suggestedVol = (it.sets || 0) * parseReps(it.reps);\r\n            if (retainedVol && suggestedVol && (suggestedVol / retainedVol > 1.6 || retainedVol / suggestedVol > 1.6)) {\r\n                items[row].volumeWarn = true;\r\n                setTimeout(() => {\r\n                    const after = [...dayItems(day)];\r\n                    if (after[row]) { after[row] = { ...after[row], volumeWarn: false }; updateDay(day, after); }\r\n                }, 3000);\r\n            }\r\n        } catch { /* ignore */ }\r\n        updateDay(day, items);\r\n        setPicker(null);\r\n    }\r\n\r\n    // Volume badge per category (soft guardrail): count total reps approximated sets * avg reps numeric\r\n    function computeVolumeInfo(dayIdx) {\r\n        const items = dayItems(dayIdx);\r\n        let total = 0; const byCat = {};\r\n        items.forEach(it => {\r\n            const sets = Number(it.sets) || 0;\r\n            let reps = 0;\r\n            if (typeof it.reps === 'number') reps = it.reps;\r\n            else if (typeof it.reps === 'string') {\r\n                if (/^\\d+-\\d+/.test(it.reps)) {\r\n                    const [a, b] = it.reps.split('-').map(n => Number(n));\r\n                    if (Number.isFinite(a) && Number.isFinite(b)) reps = Math.round((a + b) / 2);\r\n                } else if (/^\\d+/.test(it.reps)) reps = Number(it.reps);\r\n                else reps = 12;\r\n            }\r\n            const vol = sets * reps;\r\n            total += vol;\r\n            const cat = it.block || 'general';\r\n            byCat[cat] = (byCat[cat] || 0) + vol;\r\n        });\r\n        const overCat = Object.values(byCat).some(v => v > 100);\r\n        return { total, overCat };\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-4 space-y-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n                <h3 className=\"text-sm font-semibold text-white uppercase tracking-wide\">Custom Assistance</h3>\r\n                {picker && <span className=\"text-[10px] text-indigo-300\">Select a movement to swap…</span>}\r\n            </div>\r\n            <div className=\"flex flex-wrap gap-2 mb-2\">\r\n                {order.map((lift, i) => {\r\n                    const dayIdx = i + 1;\r\n                    const { total, overCat } = computeVolumeInfo(dayIdx);\r\n                    return (\r\n                        <ToggleButton key={dayIdx} on={activeDay === dayIdx} onClick={() => setActiveDay(dayIdx)} className=\"text-[11px] px-3 py-1.5 relative\">\r\n                            Day {dayIdx}\r\n                            {overCat && <span className=\"absolute -top-1 -right-1 bg-amber-600 text-white rounded-full text-[9px] px-1\" title={`High category volume (~${total} reps)`}>⚠</span>}\r\n                        </ToggleButton>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className=\"space-y-3\">\r\n                {dayItems(activeDay).map((it, idx) => (\r\n                    <div key={idx} className=\"bg-gray-900/40 border border-gray-700 rounded p-2 space-y-1\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                            <span className=\"px-1.5 py-0.5 rounded bg-gray-700/40 border border-gray-600 text-gray-300 text-[10px] min-w-[1.2rem] text-center\" title=\"Block\">{it.block || '—'}</span>\r\n                            <input value={it.name} onChange={e => { const items = [...dayItems(activeDay)]; items[idx] = { ...items[idx], name: e.target.value }; updateDay(activeDay, items); }} className=\"flex-1 bg-gray-800 border border-gray-600 rounded px-2 py-1.5 text-xs text-white focus:border-indigo-500\" placeholder=\"Movement\" />\r\n                            <input type=\"number\" value={it.sets} min={1} max={10} onChange={e => { const items = [...dayItems(activeDay)]; items[idx] = { ...items[idx], sets: Number(e.target.value) }; updateDay(activeDay, items); }} className=\"w-14 bg-gray-800 border border-gray-600 rounded px-2 py-1.5 text-xs text-white focus:border-indigo-500\" />\r\n                            <input value={it.reps} onChange={e => { const items = [...dayItems(activeDay)]; items[idx] = { ...items[idx], reps: e.target.value }; updateDay(activeDay, items); }} className=\"w-20 bg-gray-800 border border-gray-600 rounded px-2 py-1.5 text-xs text-white focus:border-indigo-500\" />\r\n                            <ToggleButton on={false} className=\"text-[10px] px-2 py-1\" onClick={() => swapItem(activeDay, idx)}>Swap</ToggleButton>\r\n                            <ToggleButton on={false} className=\"text-[10px] px-2 py-1\" onClick={() => removeItem(activeDay, idx)}>✕</ToggleButton>\r\n                        </div>\r\n                        {it.volumeWarn && <div className=\"text-[10px] text-amber-300 ml-6\">Volume mismatch vs suggested default.</div>}\r\n                        {picker && picker.day === activeDay && picker.row === idx && (\r\n                            <div className=\"mt-2\">\r\n                                <AssistanceCatalogPicker\r\n                                    block={it.block}\r\n                                    equipment={equipment}\r\n                                    onPick={applyCatalog}\r\n                                    onClose={() => setPicker(null)}\r\n                                    keepOpen={true}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n                {dayItems(activeDay).length < 4 && (\r\n                    <ToggleButton on={false} className=\"text-xs\" onClick={() => addItem(activeDay)}>Add Exercise</ToggleButton>\r\n                )}\r\n                <div>\r\n                    <ToggleButton on={false} className=\"text-[10px]\" onClick={() => resetDay(activeDay)}>Reset to Template</ToggleButton>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Lightweight per-day inline editor (appears inside each day card when assistMode === 'custom')\r\nfunction InlinePerDayCustomEditor({ dayIndex, displayLift, state, dispatch, templateKey }) {\r\n    const dayId = dayIndex + 1; // 1-based\r\n    const items = (state.assistCustom && state.assistCustom[dayId]) || [];\r\n    const [picker, setPicker] = useState(null); // { block, index }\r\n\r\n    function update(itemsNext) {\r\n        dispatch({ type: 'SET_ASSIST_CUSTOM', dayId, items: itemsNext });\r\n    }\r\n    function resetDay() {\r\n        const defaults = normalizeAssistance(templateKey, displayLift, state) || [];\r\n        update(defaults.map(d => ({ id: d.id || d.name, name: d.name, sets: d.sets, reps: d.reps, block: d.block })));\r\n    }\r\n    function addExercise() {\r\n        setPicker({ block: null, index: items.length });\r\n    }\r\n    return (\r\n        <div className=\"mt-2 border border-gray-700 rounded-lg p-3 bg-gray-900/40 space-y-2\">\r\n            <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-[11px] font-semibold text-gray-300\">Custom Assistance</span>\r\n                <div className=\"flex gap-2\">\r\n                    <ToggleButton on={false} className=\"text-[10px] px-2 py-1\" onClick={resetDay}>Reset</ToggleButton>\r\n                    <ToggleButton on={false} className=\"text-[10px] px-2 py-1\" onClick={addExercise}>Add</ToggleButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"space-y-1\">\r\n                {items.map((it, idx) => (\r\n                    <AssistanceRow\r\n                        key={it.id || idx}\r\n                        item={it}\r\n                        onChange={next => {\r\n                            const copy = [...items]; copy[idx] = next; update(copy);\r\n                        }}\r\n                        onSwap={() => setPicker({ block: it.block || null, index: idx })}\r\n                        onDelete={() => { const copy = items.filter((_, i) => i !== idx); update(copy); }}\r\n                    />\r\n                ))}\r\n                {items.length === 0 && <div className=\"text-[11px] text-gray-500\">No custom items yet.</div>}\r\n            </div>\r\n            {picker && (\r\n                <div className=\"mt-2\">\r\n                    <AssistanceCatalogPicker\r\n                        block={picker.block}\r\n                        equipment={state.equipment || []}\r\n                        onPick={pick => {\r\n                            const next = { id: pick.id, name: pick.name, sets: pick.sets || 5, reps: pick.reps || 10, block: pick.block }; // Default 5 sets for BBB compatibility\r\n                            const copy = [...items];\r\n                            if (picker.index < copy.length) copy[picker.index] = next; else copy.push(next);\r\n                            update(copy);\r\n                            // Modal stays open for easier multi-selection\r\n                        }}\r\n                        onClose={() => setPicker(null)}\r\n                        keepOpen={true}\r\n                    />\r\n                </div>\r\n            )}\r\n            <div className=\"text-[10px] text-gray-500 italic pt-1 border-t border-gray-700\">Target 50–100 reps per block; BBB at 30–50% TM.</div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useMemo } from 'react';\r\nimport { useProgramV2 } from '../../contexts/ProgramContextV2.jsx';\r\nimport { nextTM, passedAmrapWk3, LIFTS } from '../../calc.js';\r\nimport { advanceCycleSelective } from '../../progression.js';\r\nimport {\r\n    TrendingUp, TrendingDown, AlertTriangle, CheckCircle,\r\n    Calculator, BarChart3, Target, Info, Clock, Zap\r\n} from 'lucide-react';\r\n\r\n// Enhanced estimation functions for intelligent progression\r\nfunction estimateOneRM(weight, reps) {\r\n    if (!weight || !reps || reps <= 0) return 0;\r\n    // Epley formula: 1RM = weight * (1 + reps/30)\r\n    return Math.round(weight * (1 + reps / 30));\r\n}\r\n\r\nfunction calculateProgressionRecommendation(lift, currentTM, recentPerformance, units, userProfile = {}) {\r\n    const { experience = 'intermediate', size = 'average', postReset = false } = userProfile;\r\n\r\n    // Base increments per Wendler\r\n    const upper = [\"bench\", \"press\"].includes(lift);\r\n    const standardInc = units === \"kg\" ? (upper ? 2.5 : 5) : (upper ? 5 : 10);\r\n    const conservativeInc = units === \"kg\" ? (upper ? 1.25 : 2.5) : (upper ? 2.5 : 5);\r\n\r\n    // Recommendation logic based on profile and performance\r\n    let recommendedInc = standardInc;\r\n    let reason = \"Standard progression\";\r\n\r\n    if (experience === 'advanced' || size === 'smaller' || postReset) {\r\n        recommendedInc = conservativeInc;\r\n        reason = experience === 'advanced' ? \"Advanced lifter - conservative approach\" :\r\n            size === 'smaller' ? \"Smaller increments for smaller lifters\" :\r\n                \"Post-reset - rebuild carefully\";\r\n    }\r\n\r\n    // Performance-based adjustment\r\n    if (recentPerformance) {\r\n        const { trend, stallRisk } = recentPerformance;\r\n        if (stallRisk === 'high') {\r\n            recommendedInc = 0; // Hold TM\r\n            reason = \"High stall risk - hold current TM\";\r\n        } else if (trend === 'declining') {\r\n            recommendedInc = conservativeInc;\r\n            reason = \"Declining performance - use conservative increment\";\r\n        }\r\n    }\r\n\r\n    return { recommendedInc, reason, standardInc, conservativeInc };\r\n}\r\n\r\nfunction analyzePerformanceHistory(history, lift) {\r\n    if (!history || history.length < 2) {\r\n        return { trend: 'unknown', stallRisk: 'low', estimatedMax: null };\r\n    }\r\n\r\n    // Get last 3 cycles of data for this lift\r\n    const recentCycles = history.slice(-3);\r\n    const performances = recentCycles\r\n        .map(cycle => cycle.amrapWk3?.[lift])\r\n        .filter(reps => reps != null);\r\n\r\n    if (performances.length < 2) {\r\n        return { trend: 'unknown', stallRisk: 'low', estimatedMax: null };\r\n    }\r\n\r\n    // Analyze trend\r\n    const recent = performances.slice(-2);\r\n    const trend = recent[1] > recent[0] ? 'improving' :\r\n        recent[1] < recent[0] ? 'declining' : 'stable';\r\n\r\n    // Assess stall risk\r\n    const missedMinimum = performances.some(reps => reps < 1);\r\n    const decliningPattern = performances.length >= 3 &&\r\n        performances[2] < performances[1] && performances[1] < performances[0];\r\n\r\n    const stallRisk = missedMinimum || decliningPattern ? 'high' :\r\n        trend === 'declining' ? 'medium' : 'low';\r\n\r\n    return { trend, stallRisk, performances };\r\n}\r\n\r\nfunction calculateResetRecommendation(currentTM, estimatedMax) {\r\n    if (!estimatedMax) return null;\r\n\r\n    const recommendedTM = Math.round(estimatedMax * 0.9);\r\n    const shouldReset = recommendedTM < currentTM * 0.95; // Reset if new TM significantly lower\r\n\r\n    return {\r\n        shouldReset,\r\n        currentTM,\r\n        estimatedMax,\r\n        recommendedTM,\r\n        difference: currentTM - recommendedTM\r\n    };\r\n}\r\n\r\nexport default function Step5ProgressionSmart({ onAdvance }) {\r\n    const { state, dispatch } = useProgramV2();\r\n    const [include, setInclude] = useState({ squat: true, bench: true, deadlift: true, press: true });\r\n    const [applied, setApplied] = useState(false);\r\n    const [progressionMode, setProgressionMode] = useState('smart'); // 'smart', 'conservative', 'standard'\r\n    const [userProfile, setUserProfile] = useState({\r\n        experience: 'intermediate',\r\n        size: 'average',\r\n        postReset: false\r\n    });\r\n    const [showAnalytics, setShowAnalytics] = useState(false);\r\n\r\n    const lifts = state?.lifts || {};\r\n    const amrap = state?.amrapWk3 || {};\r\n    const units = state?.units || 'lbs';\r\n    const history = state?.history || [];\r\n    const currentCycle = state?.cycle || 1;\r\n\r\n    // Performance analysis for each lift\r\n    const liftAnalytics = useMemo(() => {\r\n        const analytics = {};\r\n\r\n        LIFTS.forEach(lift => {\r\n            const currentTM = lifts[lift]?.tm || 0;\r\n            const recentAmrap = amrap[lift];\r\n            const performance = analyzePerformanceHistory(history, lift);\r\n\r\n            // Estimate current 1RM if we have Week 3 AMRAP data\r\n            let estimatedMax = null;\r\n            if (recentAmrap && currentTM) {\r\n                const week3Weight = Math.round(currentTM * 0.95); // Week 3 top set ~95% TM\r\n                estimatedMax = estimateOneRM(week3Weight, recentAmrap);\r\n            }\r\n\r\n            const progression = calculateProgressionRecommendation(\r\n                lift, currentTM, performance, units, userProfile\r\n            );\r\n\r\n            const resetInfo = calculateResetRecommendation(currentTM, estimatedMax);\r\n\r\n            analytics[lift] = {\r\n                currentTM,\r\n                recentAmrap,\r\n                estimatedMax,\r\n                performance,\r\n                progression,\r\n                resetInfo,\r\n                passed: passedAmrapWk3(recentAmrap, state)\r\n            };\r\n        });\r\n\r\n        return analytics;\r\n    }, [lifts, amrap, history, units, userProfile, state]);\r\n\r\n    // Calculate final increments based on mode and analytics\r\n    const finalIncrements = useMemo(() => {\r\n        const increments = {};\r\n\r\n        LIFTS.forEach(lift => {\r\n            const analytics = liftAnalytics[lift];\r\n            const { standardInc, conservativeInc, recommendedInc } = analytics.progression;\r\n\r\n            if (progressionMode === 'conservative') {\r\n                increments[lift] = conservativeInc;\r\n            } else if (progressionMode === 'standard') {\r\n                increments[lift] = standardInc;\r\n            } else { // smart mode\r\n                increments[lift] = recommendedInc;\r\n            }\r\n        });\r\n\r\n        return increments;\r\n    }, [liftAnalytics, progressionMode]);\r\n\r\n    const handleAdvance = () => {\r\n        if (applied) return;\r\n\r\n        // Use custom increments instead of standard progression\r\n        const customState = {\r\n            ...state,\r\n            customIncrements: finalIncrements\r\n        };\r\n\r\n        onAdvance(include, customState);\r\n        setApplied(true);\r\n    };\r\n\r\n    const getTrendIcon = (trend) => {\r\n        switch (trend) {\r\n            case 'improving': return <TrendingUp className=\"w-4 h-4 text-green-400\" />;\r\n            case 'declining': return <TrendingDown className=\"w-4 h-4 text-red-400\" />;\r\n            case 'stable': return <BarChart3 className=\"w-4 h-4 text-blue-400\" />;\r\n            default: return <Info className=\"w-4 h-4 text-gray-400\" />;\r\n        }\r\n    };\r\n\r\n    const getRiskColor = (risk) => {\r\n        switch (risk) {\r\n            case 'high': return 'text-red-400';\r\n            case 'medium': return 'text-yellow-400';\r\n            default: return 'text-green-400';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-8\">\r\n            {/* Header Section */}\r\n            <div className=\"bg-gray-800/60 border border-gray-700 rounded-lg p-6\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                    <div>\r\n                        <h2 className=\"text-xl font-semibold text-white flex items-center gap-2\">\r\n                            <Calculator className=\"w-5 h-5\" />\r\n                            Smart Progression System\r\n                        </h2>\r\n                        <p className=\"text-sm text-gray-400 mt-1\">\r\n                            Intelligent TM advancement based on performance analysis and user profile\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                        <div className=\"text-sm text-gray-400\">Cycle</div>\r\n                        <div className=\"text-lg font-semibold text-white\">{currentCycle}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* User Profile Settings */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6 p-4 bg-gray-900/40 rounded-lg\">\r\n                    <div>\r\n                        <label className=\"block text-xs uppercase tracking-wide text-gray-400 mb-2\">\r\n                            Experience Level\r\n                        </label>\r\n                        <select\r\n                            value={userProfile.experience}\r\n                            onChange={(e) => setUserProfile(prev => ({ ...prev, experience: e.target.value }))}\r\n                            className=\"w-full bg-gray-800 border border-gray-600 rounded px-3 py-2 text-sm text-white focus:border-red-500\"\r\n                        >\r\n                            <option value=\"beginner\">Beginner (&lt;6 months)</option>\r\n                            <option value=\"intermediate\">Intermediate (6m-2y)</option>\r\n                            <option value=\"advanced\">Advanced (2y+)</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-xs uppercase tracking-wide text-gray-400 mb-2\">\r\n                            Body Size\r\n                        </label>\r\n                        <select\r\n                            value={userProfile.size}\r\n                            onChange={(e) => setUserProfile(prev => ({ ...prev, size: e.target.value }))}\r\n                            className=\"w-full bg-gray-800 border border-gray-600 rounded px-3 py-2 text-sm text-white focus:border-red-500\"\r\n                        >\r\n                            <option value=\"smaller\">Smaller (&lt;150 lbs)</option>\r\n                            <option value=\"average\">Average (150-200 lbs)</option>\r\n                            <option value=\"larger\">Larger (&gt;200 lbs)</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-xs uppercase tracking-wide text-gray-400 mb-2\">\r\n                            Status\r\n                        </label>\r\n                        <label className=\"flex items-center space-x-2 cursor-pointer\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={userProfile.postReset}\r\n                                onChange={(e) => setUserProfile(prev => ({ ...prev, postReset: e.target.checked }))}\r\n                                className=\"rounded border-gray-600 bg-gray-800 text-red-500 focus:ring-red-500\"\r\n                            />\r\n                            <span className=\"text-sm text-gray-300\">Post-Reset Cycle</span>\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Progression Mode Selection */}\r\n                <div className=\"mb-6\">\r\n                    <label className=\"block text-sm font-medium text-gray-200 mb-3\">Progression Strategy</label>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\r\n                        {[\r\n                            {\r\n                                id: 'smart',\r\n                                title: 'Smart Recommendation',\r\n                                desc: 'AI-driven based on your profile and performance',\r\n                                icon: <Zap className=\"w-4 h-4\" />\r\n                            },\r\n                            {\r\n                                id: 'conservative',\r\n                                title: 'Conservative',\r\n                                desc: `+${units === 'kg' ? '1.25/2.5 kg' : '2.5/5 lbs'} (half increments)`,\r\n                                icon: <Target className=\"w-4 h-4\" />\r\n                            },\r\n                            {\r\n                                id: 'standard',\r\n                                title: 'Standard Wendler',\r\n                                desc: `+${units === 'kg' ? '2.5/5 kg' : '5/10 lbs'} (book default)`,\r\n                                icon: <Clock className=\"w-4 h-4\" />\r\n                            }\r\n                        ].map(mode => (\r\n                            <button\r\n                                key={mode.id}\r\n                                onClick={() => setProgressionMode(mode.id)}\r\n                                className={`text-left p-3 rounded-lg border transition-all ${progressionMode === mode.id\r\n                                        ? 'border-red-500 bg-red-600/10 ring-2 ring-red-600/20'\r\n                                        : 'border-gray-600 bg-gray-900/40 hover:bg-gray-800/60'\r\n                                    }`}\r\n                            >\r\n                                <div className=\"flex items-center gap-2 mb-1\">\r\n                                    {mode.icon}\r\n                                    <span className=\"font-medium text-white\">{mode.title}</span>\r\n                                </div>\r\n                                <div className=\"text-xs text-gray-400\">{mode.desc}</div>\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Performance Analytics Toggle */}\r\n            <div className=\"bg-gray-800/40 border border-gray-700 rounded-lg p-4\">\r\n                <button\r\n                    onClick={() => setShowAnalytics(!showAnalytics)}\r\n                    className=\"flex items-center justify-between w-full text-left\"\r\n                >\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <BarChart3 className=\"w-4 h-4 text-blue-400\" />\r\n                        <span className=\"font-medium text-white\">Performance Analytics</span>\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-400\">\r\n                        {showAnalytics ? 'Hide' : 'Show'} Details\r\n                    </div>\r\n                </button>\r\n\r\n                {showAnalytics && (\r\n                    <div className=\"mt-4 space-y-4\">\r\n                        {LIFTS.map(lift => {\r\n                            const analytics = liftAnalytics[lift];\r\n                            return (\r\n                                <div key={lift} className=\"bg-gray-900/40 rounded-lg p-4\">\r\n                                    <div className=\"flex items-center justify-between mb-3\">\r\n                                        <h4 className=\"font-medium text-white capitalize\">{lift}</h4>\r\n                                        <div className=\"flex items-center gap-2\">\r\n                                            {getTrendIcon(analytics.performance.trend)}\r\n                                            <span className=\"text-sm text-gray-400\">\r\n                                                {analytics.performance.trend}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n                                        <div>\r\n                                            <div className=\"text-gray-400\">Current TM</div>\r\n                                            <div className=\"font-mono text-white\">\r\n                                                {analytics.currentTM} {units}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <div className=\"text-gray-400\">Last AMRAP</div>\r\n                                            <div className=\"font-mono text-white\">\r\n                                                {analytics.recentAmrap || '—'} reps\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <div className=\"text-gray-400\">Est. 1RM</div>\r\n                                            <div className=\"font-mono text-white\">\r\n                                                {analytics.estimatedMax || '—'} {units}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <div className=\"text-gray-400\">Stall Risk</div>\r\n                                            <div className={`font-medium ${getRiskColor(analytics.performance.stallRisk)}`}>\r\n                                                {analytics.performance.stallRisk}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {analytics.resetInfo?.shouldReset && (\r\n                                        <div className=\"mt-3 p-3 bg-yellow-900/20 border border-yellow-700/40 rounded flex items-start gap-2\">\r\n                                            <AlertTriangle className=\"w-4 h-4 text-yellow-400 mt-0.5\" />\r\n                                            <div className=\"text-sm\">\r\n                                                <div className=\"text-yellow-300 font-medium\">Reset Recommended</div>\r\n                                                <div className=\"text-gray-400\">\r\n                                                    Use 90% of estimated max: {analytics.resetInfo.recommendedTM} {units}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Training Max Progression */}\r\n            <div className=\"bg-gray-800/60 border border-gray-700 rounded-lg p-6\">\r\n                <h3 className=\"text-lg font-semibold text-white mb-4\">Training Max Progression</h3>\r\n\r\n                <div className=\"grid sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n                    {LIFTS.map(lift => {\r\n                        const analytics = liftAnalytics[lift];\r\n                        const increment = finalIncrements[lift];\r\n                        const nextTM = analytics.currentTM + (include[lift] ? increment : 0);\r\n\r\n                        return (\r\n                            <label\r\n                                key={lift}\r\n                                className={`flex flex-col rounded-lg border p-4 bg-gray-900/60 cursor-pointer transition-all ${include[lift] ? 'border-red-500/50 ring-2 ring-red-600/20' : 'border-gray-700'\r\n                                    }`}\r\n                            >\r\n                                <div className=\"flex items-center justify-between mb-3\">\r\n                                    <span className=\"text-sm font-semibold text-white capitalize\">{lift}</span>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={include[lift]}\r\n                                        onChange={e => setInclude(prev => ({ ...prev, [lift]: e.target.checked }))}\r\n                                        className=\"rounded border-gray-600 bg-gray-800 text-red-500 focus:ring-red-500\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"space-y-2 text-xs font-mono\">\r\n                                    <div className=\"flex justify-between\">\r\n                                        <span className=\"text-gray-400\">Current:</span>\r\n                                        <span className=\"text-gray-200\">{analytics.currentTM} {units}</span>\r\n                                    </div>\r\n                                    <div className=\"flex justify-between\">\r\n                                        <span className=\"text-gray-400\">Increment:</span>\r\n                                        <span className={increment > 0 ? 'text-green-400' : 'text-gray-500'}>\r\n                                            +{increment} {units}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"flex justify-between border-t border-gray-700 pt-2\">\r\n                                        <span className=\"text-gray-400\">Next:</span>\r\n                                        <span className=\"text-white font-semibold\">{nextTM} {units}</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"mt-3 pt-3 border-t border-gray-700\">\r\n                                    <div className={`flex items-center gap-1 text-xs ${analytics.passed ? 'text-green-400' : 'text-yellow-500'\r\n                                        }`}>\r\n                                        {analytics.passed ? (\r\n                                            <CheckCircle className=\"w-3 h-3\" />\r\n                                        ) : (\r\n                                            <AlertTriangle className=\"w-3 h-3\" />\r\n                                        )}\r\n                                        <span>{analytics.passed ? 'AMRAP passed' : 'Incomplete data'}</span>\r\n                                    </div>\r\n                                    {progressionMode === 'smart' && (\r\n                                        <div className=\"text-xs text-gray-400 mt-1\">\r\n                                            {analytics.progression.reason}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </label>\r\n                        );\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center gap-4\">\r\n                        <button\r\n                            disabled={applied}\r\n                            onClick={handleAdvance}\r\n                            className={`px-6 py-3 rounded-lg border font-medium transition-colors ${applied\r\n                                    ? 'border-gray-600 text-gray-500 cursor-not-allowed'\r\n                                    : 'border-green-500 bg-green-600/10 text-green-300 hover:bg-green-600/20'\r\n                                }`}\r\n                        >\r\n                            {applied ? 'Progression Applied' : 'Apply Smart Progression'}\r\n                        </button>\r\n\r\n                        {applied && (\r\n                            <div className=\"flex items-center gap-2 text-sm text-gray-400\">\r\n                                <CheckCircle className=\"w-4 h-4 text-green-400\" />\r\n                                <span>Ready for next cycle</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"text-right text-sm text-gray-400\">\r\n                        <div>Next cycle: {currentCycle + 1}</div>\r\n                        <div>Selected lifts: {Object.values(include).filter(Boolean).length}/4</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Educational Notes */}\r\n            <div className=\"bg-gray-800/40 border border-gray-700 rounded-lg p-4\">\r\n                <div className=\"flex items-start gap-3\">\r\n                    <Info className=\"w-5 h-5 text-blue-400 mt-0.5\" />\r\n                    <div className=\"text-sm text-gray-400 leading-relaxed\">\r\n                        <p className=\"mb-2\">\r\n                            <strong className=\"text-gray-300\">Smart Progression Logic:</strong> Advanced lifters and smaller individuals\r\n                            benefit from conservative increments. Post-reset cycles should progress slowly to rebuild properly.\r\n                        </p>\r\n                        <p className=\"mb-2\">\r\n                            <strong className=\"text-gray-300\">Stall Detection:</strong> Missing Week 3 minimums or declining AMRAP\r\n                            performance indicates potential stalling. Consider holding TMs or resetting when appropriate.\r\n                        </p>\r\n                        <p>\r\n                            <strong className=\"text-gray-300\">Reset Guidelines:</strong> When estimated 1RM suggests your TM is too high,\r\n                            use 90% of your true max as the new training max for optimal progress.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","/**\r\n * ProgramWizard531V2.jsx - New V2 5/3/1 Wizard Shell\r\n * Clean, minimal wizard with step navigation and V2 context integration\r\n * \r\n * This is the RESTORED and ENHANCED 5-step workflow that includes:\r\n * - Enhanced Section C (Programming Approach)\r\n * - Enhanced Section E (Assistance)\r\n * - Enhanced Section G (Conditioning)\r\n * \r\n * The route /builder/531/v2 has been updated to use this component directly.\r\n */\r\n\r\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { ChevronRight, CheckCircle2, Info, AlertTriangle, RotateCcw } from 'lucide-react';\r\nimport ToggleButton from './ToggleButton.jsx';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useProgramV2 } from \"../contexts/ProgramContextV2.jsx\";\r\nimport { buildMainSetsForLift, buildWarmupSets, roundToIncrement } from \"../\"; // barrel export\r\n// Conditioning planner (HIIT/LISS distribution)\r\nimport { buildConditioningPlan, planConditioningFromState } from '../../../lib/fiveThreeOne/conditioningPlanner.js';\r\nimport { loadPack531BBB } from \"../loadPack\";\r\nimport { extractSupplementalFromPack, extractWarmups, extractWeekByLabel } from \"../packAdapter\";\r\nimport { applyDecisionsFromPack } from \"../decisionAdapter\";\r\nimport { mapTemplateAssistance, validateAssistanceVolume } from \"../assistanceMapper\";\r\nimport { buildSchedule, buildSchedule4Day, buildSchedule2Day, buildSchedule1Day, SPLIT_4DAY_A, SPLIT_4DAY_B } from \"../schedule\";\r\nimport { advanceCycle } from \"../progression\";\r\nimport { toUiDays } from \"../scheduleRender\";\r\nimport { computeWarmupsFromPack, computeMainFromPack, computeBBBFromConfig } from \"../calc\";\r\n\r\n// Enable packs by default; allow kill-switch via env (Vite or CRA style)\r\n// Avoid direct unguarded access to process.* in browser (Vite doesn't polyfill by default)\r\nconst viteFlag = (typeof import.meta !== 'undefined' && import.meta.env && import.meta.env.VITE_USE_METHOD_PACKS);\r\n// Support legacy CRA-style var only if process object exists (SSR or test env)\r\nconst legacyFlag = (typeof process !== 'undefined' && process?.env?.REACT_APP_USE_METHOD_PACKS);\r\nconst envFlag = viteFlag ?? legacyFlag;\r\nconst USE_METHOD_PACKS = envFlag == null ? true : String(envFlag).toLowerCase() === 'true';\r\n\r\n// --- Simplified deterministic Step 1 gating (only core fundamentals) ---\r\n// Per spec: require 4 valid TMs, units, rounding, TM% (0.90 or 0.85). Allow dev bypass via env.\r\nconst LIFTS = [\"squat\", \"bench\", \"deadlift\", \"press\"];\r\n\r\nfunction isStep1Complete(state) {\r\n    if (!state) return false;\r\n    // Accept both 'lb' and 'lbs' plus 'kg'\r\n    const unitsOk = state?.units === \"lbs\" || state?.units === \"lb\" || state?.units === \"kg\";\r\n    const roundingOk = !!state?.rounding;\r\n    const tmPctOk = state?.tmPct === 0.9 || state?.tmPct === 0.85 || state?.tmPct === 0.90 || state?.tmPct === 0.850; // tolerate float formats\r\n    // Build a tms object from current lifts if not already present\r\n    const tmsSource = state?.tms || (() => {\r\n        const out = {}; LIFTS.forEach(k => { out[k] = state?.lifts?.[k]?.tm; }); return out;\r\n    })();\r\n    const tmsOk = LIFTS.every(k => {\r\n        const v = Number(tmsSource[k]);\r\n        return Number.isFinite(v) && v > 0;\r\n    });\r\n    return unitsOk && roundingOk && tmPctOk && tmsOk;\r\n}\r\n\r\nfunction allowStep1Next(state) {\r\n    const bypass =\r\n        (typeof import.meta !== 'undefined' && import.meta?.env?.VITE_RELAX_STEP1 === \"true\") ||\r\n        (typeof process !== 'undefined' && process?.env?.REACT_APP_RELAX_STEP1 === \"true\");\r\n    return bypass || isStep1Complete(state);\r\n}\r\nimport Step1Fundamentals from './steps/Step1Fundamentals.jsx';\r\nimport Step2TemplateOrCustom from './steps/Step2TemplateOrCustom.jsx';\r\nimport Step3DesignCustom from './steps/Step3DesignCustom.jsx';\r\nimport Step4ReviewExport from './steps/Step4ReviewExport.jsx';\r\nimport Step5ProgressionSmart from './steps/Step5ProgressionSmart.jsx';\r\n\r\nconst STEPS = [\r\n    { id: 'fundamentals', title: 'Fundamentals', description: 'Units, rounding, TM%, 1RM/rep tests' },\r\n    { id: 'template', title: 'Template / Custom', description: 'Select template or continue custom' },\r\n    { id: 'design', title: 'Design (if Custom)', description: 'Custom schedule, warm-ups, supplemental, assistance' },\r\n    { id: 'review', title: 'Review & Export', description: 'Cycle preview, export & print' },\r\n    { id: 'progress', title: 'Progress TMs', description: 'Week 4 done? Advance training maxes' }\r\n];\r\n\r\nfunction WizardShell() {\r\n    const { stepNumber } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    // Initialize stepIndex from URL parameter\r\n    const getStepIndexFromUrl = () => {\r\n        const step = parseInt(stepNumber, 10);\r\n        // Validate step number is in range [1-5], default to 1 if invalid\r\n        if (step >= 1 && step <= 5) {\r\n            return step - 1; // Convert 1-based to 0-based\r\n        } else {\r\n            // If invalid step number, redirect to step 1\r\n            if (stepNumber && (step < 1 || step > 5 || isNaN(step))) {\r\n                navigate('/builder/531/v2/step/1', { replace: true });\r\n            }\r\n            return 0; // Default to step 1 (index 0)\r\n        }\r\n    };\r\n\r\n    const [stepIndex, setStepIndex] = useState(getStepIndexFromUrl);\r\n    const [stepValidation, setStepValidation] = useState({ fundamentals: false, design: false, review: false, progress: true });\r\n    // Step1 feedback state\r\n    const [step1Error, setStep1Error] = useState(null); // string message\r\n    const [step1Missing, setStep1Missing] = useState([]); // array of lift keys / field labels\r\n    const [step1FlashToken, setStep1FlashToken] = useState(0); // increment to trigger child highlight\r\n    const { state, dispatch } = useProgramV2();\r\n    const packRef = useRef(null);\r\n\r\n    // Sync stepIndex with URL parameter changes and update page title\r\n    useEffect(() => {\r\n        const urlStep = getStepIndexFromUrl();\r\n        if (urlStep !== stepIndex) {\r\n            setStepIndex(urlStep);\r\n        }\r\n\r\n        // Update page title based on current step\r\n        const currentStepData = STEPS[urlStep] || STEPS[0];\r\n        document.title = `${currentStepData.title} - 5/3/1 Builder V2`;\r\n\r\n        return () => {\r\n            // Reset title when component unmounts\r\n            document.title = '5/3/1 Program Builder';\r\n        };\r\n    }, [stepNumber]); // Re-run when URL step parameter changes\r\n\r\n    // Update URL when stepIndex changes programmatically\r\n    const updateStepUrl = (newStepIndex) => {\r\n        const stepNumber = newStepIndex + 1; // Convert 0-based to 1-based\r\n        navigate(`/builder/531/v2/step/${stepNumber}`, { replace: true });\r\n    };\r\n    // Packs always on unless env kill-switch disables\r\n\r\n    // Enhanced step validation helper functions\r\n    const getStepWarnings = (stepIndex) => {\r\n        const warnings = [];\r\n        const errors = [];\r\n\r\n        switch (stepIndex) {\r\n            case 0: // Fundamentals\r\n                if (!state?.units) errors.push(\"Units (lbs/kg) required\");\r\n                if (!state?.rounding) errors.push(\"Rounding preference required\");\r\n                if (!state?.tmPct) errors.push(\"Training max percentage required\");\r\n\r\n                const tmsSource = state?.tms || {};\r\n                LIFTS.forEach(lift => {\r\n                    const tm = Number(tmsSource[lift] || state?.lifts?.[lift]?.tm);\r\n                    if (!Number.isFinite(tm) || tm <= 0) {\r\n                        errors.push(`${lift.charAt(0).toUpperCase() + lift.slice(1)} training max required`);\r\n                    }\r\n                });\r\n                break;\r\n\r\n            case 1: // Template/Custom\r\n                if (!state?.templateKey && !state?.schedule?.frequency) {\r\n                    errors.push(\"Select a template or configure custom schedule\");\r\n                }\r\n                if (state?.templateKey && !isStep1Complete(state)) {\r\n                    errors.push(\"Complete Step 1 before using templates\");\r\n                }\r\n                if (state?.templateKey) {\r\n                    warnings.push(\"Template selected - ready to apply configuration\");\r\n                } else if (!state?.schedule?.frequency) {\r\n                    warnings.push(\"Custom path chosen - configure schedule in next step\");\r\n                }\r\n                break;\r\n\r\n            case 2: // Design Custom\r\n                if (!state?.templateKey) { // Only validate if not using template\r\n                    if (!state?.schedule?.frequency) {\r\n                        errors.push(\"Training frequency not set\");\r\n                    } else {\r\n                        warnings.push(`${state.schedule.frequency}-day schedule configured`);\r\n                    }\r\n\r\n                    if (!state?.supplemental?.strategy || state?.supplemental?.strategy === 'none') {\r\n                        warnings.push(\"Supplemental work not configured\");\r\n                    } else {\r\n                        warnings.push(`${state.supplemental.strategy.toUpperCase()} supplemental configured`);\r\n                    }\r\n\r\n                    if (!state?.assistance?.mode || state?.assistance?.mode === 'minimal') {\r\n                        warnings.push(\"Assistance exercises not configured\");\r\n                    } else {\r\n                        warnings.push(`${state.assistance.mode} assistance configured`);\r\n                    }\r\n                } else {\r\n                    warnings.push(\"Template applied - custom design skipped\");\r\n                }\r\n                break;\r\n\r\n            case 3: // Review & Export\r\n                if (!isStep1Complete(state)) {\r\n                    errors.push(\"Training maxes incomplete\");\r\n                }\r\n                if (!state?.schedule?.frequency && !state?.templateKey) {\r\n                    errors.push(\"No training schedule configured\");\r\n                }\r\n                if (state?.templateKey) {\r\n                    warnings.push(`Using ${state.templateKey.toUpperCase()} template`);\r\n                } else {\r\n                    if (state?.schedule?.frequency) {\r\n                        warnings.push(`Custom ${state.schedule.frequency}-day program`);\r\n                    }\r\n                }\r\n                if (!state?.advanced?.generatedProgram) {\r\n                    warnings.push(\"Program ready to generate\");\r\n                } else {\r\n                    warnings.push(\"Program generated - ready for export\");\r\n                }\r\n                break;\r\n\r\n            case 4: // Progress\r\n                if (!state?.advanced?.generatedProgram) {\r\n                    warnings.push(\"Generate program first in Review step\");\r\n                }\r\n                if (!state?.amrapWk3 || Object.keys(state.amrapWk3).length === 0) {\r\n                    warnings.push(\"Enter Week 3 AMRAP results to calculate new training maxes\");\r\n                } else {\r\n                    warnings.push(\"AMRAP data entered - training maxes ready to advance\");\r\n                }\r\n                break;\r\n        }\r\n\r\n        return { errors, warnings, hasIssues: errors.length > 0 || warnings.length > 0 };\r\n    };\r\n\r\n    // Reset step function with confirmation\r\n    const resetStep = (stepIndex) => {\r\n        const stepName = STEPS[stepIndex].title;\r\n        const confirmed = window.confirm(`Reset ${stepName} to defaults?\\n\\nThis will clear all data for this step and cannot be undone.`);\r\n\r\n        if (!confirmed) return;\r\n\r\n        switch (stepIndex) {\r\n            case 0: // Fundamentals\r\n                dispatch({ type: 'RESET_FUNDAMENTALS' });\r\n                break;\r\n            case 1: // Template/Custom\r\n                dispatch({ type: 'SET_TEMPLATE_KEY', templateKey: null });\r\n                dispatch({ type: 'SET_SCHEDULE', schedule: {} });\r\n                break;\r\n            case 2: // Design Custom\r\n                dispatch({ type: 'SET_SCHEDULE', schedule: {} });\r\n                dispatch({ type: 'SET_SUPPLEMENTAL', supplemental: { strategy: 'none' } });\r\n                dispatch({ type: 'SET_ASSISTANCE', assistance: { mode: 'minimal' } });\r\n                dispatch({ type: 'SET_CONDITIONING', conditioning: {} });\r\n                break;\r\n            case 3: // Review & Export\r\n                // Reset any program generation state\r\n                dispatch({ type: 'SET_ADVANCED', advanced: { ...(state?.advanced || {}), generatedProgram: null } });\r\n                break;\r\n            case 4: // Progress\r\n                dispatch({ type: 'SET_AMRAP_WK3', payload: {} });\r\n                dispatch({ type: 'SET_ADVANCED', advanced: { ...(state?.advanced || {}), progressData: null } });\r\n                break;\r\n        }\r\n\r\n        // Show success feedback\r\n        setStep1FlashToken(prev => prev + 1); // Reuse flash system for visual feedback\r\n    };\r\n\r\n    // Optional future pack loading (no behavior change while flag is false)\r\n    useEffect(() => {\r\n        let cancelled = false;\r\n        async function maybeLoadPack() {\r\n            if (!USE_METHOD_PACKS) return; // kill-switch path\r\n            const pack = await loadPack531BBB();\r\n            if (!cancelled && pack) {\r\n                packRef.current = pack;\r\n                console.info(\"Loaded 531 BBB pack:\", pack);\r\n                // Decision adapter (feature flagged) – translate current UI answers into state merges\r\n                try {\r\n                    const answers = {\r\n                        daysPerWeek: state?.schedule?.frequency || state?.daysPerWeek || 4,\r\n                        assistanceChoice: state?.assistanceTemplate || state?.templateKey || 'BBB',\r\n                        tmMethod: state?.tmMethod || 'known_1rm'\r\n                    };\r\n                    const decision = applyDecisionsFromPack({ pack, answers });\r\n                    if (decision) {\r\n                        // Schedule mode -> update schedule.frequency if changed\r\n                        if (decision.scheduleMode) {\r\n                            const currentFreq = state?.schedule?.frequency;\r\n                            const nextFreqMap = { '4day': 4, '3day': 3, '2day': 2, '1day': 1 };\r\n                            const nextFreq = nextFreqMap[decision.scheduleMode];\r\n                            if (nextFreq && nextFreq !== currentFreq) {\r\n                                dispatch({ type: 'SET_SCHEDULE', schedule: { ...(state?.schedule || {}), frequency: nextFreq } });\r\n                            }\r\n                            // Build schedule preview whenever we have a scheduleMode we recognize (3day|4day)\r\n                            if (decision.scheduleMode === '3day') {\r\n                                const liftOrder = [\"press\", \"deadlift\", \"bench\", \"squat\"]; // canonical order\r\n                                const sched = buildSchedule({ mode: '3day', liftOrder });\r\n                                dispatch({ type: 'SET_ADVANCED', advanced: { ...(state?.advanced || {}), schedulePreview: sched } });\r\n                                console.info(\"531 schedule preview (3day):\", sched);\r\n                            } else if (decision.scheduleMode === '4day') {\r\n                                // Build lightweight 4-day current-week preview (week1 by default)\r\n                                const sched4 = buildSchedule4Day({ state, pack, split: SPLIT_4DAY_A, weekLabel: '3x5' });\r\n                                dispatch({ type: 'SET_ADVANCED', advanced: { ...(state?.advanced || {}), schedulePreview: sched4 } });\r\n                                console.info(\"531 schedule preview (4day):\", sched4);\r\n                            }\r\n                        }\r\n                        // Template id capture (non-destructive)\r\n                        if (decision.templateId && decision.templateId !== state?.templateId) {\r\n                            dispatch({ type: 'SET_TEMPLATE', template: decision.templateId });\r\n                        }\r\n                        // TM method future use (store in advanced)\r\n                        if (decision.tmMethod && decision.tmMethod !== state?.advanced?.tmMethod) {\r\n                            dispatch({ type: 'SET_ADVANCED', advanced: { ...(state?.advanced || {}), tmMethod: decision.tmMethod } });\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    console.warn('Decision adapter error', e);\r\n                }\r\n                const sup = extractSupplementalFromPack(pack, \"bbb50\");\r\n                if (sup) {\r\n                    // Dispatch only supplemental fields (non-destructive)\r\n                    dispatch({\r\n                        type: 'SET_SUPPLEMENTAL', supplemental: {\r\n                            strategy: sup.mode === 'bbb' ? 'bbb' : (sup.mode || 'none'),\r\n                            pairing: sup.pairing,\r\n                            percentOfTM: sup.intensity?.value || 60,\r\n                            sets: sup.sets,\r\n                            reps: sup.reps,\r\n                            _pack: sup._provenance\r\n                        }\r\n                    });\r\n                }\r\n                // Assistance mapping from selected template (only if no custom assistance already)\r\n                try {\r\n                    const selectedTemplateId = state?.templateKey || state?.template || 'bbb50';\r\n                    const tpl = (pack.templates || []).find(t => t.id === selectedTemplateId);\r\n                    if (tpl?.effects?.assistance && (!state?.assistance || state.assistance.mode === 'minimal')) {\r\n                        const items = mapTemplateAssistance(tpl.effects.assistance);\r\n                        const issues = validateAssistanceVolume(items);\r\n                        dispatch({ type: 'SET_ASSISTANCE', assistance: { mode: 'template', templateId: selectedTemplateId, items, issues: issues.length ? issues : undefined } });\r\n                    }\r\n                } catch (e) {\r\n                    console.warn('Assistance mapping error', e);\r\n                }\r\n\r\n                // Warmups (store into schedule.warmupScheme if different)\r\n                const wu = extractWarmups(pack);\r\n                if (Array.isArray(wu)) {\r\n                    const currentWU = state?.schedule?.warmupScheme;\r\n                    const nextWU = { percentages: wu.map(w => w.value), reps: wu.map(w => w.reps) };\r\n                    const sameWU = currentWU && JSON.stringify(currentWU) === JSON.stringify(nextWU);\r\n                    if (!sameWU) {\r\n                        dispatch({ type: 'SET_SCHEDULE', schedule: { ...(state?.schedule || {}), warmupScheme: nextWU, includeWarmups: true } });\r\n                    }\r\n                }\r\n                // Main sets percent table for current active week label (derive from stepIndex for simplicity)\r\n                const weekLabelMap = ['3x5', '3x3', '5/3/1', 'Deload'];\r\n                const currentWeekLabel = weekLabelMap[0]; // default for config; detailed preview uses engine still\r\n                const wk = extractWeekByLabel(pack, currentWeekLabel);\r\n                if (wk?.main && Array.isArray(wk.main)) {\r\n                    // Store a lightweight capture for potential future use (e.g., state.previewWeekMain)\r\n                    const existing = state?.previewWeekMain;\r\n                    const asSimple = wk.main.map(m => ({ value: m.value, reps: m.reps, amrap: !!m.amrap }));\r\n                    if (!existing || JSON.stringify(existing) !== JSON.stringify(asSimple)) {\r\n                        dispatch({ type: 'SET_LOADING_OPTION', option: state?.loadingOption || state?.loading?.option || 1 }); // noop preserve\r\n                        // Attach via a generic advanced field to avoid schema churn\r\n                        dispatch({ type: 'SET_ADVANCED', advanced: { ...(state?.advanced || {}), packMainWeek0: asSimple } });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        maybeLoadPack();\r\n        return () => { cancelled = true; };\r\n    }, []);\r\n    // Auto rebuild schedulePreview whenever core dependencies change (daysPerWeek, split4, equipment, week, cycle, units, rounding, tmPct, tms, templateKey)\r\n    useEffect(() => {\r\n        const daysPerWeek = Number(state?.daysPerWeek || state?.schedule?.frequency || 4);\r\n        const splitVal = state?.advanced?.split4 || state?.schedule?.split4 || 'A';\r\n        const split = splitVal === 'B' ? SPLIT_4DAY_B : SPLIT_4DAY_A;\r\n        const pack = packRef.current;\r\n        // Assistance pack default fallback (avoid empty assistance unless explicitly jack_shit)\r\n        if (!state?.templateKey && (!state?.assistance || state.assistance.mode === 'minimal')) {\r\n            // Set a default templateKey (triumvirate) silently once\r\n            dispatch({ type: 'SET_TEMPLATE_KEY', payload: 'triumvirate' });\r\n        }\r\n        let sched;\r\n        try {\r\n            if (daysPerWeek === 4) sched = buildSchedule4Day({ state, pack, split, weekLabel: '3x5' });\r\n            else if (daysPerWeek === 3) sched = buildSchedule({ mode: '3day', liftOrder: [\"press\", \"deadlift\", \"bench\", \"squat\"], state });\r\n            else if (daysPerWeek === 2) sched = buildSchedule2Day({ state, pack, split, weekLabel: '3x5' });\r\n            else if (daysPerWeek === 1) sched = buildSchedule1Day({ state, pack, split, weekLabel: '3x5' });\r\n        } catch (e) {\r\n            console.warn('schedulePreview rebuild failed', e);\r\n        }\r\n        if (sched) {\r\n            dispatch({ type: 'SET_ADVANCED', advanced: { ...(state?.advanced || {}), split4: splitVal, schedulePreview: sched } });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [state.daysPerWeek, state.advanced?.split4, state.schedule?.split4, state.week, state.cycle, state.units, state.rounding, state.tmPct, state.lifts?.squat?.tm, state.lifts?.bench?.tm, state.lifts?.deadlift?.tm, state.lifts?.press?.tm, state.equipment, state.templateKey, state.assistance?.mode, state.assistance?.templateId]);\r\n    function humanLiftName(key) {\r\n        return key === \"press\" ? \"Press\" : key[0].toUpperCase() + key.slice(1);\r\n    }\r\n    function oppositeOf(liftKey) {\r\n        if (liftKey === \"press\") return \"bench\";\r\n        if (liftKey === \"bench\") return \"press\";\r\n        if (liftKey === \"squat\") return \"deadlift\";\r\n        if (liftKey === \"deadlift\") return \"squat\";\r\n        return liftKey;\r\n    }\r\n\r\n    function handleStartCycle() {\r\n        const {\r\n            units = \"lbs\",\r\n            rounding = { increment: 5, mode: \"nearest\" },\r\n            loadingOption = 1,\r\n            schedule = {},\r\n            supplemental = { strategy: \"none\" },\r\n            assistance = { mode: \"minimal\" },\r\n            flowMode,\r\n            templateKey,\r\n            conditioning: conditioningState\r\n        } = state || {};\r\n\r\n        // Derive training maxes from current lift TMs in context (state does not store a standalone trainingMaxes object)\r\n        const trainingMaxes = {\r\n            squat: state?.lifts?.squat?.tm || 0,\r\n            bench: state?.lifts?.bench?.tm || 0,\r\n            deadlift: state?.lifts?.deadlift?.tm || 0,\r\n            press: state?.lifts?.press?.tm || 0\r\n        };\r\n\r\n        const tmKeys = [\"squat\", \"bench\", \"deadlift\", \"press\"];\r\n        const tmOk = tmKeys.every(k => Number(trainingMaxes?.[k]) > 0);\r\n        if (!tmOk) return;\r\n\r\n        const freq = Number(schedule?.frequency || 4);\r\n        const defaultDays = [\"press\", \"deadlift\", \"bench\", \"squat\"];\r\n        const days = Array.isArray(schedule?.days) && schedule.days.length === freq\r\n            ? schedule.days\r\n            : defaultDays.slice(0, freq);\r\n\r\n        // Unified planned conditioning (supports Step6 advanced config or legacy simple fields)\r\n        const plannedConditioning = planConditioningFromState(state).map(s => ({\r\n            day: s.day,\r\n            mode: s.mode,\r\n            modality: s.modality,\r\n            prescription: s.prescription,\r\n            notes: s.notes\r\n        }));\r\n\r\n        function weekdayIndexMap(i, freq) {\r\n            // Map training day index -> weekday index (Mon=0 .. Sun=6) similar to Step4ReviewExport\r\n            if (freq === 4) return [0, 1, 3, 4][i] ?? i; // Mon/Tue/Thu/Fri\r\n            if (freq === 3) return [0, 2, 4][i] ?? i;     // Mon/Wed/Fri\r\n            if (freq === 2) return [1, 4][i] ?? i;        // Tue/Fri\r\n            return i; // fallback sequential\r\n        }\r\n        const weekdayNames = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\r\n\r\n        // Normalize rounding (state.rounding may be a string from Step1Fundamentals or an object from legacy/other flows)\r\n        const roundingConfig = typeof rounding === 'object'\r\n            ? { increment: rounding.increment || (units === 'kg' ? 2.5 : 5), mode: rounding.mode || 'nearest' }\r\n            : { increment: units === 'kg' ? 2.5 : 5, mode: rounding || 'nearest' };\r\n\r\n        const weeks = [];\r\n        for (let w = 0; w < 4; w++) {\r\n            const daysOut = days.map((liftKey, idx) => {\r\n                const tm = Number(trainingMaxes?.[liftKey] || 0);\r\n\r\n                const warmups = buildWarmupSets({\r\n                    includeWarmups: !!schedule?.includeWarmups,\r\n                    warmupScheme: schedule?.warmupScheme,\r\n                    tm,\r\n                    roundingIncrement: roundingConfig.increment,\r\n                    roundingMode: roundingConfig.mode,\r\n                    units\r\n                });\r\n\r\n                const main = buildMainSetsForLift({\r\n                    tm,\r\n                    weekIndex: w,\r\n                    option: loadingOption || 1,\r\n                    roundingIncrement: roundingConfig.increment,\r\n                    roundingMode: roundingConfig.mode,\r\n                    units\r\n                });\r\n\r\n                let supplementalOut = null;\r\n                if (supplemental?.strategy === \"bbb\") {\r\n                    const pairing = supplemental?.pairing || \"same\";\r\n                    const bbbLiftKey = pairing === \"opposite\" ? oppositeOf(liftKey) : liftKey;\r\n                    const bbbTm = Number(trainingMaxes?.[bbbLiftKey] || 0);\r\n                    const pct = Number(supplemental?.percentOfTM || 50);\r\n                    const raw = bbbTm * (pct / 100);\r\n                    const weight = roundToIncrement(raw, roundingConfig.increment, roundingConfig.mode);\r\n                    supplementalOut = {\r\n                        type: \"bbb\",\r\n                        pairing,\r\n                        liftKey: bbbLiftKey,\r\n                        sets: 5,\r\n                        reps: 10,\r\n                        percentOfTM: pct,\r\n                        weight,\r\n                        units\r\n                    };\r\n                }\r\n\r\n                let assistanceOut = { mode: assistance?.mode || \"minimal\" };\r\n                if (assistanceOut.mode === \"custom\" && assistance?.customPlan?.[liftKey]) {\r\n                    assistanceOut.custom = assistance.customPlan[liftKey].map(item => ({\r\n                        name: item.name,\r\n                        sets: item.sets,\r\n                        reps: item.reps\r\n                    }));\r\n                }\r\n\r\n                // Conditioning: inject matching planned session for this weekday (single plan repeated across weeks)\r\n                let conditioningBlock = undefined;\r\n                if (plannedConditioning.length) {\r\n                    const weekday = weekdayNames[weekdayIndexMap(idx, freq)] || weekdayNames[0];\r\n                    const match = plannedConditioning.find(pc => pc.day === weekday);\r\n                    if (match) {\r\n                        conditioningBlock = {\r\n                            type: match.mode === 'hiit' ? 'HIIT' : 'LISS',\r\n                            modality: match.modality,\r\n                            minutes: match.prescription?.minutes || match.prescription?.duration || undefined,\r\n                            intensity: match.prescription?.intensity || undefined,\r\n                            notes: match.notes || undefined\r\n                        };\r\n                    }\r\n                }\r\n\r\n                return {\r\n                    day: idx + 1,\r\n                    liftKey,\r\n                    lift: humanLiftName(liftKey),\r\n                    warmups,\r\n                    main,\r\n                    // Always provide a supplemental object (prevents downstream undefined access)\r\n                    supplemental: supplementalOut || { type: 'none', sets: 0, reps: 0, percentOfTM: null },\r\n                    assistance: assistanceOut,\r\n                    conditioning: conditioningBlock\r\n                };\r\n            });\r\n            weeks.push({ week: w + 1, days: daysOut });\r\n        }\r\n\r\n        const payload = {\r\n            meta: {\r\n                createdAt: new Date().toISOString(),\r\n                templateKey: templateKey || null,\r\n                flowMode: flowMode || \"custom\",\r\n                units,\r\n                loadingOption\r\n            },\r\n            trainingMaxes,\r\n            rounding: { increment: roundingConfig.increment, mode: roundingConfig.mode },\r\n            schedule: {\r\n                frequency: freq,\r\n                days,\r\n                includeWarmups: !!schedule?.includeWarmups,\r\n                warmupScheme: schedule?.warmupScheme || null\r\n            },\r\n            supplemental: supplemental || { strategy: \"none\" },\r\n            assistance: assistance || { mode: \"minimal\" },\r\n            conditioning: conditioningState ? { ...conditioningState, sessions: plannedConditioning } : undefined,\r\n            weeks\r\n        };\r\n\r\n        try {\r\n            localStorage.setItem(\"ph531.activeProgram.v2\", JSON.stringify(payload));\r\n            navigate(\"/program/531/active\");\r\n        } catch (e) {\r\n            console.error(\"Failed to save active program:\", e);\r\n        }\r\n    }\r\n\r\n    const markComplete = (id) => setStepValidation(prev => ({ ...prev, [id]: true }));\r\n\r\n    const currentStep = STEPS[stepIndex];\r\n    const canGoNext = (() => {\r\n        if (currentStep.id === 'fundamentals') return allowStep1Next(state); // new single source of truth\r\n        if (currentStep.id === 'design') return stepValidation.design;\r\n        if (currentStep.id === 'review') return stepValidation.review;\r\n        if (currentStep.id === 'progress') return stepValidation.progress;\r\n        return false;\r\n    })() && stepIndex < STEPS.length - 1;\r\n    const canGoBack = stepIndex > 0;\r\n\r\n    const handleStepValidation = useCallback((stepId, isValid) => {\r\n        setStepValidation(prev => {\r\n            const prevVal = prev[stepId];\r\n            if (prevVal === isValid) return prev; // guard: no state update if unchanged\r\n            return { ...prev, [stepId]: isValid };\r\n        });\r\n    }, []);\r\n\r\n    const handleNext = () => {\r\n        if (canGoNext) {\r\n            // Clear any prior error context when advancing\r\n            if (stepIndex === 0) {\r\n                setStep1Error(null);\r\n                setStep1Missing([]);\r\n            }\r\n            const nextStep = stepIndex + 1;\r\n            setStepIndex(nextStep);\r\n            updateStepUrl(nextStep);\r\n            return;\r\n        }\r\n        // If user clicked while disabled on Step 1, surface guidance\r\n        if (stepIndex === 0 && !canGoNext) {\r\n            const missing = [];\r\n            if (!(state?.units === 'lbs' || state?.units === 'lb' || state?.units === 'kg')) missing.push('units');\r\n            if (!state?.rounding) missing.push('rounding');\r\n            if (!(state?.tmPct === 0.9 || state?.tmPct === 0.85 || state?.tmPct === 0.90 || state?.tmPct === 0.850)) missing.push('TM %');\r\n            const liftsMissing = [];\r\n            for (const k of LIFTS) {\r\n                const tm = state?.lifts?.[k]?.tm;\r\n                if (!(Number.isFinite(tm) && tm > 0)) liftsMissing.push(k);\r\n            }\r\n            if (liftsMissing.length) missing.push(...liftsMissing.map(l => `${l} TM`));\r\n            setStep1Missing(missing);\r\n            const msg = missing.length ? `Still need: ${missing.join(', ')}` : 'Complete all required fields to continue.';\r\n            setStep1Error(msg);\r\n            // trigger child highlight animation\r\n            setStep1FlashToken(t => t + 1);\r\n            // auto-clear after delay\r\n            setTimeout(() => {\r\n                setStep1Error(null);\r\n            }, 4000);\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        if (canGoBack) {\r\n            const prevStep = stepIndex - 1;\r\n            setStepIndex(prevStep);\r\n            updateStepUrl(prevStep);\r\n        }\r\n    };\r\n\r\n    const handleStepClick = (index) => {\r\n        // Allow clicking on current or previous steps only\r\n        if (index <= stepIndex) {\r\n            setStepIndex(index);\r\n            updateStepUrl(index);\r\n        }\r\n    };\r\n\r\n    // Placeholder: progression trigger (would be invoked after reviewing Week 4 / Deload completion)\r\n    function onAdvanceCycle(amrapWk3 = {}, includeMap) {\r\n        const forcePass = (typeof import.meta !== 'undefined' && import.meta.env?.VITE_PROGRESS_FORCE_PASS === 'true');\r\n        const repsMap = forcePass ? {} : amrapWk3; // empty map => treat all as pass\r\n        // We don't have direct state setter (using reducer) so dispatch an advanced patch capturing next TMs\r\n        const nextState = advanceCycle({\r\n            ...state,\r\n            tms: Object.fromEntries(Object.entries(state.lifts || {}).map(([k, v]) => [k, v?.tm || 0]))\r\n        }, { amrapWk3: repsMap });\r\n        // If selective include map provided, override nextState.tms accordingly\r\n        if (includeMap && Object.keys(includeMap).some(k => includeMap[k] === false)) {\r\n            for (const lift of Object.keys(nextState.lifts || {})) {\r\n                if (includeMap[lift] === false) {\r\n                    // revert TM for excluded lift to previous value\r\n                    const prevTm = state.lifts?.[lift]?.tm || 0;\r\n                    nextState.lifts[lift].tm = prevTm;\r\n                    nextState.tms[lift] = prevTm;\r\n                }\r\n            }\r\n        }\r\n        // Apply updated lift TMs\r\n        for (const lift of Object.keys(nextState.lifts || {})) {\r\n            const tmVal = nextState.lifts[lift].tm;\r\n            dispatch({ type: 'SET_TM', lift, tm: tmVal });\r\n        }\r\n        dispatch({ type: 'SET_ADVANCED', advanced: { ...(state.advanced || {}), cycle: nextState.cycle } });\r\n        console.info('Cycle advanced:', { cycle: nextState.cycle, nextTms: nextState.tms });\r\n    }\r\n\r\n    // Hoisted hook: avoid calling useCallback inside conditional render paths\r\n    const onFundamentalsValidChange = useCallback((isValid) => handleStepValidation('fundamentals', isValid), [handleStepValidation]);\r\n\r\n    const renderStepContent = () => {\r\n        switch (stepIndex) {\r\n            case 0:\r\n                return (\r\n                    <Step1Fundamentals onValidChange={onFundamentalsValidChange} flashToken={step1FlashToken} missing={step1Missing} />\r\n                );\r\n            case 1:\r\n                return (\r\n                    <Step2TemplateOrCustom\r\n                        onChoose={(mode) => {\r\n                            markComplete('template');\r\n                            if (mode === 'custom') {\r\n                                setStepIndex(2); // go to design\r\n                                updateStepUrl(2);\r\n                            }\r\n                        }}\r\n                        onAutoNext={() => {\r\n                            // Jump straight to review (index 3)\r\n                            setStepIndex(3);\r\n                            updateStepUrl(3);\r\n                        }}\r\n                        extraControls={<div className=\"mt-4 space-y-4\">\r\n                            <div>\r\n                                <div className=\"flex items-center justify-between mb-1\">\r\n                                    <label className=\"block text-xs uppercase tracking-wide text-gray-400\">Days per week</label>\r\n                                    <span className=\"text-[10px] text-gray-500\">Choose 1-4</span>\r\n                                </div>\r\n                                <div className=\"flex gap-2 flex-wrap\" role=\"group\" aria-label=\"Days per week\">\r\n                                    {[1, 2, 3, 4].map(d => (\r\n                                        <ToggleButton\r\n                                            key={d}\r\n                                            on={Number(state?.daysPerWeek || 4) === d}\r\n                                            aria-label={`${d} day${d > 1 ? 's' : ''}`}\r\n                                            onClick={() => {\r\n                                                const val = d;\r\n                                                dispatch({ type: 'SET_DAYS_PER_WEEK', payload: val });\r\n                                                const split = state?.split4 === 'B' ? SPLIT_4DAY_B : SPLIT_4DAY_A;\r\n                                                const pack = packRef.current;\r\n                                                let sched;\r\n                                                if (val === 4) sched = buildSchedule4Day({ state: { ...state, daysPerWeek: val }, pack, split, weekLabel: '3x5' });\r\n                                                else if (val === 3) sched = buildSchedule({ mode: '3day', liftOrder: [\"press\", \"deadlift\", \"bench\", \"squat\"] });\r\n                                                else if (val === 2) sched = buildSchedule2Day({ state: { ...state, daysPerWeek: val }, pack, split, weekLabel: '3x5' });\r\n                                                else sched = buildSchedule1Day({ state: { ...state, daysPerWeek: val }, pack, split, weekLabel: '3x5' });\r\n                                                dispatch({ type: 'SET_ADVANCED', advanced: { ...(state?.advanced || {}), schedulePreview: sched } });\r\n                                            }}\r\n                                        >{d}</ToggleButton>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                <div className=\"flex items-center justify-between mb-1\">\r\n                                    <label className=\"block text-xs uppercase tracking-wide text-gray-400\">4-day Split</label>\r\n                                    <span className=\"text-[10px] text-gray-500\">For 4-day</span>\r\n                                </div>\r\n                                <div className=\"flex gap-2 flex-wrap\" role=\"group\" aria-label=\"4-day split\">\r\n                                    {['A', 'B'].map(code => (\r\n                                        <ToggleButton\r\n                                            key={code}\r\n                                            on={(state?.split4 || 'A') === code}\r\n                                            aria-label={`Split ${code}`}\r\n                                            onClick={() => {\r\n                                                const splitVal = code;\r\n                                                dispatch({ type: 'SET_ADVANCED', advanced: { ...(state?.advanced || {}), split4: splitVal } });\r\n                                                const split = splitVal === 'B' ? SPLIT_4DAY_B : SPLIT_4DAY_A;\r\n                                                const val = Number(state?.daysPerWeek || 4);\r\n                                                const pack = packRef.current;\r\n                                                let sched;\r\n                                                if (val === 4) sched = buildSchedule4Day({ state: { ...state }, pack, split, weekLabel: '3x5' });\r\n                                                else if (val === 3) sched = buildSchedule({ mode: '3day', liftOrder: [\"press\", \"deadlift\", \"bench\", \"squat\"] });\r\n                                                else if (val === 2) sched = buildSchedule2Day({ state: { ...state }, pack, split, weekLabel: '3x5' });\r\n                                                else sched = buildSchedule1Day({ state: { ...state }, pack, split, weekLabel: '3x5' });\r\n                                                dispatch({ type: 'SET_ADVANCED', advanced: { ...(state?.advanced || {}), split4: splitVal, schedulePreview: sched } });\r\n                                            }}\r\n                                        >{code === 'A' ? 'A: P/D/B/S' : 'B: B/S/P/D'}</ToggleButton>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                    />\r\n                );\r\n            case 2:\r\n                return (\r\n                    <Step3DesignCustom onValidChange={(ok) => handleStepValidation('design', ok)} />\r\n                );\r\n            case 3:\r\n                return (\r\n                    <Step4ReviewExport onReadyChange={(ok) => handleStepValidation('review', ok)} />\r\n                );\r\n            case 4:\r\n                return (\r\n                    <Step5ProgressionSmart\r\n                        onAdvance={(includeMap, customState) => {\r\n                            // Use custom progression logic if provided, otherwise use standard\r\n                            if (customState?.customIncrements) {\r\n                                // Apply custom increments using advanceCycleSelective\r\n                                const nextState = advanceCycleSelective(state, {\r\n                                    amrapWk3: state?.amrapWk3 || {},\r\n                                    include: includeMap,\r\n                                    customIncrements: customState.customIncrements\r\n                                });\r\n\r\n                                // Update the state with the new TMs and cycle info\r\n                                Object.entries(nextState.lifts || {}).forEach(([lift, liftData]) => {\r\n                                    dispatch({ type: 'SET_TM', lift, tm: liftData.tm });\r\n                                });\r\n\r\n                                // Update cycle and history\r\n                                dispatch({ type: 'SET_CYCLE', cycle: nextState.cycle });\r\n                                dispatch({ type: 'SET_WEEK', week: nextState.week });\r\n                                dispatch({ type: 'SET_HISTORY', history: nextState.history });\r\n                            } else {\r\n                                // Use standard progression\r\n                                onAdvanceCycle(state?.amrapWk3 || {}, includeMap);\r\n                            }\r\n                        }}\r\n                    />\r\n                );\r\n            default:\r\n                return <div className=\"text-red-400\">Unknown step</div>;\r\n        }\r\n    };\r\n\r\n    // One-time debug insight for Step 1 gating each render (cheap; aids troubleshooting)\r\n    if (currentStep.id === 'fundamentals') {\r\n        // eslint-disable-next-line no-console\r\n        console.debug(\"Step1 validation:\", {\r\n            canNext: allowStep1Next(state), stateSnapshot: {\r\n                units: state?.units, rounding: state?.rounding, tmPct: state?.tmPct,\r\n                tms: LIFTS.reduce((acc, k) => { acc[k] = state?.lifts?.[k]?.tm || null; return acc; }, {})\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-900\">\r\n            <div className=\"container mx-auto px-6 py-8\">\r\n                {/* Header */}\r\n                <div className=\"mb-8 space-y-2\">\r\n                    <div className=\"flex items-start justify-between flex-wrap gap-4\">\r\n                        <div>\r\n                            <h1 className=\"text-3xl font-bold text-white mb-2 flex items-center\">\r\n                                5/3/1 Program Builder V2\r\n                                {state?.advanced?.schedulePreview?.mode === '3day' && (\r\n                                    <span className=\"ml-3 inline-flex items-center rounded-full border border-red-500/40 bg-red-600/10 px-2 py-0.5 text-xs text-red-300\">\r\n                                        3-day rotation (5 weeks)\r\n                                    </span>\r\n                                )}\r\n                            </h1>\r\n                            <p className=\"text-gray-400\">Jim Wendler's proven strength training methodology</p>\r\n                        </div>\r\n                        {/* Packs enabled by default; set VITE_USE_METHOD_PACKS=false or REACT_APP_USE_METHOD_PACKS=false to disable */}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-12 gap-8\">\r\n                    {/* Left Navigation */}\r\n                    <aside className=\"lg:col-span-3\">\r\n                        <nav className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-4\">\r\n                            <h3 className=\"text-sm font-medium text-gray-300 mb-4 uppercase tracking-wide\">\r\n                                Steps\r\n                            </h3>\r\n                            <ol className=\"space-y-1\">\r\n                                {STEPS.map((step, index) => {\r\n                                    const isCurrent = index === stepIndex;\r\n                                    const isCompleted = stepValidation[step.id];\r\n                                    const isPast = index < stepIndex;\r\n                                    const isAccessible = index <= stepIndex;\r\n\r\n                                    return (\r\n                                        <li key={step.id}>\r\n                                            <button\r\n                                                onClick={() => handleStepClick(index)}\r\n                                                disabled={!isAccessible}\r\n                                                className={`w-full text-left px-3 py-3 rounded transition-colors ${isCurrent\r\n                                                    ? 'bg-red-600/20 border border-red-500/50 text-white'\r\n                                                    : isAccessible\r\n                                                        ? 'hover:bg-gray-700/50 border border-transparent text-gray-300'\r\n                                                        : 'opacity-40 cursor-not-allowed border border-transparent text-gray-500'\r\n                                                    }`}\r\n                                            >\r\n                                                <div className=\"flex items-center justify-between mb-1\">\r\n                                                    <span className=\"text-xs uppercase tracking-wide text-gray-400\">\r\n                                                        Step {index + 1}\r\n                                                    </span>\r\n                                                    {(isCompleted || isPast) && (\r\n                                                        <CheckCircle2 className=\"w-4 h-4 text-green-400\" />\r\n                                                    )}\r\n                                                </div>\r\n                                                <div className=\"font-medium\">{step.title}</div>\r\n                                                <div className=\"text-xs text-gray-400 mt-1\">\r\n                                                    {step.description}\r\n                                                </div>\r\n                                            </button>\r\n                                        </li>\r\n                                    );\r\n                                })}\r\n                            </ol>\r\n                        </nav>\r\n                    </aside>\r\n\r\n                    {/* Main Content */}\r\n                    <main className=\"lg:col-span-9\">\r\n                        <div className=\"space-y-6\">\r\n                            {/* Step Header with Reset Button and Validation */}\r\n                            <div className=\"bg-gray-800/50 border border-gray-700 rounded-lg p-4\">\r\n                                <div className=\"flex items-center justify-between mb-3\">\r\n                                    <div>\r\n                                        <h2 className=\"text-xl font-semibold text-white\">\r\n                                            Step {stepIndex + 1}: {STEPS[stepIndex].title}\r\n                                        </h2>\r\n                                        <p className=\"text-sm text-gray-400 mt-1\">\r\n                                            {STEPS[stepIndex].description}\r\n                                        </p>\r\n                                    </div>\r\n                                    <button\r\n                                        onClick={() => resetStep(stepIndex)}\r\n                                        className=\"text-xs text-gray-400 hover:text-white cursor-pointer flex items-center gap-1 px-2 py-1 rounded hover:bg-gray-700/50 transition-colors\"\r\n                                        title={`Reset ${STEPS[stepIndex].title}`}\r\n                                    >\r\n                                        <RotateCcw className=\"w-3 h-3\" />\r\n                                        Reset\r\n                                    </button>\r\n                                </div>\r\n\r\n                                {(() => {\r\n                                    const validation = getStepWarnings(stepIndex);\r\n                                    if (validation.hasIssues) {\r\n                                        return (\r\n                                            <div className=\"space-y-2\">\r\n                                                {validation.errors.length > 0 && (\r\n                                                    <div className=\"bg-red-900/20 border border-red-500/50 rounded-lg p-3\">\r\n                                                        <div className=\"flex items-start gap-2\">\r\n                                                            <AlertTriangle className=\"w-4 h-4 text-red-400 mt-0.5 flex-shrink-0\" />\r\n                                                            <div>\r\n                                                                <div className=\"text-red-300 text-sm font-medium\">\r\n                                                                    {validation.errors.length} required field(s) missing\r\n                                                                </div>\r\n                                                                <ul className=\"mt-1 space-y-1\">\r\n                                                                    {validation.errors.map((error, idx) => (\r\n                                                                        <li key={idx} className=\"text-red-200 text-xs\">• {error}</li>\r\n                                                                    ))}\r\n                                                                </ul>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n                                                {validation.warnings.length > 0 && (\r\n                                                    <div className=\"bg-yellow-900/20 border border-yellow-500/50 rounded-lg p-3\">\r\n                                                        <div className=\"flex items-start gap-2\">\r\n                                                            <Info className=\"w-4 h-4 text-yellow-400 mt-0.5 flex-shrink-0\" />\r\n                                                            <div>\r\n                                                                <div className=\"text-yellow-300 text-sm font-medium\">Recommendations</div>\r\n                                                                <ul className=\"mt-1 space-y-1\">\r\n                                                                    {validation.warnings.map((warning, idx) => (\r\n                                                                        <li key={idx} className=\"text-yellow-200 text-xs\">• {warning}</li>\r\n                                                                    ))}\r\n                                                                </ul>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n                                    return null;\r\n                                })()}\r\n                            </div>\r\n\r\n                            {/* Step content always rendered so validation can update */}\r\n                            {renderStepContent()}\r\n                            {/* 3-day schedule preview appended (does not replace step content) */}\r\n                            {(() => {\r\n                                const preview = state?.advanced?.schedulePreview;\r\n                                // 3-day legacy path (weeks array)\r\n                                if (preview?.mode === '3day' && Array.isArray(preview?.weeks) && preview.weeks.length) {\r\n                                    const weeks = toUiDays(preview);\r\n                                    return (\r\n                                        <div className=\"space-y-6 mt-10\">\r\n                                            {weeks.map((w, wi) => (\r\n                                                <div key={wi} className=\"rounded-2xl border border-gray-700 bg-gray-800/40 p-4\">\r\n                                                    <div className=\"text-lg font-semibold mb-3 text-white\">{w.label}</div>\r\n                                                    <div className=\"grid md:grid-cols-3 gap-4\">\r\n                                                        {w.sessions.map((s, si) => (\r\n                                                            <div key={si} className=\"rounded-xl border border-gray-700/60 bg-gray-900/40 p-3\">\r\n                                                                <div className=\"text-xs uppercase tracking-wide text-gray-400 mb-2\">{s.sessionWeekLabel}</div>\r\n                                                                {s.lifts.map((lift, li) => {\r\n                                                                    const units = state?.units || 'lbs';\r\n                                                                    const tms = Object.fromEntries(Object.entries(state?.lifts || {}).map(([k, v]) => [k, v.tm || 0]));\r\n                                                                    const roundingPref = state?.rounding === 'ceil' ? { lbs: 5, kg: 2.5 } : { lbs: 5, kg: 2.5 };\r\n                                                                    const pack = packRef.current;\r\n                                                                    const warmups = computeWarmupsFromPack({ pack, lift, tms, units, rounding: roundingPref });\r\n                                                                    const main = computeMainFromPack({ pack, lift, weekLabel: s.sessionWeekLabel, tms, units, rounding: roundingPref });\r\n                                                                    const bbb = computeBBBFromConfig({ supplemental: state?.supplemental, lift, tms, units, rounding: roundingPref, pack });\r\n                                                                    return (\r\n                                                                        <div key={li} className={li > 0 ? 'mt-4 pt-4 border-t border-gray-700/40' : ''}>\r\n                                                                            <div className=\"font-medium capitalize text-gray-200\">{lift}</div>\r\n                                                                            <div className=\"mt-1 text-xs uppercase tracking-wide text-gray-400\">Warm-up</div>\r\n                                                                            <ul className=\"text-sm mb-2 space-y-0.5\">\r\n                                                                                {warmups.length === 0 && <li className=\"text-gray-500\">—</li>}\r\n                                                                                {warmups.map((r, i) => (\r\n                                                                                    <li key={i} className=\"tabular-nums text-gray-300\">{r.pct}% × {r.reps} → <span className=\"text-white\">{r.weight}</span> {units}</li>\r\n                                                                                ))}\r\n                                                                            </ul>\r\n                                                                            <div className=\"text-xs uppercase tracking-wide text-gray-400\">Main</div>\r\n                                                                            <ul className=\"text-sm mb-2 space-y-0.5\">\r\n                                                                                {main.rows.length === 0 && <li className=\"text-gray-500\">—</li>}\r\n                                                                                {main.rows.map((r, i) => (\r\n                                                                                    <li key={i} className=\"tabular-nums text-gray-300\">\r\n                                                                                        {r.pct}% × {r.reps}{r.amrap ? '+' : ''} → <span className=\"text-white\">{r.weight}</span> {units}\r\n                                                                                        {r.amrap && <span className=\"ml-2 text-[10px] px-1 py-0.5 border border-red-500/40 rounded text-red-300\">AMRAP</span>}\r\n                                                                                    </li>\r\n                                                                                ))}\r\n                                                                            </ul>\r\n                                                                            {bbb && (\r\n                                                                                <div className=\"mb-2\">\r\n                                                                                    <div className=\"text-xs uppercase tracking-wide text-gray-400\">Supplemental (BBB)</div>\r\n                                                                                    <div className=\"text-sm tabular-nums text-gray-300\">{bbb.sets}×{bbb.reps} @ {bbb.pct}% TM → <span className=\"text-white\">{bbb.load}</span> {units}</div>\r\n                                                                                </div>\r\n                                                                            )}\r\n                                                                            {Array.isArray(state?.assistance?.items) && state.assistance.items.length > 0 && (\r\n                                                                                <div>\r\n                                                                                    <div className=\"text-xs uppercase tracking-wide text-gray-400\">Assistance</div>\r\n                                                                                    <ul className=\"text-sm space-y-0.5\">\r\n                                                                                        {state.assistance.items.map((a, ai) => (\r\n                                                                                            <li key={ai} className=\"text-gray-300\">{a.name || a.id} — {a.sets}×{a.reps}{a.load ? ` @ ${a.load}` : ''}</li>\r\n                                                                                        ))}\r\n                                                                                    </ul>\r\n                                                                                </div>\r\n                                                                            )}\r\n                                                                            {s.conditioning && (\r\n                                                                                <div className=\"mt-2\">\r\n                                                                                    <div className=\"text-xs uppercase tracking-wide text-gray-400\">Conditioning</div>\r\n                                                                                    <div className=\"text-xs text-gray-300\">\r\n                                                                                        {s.conditioning.type} {s.conditioning.minutes ? `${s.conditioning.minutes}m` : ''}{s.conditioning.intensity ? ` · ${s.conditioning.intensity}` : ''}\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            )}\r\n                                                                        </div>\r\n                                                                    );\r\n                                                                })}\r\n                                                            </div>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    );\r\n                                }\r\n                                // 4-day live preview path (flat days array)\r\n                                if (preview?.mode === '4day_live' && Array.isArray(preview?.days) && preview.days.length === 4) {\r\n                                    return (\r\n                                        <div className=\"space-y-6 mt-10\">\r\n                                            <div className=\"rounded-2xl border border-gray-700 bg-gray-800/40 p-4\">\r\n                                                <div className=\"text-lg font-semibold mb-3 text-white\">Week 1 (Preview)</div>\r\n                                                <div className=\"grid md:grid-cols-4 gap-4\">\r\n                                                    {preview.days.map((d, di) => (\r\n                                                        <div key={di} className=\"rounded-xl border border-gray-700/60 bg-gray-900/40 p-3\">\r\n                                                            <div className=\"text-xs uppercase tracking-wide text-gray-400 mb-2\">Day {di + 1}</div>\r\n                                                            <div className=\"font-medium capitalize text-gray-200 mb-2\">{d.lift}</div>\r\n                                                            <div className=\"text-xs uppercase tracking-wide text-gray-400\">Warm-up</div>\r\n                                                            <ul className=\"text-sm mb-2 space-y-0.5\">\r\n                                                                {d.warmups?.length === 0 && <li className=\"text-gray-500\">—</li>}\r\n                                                                {d.warmups?.map((r, i) => (\r\n                                                                    <li key={i} className=\"tabular-nums text-gray-300\">{r.pct}% × {r.reps} → <span className=\"text-white\">{r.weight}</span> {state?.units || 'lbs'}</li>\r\n                                                                ))}\r\n                                                            </ul>\r\n                                                            <div className=\"text-xs uppercase tracking-wide text-gray-400\">Main</div>\r\n                                                            <ul className=\"text-sm mb-2 space-y-0.5\">\r\n                                                                {d.main?.rows?.length === 0 && <li className=\"text-gray-500\">—</li>}\r\n                                                                {d.main?.rows?.map((r, i) => (\r\n                                                                    <li key={i} className=\"tabular-nums text-gray-300\">{r.pct}% × {r.reps}{r.amrap ? '+' : ''} → <span className=\"text-white\">{r.weight}</span> {state?.units || 'lbs'}{r.amrap && <span className=\"ml-2 text-[10px] px-1 py-0.5 border border-red-500/40 rounded text-red-300\">AMRAP</span>}</li>\r\n                                                                ))}\r\n                                                            </ul>\r\n                                                            {d.supplemental && (\r\n                                                                <div className=\"mb-2\">\r\n                                                                    <div className=\"text-xs uppercase tracking-wide text-gray-400\">Supplemental</div>\r\n                                                                    <div className=\"text-sm tabular-nums text-gray-300\">{d.supplemental.sets}×{d.supplemental.reps} @ {d.supplemental.pct}% TM → <span className=\"text-white\">{d.supplemental.load}</span> {state?.units || 'lbs'}</div>\r\n                                                                </div>\r\n                                                            )}\r\n                                                            {Array.isArray(d.assistance) && d.assistance.length > 0 && (\r\n                                                                <div>\r\n                                                                    <div className=\"text-xs uppercase tracking-wide text-gray-400\">Assistance</div>\r\n                                                                    <ul className=\"text-sm space-y-0.5\">\r\n                                                                        {d.assistance.map((a, ai) => (\r\n                                                                            <li key={ai} className=\"text-gray-300\">{a.name || a.id} — {a.sets ?? '?'}×{a.reps ?? '?'}</li>\r\n                                                                        ))}\r\n                                                                    </ul>\r\n                                                                </div>\r\n                                                            )}\r\n                                                            {d.conditioning && (\r\n                                                                <div className=\"mt-2\">\r\n                                                                    <div className=\"text-xs uppercase tracking-wide text-gray-400\">Conditioning</div>\r\n                                                                    <div className=\"text-xs text-gray-300\">\r\n                                                                        {d.conditioning.type} {d.conditioning.minutes ? `${d.conditioning.minutes}m` : ''}{d.conditioning.intensity ? ` · ${d.conditioning.intensity}` : ''}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                }\r\n                                // 2-day live preview\r\n                                if (preview?.mode === '2day_live' && Array.isArray(preview?.days) && preview.days.length === 2) {\r\n                                    return (\r\n                                        <div className=\"space-y-6 mt-10\">\r\n                                            <div className=\"rounded-2xl border border-gray-700 bg-gray-800/40 p-4\">\r\n                                                <div className=\"text-lg font-semibold mb-3 text-white\">Week 1 (2-Day Preview)</div>\r\n                                                <div className=\"grid md:grid-cols-2 gap-4\">\r\n                                                    {preview.days.map((d, di) => (\r\n                                                        <div key={di} className=\"rounded-xl border border-gray-700/60 bg-gray-900/40 p-3\">\r\n                                                            <div className=\"text-xs uppercase tracking-wide text-gray-400 mb-2\">Day {di + 1}</div>\r\n                                                            <div className=\"font-medium capitalize text-gray-200 mb-2\">{d.lift}</div>\r\n                                                            <div className=\"text-xs uppercase tracking-wide text-gray-400\">Warm-up</div>\r\n                                                            <ul className=\"text-sm mb-2 space-y-0.5\">\r\n                                                                {d.warmups?.length === 0 && <li className=\"text-gray-500\">—</li>}\r\n                                                                {d.warmups?.map((r, i) => (\r\n                                                                    <li key={i} className=\"tabular-nums text-gray-300\">{r.pct}% × {r.reps} → <span className=\"text-white\">{r.weight}</span> {state?.units || 'lbs'}</li>\r\n                                                                ))}\r\n                                                            </ul>\r\n                                                            <div className=\"text-xs uppercase tracking-wide text-gray-400\">Main</div>\r\n                                                            <ul className=\"text-sm mb-2 space-y-0.5\">\r\n                                                                {d.main?.rows?.length === 0 && <li className=\"text-gray-500\">—</li>}\r\n                                                                {d.main?.rows?.map((r, i) => (\r\n                                                                    <li key={i} className=\"tabular-nums text-gray-300\">{r.pct}% × {r.reps}{r.amrap ? '+' : ''} → <span className=\"text-white\">{r.weight}</span> {state?.units || 'lbs'}{r.amrap && <span className=\"ml-2 text-[10px] px-1 py-0.5 border border-red-500/40 rounded text-red-300\">AMRAP</span>}</li>\r\n                                                                ))}\r\n                                                            </ul>\r\n                                                            {Array.isArray(d.assistance) && d.assistance.length > 0 && (\r\n                                                                <div>\r\n                                                                    <div className=\"text-xs uppercase tracking-wide text-gray-400\">Assistance</div>\r\n                                                                    <ul className=\"text-sm space-y-0.5\">\r\n                                                                        {d.assistance.map((a, ai) => (\r\n                                                                            <li key={ai} className=\"text-gray-300\">{a.name || a.id} — {a.sets ?? '?'}×{a.reps ?? '?'}</li>\r\n                                                                        ))}\r\n                                                                    </ul>\r\n                                                                </div>\r\n                                                            )}\r\n                                                            {d.conditioning && (\r\n                                                                <div className=\"mt-2\">\r\n                                                                    <div className=\"text-xs uppercase tracking-wide text-gray-400\">Conditioning</div>\r\n                                                                    <div className=\"text-xs text-gray-300\">\r\n                                                                        {d.conditioning.type} {d.conditioning.minutes ? `${d.conditioning.minutes}m` : ''}{d.conditioning.intensity ? ` · ${d.conditioning.intensity}` : ''}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    ))}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                }\r\n                                // 1-day live preview (globally disabled unless VITE_SHOW_STEP_PREVIEW is truthy)\r\n                                if (preview?.mode === '1day_live') {\r\n                                    if (!import.meta.env?.VITE_SHOW_STEP_PREVIEW) {\r\n                                        return null; // short-circuits the shared 1-day panel everywhere\r\n                                    }\r\n                                    if (Array.isArray(preview?.days) && preview.days.length === 1) {\r\n                                        const d = preview.days[0];\r\n                                        return (\r\n                                            <div className=\"space-y-6 mt-10\">\r\n                                                <div className=\"rounded-2xl border border-gray-700 bg-gray-800/40 p-4\">\r\n                                                    <div className=\"text-lg font-semibold mb-3 text-white\">Week 1 (1-Day Preview)</div>\r\n                                                    <div className=\"grid md:grid-cols-1 gap-4\">\r\n                                                        <div className=\"rounded-xl border border-gray-700/60 bg-gray-900/40 p-3\">\r\n                                                            <div className=\"text-xs uppercase tracking-wide text-gray-400 mb-2\">Day 1</div>\r\n                                                            <div className=\"font-medium capitalize text-gray-200 mb-2\">{d.lift}</div>\r\n                                                            <div className=\"text-xs uppercase tracking-wide text-gray-400\">Warm-up</div>\r\n                                                            <ul className=\"text-sm mb-2 space-y-0.5\">\r\n                                                                {d.warmups?.length === 0 && <li className=\"text-gray-500\">—</li>}\r\n                                                                {d.warmups?.map((r, i) => (\r\n                                                                    <li key={i} className=\"tabular-nums text-gray-300\">{r.pct}% × {r.reps} → <span className=\"text-white\">{r.weight}</span> {state?.units || 'lbs'}</li>\r\n                                                                ))}\r\n                                                            </ul>\r\n                                                            <div className=\"text-xs uppercase tracking-wide text-gray-400\">Main</div>\r\n                                                            <ul className=\"text-sm mb-2 space-y-0.5\">\r\n                                                                {d.main?.rows?.length === 0 && <li className=\"text-gray-500\">—</li>}\r\n                                                                {d.main?.rows?.map((r, i) => (\r\n                                                                    <li key={i} className=\"tabular-nums text-gray-300\">{r.pct}% × {r.reps}{r.amrap ? '+' : ''} → <span className=\"text-white\">{r.weight}</span> {state?.units || 'lbs'}{r.amrap && <span className=\"ml-2 text-[10px] px-1 py-0.5 border border-red-500/40 rounded text-red-300\">AMRAP</span>}</li>\r\n                                                                ))}\r\n                                                            </ul>\r\n                                                            {Array.isArray(d.assistance) && d.assistance.length > 0 && (\r\n                                                                <div>\r\n                                                                    <div className=\"text-xs uppercase tracking-wide text-gray-400\">Assistance</div>\r\n                                                                    <ul className=\"text-sm space-y-0.5\">\r\n                                                                        {d.assistance.map((a, ai) => (\r\n                                                                            <li key={ai} className=\"text-gray-300\">{a.name || a.id} — {a.sets ?? '?'}×{a.reps ?? '?'}</li>\r\n                                                                        ))}\r\n                                                                    </ul>\r\n                                                                </div>\r\n                                                            )}\r\n                                                            {d.conditioning && (\r\n                                                                <div className=\"mt-2\">\r\n                                                                    <div className=\"text-xs uppercase tracking-wide text-gray-400\">Conditioning</div>\r\n                                                                    <div className=\"text-xs text-gray-300\">\r\n                                                                        {d.conditioning.type} {d.conditioning.minutes ? `${d.conditioning.minutes}m` : ''}{d.conditioning.intensity ? ` · ${d.conditioning.intensity}` : ''}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n                                }\r\n                                return null;\r\n                            })()}\r\n                            {/* NOTE: If a day in schedulePreview has { combineWith }, future UI can render two main lifts in one session for deload. */}\r\n\r\n                            {/* Week 3 AMRAP capture + progression trigger */}\r\n                            {stepIndex === 3 && (typeof import.meta !== 'undefined' && import.meta.env?.VITE_ENABLE_PROGRESS === 'true') && (\r\n                                <div className=\"mt-10 rounded-2xl border border-gray-700 bg-gray-800/40 p-4\">\r\n                                    <div className=\"flex items-start justify-between flex-wrap gap-4 mb-4\">\r\n                                        <div>\r\n                                            <h3 className=\"text-lg font-semibold text-white\">Week 3 AMRAP Results</h3>\r\n                                            <p className=\"text-xs text-gray-400 mt-1 max-w-xl\">Enter the reps you achieved on the final AMRAP set of Week 3 for each main lift. Leave blank if not performed. Progression will increase TMs only for lifts that met or exceeded the baseline (auto-pass when FORCE_PASS env flag set).</p>\r\n                                        </div>\r\n                                        <div className=\"text-xs text-gray-500\">Cycle: <span className=\"text-gray-300\">{state?.cycle || 1}</span></div>\r\n                                    </div>\r\n                                    <div className=\"grid sm:grid-cols-2 md:grid-cols-4 gap-4\">\r\n                                        {LIFTS.map(lift => {\r\n                                            const val = state?.amrapWk3?.[lift] ?? '';\r\n                                            return (\r\n                                                <div key={lift} className=\"flex flex-col\">\r\n                                                    <label className=\"text-xs uppercase tracking-wide text-gray-400 mb-1\">{lift}</label>\r\n                                                    <input\r\n                                                        type=\"number\"\r\n                                                        min={0}\r\n                                                        value={val === null ? '' : val}\r\n                                                        onChange={e => {\r\n                                                            const raw = e.target.value;\r\n                                                            const num = raw === '' ? null : Math.max(0, parseInt(raw, 10) || 0);\r\n                                                            dispatch({ type: 'SET_AMRAP_WK3', payload: { [lift]: num } });\r\n                                                        }}\r\n                                                        className=\"bg-gray-900/60 border border-gray-700 focus:border-red-500 focus:outline-none rounded px-2 py-1 text-sm text-gray-200\"\r\n                                                        placeholder=\"Reps\"\r\n                                                    />\r\n                                                </div>\r\n                                            );\r\n                                        })}\r\n                                    </div>\r\n                                    <div className=\"flex items-center justify-end mt-6 space-x-4\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={() => {\r\n                                                // Trigger progression using captured reps\r\n                                                onAdvanceCycle(state?.amrapWk3 || {});\r\n                                                // Persist reps into context (already there) – optionally could clear after\r\n                                            }}\r\n                                            className=\"px-5 py-2 rounded-lg border font-medium transition-colors border-blue-500 bg-blue-600/10 text-blue-300 hover:bg-blue-600/20\"\r\n                                        >\r\n                                            Advance Cycle\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Navigation Buttons */}\r\n                            <div className=\"flex items-center justify-between pt-6 border-t border-gray-700\">\r\n                                <ToggleButton\r\n                                    on={false}\r\n                                    disabled={!canGoBack}\r\n                                    onClick={handleBack}\r\n                                    className={`text-sm px-5 ${!canGoBack ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                                >← Back</ToggleButton>\r\n\r\n                                <div className=\"flex items-center space-x-2 text-sm text-gray-400\">\r\n                                    <span>Step {stepIndex + 1} of {STEPS.length}</span>\r\n                                </div>\r\n\r\n                                {stepIndex === 0 && (\r\n                                    <div className=\"flex flex-col items-end gap-2 relative\">\r\n                                        <ToggleButton\r\n                                            on={canGoNext}\r\n                                            disabled={!canGoNext}\r\n                                            onClick={handleNext}\r\n                                            className={`flex items-center gap-2 text-sm px-5 ${!canGoNext ? 'opacity-50' : ''}`}\r\n                                        >Next <ChevronRight className=\"w-4 h-4\" /></ToggleButton>\r\n                                        {!canGoNext && step1Error && (\r\n                                            <div className=\"flex items-start gap-2 text-xs max-w-xs p-2 rounded-md border border-amber-600/40 bg-amber-900/30 text-amber-300 shadow-lg animate-fade-in\">\r\n                                                <AlertTriangle className=\"w-4 h-4 flex-shrink-0 mt-0.5\" />\r\n                                                <span>{step1Error}</span>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                )}\r\n                                {(stepIndex === 1 || stepIndex === 2) && (\r\n                                    <div className=\"flex flex-col items-end gap-2\">\r\n                                        {(() => {\r\n                                            const validation = getStepWarnings(stepIndex);\r\n                                            const canProceed = validation.errors.length === 0;\r\n\r\n                                            return (\r\n                                                <ToggleButton\r\n                                                    on={canProceed}\r\n                                                    disabled={!canProceed}\r\n                                                    onClick={handleNext}\r\n                                                    className={`flex items-center gap-2 text-sm px-5 ${!canProceed ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                                                >\r\n                                                    {stepIndex === 1 ? 'Continue' : 'Review & Export'} <ChevronRight className=\"w-4 h-4\" />\r\n                                                </ToggleButton>\r\n                                            );\r\n                                        })()}\r\n                                    </div>\r\n                                )}\r\n                                {stepIndex === 3 && (\r\n                                    <ToggleButton\r\n                                        on={stepValidation.review}\r\n                                        disabled={!stepValidation.review}\r\n                                        onClick={() => {\r\n                                            setStepIndex(4);\r\n                                            updateStepUrl(4);\r\n                                        }}\r\n                                        className={`flex items-center gap-2 text-sm px-5 ${!stepValidation.review ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                                    >Week 4 Complete → Progress TMs <ChevronRight className=\"w-4 h-4\" /></ToggleButton>\r\n                                )}\r\n                                {stepIndex === 4 && (\r\n                                    <ToggleButton\r\n                                        on={true}\r\n                                        disabled={false}\r\n                                        onClick={handleStartCycle}\r\n                                        className={`flex items-center gap-2 text-sm px-5`}\r\n                                    >Start Next Cycle <ChevronRight className=\"w-4 h-4\" /></ToggleButton>\r\n                                )}\r\n                                {!(stepIndex === 0 || stepIndex === 2 || stepIndex === 3) && <div className=\"w-[96px]\" />}\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function ProgramWizard531V2() { return <WizardShell />; }\r\n\r\n// Inline lightweight progression step component (kept at bottom to avoid new file churn)\r\nfunction ProgressionStep({ state, onAdvance }) {\r\n    const [include, setInclude] = useState({ squat: true, bench: true, deadlift: true, press: true });\r\n    const [applied, setApplied] = useState(false);\r\n    const lifts = state?.lifts || {};\r\n    const amrap = state?.amrapWk3 || {};\r\n    const units = state?.units || 'lbs';\r\n    const plannedIncrements = {\r\n        squat: units === 'kg' ? 5 : 10,\r\n        deadlift: units === 'kg' ? 5 : 10,\r\n        bench: units === 'kg' ? 2.5 : 5,\r\n        press: units === 'kg' ? 2.5 : 5\r\n    };\r\n    return (\r\n        <div className=\"space-y-8\">\r\n            <div className=\"bg-gray-800/60 border border-gray-700 rounded-lg p-5\">\r\n                <h2 className=\"text-lg font-semibold text-white\">Advance Training Maxes</h2>\r\n                <p className=\"text-sm text-gray-400 mt-1\">Per Wendler: +{units === 'kg' ? '2.5 kg (upper) / 5 kg (lower)' : '5 lb (upper) / 10 lb (lower)'} to each Training Max after a full 4-week cycle (Weeks 1–3 main sets + Week 4 deload). Uncheck any lift you want to hold this cycle.</p>\r\n                <div className=\"mt-4 grid sm:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                    {Object.entries(lifts).map(([k, v]) => {\r\n                        const current = v?.tm || 0;\r\n                        const inc = plannedIncrements[k] || 0;\r\n                        const next = current + inc;\r\n                        const passed = amrap[k] == null || amrap[k] >= (state?.amrapMinWk3 || 1);\r\n                        return (\r\n                            <label key={k} className={`flex flex-col rounded-lg border p-3 bg-gray-900/60 cursor-pointer ${include[k] ? 'border-red-500/50' : 'border-gray-700'}`}>\\n+                                <div className=\"flex items-center justify-between mb-2\">\r\n                                <span className=\"text-sm font-semibold text-white capitalize\">{k}</span>\r\n                                <input type=\"checkbox\" checked={include[k]} onChange={e => setInclude(prev => ({ ...prev, [k]: e.target.checked }))} />\r\n                            </div>\r\n                                <div className=\"text-xs text-gray-400 flex flex-col gap-0.5 font-mono\">\r\n                                    <span>TM: <span className=\"text-gray-200\">{current || '—'}</span></span>\r\n                                    <span>Inc: +{inc}</span>\r\n                                    <span className=\"text-gray-500\">Next: {include[k] ? next : current}</span>\r\n                                    <span className={`mt-1 ${passed ? 'text-green-400' : 'text-yellow-500'}`}>{passed ? 'AMRAP pass' : 'No data'}</span>\r\n                                </div>\r\n                            </label>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className=\"mt-6 flex items-center gap-3\">\r\n                    <button\r\n                        disabled={applied}\r\n                        onClick={() => { if (!applied) { onAdvance(include); setApplied(true); } }}\r\n                        className={`px-5 py-2 rounded-lg border font-medium transition-colors ${applied ? 'border-gray-600 text-gray-500' : 'border-green-500 bg-green-600/10 text-green-300 hover:bg-green-600/20'}`}\r\n                    >{applied ? 'Applied' : 'Apply Progression'}</button>\r\n                    {applied && <span className=\"text-xs text-gray-400\">Progression applied. Start next cycle when ready.</span>}\r\n                </div>\r\n            </div>\r\n            <div className=\"bg-gray-800/40 border border-gray-700 rounded-lg p-4 text-xs text-gray-400 leading-relaxed\">\r\n                <p><strong className=\"text-gray-300\">Note:</strong> If you stalled on a lift (missed Week 3 top set by a wide margin), you can uncheck it and keep the same TM next cycle. Adjusting only one lift at a time is common.</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"names":["roundToIncrement","value","increment","mode","inc","roundingMode","getWeekScheme","option","weekIndex","legacy","percentMatrix","_a","buildMainSetsForLift","tm","roundingIncrement","units","scheme","week","isDeload","percents","amrapOnLast","sets","p","i","raw","weight","baseReps","reps","buildWarmupSets","includeWarmups","warmupScheme","perc","len","out","ToggleButton","on","className","children","props","jsx","extractSupplementalFromPack","pack","templateId","tpl","t","eff","extractWarmups","extractWeekByLabel","label","norm","s","target","w","applyDecisionsFromPack","answers","days","a","_b","tmm","mapTemplateAssistance","effectsAssistance","slots","slot","idx","baseName","normalizeAssistanceName","map","c","validateAssistanceVolume","items","issues","it","rangeMatch","min","totalMin","total","LIFTS","WEEK_LABELS","buildSchedule","liftOrder","state","weeks","wIdx","lift","P","D","B","S","CardioTemplates","pickCardio","cardioId","d","SPLIT_4DAY_A","SPLIT_4DAY_B","makeDay","weekLabel","roundingPref","tmRaw","computeWarmups","computeMainSets","computeSupplemental","computeAssistance","day","id","_d","_c","buildSchedule4Day","split","buildSchedule2Day","rotationIndex","baseIdx","lifts","buildSchedule1Day","roundLoad","x","rounding","step","tmFor","tms","computeWarmupsFromPack","wu","rnd","pct","computeMainFromPack","wk","main","rows","amrap","amrapLast","computeBBBFromConfig","supplemental","load","estimateTonnage","acc","r","sumRepsByBlock","b","n","block","roundTo","v","incFor","upper","passedAmrapWk3","nextTM","passed","base","next","computeNextTMs","amrapWk3","advanceCycle","prevState","l","nextTms","cycleNum","k","toUiDays","schedulePreview","calculateE1RM","calculateTM","baseWeight","tmPct","validateTM","e1rm","ratio","LIFT_LABELS","Step1Fundamentals","onValidChange","flashToken","missing","dispatch","useProgramV2","localState","setLocalState","useState","autoSaved","setAutoSaved","autoSaveTimerRef","useRef","tmProgress","useMemo","completed","liftKey","oneRM","percent","useEffect","timeoutId","liftData","isValid","hasOneRM","hasRepTest","prevValidRef","updateLocalState","useCallback","updates","prev","updateLift","copyRepTestToAll","sourceLift","source","renderLiftRow","hasOverride","suggestedTM","finalTM","validation","needsAttention","methods","setActiveMethod","m","isActive","methodCompleted","jsxs","CheckCircle2","Fragment","e","unit","Info","AlertTriangle","TIME","TEMPLATE_SPECS","TEMPLATE_KEYS","getTemplateSpec","key","useFlatCatalog","ASSISTANCE_CATALOG","cat","arr","item","AssistanceCatalogPicker","equipment","onPick","onClose","limitIds","keepOpen","q","setQ","categoryFilter","setCategoryFilter","flat","categories","filtered","byBlock","byCategory","exerciseBlock","exerciseName","byEquip","tag","byQuery","note","EXERCISE_NOTES","Step2TemplateOrCustom","onChoose","onAutoNext","ctx","selectedTemplate","setSelectedTemplate","expandedTemplate","setExpandedTemplate","isLoading","setIsLoading","errors","setErrors","templateCards","spec","logTemplate","stage","payload","handleSelectTemplate","validateTemplateRequirements","templateKey","currentState","missingTMs","bbbVariant","setBbbVariant","bbbPairing","setBbbPairing","bbbStartPercent","setBbbStartPercent","bbbProgressTo","setBbbProgressTo","assistEdit","setAssistEdit","openPicker","setOpenPicker","getBBBAssistanceDefaults","initAssistanceForTemplate","assistancePreview","mapped","bbbDefaults","ap","liftDefaults","limit","normalizeAssistance","updateAssist","patch","addAssistRow","defaultSets","removeAssistRow","applyTemplate","templateKeyOverride","opts","preset","getTemplatePreset","plan","st","error","chooseCustom","mapBlockAlias","repSchemeDescriptor","variant","row","blockAlias","isMainLiftSupplemental","blk","card","active","expanded","expandedContent","exampleLift","tmBench","_e","loadingOption","_f","warmups","editing","configComplete","dynamicName","supp","isBBBVariant","isJackShit","suppPct","_g","variantStructure","variantRecovery","jackShitStructure","X","_h","ex","liftName","showAdd","ensureRow","recommended","usedPatterns","needed","matches","warn","warnMsg","empty","badge","badgeClasses","orderedBadges","_i","feature","CORE_LIFTS","THREE_DAY_ROTATION","DAY_LABELS","parseCsvNums","str","Step3DesignCustom","configErrors","setConfigErrors","sched","frequency","setFrequency","order","setOrder","setIncludeWarmups","warmPctCsv","setWarmPctCsv","warmRepsCsv","setWarmRepsCsv","rotationWeek","setRotationWeek","deadliftRepStyle","setDeadliftRepStyle","activeLift","setActiveLift","handleFrequencyChange","newFreq","syncedTemplateRef","schedOrder","schedFreq","displayOrder","lower","programmingApproach","setProgrammingApproach","leaderAnchorPattern","setLeaderAnchorPattern","suppStrategy","setSuppStrategy","suppPairing","setSuppPairing","setSuppPct","assistMode","setAssistMode","initialCustomPlan","customPlan","setCustomPlan","showDayPicker","setShowDayPicker","swapTarget","setSwapTarget","BLOCKS","blockFilter","setBlockFilter","ALL_EQUIP","equip","setEquip","toggleEquip","desired","updateOrder","val","o","oIncludesDeadliftExceptIdx","changeIdx","newVal","setCanonical","resetOrder","addCustomRow","dayIdx","list","updateCustomRow","dayLift","rowIdx","removeCustomRow","clone","comprehensiveValidation","warnings","warmPercentages","warmReps","scheduleOk","warmupsOk","supplementalOk","assistanceOk","programmingOk","conditioningOk","scheduleData","setSchedule","setSupplemental","setAssistance","warning","f","isStandard","isMinimal","experienceLevel","recoveryLevel","level","pattern","recommendations","rec","conditioningApproach","_j","_l","_k","_n","_m","_p","_o","_r","_q","strategy","isSelected","_t","_s","BarChart3","format","_v","_u","_x","_w","impact","tally","dayRows","parseReps","curVol","newVol","dailyVolume","sum","okEquip","okBlock","weeklyVolume","high","AlertCircle","_y","selectedProtocols","supplementalType","isDisabled","newProtocols","_A","_z","AssistanceRow","onChange","onSwap","onDelete","onSets","onReps","daysPerWeek","LIFT_KEY_MAP","DISPLAY_LIFT_NAMES","deriveEffectiveConfig","merged","cfg","TableBlock","title","useSafeNavigate","useNavigate","Step4ReviewExport","onReadyChange","starting","setStarting","showTemplateExplainer","setShowTemplateExplainer","showChangeTemplate","setShowChangeTemplate","pendingTemplate","setPendingTemplate","confirmSwitch","setConfirmSwitch","setWeekIndex","exportError","setExportError","copied","setCopied","setWarnings","effective","scheduleDesign","frequencyRaw","normalized","trainingMaxes","assistance","assistCustom","conditioning","plannedConditioning","planConditioningFromState","displaySched","messages","freqNum","allowed","mapLiftDisplayName","liftDisplay","getTMForDisplayLift","display","getBbbPairLift","mainDisplay","getBbbExerciseName","weeksData","skipDeload","wi","daysData","displayLift","supplementalBlock","bbbTargetLiftDisplay","bbbTm","bbbWeight","assistanceComputed","tplKey","conditioningBlock","weekday","idxForWeekday","match","pc","orderArr","freq","isBBBSame","templateVariantName","exportJson","assistancePack","CATALOG_VERSION","normalizeConditioningModalities","handleDownload","blob","url","handleCopy","handlePrint","previewWeek","dayMetrics","mainReps","mainTonnage","suppReps","suppTonnage","suppPctWarning","cfgPct","assistReps","y","totalReps","totalTonnage","blockWarnings","_","showAssistEditor","setShowAssistEditor","BookOpen","warmupRows","mainRows","InlinePerDayCustomEditor","InlineCustomAssistanceEditor","Download","Copy","Printer","TemplateChangeOverlay","open","currentKey","pendingKey","setPendingKey","tab","setTab","specs","applyTemplateKey","activeDay","setActiveDay","dayItems","updateDay","addItem","removeItem","swapItem","setPicker","resetDay","picker","applyCatalog","retainedVol","suggestedVol","after","computeVolumeInfo","byCat","vol","overCat","dayIndex","dayId","update","itemsNext","defaults","addExercise","copy","pick","estimateOneRM","calculateProgressionRecommendation","currentTM","recentPerformance","userProfile","experience","size","postReset","standardInc","conservativeInc","recommendedInc","reason","trend","stallRisk","analyzePerformanceHistory","history","performances","cycle","recent","missedMinimum","decliningPattern","calculateResetRecommendation","estimatedMax","recommendedTM","Step5ProgressionSmart","onAdvance","include","setInclude","applied","setApplied","progressionMode","setProgressionMode","setUserProfile","showAnalytics","setShowAnalytics","currentCycle","liftAnalytics","analytics","recentAmrap","performance","week3Weight","progression","resetInfo","finalIncrements","increments","handleAdvance","customState","getTrendIcon","TrendingUp","TrendingDown","getRiskColor","risk","Calculator","Zap","Target","Clock","CheckCircle","viteFlag","__vite_import_meta_env__","legacyFlag","define_process_env_default","envFlag","USE_METHOD_PACKS","isStep1Complete","unitsOk","roundingOk","tmPctOk","tmsSource","tmsOk","allowStep1Next","STEPS","WizardShell","stepNumber","useParams","navigate","getStepIndexFromUrl","stepIndex","setStepIndex","stepValidation","setStepValidation","step1Error","setStep1Error","step1Missing","setStep1Missing","step1FlashToken","setStep1FlashToken","packRef","urlStep","currentStepData","updateStepUrl","newStepIndex","getStepWarnings","resetStep","stepName","cancelled","maybeLoadPack","loadPack531BBB","decision","currentFreq","nextFreq","sched4","sup","selectedTemplateId","currentWU","nextWU","currentWeekLabel","existing","asSimple","splitVal","humanLiftName","oppositeOf","handleStartCycle","schedule","flowMode","conditioningState","defaultDays","weekdayIndexMap","weekdayNames","roundingConfig","daysOut","supplementalOut","pairing","bbbLiftKey","assistanceOut","markComplete","currentStep","canGoNext","canGoBack","handleStepValidation","stepId","handleNext","nextStep","liftsMissing","msg","handleBack","prevStep","handleStepClick","index","onAdvanceCycle","includeMap","repsMap","nextState","prevTm","tmVal","onFundamentalsValidChange","renderStepContent","code","ok","isCurrent","isCompleted","isPast","isAccessible","RotateCcw","preview","si","li","bbb","ai","di","num","ChevronRight","canProceed","ProgramWizard531V2"],"mappings":"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"}