{"version":3,"file":"scheduleHelpers-Dade5T3Q.js","sources":["../../src/lib/fiveThreeOne/percentTables.js","../../src/lib/fiveThreeOne/scheduleHelpers.js"],"sourcesContent":["// src/lib/fiveThreeOne/percentTables.js\r\n\r\n// Warm-ups used every day before main work sets\r\nexport const WARMUP_SET_PCTS = [40, 50, 60]; // of TM\r\n\r\n// Two official loading options (from Wendler)\r\nexport const LOADING_TABLES = {\r\n    1: {\r\n        1: [{ pct: 65, reps: '5' }, { pct: 75, reps: '5' }, { pct: 85, reps: '5+' }],\r\n        2: [{ pct: 70, reps: '3' }, { pct: 80, reps: '3' }, { pct: 90, reps: '3+' }],\r\n        3: [{ pct: 75, reps: '5' }, { pct: 85, reps: '3' }, { pct: 95, reps: '1+' }],\r\n        4: [{ pct: 40, reps: '5' }, { pct: 50, reps: '5' }, { pct: 60, reps: '5' }]\r\n    },\r\n    2: {\r\n        1: [{ pct: 75, reps: '5' }, { pct: 80, reps: '5' }, { pct: 85, reps: '5+' }],\r\n        2: [{ pct: 80, reps: '3' }, { pct: 85, reps: '3' }, { pct: 90, reps: '3+' }],\r\n        3: [{ pct: 85, reps: '5' }, { pct: 90, reps: '3' }, { pct: 95, reps: '1+' }],\r\n        4: [{ pct: 40, reps: '5' }, { pct: 50, reps: '5' }, { pct: 60, reps: '5' }]\r\n    }\r\n};\r\n\r\nexport const ROUND_TO = (inc = 5) => (w) => Math.round(w / inc) * inc;\r\n\r\n/** Build warmups (40/50/60% x 5/5/3) for a given TM */\r\nexport function buildWarmups(tm, include = true, roundInc = 5) {\r\n    if (!include) return [];\r\n    const round = ROUND_TO(roundInc);\r\n    const reps = [5, 5, 3];\r\n    return WARMUP_SET_PCTS.map((pct, i) => ({\r\n        type: 'warmup',\r\n        pct,\r\n        weight: round(tm * pct / 100),\r\n        reps: String(reps[i])\r\n    }));\r\n}\r\n\r\n/** Build main 3 sets for week & loading option */\r\nexport function buildMainSets(tm, loadingOption = 1, week = 1, roundInc = 5) {\r\n    const round = ROUND_TO(roundInc);\r\n    const rows = LOADING_TABLES[String(loadingOption)]?.[week] || [];\r\n    return rows.map(r => ({\r\n        type: 'main',\r\n        pct: r.pct,\r\n        weight: round(tm * r.pct / 100),\r\n        reps: r.reps\r\n    }));\r\n}\r\n","// src/lib/fiveThreeOne/scheduleHelpers.js\r\n\r\n// 3-letter day keys for compact UI & printable sheets\r\nexport const DAYS = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\r\n\r\n/**\r\n * Derive a mapping of training days -> lift keys.\r\n * Priority:\r\n * 1) state.schedule.daysMapping (explicit)\r\n * 2) state.schedule.pattern (string like \"Mon/Tue/Thu/Fri\") + state.schedule.liftOrder\r\n * 3) fallback 4-day default: Mon/Tue/Thu/Fri with Press/Deadlift/Bench/Squat\r\n */\r\nexport function deriveLiftDayMap(state = {}) {\r\n    const explicit = state?.schedule?.daysMapping;\r\n    if (explicit && typeof explicit === 'object') return explicit;\r\n\r\n    const order = state?.schedule?.liftOrder || ['press', 'deadlift', 'bench', 'squat'];\r\n    const pattern = state?.schedule?.pattern || 'Mon/Tue/Thu/Fri';\r\n    const dayList = pattern.split('/').map(s => s.trim()).filter(Boolean);\r\n\r\n    // sanitize day tokens into known keys (Mon..Sun)\r\n    const normalize = (d) => {\r\n        const m = d.toLowerCase();\r\n        if (m.startsWith('mon')) return 'Mon';\r\n        if (m.startsWith('tue') || m.startsWith('tues')) return 'Tue';\r\n        if (m.startsWith('wed')) return 'Wed';\r\n        if (m.startsWith('thu') || m.startsWith('thur') || m.startsWith('thurs')) return 'Thu';\r\n        if (m.startsWith('fri')) return 'Fri';\r\n        if (m.startsWith('sat')) return 'Sat';\r\n        if (m.startsWith('sun')) return 'Sun';\r\n        return null;\r\n    };\r\n\r\n    const dayKeys = dayList.map(normalize).filter(Boolean);\r\n    const map = {};\r\n    for (let i = 0; i < Math.min(dayKeys.length, order.length); i++) {\r\n        map[dayKeys[i]] = order[i];\r\n    }\r\n\r\n    // If nothing usable, fallback to classic 4-day split\r\n    if (!Object.keys(map).length) {\r\n        return { Mon: 'press', Tue: 'deadlift', Thu: 'bench', Fri: 'squat' };\r\n    }\r\n    return map;\r\n}\r\n"],"names":["WARMUP_SET_PCTS","LOADING_TABLES","ROUND_TO","inc","w","buildWarmups","tm","include","roundInc","round","reps","pct","i","buildMainSets","loadingOption","week","_a","r","DAYS","deriveLiftDayMap","state","_b","_c","explicit","order","dayList","normalize","d","m","dayKeys","map"],"mappings":"AAGO,MAAMA,EAAkB,CAAC,GAAI,GAAI,EAAE,EAG7BC,EAAiB,CAC1B,EAAG,CACC,EAAG,CAAC,CAAE,IAAK,GAAI,KAAM,GAAG,EAAI,CAAE,IAAK,GAAI,KAAM,GAAG,EAAI,CAAE,IAAK,GAAI,KAAM,KAAM,EAC3E,EAAG,CAAC,CAAE,IAAK,GAAI,KAAM,GAAG,EAAI,CAAE,IAAK,GAAI,KAAM,GAAG,EAAI,CAAE,IAAK,GAAI,KAAM,KAAM,EAC3E,EAAG,CAAC,CAAE,IAAK,GAAI,KAAM,GAAG,EAAI,CAAE,IAAK,GAAI,KAAM,GAAG,EAAI,CAAE,IAAK,GAAI,KAAM,KAAM,EAC3E,EAAG,CAAC,CAAE,IAAK,GAAI,KAAM,GAAG,EAAI,CAAE,IAAK,GAAI,KAAM,GAAG,EAAI,CAAE,IAAK,GAAI,KAAM,IAAK,CAClF,EACI,EAAG,CACC,EAAG,CAAC,CAAE,IAAK,GAAI,KAAM,GAAG,EAAI,CAAE,IAAK,GAAI,KAAM,GAAG,EAAI,CAAE,IAAK,GAAI,KAAM,KAAM,EAC3E,EAAG,CAAC,CAAE,IAAK,GAAI,KAAM,GAAG,EAAI,CAAE,IAAK,GAAI,KAAM,GAAG,EAAI,CAAE,IAAK,GAAI,KAAM,KAAM,EAC3E,EAAG,CAAC,CAAE,IAAK,GAAI,KAAM,GAAG,EAAI,CAAE,IAAK,GAAI,KAAM,GAAG,EAAI,CAAE,IAAK,GAAI,KAAM,KAAM,EAC3E,EAAG,CAAC,CAAE,IAAK,GAAI,KAAM,GAAG,EAAI,CAAE,IAAK,GAAI,KAAM,GAAG,EAAI,CAAE,IAAK,GAAI,KAAM,IAAK,CAClF,CACA,EAEaC,EAAW,CAACC,EAAM,IAAOC,GAAM,KAAK,MAAMA,EAAID,CAAG,EAAIA,EAG3D,SAASE,EAAaC,EAAIC,EAAU,GAAMC,EAAW,EAAG,CAC3D,GAAI,CAACD,EAAS,MAAO,GACrB,MAAME,EAAQP,EAASM,CAAQ,EACzBE,EAAO,CAAC,EAAG,EAAG,CAAC,EACrB,OAAOV,EAAgB,IAAI,CAACW,EAAKC,KAAO,CACpC,KAAM,SACN,IAAAD,EACA,OAAQF,EAAMH,EAAKK,EAAM,GAAG,EAC5B,KAAM,OAAOD,EAAKE,CAAC,CAAC,CAC5B,EAAM,CACN,CAGO,SAASC,EAAcP,EAAIQ,EAAgB,EAAGC,EAAO,EAAGP,EAAW,EAAG,CArC7E,IAAAQ,EAsCI,MAAMP,EAAQP,EAASM,CAAQ,EAE/B,SADaQ,EAAAf,EAAe,OAAOa,CAAa,CAAC,IAApC,YAAAE,EAAwCD,KAAS,IAClD,IAAIE,IAAM,CAClB,KAAM,OACN,IAAKA,EAAE,IACP,OAAQR,EAAMH,EAAKW,EAAE,IAAM,GAAG,EAC9B,KAAMA,EAAE,IAChB,EAAM,CACN,CC3CY,MAACC,EAAO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAK,EAS7D,SAASC,EAAiBC,EAAQ,GAAI,CDZ7C,IAAAJ,EAAAK,EAAAC,ECaI,MAAMC,GAAWP,EAAAI,GAAA,YAAAA,EAAO,WAAP,YAAAJ,EAAiB,YAClC,GAAIO,GAAY,OAAOA,GAAa,SAAU,OAAOA,EAErD,MAAMC,IAAQH,EAAAD,GAAA,YAAAA,EAAO,WAAP,YAAAC,EAAiB,YAAa,CAAC,QAAS,WAAY,QAAS,OAAO,EAE5EI,KADUH,EAAAF,GAAA,YAAAA,EAAO,WAAP,YAAAE,EAAiB,UAAW,mBACpB,MAAM,GAAG,EAAE,IAAI,GAAK,EAAE,KAAI,CAAE,EAAE,OAAO,OAAO,EAG9DI,EAAaC,GAAM,CACrB,MAAMC,EAAID,EAAE,cACZ,OAAIC,EAAE,WAAW,KAAK,EAAU,MAC5BA,EAAE,WAAW,KAAK,GAAKA,EAAE,WAAW,MAAM,EAAU,MACpDA,EAAE,WAAW,KAAK,EAAU,MAC5BA,EAAE,WAAW,KAAK,GAAKA,EAAE,WAAW,MAAM,GAAKA,EAAE,WAAW,OAAO,EAAU,MAC7EA,EAAE,WAAW,KAAK,EAAU,MAC5BA,EAAE,WAAW,KAAK,EAAU,MAC5BA,EAAE,WAAW,KAAK,EAAU,MACzB,IACX,EAEMC,EAAUJ,EAAQ,IAAIC,CAAS,EAAE,OAAO,OAAO,EAC/CI,EAAM,CAAA,EACZ,QAASlB,EAAI,EAAGA,EAAI,KAAK,IAAIiB,EAAQ,OAAQL,EAAM,MAAM,EAAGZ,IACxDkB,EAAID,EAAQjB,CAAC,CAAC,EAAIY,EAAMZ,CAAC,EAI7B,OAAK,OAAO,KAAKkB,CAAG,EAAE,OAGfA,EAFI,CAAE,IAAK,QAAS,IAAK,WAAY,IAAK,QAAS,IAAK,QAGnE"}