{"version":3,"file":"History-DEmb73Qx.js","sources":["../../src/pages/History.jsx"],"sourcesContent":["// src/pages/History.jsx\r\nimport React, { useMemo, useState } from 'react';\r\nimport { Trophy, History as HistoryIcon, Filter, Download, Trash2, ChevronDown, CalendarClock, Activity } from 'lucide-react';\r\nimport { getHistory, clearHistory } from '../lib/fiveThreeOne/history';\r\nimport { getBestE1RMPerLift, getRepRecords, liftKey, getAmrapFromSession } from '../lib/fiveThreeOne/pr';\r\nimport { getActiveCycle } from '../lib/fiveThreeOne/persistCycle';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Card({ title, children, right }) {\r\n    return (\r\n        <div className=\"bg-gray-900/60 border border-gray-700 rounded p-4\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n                <div className=\"text-white font-medium\">{title}</div>\r\n                <div>{right}</div>\r\n            </div>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Stat({ label, value }) {\r\n    return (\r\n        <div className=\"flex flex-col\">\r\n            <div className=\"text-gray-400 text-xs\">{label}</div>\r\n            <div className=\"text-white font-semibold\">{value}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Badge({ children }) {\r\n    return (\r\n        <span className=\"inline-flex items-center px-2 py-0.5 rounded bg-red-600/20 text-red-300 border border-red-600/40 text-xs\">\r\n            {children}\r\n        </span>\r\n    );\r\n}\r\n\r\n// Quick CSV from history\r\nfunction toCSV(rows) {\r\n    const headers = [\r\n        'when', 'week', 'day', 'lift', 'tm', 'setIndex', 'weight', 'reps', 'amrap', 'e1RM', 'notes'\r\n    ];\r\n    const lines = [headers.join(',')];\r\n    for (const s of rows) {\r\n        const k = liftKey(s);\r\n        const amrap = getAmrapFromSession(s);\r\n        (s.mainSets || []).forEach((set, i) => {\r\n            const e1 = (i === (s.mainSets.length - 1) || set.amrap) ? (amrap?.e1RM || '') : '';\r\n            lines.push([\r\n                JSON.stringify(s.when),\r\n                s.week ?? '',\r\n                JSON.stringify(s.day),\r\n                JSON.stringify(k),\r\n                s.tm ?? '',\r\n                i + 1,\r\n                set.weight ?? '',\r\n                set.loggedReps ?? '',\r\n                set.amrap ? 'Y' : '',\r\n                e1,\r\n                JSON.stringify(s.notes || '')\r\n            ].join(','));\r\n        });\r\n    }\r\n    return lines.join('\\n');\r\n}\r\n\r\nfunction downloadBlob(name, data, type = 'text/plain') {\r\n    const blob = new Blob([data], { type });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url; a.download = name; a.click();\r\n    setTimeout(() => URL.revokeObjectURL(url), 1000);\r\n}\r\n\r\nexport default function History() {\r\n    const [liftFilter, setLiftFilter] = useState('All');\r\n    const history = useMemo(() => getHistory(), []);\r\n    const best = useMemo(() => getBestE1RMPerLift(history), [history]);\r\n    const reps = useMemo(() => getRepRecords(history), [history]);\r\n    const cycle = useMemo(() => getActiveCycle(), []);\r\n\r\n    const lifts = useMemo(() => {\r\n        const s = new Set(history.map(liftKey).filter(Boolean));\r\n        return ['All', ...Array.from(s)];\r\n    }, [history]);\r\n\r\n    const filtered = useMemo(() => {\r\n        return history\r\n            .slice()\r\n            .reverse()\r\n            .filter(s => liftFilter === 'All' ? true : liftKey(s) === liftFilter);\r\n    }, [history, liftFilter]);\r\n\r\n    return (\r\n        <div className=\"max-w-6xl mx-auto p-4 space-y-6\">\r\n            {/* Header */}\r\n            <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center gap-2\">\r\n                    <HistoryIcon className=\"w-6 h-6 text-red-400\" />\r\n                    <h2 className=\"text-2xl text-white font-semibold\">History & PRs</h2>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                    <Link to=\"/print-week\" className=\"inline-flex items-center gap-2 px-3 py-2 rounded border border-gray-600 text-gray-100 hover:bg-gray-800 text-sm\">\r\n                        Print Week\r\n                    </Link>\r\n                    <Link to=\"/train\" className=\"inline-flex items-center gap-2 px-3 py-2 rounded bg-red-600 hover:bg-red-700 text-white text-sm\">\r\n                        <Activity className=\"w-4 h-4\" /> Train Today\r\n                    </Link>\r\n                    <button\r\n                        onClick={() => downloadBlob('history.json', JSON.stringify(history, null, 2), 'application/json')}\r\n                        className=\"inline-flex items-center gap-2 px-3 py-2 rounded border border-gray-600 text-gray-100 hover:bg-gray-800 text-sm\"\r\n                    >\r\n                        <Download className=\"w-4 h-4\" /> Export JSON\r\n                    </button>\r\n                    <button\r\n                        onClick={() => downloadBlob('history.csv', toCSV(history), 'text/csv')}\r\n                        className=\"inline-flex items-center gap-2 px-3 py-2 rounded border border-gray-600 text-gray-100 hover:bg-gray-800 text-sm\"\r\n                    >\r\n                        <Download className=\"w-4 h-4\" /> Export CSV\r\n                    </button>\r\n                    <button\r\n                        onClick={() => { if (confirm('Clear all history? This cannot be undone.')) { clearHistory(); location.reload(); } }}\r\n                        className=\"inline-flex items-center gap-2 px-3 py-2 rounded border border-red-700/60 text-red-300 hover:bg-red-900/20 text-sm\"\r\n                        title=\"Clear local history\"\r\n                    >\r\n                        <Trash2 className=\"w-4 h-4\" /> Clear\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Top stats */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <Card title=\"Cycle Status\" right={<CalendarClock className=\"w-4 h-4 text-gray-400\" />}>\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <Stat label=\"Status\" value={cycle?.status || 'active'} />\r\n                        <Stat label=\"Week\" value={cycle?.currentWeek ?? '-'} />\r\n                        <Stat label=\"Day\" value={(cycle?.currentDayIndex ?? 0) + 1} />\r\n                    </div>\r\n                </Card>\r\n\r\n                <Card title=\"Best e1RM by Lift\" right={<Trophy className=\"w-4 h-4 text-yellow-400\" />}>\r\n                    <div className=\"grid grid-cols-2 gap-2 text-sm\">\r\n                        {Object.keys(best).length === 0 && <div className=\"text-gray-400\">No PRs yet.</div>}\r\n                        {Object.entries(best).map(([lift, v]) => (\r\n                            <div key={lift} className=\"flex items-center justify-between\">\r\n                                <div className=\"text-gray-300\">{lift}</div>\r\n                                <div className=\"text-white font-mono\">{v.e1RM} lb</div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </Card>\r\n\r\n                <Card\r\n                    title=\"Filter\"\r\n                    right={<Filter className=\"w-4 h-4 text-gray-400\" />}\r\n                >\r\n                    <select\r\n                        value={liftFilter}\r\n                        onChange={(e) => setLiftFilter(e.target.value)}\r\n                        className=\"w-full bg-gray-800 border border-gray-700 rounded px-2 py-1 text-gray-100\"\r\n                    >\r\n                        {lifts.map(l => <option key={l} value={l}>{l}</option>)}\r\n                    </select>\r\n                </Card>\r\n            </div>\r\n\r\n            {/* Rep Records */}\r\n            <Card title=\"Rep Records (by AMRAP weight)\">\r\n                {Object.keys(reps).length === 0 ? (\r\n                    <div className=\"text-gray-400 text-sm\">No rep records yet.</div>\r\n                ) : (\r\n                    Object.entries(reps).map(([lift, table]) => (\r\n                        <div key={lift} className=\"mb-4\">\r\n                            <div className=\"text-white font-semibold mb-1\">{lift}</div>\r\n                            <div className=\"overflow-x-auto\">\r\n                                <table className=\"w-full text-sm\">\r\n                                    <thead>\r\n                                        <tr className=\"text-gray-400\">\r\n                                            <th className=\"text-left py-1\">Weight (lb)</th>\r\n                                            <th className=\"text-left py-1\">Best Reps</th>\r\n                                            <th className=\"text-left py-1\">e1RM</th>\r\n                                            <th className=\"text-left py-1\">When</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {Object.entries(table)\r\n                                            .sort((a, b) => Number(a[0]) - Number(b[0]))\r\n                                            .map(([w, rec]) => (\r\n                                                <tr key={w} className=\"border-t border-gray-800\">\r\n                                                    <td className=\"py-1 text-gray-200 font-mono\">{w}</td>\r\n                                                    <td className=\"py-1 text-gray-200\">{rec.reps}</td>\r\n                                                    <td className=\"py-1 text-gray-200 font-mono\">{rec.e1RM}</td>\r\n                                                    <td className=\"py-1 text-gray-400\">{new Date(rec.when).toLocaleString()}</td>\r\n                                                </tr>\r\n                                            ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </Card>\r\n\r\n            {/* Session list */}\r\n            <Card title={`Sessions (${filtered.length})`}>\r\n                {filtered.length === 0 ? (\r\n                    <div className=\"text-gray-400 text-sm\">No sessions found.</div>\r\n                ) : (\r\n                    <div className=\"space-y-2\">\r\n                        {filtered.map((s) => {\r\n                            const amrap = getAmrapFromSession(s);\r\n                            const isPR = (() => {\r\n                                // e1RM PR if bigger than any previous for this lift up to that date\r\n                                const lift = liftKey(s);\r\n                                const prev = getBestE1RMPerLift(\r\n                                    getHistory().filter(h => h.when < s.when && liftKey(h) === lift)\r\n                                )[lift];\r\n                                const pastBest = prev?.e1RM ?? 0;\r\n                                const now = (amrap?.e1RM ?? Number(s?.e1RM ?? 0)) || 0;\r\n                                return now && now > pastBest;\r\n                            })();\r\n\r\n                            return (\r\n                                <div key={s.id} className=\"border border-gray-800 rounded p-3\">\r\n                                    <div className=\"flex items-center justify-between\">\r\n                                        <div className=\"text-white font-medium\">\r\n                                            {liftKey(s)} — Week {s.week}, Day {Number(s.dayIndex ?? s.dayIndex) + 1 || '?'}\r\n                                        </div>\r\n                                        <div className=\"flex items-center gap-2\">\r\n                                            {isPR && <Badge>PR</Badge>}\r\n                                            <div className=\"text-xs text-gray-400\">{new Date(s.when).toLocaleString()}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"mt-1 text-sm text-gray-300\">\r\n                                        {s.day && <span className=\"text-gray-400 mr-2\">{s.day} ·</span>}\r\n                                        TM: <span className=\"font-mono\">{s.tm ?? '-'}</span>\r\n                                        {amrap?.e1RM ? (\r\n                                            <>\r\n                                                {' · '}e1RM: <span className=\"font-mono\">{amrap.e1RM} lb</span>\r\n                                                {' · '}AMRAP: <span className=\"font-mono\">{amrap.weight}×{amrap.reps}</span>\r\n                                            </>\r\n                                        ) : null}\r\n                                    </div>\r\n                                    <details className=\"mt-2\">\r\n                                        <summary className=\"text-gray-400 text-xs inline-flex items-center gap-1 cursor-pointer\">\r\n                                            <ChevronDown className=\"w-3 h-3\" /> Sets\r\n                                        </summary>\r\n                                        <div className=\"mt-2 grid grid-cols-1 md:grid-cols-2 gap-2\">\r\n                                            {(s.mainSets || []).map((set, i) => (\r\n                                                <div key={i} className=\"bg-gray-900/40 border border-gray-800 rounded px-2 py-1 text-sm text-gray-300\">\r\n                                                    Set {i + 1}: <span className=\"font-mono\">{set.weight} lb</span>{' · '}\r\n                                                    {set.amrap ? <span className=\"text-red-300\">AMRAP</span> : <span>{set.reps ?? set.targetReps ?? set.minReps} reps</span>}\r\n                                                    {set.loggedReps != null && <> {' · '}logged: <span className=\"font-mono\">{set.loggedReps}</span></>}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                        {(s.assistance || []).length > 0 && (\r\n                                            <div className=\"mt-2 text-sm text-gray-400\">\r\n                                                Assistance: {(s.assistance || []).map((a, i) => a.name || a.title || `Ex ${i + 1}`).join(', ')}\r\n                                            </div>\r\n                                        )}\r\n                                        {s.notes && <div className=\"mt-2 text-sm text-gray-400\">Notes: {s.notes}</div>}\r\n                                    </details>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n"],"names":["Card","title","children","right","jsxs","jsx","Stat","label","value","Badge","toCSV","rows","lines","s","k","liftKey","amrap","getAmrapFromSession","set","i","e1","downloadBlob","name","data","type","blob","url","History","liftFilter","setLiftFilter","useState","history","useMemo","getHistory","best","getBestE1RMPerLift","reps","getRepRecords","cycle","getActiveCycle","lifts","filtered","HistoryIcon","Link","Activity","Download","clearHistory","Trash2","CalendarClock","Trophy","lift","v","Filter","e","l","table","a","b","w","rec","isPR","prev","h","pastBest","now","Fragment","ChevronDown"],"mappings":"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"}