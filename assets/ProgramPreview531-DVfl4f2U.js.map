{"version":3,"file":"ProgramPreview531-DVfl4f2U.js","sources":["../../src/lib/fiveThreeOne/warmup.js","../../src/components/program/steps/ProgramPreview531.jsx"],"sourcesContent":["// src/lib/fiveThreeOne/warmup.js\r\nimport { roundToIncrement } from './compute531.js';\r\n\r\n/**\r\n * Default 5/3/1 warm-up per Wendler:\r\n * 40% x5, 50% x5, 60% x3 (of Training Max)\r\n */\r\nexport const DEFAULT_WARMUP = [\r\n    { pct: 40, reps: 5 },\r\n    { pct: 50, reps: 5 },\r\n    { pct: 60, reps: 3 },\r\n];\r\n\r\n/**\r\n * Minimal option (when time is tight):\r\n * 50% x5, 60% x3\r\n */\r\nexport const MINIMAL_WARMUP = [\r\n    { pct: 50, reps: 5 },\r\n    { pct: 60, reps: 3 },\r\n];\r\n\r\n/**\r\n * Compute warm-up sets from TM and a scheme\r\n * @param {number} tm - training max\r\n * @param {Array<{pct:number,reps:number}>} scheme\r\n * @param {object} rounding - { increment:number, mode:'nearest'|'floor'|'ceiling' }\r\n * @returns {Array<{pct:number,reps:number,weight:number}>}\r\n */\r\nexport function computeWarmupSets(tm, scheme, rounding = { increment: 5, mode: 'nearest' }) {\r\n    if (!Number.isFinite(tm)) return [];\r\n    const inc = rounding?.increment ?? 5;\r\n    const mode = rounding?.mode ?? 'nearest';\r\n    return (scheme || []).map(s => ({\r\n        pct: s.pct,\r\n        reps: s.reps,\r\n        weight: roundToIncrement(tm * (s.pct / 100), inc, mode),\r\n    }));\r\n}\r\n\r\n/**\r\n * Build warm-up sets from policy string or custom\r\n * @param {'standard'|'minimal'|'custom'} policy\r\n * @param {Array<{pct:number,reps:number}>} custom\r\n * @param {number} tm\r\n * @param {object} rounding\r\n */\r\nexport function getWarmupsByPolicy(policy, custom, tm, rounding) {\r\n    const sch =\r\n        policy === 'minimal' ? MINIMAL_WARMUP\r\n            : policy === 'custom' ? (custom && custom.length ? custom : DEFAULT_WARMUP)\r\n                : DEFAULT_WARMUP;\r\n    return computeWarmupSets(tm, sch, rounding);\r\n}\r\n","// src/components/program/steps/ProgramPreview531.jsx\r\nimport React, { useMemo } from 'react';\r\nimport { Download, Printer, Save, CheckCircle, AlertTriangle } from 'lucide-react';\r\nimport { buildProgram } from '../../../lib/fiveThreeOne/compute531.js';\r\nimport { getWarmupsByPolicy } from '../../../lib/fiveThreeOne/warmup.js';\r\nimport { calcMainSets } from '../../../lib/fiveThreeOne/compute531.js';\r\nimport { getAllStepStatuses } from './_registry/stepRegistry.js';\r\nimport { percentOfTM, toDisplayWeight } from '../../../lib/fiveThreeOne/math.js';\r\n\r\nexport default function ProgramPreview531({ data, updateData }) {\r\n    const stepStatuses = useMemo(() => getAllStepStatuses(data), [data]);\r\n    const program = useMemo(() => {\r\n        try {\r\n            return buildProgram(data);\r\n        } catch (error) {\r\n            console.warn('Program generation error:', error);\r\n            return null;\r\n        }\r\n    }, [data]);\r\n\r\n    const completedSteps = Object.values(stepStatuses).filter(status => status === 'complete').length;\r\n    const totalSteps = Object.keys(stepStatuses).length;\r\n    const hasErrors = Object.values(stepStatuses).some(status => status === 'error');\r\n\r\n    const handleExport = (format) => {\r\n        if (!program) return;\r\n\r\n        switch (format) {\r\n            case 'json': {\r\n                const blob = new Blob([JSON.stringify(program, null, 2)], { type: 'application/json' });\r\n                const url = URL.createObjectURL(blob);\r\n                const a = document.createElement('a');\r\n                a.href = url;\r\n                a.download = `531-program-${Date.now()}.json`;\r\n                a.click();\r\n                URL.revokeObjectURL(url);\r\n                break;\r\n            }\r\n            case 'print': {\r\n                window.print();\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const renderWeek = (week, weekNum) => {\r\n        if (!week?.days) return null;\r\n\r\n        return (\r\n            <div key={weekNum} className=\"bg-gray-800 border border-gray-700 rounded-lg p-4\">\r\n                <h4 className=\"text-lg font-semibold mb-3 text-green-400\">Week {weekNum}</h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n                    {week.days.map((day, dayIdx) => (\r\n                        <div key={dayIdx} className=\"bg-gray-900 border border-gray-800 rounded p-3\">\r\n                            <h5 className=\"font-medium text-red-400 mb-2\">Day {dayIdx + 1} - {day.focus}</h5>\r\n\r\n                            {/* Warm-up (computed from policy + TM) */}\r\n                            {(() => {\r\n                                const scheduleDays = data?.schedule?.days || [];\r\n                                const dMeta = scheduleDays[dayIdx];\r\n                                const liftKey = dMeta?.lift; // 'press' | 'deadlift' | 'bench' | 'squat'\r\n                                const tm = data?.trainingMaxes?.[liftKey];\r\n                                const rounding = data?.rounding || { increment: 5, mode: 'nearest' };\r\n                                const pol = data?.warmup?.policy || 'standard';\r\n                                const custom = data?.warmup?.custom || [];\r\n                                const sets = getWarmupsByPolicy(pol, custom, Number(tm), rounding);\r\n                                if (!sets?.length) return null;\r\n                                return (\r\n                                    <div className=\"mb-3\">\r\n                                        <div className=\"text-sm font-medium text-gray-300 mb-1\">Warm‑Up</div>\r\n                                        <div className=\"text-xs text-gray-400 space-y-1\">\r\n                                            {sets.map((s, i) => (\r\n                                                <div key={i}>{s.weight}lb × {s.reps} ({s.pct}%)</div>\r\n                                            ))}\r\n                                            {liftKey === 'deadlift' && data?.warmup?.deadliftRepStyle === 'deadstop' && (\r\n                                                <div className=\"text-gray-500\">Cue: reset each rep (dead‑stop)</div>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })()}\r\n\r\n                            {/* Main Work */}\r\n                            {(() => {\r\n                                const scheduleDays = data?.schedule?.days || [];\r\n                                const dMeta = scheduleDays[dayIdx];\r\n                                const liftKey = dMeta?.lift;\r\n                                const tm = Number(data?.trainingMaxes?.[liftKey]);\r\n                                const rounding = data?.rounding || { increment: 5, mode: 'nearest' };\r\n                                const previewWeek = Number(data?.loading?.previewWeek) || 1;\r\n                                const loadingOpt = Number(data?.loading?.option) || 1;\r\n                                const mainSets = Number.isFinite(tm) ? calcMainSets(tm, loadingOpt, previewWeek, rounding) : [];\r\n                                if (!mainSets.length) return null;\r\n                                return (\r\n                                    <div className=\"mb-3\">\r\n                                        <div className=\"text-sm font-medium text-gray-300 mb-1\">Main Sets</div>\r\n                                        <div className=\"text-xs text-gray-400 space-y-1\">\r\n                                            {mainSets.map((s) => (\r\n                                                <div key={s.set || `${s.pct}-${s.reps}`}>\r\n                                                    {s.pct}% × {s.reps}{s.amrap ? '+' : ''} → {Number.isFinite(s.weight) ? `${s.weight}lb` : '-'}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })()}\r\n\r\n                            {/* Assistance Work: from Step 5 Assistance Router (per-day), else program fallback */}\r\n                            {(() => {\r\n                                const scheduleDays = data?.schedule?.days || [];\r\n                                const liftKey = scheduleDays[dayIdx]?.lift;\r\n                                const dayKey = liftKey;\r\n                                const items = data?.assistance?.perDay?.[dayKey] || [];\r\n                                const rounding = data?.rounding || { increment: 5, mode: 'nearest' };\r\n                                const lifts = data?.lifts || {};\r\n                                return (\r\n                                    <div className=\"mb-3\">\r\n                                        <div className=\"text-sm font-medium text-gray-300 mb-1\">Assistance</div>\r\n                                        {items.length ? (\r\n                                            <ul className=\"text-xs text-gray-400 space-y-1\">\r\n                                                {items.map((it, i) => (\r\n                                                    <li key={i}>\r\n                                                        {it.name}: {it.sets}×{it.reps}\r\n                                                        {it?.load?.type === 'percentTM' && (\r\n                                                            <> @ {it.load.value}% TM{Number.isFinite(Number(lifts?.[it.load.liftRef]?.tm)) ? (\r\n                                                                <> → <span className=\"font-mono\">\r\n                                                                    {toDisplayWeight(percentOfTM(Number(lifts[it.load.liftRef].tm), Number(it.load.value), rounding?.increment ?? 5))}\r\n                                                                </span></>\r\n                                                            ) : null}</>\r\n                                                        )}\r\n                                                        {it?.load?.type === 'bw' && ' @ BW'}\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        ) : (\r\n                                            <div className=\"text-xs text-gray-500\">None</div>\r\n                                        )}\r\n                                    </div>\r\n                                );\r\n                            })()}\r\n\r\n                            {/* Conditioning */}\r\n                            {day.conditioning && (\r\n                                <div>\r\n                                    <div className=\"text-sm font-medium text-gray-300 mb-1\">Conditioning</div>\r\n                                    <div className=\"text-xs text-gray-400\">\r\n                                        {day.conditioning.type}: {day.conditioning.description}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Status Header */}\r\n            <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                    <div>\r\n                        <h3 className=\"text-xl font-semibold\">Program Preview</h3>\r\n                        <p className=\"text-gray-400\">\r\n                            {completedSteps}/{totalSteps} steps completed\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                        {hasErrors ? (\r\n                            <div className=\"flex items-center gap-2 text-yellow-400\">\r\n                                <AlertTriangle className=\"w-5 h-5\" />\r\n                                <span>Validation errors</span>\r\n                            </div>\r\n                        ) : completedSteps === totalSteps ? (\r\n                            <div className=\"flex items-center gap-2 text-green-400\">\r\n                                <CheckCircle className=\"w-5 h-5\" />\r\n                                <span>Ready to export</span>\r\n                            </div>\r\n                        ) : (\r\n                            <span className=\"text-gray-400\">In progress...</span>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Progress Bar */}\r\n                <div className=\"w-full bg-gray-700 rounded-full h-2\">\r\n                    <div\r\n                        className={`h-2 rounded-full transition-all ${hasErrors ? 'bg-yellow-500' : 'bg-green-500'\r\n                            }`}\r\n                        style={{ width: `${(completedSteps / totalSteps) * 100}%` }}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* Export Actions */}\r\n            {program && (\r\n                <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4\">\r\n                    <h4 className=\"font-semibold mb-3\">Export Options</h4>\r\n                    <div className=\"flex gap-3\">\r\n                        <button\r\n                            onClick={() => handleExport('json')}\r\n                            className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 rounded-lg\"\r\n                        >\r\n                            <Download className=\"w-4 h-4\" />\r\n                            Download JSON\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleExport('print')}\r\n                            className=\"flex items-center gap-2 px-4 py-2 bg-gray-600 hover:bg-gray-700 rounded-lg\"\r\n                        >\r\n                            <Printer className=\"w-4 h-4\" />\r\n                            Print Program\r\n                        </button>\r\n                        <button\r\n                            disabled\r\n                            className=\"flex items-center gap-2 px-4 py-2 bg-gray-700 text-gray-400 rounded-lg cursor-not-allowed\"\r\n                            title=\"Supabase integration coming soon\"\r\n                        >\r\n                            <Save className=\"w-4 h-4\" />\r\n                            Save to Cloud\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Program Summary */}\r\n            {program ? (\r\n                <div className=\"space-y-4\">\r\n                    <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4\">\r\n                        <h4 className=\"font-semibold mb-3\">Program Summary</h4>\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n                            <div>\r\n                                <span className=\"text-gray-400\">Template:</span> {data.templateChoice?.id || 'Custom'}\r\n                            </div>\r\n                            <div>\r\n                                <span className=\"text-gray-400\">Frequency:</span> {data.schedule?.frequency || '4-day'}\r\n                            </div>\r\n                            <div>\r\n                                <span className=\"text-gray-400\">Training Max %:</span> {data.trainingMaxes?.tmPercent || 90}%\r\n                            </div>\r\n                            <div>\r\n                                <span className=\"text-gray-400\">Loading Option:</span> {data.cycle?.loadingOption || 1}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Conditioning (Weekly) */}\r\n                    {(() => {\r\n                        const cond = data?.conditioning || {};\r\n                        const plan = cond?.weeklyPlan || [];\r\n                        return (\r\n                            <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4\">\r\n                                <div className=\"text-xs text-gray-400 uppercase tracking-wide mb-2\">Conditioning (Weekly)</div>\r\n                                {plan.length ? (\r\n                                    <ul className=\"text-sm text-gray-200\">\r\n                                        {plan.map((s, i) => (\r\n                                            <li key={i}>\r\n                                                {s.day}: {String(s.mode).toUpperCase()} — {s.modality}{' '}\r\n                                                {s.prescription && Object.keys(s.prescription).length ? (\r\n                                                    <span className=\"text-gray-400\">\r\n                                                        ({Object.entries(s.prescription).map(([k, v]) => `${k}:${v}`).join(', ')})\r\n                                                    </span>\r\n                                                ) : null}\r\n                                                {s.notes ? <span className=\"text-gray-500\"> — {s.notes}</span> : null}\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                ) : (\r\n                                    <div className=\"text-gray-500 text-sm\">No conditioning scheduled.</div>\r\n                                )}\r\n                            </div>\r\n                        );\r\n                    })()}\r\n\r\n                    {/* Training Maxes */}\r\n                    <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-4\">\r\n                        <h4 className=\"font-semibold mb-3\">Training Maxes</h4>\r\n                        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n                            {Object.entries(data.trainingMaxes || {}).map(([lift, value]) => {\r\n                                if (lift === 'tmPercent' || lift === 'rounding' || !value) return null;\r\n                                return (\r\n                                    <div key={lift}>\r\n                                        <span className=\"text-gray-400 capitalize\">{lift.replace('_', ' ')}:</span>\r\n                                        <div className=\"font-medium\">{value}lb</div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* 4-Week Cycle Preview */}\r\n                    <div className=\"space-y-4\">\r\n                        <h4 className=\"text-xl font-semibold\">4-Week Cycle</h4>\r\n\r\n                        {/* Week 1-3 */}\r\n                        {program.weeks?.slice(0, 3).map((week, idx) => renderWeek(week, idx + 1))}\r\n\r\n                        {/* Deload Week */}\r\n                        {program.deloadWeek && renderWeek(program.deloadWeek, 4)}\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"bg-gray-800 border border-gray-700 rounded-lg p-8 text-center\">\r\n                    <AlertTriangle className=\"w-12 h-12 text-yellow-500 mx-auto mb-4\" />\r\n                    <h4 className=\"text-lg font-semibold mb-2\">Program Generation Error</h4>\r\n                    <p className=\"text-gray-400 mb-4\">\r\n                        Unable to generate program preview. Please complete required steps and fix any validation errors.\r\n                    </p>\r\n                    <div className=\"text-sm text-gray-500\">\r\n                        Missing data: Training maxes, template selection, or schedule configuration\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"names":["DEFAULT_WARMUP","MINIMAL_WARMUP","computeWarmupSets","tm","scheme","rounding","inc","mode","s","roundToIncrement","getWarmupsByPolicy","policy","custom","sch","ProgramPreview531","data","updateData","stepStatuses","useMemo","getAllStepStatuses","program","buildProgram","error","completedSteps","status","totalSteps","hasErrors","handleExport","format","blob","url","a","renderWeek","week","weekNum","jsxs","jsx","day","dayIdx","dMeta","_a","liftKey","_b","pol","_c","_d","sets","i","_e","previewWeek","loadingOpt","mainSets","calcMainSets","dayKey","items","lifts","it","Fragment","percentOfTM","AlertTriangle","CheckCircle","Download","Printer","Save","cond","plan","k","v","lift","value","idx"],"mappings":"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"}