{"version":3,"file":"persistCycle-o31PMEPL.js","sources":["../../src/lib/storage.js","../../src/lib/fiveThreeOne/persistCycle.js"],"sourcesContent":["import { supabase as realSupabase } from './api/supabaseClient';\r\n// In test environment, skip Supabase network usage to avoid hanging / OOM\r\nconst supabase = (typeof process !== 'undefined' && process.env?.NODE_ENV === 'test') ? null : realSupabase;\r\n\r\n// Lightweight key-value helpers used across the app\r\nexport function set(key, value) {\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    } catch (e) {\r\n        console.warn('storage.set failed', e);\r\n    }\r\n}\r\n\r\nexport function get(key) {\r\n    try {\r\n        const raw = localStorage.getItem(key);\r\n        return raw ? JSON.parse(raw) : null;\r\n    } catch (e) {\r\n        console.warn('storage.get failed', e);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function remove(key) {\r\n    try {\r\n        localStorage.removeItem(key);\r\n    } catch (e) {\r\n        console.warn('storage.remove failed', e);\r\n    }\r\n}\r\n\r\n/**\r\n * Save macrocycle data to Supabase or localStorage fallback\r\n * @param {Object} data - Macrocycle data to save\r\n * @returns {Promise<string>} - The ID of the saved macrocycle\r\n */\r\nexport async function saveMacrocycle(data) {\r\n    const id = data.id || crypto.randomUUID();\r\n    const record = {\r\n        ...data,\r\n        id,\r\n        updatedAt: Date.now(),\r\n        createdAt: data.createdAt || Date.now()\r\n    };\r\n\r\n    try {\r\n        if (supabase) {\r\n            const { data: savedData, error } = await supabase\r\n                .from('macrocycles')\r\n                .upsert(record, { onConflict: 'id' })\r\n                .select()\r\n                .single();\r\n\r\n            if (error) throw error;\r\n            console.log('Macrocycle saved to Supabase:', savedData);\r\n        } else {\r\n            // Fallback to localStorage\r\n            localStorage.setItem(`macro_${id}`, JSON.stringify(record));\r\n            console.log('Macrocycle saved to localStorage:', record);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error saving macrocycle:', error);\r\n        // Fallback to localStorage if Supabase fails\r\n        localStorage.setItem(`macro_${id}`, JSON.stringify(record));\r\n        console.log('Fallback: Macrocycle saved to localStorage');\r\n    }\r\n\r\n    return id;\r\n}\r\n\r\n/**\r\n * Load macrocycle data from Supabase or localStorage\r\n * @param {string} id - The ID of the macrocycle to load\r\n * @returns {Promise<Object|null>} - The macrocycle data or null if not found\r\n */\r\nexport async function loadMacrocycle(id) {\r\n    try {\r\n        if (supabase) {\r\n            const { data, error } = await supabase\r\n                .from('macrocycles')\r\n                .select('*')\r\n                .eq('id', id)\r\n                .single();\r\n\r\n            if (error) throw error;\r\n            return data;\r\n        }\r\n    } catch (error) {\r\n        console.error('Error loading from Supabase:', error);\r\n    }\r\n\r\n    // Fallback to localStorage\r\n    const raw = localStorage.getItem(`macro_${id}`);\r\n    return raw ? JSON.parse(raw) : null;\r\n}\r\n\r\n/**\r\n * Load all macrocycles for the overview page\r\n * @returns {Promise<Array>} - Array of macrocycle data\r\n */\r\nexport async function loadAllMacrocycles() {\r\n    try {\r\n        if (supabase) {\r\n            const { data, error } = await supabase\r\n                .from('macrocycles')\r\n                .select('*')\r\n                .order('updatedAt', { ascending: false });\r\n\r\n            if (error) throw error;\r\n            // Filter out any malformed rows (missing id) just in case\r\n            return (data || []).filter(r => r && r.id);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error loading all macrocycles from Supabase:', error);\r\n    }\r\n\r\n    // Fallback to localStorage\r\n    const macrocycles = [];\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n        const key = localStorage.key(i);\r\n        if (key && key.startsWith('macro_')) {\r\n            try {\r\n                const data = JSON.parse(localStorage.getItem(key));\r\n                // Only accept objects with an id to avoid polluting the overview list\r\n                if (data && data.id) {\r\n                    // Normalise updatedAt to number for consistent sorting\r\n                    if (data.updatedAt && typeof data.updatedAt === 'string') {\r\n                        const ts = Number(data.updatedAt);\r\n                        data.updatedAt = Number.isFinite(ts) ? ts : Date.parse(data.updatedAt) || 0;\r\n                    }\r\n                    macrocycles.push(data);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error parsing localStorage macrocycle:', error);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Sort by updatedAt descending\r\n    return macrocycles.sort((a, b) => (b.updatedAt || 0) - (a.updatedAt || 0));\r\n}\r\n\r\n/**\r\n * Delete a macrocycle\r\n * @param {string} id - The ID of the macrocycle to delete\r\n * @returns {Promise<boolean>} - Success status\r\n */\r\nexport async function deleteMacrocycle(id) {\r\n    let remoteSuccess = false;\r\n    try {\r\n        if (supabase) {\r\n            const { error } = await supabase\r\n                .from('macrocycles')\r\n                .delete()\r\n                .eq('id', id);\r\n            if (error) throw error;\r\n            remoteSuccess = true;\r\n        } else {\r\n            // In test / no-supabase mode we consider delete implicitly successful remotely\r\n            remoteSuccess = true;\r\n        }\r\n    } catch (error) {\r\n        console.error('Error deleting macrocycle:', error);\r\n    } finally {\r\n        // Always attempt local cleanup so UI stays consistent\r\n        try { localStorage.removeItem(`macro_${id}`); } catch (e) { /* ignore */ }\r\n    }\r\n    // Return remote success flag so callers can distinguish a fallback path\r\n    return remoteSuccess;\r\n}\r\n","// src/lib/fiveThreeOne/persistCycle.js\r\nimport * as storage from '../storage.js';\r\n\r\nconst ACTIVE_KEY = 'fiveThreeOne_activeCycle_v1';\r\n\r\n/**\r\n * Persist current active cycle to local storage.\r\n * Initializes week/day progress to week 1, first planned day.\r\n */\r\nexport function persistActiveCycle(programObj) {\r\n    const firstWeek = programObj?.weeks?.[0] || { week: 1, days: [] };\r\n    const firstDayIndex = Math.max(0, (firstWeek.days || []).findIndex(d => !!d));\r\n    const payload = {\r\n        status: 'active',\r\n        startedAt: new Date().toISOString(),\r\n        currentWeek: 1,\r\n        currentDayIndex: firstDayIndex === -1 ? 0 : firstDayIndex,\r\n        program: programObj\r\n    };\r\n    try {\r\n        storage.set(ACTIVE_KEY, payload);\r\n    } catch (e) { /* ignore storage errors */ }\r\n    return payload;\r\n}\r\n\r\nexport function getActiveCycle() {\r\n    try {\r\n        return storage.get(ACTIVE_KEY) || null;\r\n    } catch (e) { return null; }\r\n}\r\n\r\nexport function clearActiveCycle() {\r\n    try {\r\n        storage.remove(ACTIVE_KEY);\r\n    } catch (e) { /* ignore */ }\r\n}\r\n\r\nexport function saveActiveCycle(payload) {\r\n    try {\r\n        storage.set('fiveThreeOne_activeCycle_v1', payload);\r\n    } catch (e) { /* ignore */ }\r\n    return payload;\r\n}\r\n\r\n/**\r\n * Return { active, today, weekObj } where:\r\n *  - active = active cycle object\r\n *  - today = current day entry (with lift, sets, etc.)\r\n *  - weekObj = the full week container\r\n */\r\nexport function getToday() {\r\n    const active = getActiveCycle();\r\n    if (!active?.program) return { active: null, today: null, weekObj: null };\r\n    const w = active.currentWeek ?? 1;\r\n    const di = active.currentDayIndex ?? 0;\r\n    const weekObj = active.program.weeks?.[w - 1] || null;\r\n    const today = weekObj?.days?.[di] || null;\r\n    return { active, today, weekObj };\r\n}\r\n\r\n/**\r\n * Advance to next planned day. If end of week, move to next week (1..4).\r\n * If cycle end (beyond week 4), mark status 'complete' and do not advance.\r\n */\r\nexport function advanceActiveCycle() {\r\n    const active = getActiveCycle();\r\n    if (!active?.program?.weeks?.length) return null;\r\n\r\n    const totalWeeks = active.program.weeks.length;\r\n    let w = active.currentWeek ?? 1;\r\n    let di = active.currentDayIndex ?? 0;\r\n\r\n    const daysInWeek = active.program.weeks[w - 1]?.days?.length || 0;\r\n    if (di + 1 < daysInWeek) {\r\n        di = di + 1;\r\n    } else if (w + 1 <= totalWeeks) {\r\n        w = w + 1;\r\n        di = 0;\r\n    } else {\r\n        // End of cycle\r\n        const done = { ...active, status: 'complete', completedAt: new Date().toISOString() };\r\n        return saveActiveCycle(done);\r\n    }\r\n\r\n    const next = { ...active, currentWeek: w, currentDayIndex: di };\r\n    return saveActiveCycle(next);\r\n}\r\n"],"names":["set","key","value","e","get","raw","remove","ACTIVE_KEY","persistActiveCycle","programObj","firstWeek","_a","firstDayIndex","d","payload","storage.set","getActiveCycle","storage.get","saveActiveCycle","getToday","active","w","di","weekObj","today","_b","advanceActiveCycle","totalWeeks","daysInWeek","_d","_c","done","next"],"mappings":"4BAKO,SAASA,EAAIC,EAAKC,EAAO,CAC5B,GAAI,CACA,aAAa,QAAQD,EAAK,KAAK,UAAUC,CAAK,CAAC,CACnD,OAASC,EAAG,CACR,QAAQ,KAAK,qBAAsBA,CAAC,CACxC,CACJ,CAEO,SAASC,EAAIH,EAAK,CACrB,GAAI,CACA,MAAMI,EAAM,aAAa,QAAQJ,CAAG,EACpC,OAAOI,EAAM,KAAK,MAAMA,CAAG,EAAI,IACnC,OAASF,EAAG,CACR,eAAQ,KAAK,qBAAsBA,CAAC,EAC7B,IACX,CACJ,CAEO,SAASG,EAAOL,EAAK,CACxB,GAAI,CACA,aAAa,WAAWA,CAAG,CAC/B,OAASE,EAAG,CACR,QAAQ,KAAK,wBAAyBA,CAAC,CAC3C,CACJ,CC1BA,MAAMI,EAAa,8BAMZ,SAASC,EAAmBC,EAAY,OAC3C,MAAMC,IAAYC,EAAAF,GAAA,YAAAA,EAAY,QAAZ,YAAAE,EAAoB,KAAM,CAAW,KAAM,CAAA,GACvDC,EAAgB,KAAK,IAAI,GAAIF,EAAU,MAAQ,CAAA,GAAI,UAAUG,GAAK,CAAC,CAACA,CAAC,CAAC,EACtEC,EAAU,CACZ,OAAQ,SACR,UAAW,IAAI,KAAI,EAAG,YAAW,EACjC,YAAa,EACb,gBAAiBF,IAAkB,GAAK,EAAIA,EAC5C,QAASH,CACjB,EACI,GAAI,CACAM,EAAYR,EAAYO,CAAO,CACnC,MAAY,CAA8B,CAC1C,OAAOA,CACX,CAEO,SAASE,GAAiB,CAC7B,GAAI,CACA,OAAOC,EAAYV,CAAU,GAAK,IACtC,MAAY,CAAE,OAAO,IAAM,CAC/B,CAQO,SAASW,EAAgBJ,EAAS,CACrC,GAAI,CACAC,EAAY,8BAA+BD,CAAO,CACtD,MAAY,CAAe,CAC3B,OAAOA,CACX,CAQO,SAASK,GAAW,SACvB,MAAMC,EAASJ,IACf,GAAI,EAACI,GAAA,MAAAA,EAAQ,SAAS,MAAO,CAAE,OAAQ,KAAM,MAAO,KAAM,QAAS,MACnE,MAAMC,EAAID,EAAO,aAAe,EAC1BE,EAAKF,EAAO,iBAAmB,EAC/BG,IAAUZ,EAAAS,EAAO,QAAQ,QAAf,YAAAT,EAAuBU,EAAI,KAAM,KAC3CG,IAAQC,EAAAF,GAAA,YAAAA,EAAS,OAAT,YAAAE,EAAgBH,KAAO,KACrC,MAAO,CAAE,OAAAF,EAAQ,MAAAI,EAAO,QAAAD,EAC5B,CAMO,SAASG,GAAqB,aACjC,MAAMN,EAASJ,IACf,GAAI,GAACS,GAAAd,EAAAS,GAAA,YAAAA,EAAQ,UAAR,YAAAT,EAAiB,QAAjB,MAAAc,EAAwB,QAAQ,OAAO,KAE5C,MAAME,EAAaP,EAAO,QAAQ,MAAM,OACxC,IAAIC,EAAID,EAAO,aAAe,EAC1BE,EAAKF,EAAO,iBAAmB,EAEnC,MAAMQ,IAAaC,GAAAC,EAAAV,EAAO,QAAQ,MAAMC,EAAI,CAAC,IAA1B,YAAAS,EAA6B,OAA7B,YAAAD,EAAmC,SAAU,EAChE,GAAIP,EAAK,EAAIM,EACTN,EAAKA,EAAK,UACHD,EAAI,GAAKM,EAChBN,EAAIA,EAAI,EACRC,EAAK,MACF,CAEH,MAAMS,EAAO,CAAE,GAAGX,EAAQ,OAAQ,WAAY,YAAa,IAAI,KAAI,EAAG,YAAW,GACjF,OAAOF,EAAgBa,CAAI,CAC/B,CAEA,MAAMC,EAAO,CAAE,GAAGZ,EAAQ,YAAaC,EAAG,gBAAiBC,GAC3D,OAAOJ,EAAgBc,CAAI,CAC/B"}