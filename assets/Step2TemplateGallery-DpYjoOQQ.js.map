{"version":3,"file":"Step2TemplateGallery-DpYjoOQQ.js","sources":["../../src/lib/fiveThreeOne/assistanceRules.js","../../src/components/program/steps/Step2TemplateGallery.jsx"],"sourcesContent":["// src/lib/fiveThreeOne/assistanceRules.js\r\nexport const TEMPLATE_IDS = {\r\n    BBB: 'bbb',\r\n    TRIUMVIRATE: 'triumvirate',\r\n    PERIODIZATION_BIBLE: 'periodizationBible',\r\n    BODYWEIGHT: 'bodyweight',\r\n    JACK_SHIT: 'jackShit',\r\n};\r\n\r\nexport const DEFAULT_ASSISTANCE_LIB = {\r\n    shared: {\r\n        push: ['Dips', 'Push-Ups', 'DB Bench Press', 'Close-Grip Bench'],\r\n        pull: ['Chin-Ups', 'Pull-Ups', 'DB Row', 'Kroc Row', 'Face Pull'],\r\n        squat: ['Front Squat', 'Leg Press', 'Step-Ups', 'Lunges'],\r\n        hinge: ['Good Morning', 'Romanian Deadlift', 'Back Extension', 'Rack Pull'],\r\n        core: ['Hanging Leg Raise', 'Ab Wheel', 'Weighted Plank', 'Cable Crunch'],\r\n    },\r\n    mapByMainLift: {\r\n        squat: {\r\n            supplementalSame: 'Back Squat',\r\n            opposite: 'Deadlift',\r\n            accessories: ['Leg Curl', 'Leg Press', 'Hanging Leg Raise', 'Good Morning'],\r\n        },\r\n        deadlift: {\r\n            supplementalSame: 'Deadlift',\r\n            opposite: 'Back Squat',\r\n            accessories: ['Glute-Ham Raise', 'Romanian Deadlift', 'Hanging Leg Raise', 'Back Extension'],\r\n        },\r\n        bench: {\r\n            supplementalSame: 'Bench Press',\r\n            opposite: 'Overhead Press',\r\n            accessories: ['Dips', 'DB Row', 'Face Pull', 'Push-Ups'],\r\n        },\r\n        press: {\r\n            supplementalSame: 'Overhead Press',\r\n            opposite: 'Bench Press',\r\n            accessories: ['Dips', 'Chin-Ups', 'DB Shoulder Press', 'Face Pull'],\r\n        },\r\n    },\r\n};\r\n\r\n// Utility\r\nfunction cap(x, lo, hi) { return Math.max(lo, Math.min(hi, x)); }\r\n\r\nexport function defaultScheduleFromState(state) {\r\n    // Fallback if schedule not yet configured\r\n    const order = (state?.schedule?.days?.length ? state.schedule.days\r\n        : [{ id: 'D1', lift: 'press' }, { id: 'D2', lift: 'deadlift' }, { id: 'D3', lift: 'bench' }, { id: 'D4', lift: 'squat' }]\r\n    ).map((d, i) => ({ id: d.id || `D${i + 1}`, lift: d.lift }));\r\n    return order;\r\n}\r\n\r\n/**\r\n * Build recommended assistance block(s) for a given day.\r\n * Returns a shape that the UI can render and the preview can consume.\r\n */\r\nexport function buildAssistanceForDay(templateId, mainLift, opts = {}) {\r\n    const lib = DEFAULT_ASSISTANCE_LIB.mapByMainLift[mainLift] || {};\r\n    const shared = DEFAULT_ASSISTANCE_LIB.shared;\r\n\r\n    const bbbPair = opts?.bbbPair || 'same'; // 'same' or 'opposite'\r\n    const bbbPct = cap(Number(opts?.bbbPercent || 60), 40, 75); // percent of TM\r\n    const bwTarget = cap(Number(opts?.bwTarget || 75), 50, 200);\r\n\r\n    if (templateId === TEMPLATE_IDS.JACK_SHIT) {\r\n        return { kind: 'jack', blocks: [], displayText: 'Main lift only' };\r\n    }\r\n\r\n    if (templateId === TEMPLATE_IDS.BBB) {\r\n        const liftName = bbbPair === 'opposite' ? lib.opposite : lib.supplementalSame;\r\n        const exerciseNames = {\r\n            'press': 'Overhead Press',\r\n            'bench': 'Bench Press',\r\n            'squat': 'Back Squat',\r\n            'deadlift': 'Deadlift'\r\n        };\r\n        const bbbExerciseName = exerciseNames[mainLift] || mainLift;\r\n        const displayName = `BBB ${bbbExerciseName} 5×10 @ ${bbbPct}%`;\r\n\r\n        const block = {\r\n            type: 'BBB',\r\n            items: [{\r\n                name: liftName,\r\n                displayName: displayName,\r\n                exercise: bbbExerciseName,\r\n                sets: 5,\r\n                reps: 10,\r\n                percentTM: bbbPct\r\n            }]\r\n        };\r\n        // Keep accessories lean per Wendler spirit\r\n        const accessories = (lib.accessories || []).slice(0, 2).map(name => ({\r\n            name,\r\n            sets: 3,\r\n            reps: 12,\r\n            displayName: `${name} 3×12`\r\n        }));\r\n        return { kind: 'bbb', blocks: [block], accessories };\r\n    }\r\n\r\n    if (templateId === TEMPLATE_IDS.TRIUMVIRATE) {\r\n        // Exactly 3 exercises: main 5/3/1 is assumed; provide two recs by main lift\r\n        const recsByLift = {\r\n            press: [\r\n                { name: 'Dips', sets: 5, reps: '15', displayName: 'Dips 5×15' },\r\n                { name: 'Chin-Ups', sets: 5, reps: '10', displayName: 'Chin-Ups 5×10' },\r\n            ],\r\n            deadlift: [\r\n                { name: 'Good Morning', sets: 5, reps: '10-12', displayName: 'Good Morning 5×10-12' },\r\n                { name: 'Hanging Leg Raise', sets: 5, reps: '12-15', displayName: 'Hanging Leg Raise 5×12-15' },\r\n            ],\r\n            bench: [\r\n                { name: 'DB Row', sets: 5, reps: '10-12', displayName: 'DB Row 5×10-12' },\r\n                { name: 'Dips', sets: 5, reps: '12-15', displayName: 'Dips 5×12-15' },\r\n            ],\r\n        squat: [\r\n            { name: 'Leg Press', sets: 5, reps: '12-15', displayName: 'Leg Press 5×12-15' },\r\n            { name: 'Leg Curl', sets: 5, reps: '10-12', displayName: 'Leg Curl 5×10-12' },\r\n        ],\r\n    };\r\n    return { kind: 'triumvirate', blocks: [{ type: 'Triumvirate', items: recsByLift[mainLift] || [] }] };\r\n}\r\n\r\nif (templateId === TEMPLATE_IDS.PERIODIZATION_BIBLE) {\r\n    // Dave Tate pattern: each day 3 assistance categories, each 5x10-20 (user chooses specific lifts later)\r\n    const upperCats = [\r\n        { category: 'Shoulders/Chest', displayName: 'Shoulders/Chest 5×10-20' },\r\n        { category: 'Lats/Upper Back', displayName: 'Lats/Upper Back 5×10-20' },\r\n        { category: 'Triceps', displayName: 'Triceps 5×10-20' }\r\n    ];\r\n    const lowerCats = [\r\n        { category: 'Hamstrings', displayName: 'Hamstrings 5×10-20' },\r\n        { category: 'Quads', displayName: 'Quads 5×10-20' },\r\n        { category: 'Abs', displayName: 'Abs 5×10-20' }\r\n    ];\r\n    const chosen = (mainLift === 'press' || mainLift === 'bench') ? upperCats : lowerCats;\r\n    return {\r\n        kind: 'pb',\r\n        blocks: chosen.map(cat => ({\r\n            category: cat.category,\r\n            items: [{\r\n                name: cat.category + ' (choose exercise)',\r\n                displayName: cat.displayName,\r\n                sets: 5,\r\n                reps: '10-20'\r\n            }]\r\n    }))\r\n    };\r\n}\r\n\r\nif (templateId === TEMPLATE_IDS.BODYWEIGHT) {\r\n    const upper = (mainLift === 'bench' || mainLift === 'press');\r\n    const bwList = upper\r\n        ? [\r\n            { name: 'Chin-Ups', targetReps: bwTarget, displayName: `Chin-Ups (${bwTarget} total reps)` },\r\n            { name: 'Dips', targetReps: bwTarget, displayName: `Dips (${bwTarget} total reps)` },\r\n            { name: 'Push-Ups', targetReps: bwTarget, displayName: `Push-Ups (${bwTarget} total reps)` }\r\n        ]\r\n        : [\r\n            { name: 'Chin-Ups', targetReps: bwTarget, displayName: `Chin-Ups (${bwTarget} total reps)` },\r\n            { name: 'Single-Leg Squat/Lunge', targetReps: bwTarget, displayName: `Single-Leg Squat/Lunge (${bwTarget} total reps)` },\r\n            { name: 'Sit-Ups/Ab Wheel', targetReps: bwTarget, displayName: `Sit-Ups/Ab Wheel (${bwTarget} total reps)` }\r\n        ];\r\n        return { kind: 'bodyweight', blocks: [{ type: 'Bodyweight', items: bwList }] };\r\n    }\r\n\r\n    // Fallback\r\n    return { kind: 'custom', blocks: [] };\r\n}\r\n\r\n/**\r\n * Build a whole-week assistance plan from template config + schedule.\r\n * Returns { byDay: { [dayId]: { mainLift, plan } } }\r\n */\r\nexport function buildWeekAssistancePlan(state) {\r\n    const templateId = state?.template;\r\n    const cfg = state?.templateConfig || {};\r\n    const days = defaultScheduleFromState(state);\r\n\r\n    const byDay = {};\r\n    for (const d of days) {\r\n        const plan = buildAssistanceForDay(templateId, d.lift, cfg);\r\n        byDay[d.id] = { mainLift: d.lift, plan };\r\n    }\r\n    return { byDay };\r\n}\r\n","// src/components/program/steps/Step2TemplateGallery.jsx\r\nimport React, { useEffect, useMemo } from 'react';\r\nimport { Info, CheckCircle, AlertTriangle, Dumbbell, Layers, Activity } from 'lucide-react';\r\nimport StepStatusPill from './_shared/StepStatusPill.jsx';\r\nimport { STEP_IDS } from './_registry/stepRegistry.js';\r\nimport { TEMPLATE_IDS } from '../../../lib/fiveThreeOne/assistanceRules.js';\r\nimport { useExerciseDB } from '../../../contexts/ExerciseDBContext.jsx';\r\n\r\nconst TILES = [\r\n    { id: TEMPLATE_IDS.BBB, title: 'Boring But Big', blurb: 'Main 5/3/1 + 5×10 supplemental. Simple, high volume, great for muscle.', color: 'border-red-500' },\r\n    { id: TEMPLATE_IDS.TRIUMVIRATE, title: 'Triumvirate', blurb: 'Exactly 3 lifts: main + 2 big accessories. Quality over quantity.', color: 'border-amber-500' },\r\n    { id: TEMPLATE_IDS.PERIODIZATION_BIBLE, title: 'Periodization Bible', blurb: 'High volume bodybuilding-style categories for complete development.', color: 'border-blue-500' },\r\n    { id: TEMPLATE_IDS.BODYWEIGHT, title: 'Bodyweight', blurb: 'All assistance is bodyweight. Minimum total reps per movement.', color: 'border-green-500' },\r\n    { id: TEMPLATE_IDS.JACK_SHIT, title: '\"I’m Not Doing Jack Shit\"', blurb: 'Main 5/3/1 only. No assistance. Use sparingly.', color: 'border-gray-500' },\r\n];\r\n\r\nexport default function Step2TemplateGallery({ data, updateData }) {\r\n    const st = data || {};\r\n    const set = (patch) => updateData({ ...st, ...patch });\r\n    const cfg = st.templateConfig || { bbbPair: 'same', bbbPercent: 60, bwTarget: 75 };\r\n    const assistance = st.assistance || { options: { bbb: { percent: cfg.bbbPercent || 60, pairMode: cfg.bbbPair || 'same' } }, perDay: { press: [], deadlift: [], bench: [], squat: [] } };\r\n    const { loaded: exLoaded, categoriesMap, exercises } = useExerciseDB();\r\n\r\n    // Helper to find row by name\r\n    const byName = useMemo(() => {\r\n        const map = {};\r\n        exercises?.forEach(r => { map[r.exercise.toLowerCase()] = r; });\r\n        return map;\r\n    }, [exercises]);\r\n\r\n    // Default seeding per template (only once when template selected & list empty)\r\n    useEffect(() => {\r\n        if (!st.template || !exLoaded) return;\r\n        const perDay = { ...assistance.perDay };\r\n        let changed = false;\r\n        const ensure = (day, names) => {\r\n            if (perDay[day] && perDay[day].length) return; // keep user edits\r\n            const items = [];\r\n            names.forEach(n => {\r\n                const row = byName[n.toLowerCase()];\r\n                if (row) {\r\n                    const sets = Number(row.default_sets) || 5;\r\n                    const reps = row.numeric_reps || (/amrap/i.test(row.default_reps) ? 10 : Number(row.default_reps) || 10);\r\n                    const load = (/body|bw|bodyweight/i.test(row.equipment || '') || /AMRAP/i.test(row.default_reps)) ? { type: 'bw' } : undefined;\r\n                    items.push({ name: row.exercise, sets, reps, load });\r\n                }\r\n            });\r\n            if (items.length) { perDay[day] = items; changed = true; }\r\n        };\r\n        switch (st.template) {\r\n            case TEMPLATE_IDS.TRIUMVIRATE:\r\n                ensure('press', ['Dips', 'Chin-ups']);\r\n                ensure('bench', ['DB Rows', 'Dips']);\r\n                ensure('deadlift', ['Back Extension', 'Ab Wheel']);\r\n                ensure('squat', ['Romanian Deadlift', 'Hanging Leg Raises']);\r\n                break;\r\n            case TEMPLATE_IDS.PERIODIZATION_BIBLE:\r\n                // Dave Tate pattern: each day 3 categories; pick one starter exercise per category (user can swap later)\r\n                ensure('press', ['DB Press', 'DB Rows', 'Dips']); // shoulders/chest, lats/upper back, triceps\r\n                ensure('bench', ['DB Incline Press', 'Chin-ups', 'Close-Grip Bench']); // chest, lats/upper back, triceps\r\n                ensure('deadlift', ['Romanian Deadlift', 'Leg Press', 'Hanging Leg Raises']); // hamstrings, quads, abs\r\n                ensure('squat', ['Back Extension', 'Leg Press', 'Ab Wheel']); // hamstrings/low back, quads, abs\r\n                break;\r\n            case TEMPLATE_IDS.BODYWEIGHT:\r\n                ensure('press', ['Push-Ups', 'Chin-ups', 'Dips']);\r\n                ensure('bench', ['Push-Ups', 'Chin-ups', 'Dips']);\r\n                ensure('deadlift', ['Chin-ups', 'Hanging Leg Raises']);\r\n                ensure('squat', ['Push-Ups', 'Hanging Leg Raises', 'Sit-Ups']);\r\n                break;\r\n            case TEMPLATE_IDS.BBB:\r\n            case TEMPLATE_IDS.JACK_SHIT:\r\n            default:\r\n                break;\r\n        }\r\n        if (changed) {\r\n            set({ assistance: { ...assistance, perDay } });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [st.template, exLoaded]);\r\n\r\n    // Movement pattern balance validation (simple heuristic)\r\n    const validation = useMemo(() => {\r\n        if (!exLoaded) return { warnings: [] };\r\n        const counts = { Pull: 0, Push: 0, Core: 0, Posterior: 0, 'Single-Leg': 0 };\r\n        Object.values(assistance.perDay).forEach(list => list.forEach(it => {\r\n            const row = byName[it.name.toLowerCase()];\r\n            if (row) {\r\n                counts[row.category_normalized] = (counts[row.category_normalized] || 0) + 1;\r\n            }\r\n        }));\r\n        const warnings = [];\r\n        if (counts.Pull < counts.Push) warnings.push('Pull work is lower than Push — consider adding a pull movement.');\r\n        if (counts.Core < 2) warnings.push('Low core volume — add a core exercise.');\r\n        if (counts.Posterior < 2 && (st.template === TEMPLATE_IDS.TRIUMVIRATE || st.template === TEMPLATE_IDS.PERIODIZATION_BIBLE)) warnings.push('Posterior chain underrepresented.');\r\n        return { counts, warnings };\r\n    }, [assistance.perDay, byName, exLoaded, st.template]);\r\n\r\n    const choose = (id) => set({ template: id });\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            <div className=\"flex items-start justify-between\">\r\n                <div>\r\n                    <h3 className=\"text-xl font-semibold text-white mb-1\">Step 2: Choose Assistance Template</h3>\r\n                    <p className=\"text-gray-400 text-sm\">This choice drives your supplemental and accessory work. You can customize in the next step.</p>\r\n                </div>\r\n                <StepStatusPill stepId={STEP_IDS.TEMPLATE_GALLERY} data={st} />\r\n            </div>\r\n\r\n            <div className=\"bg-blue-900/20 border border-blue-600 p-4 rounded\">\r\n                <div className=\"flex gap-3 items-start\">\r\n                    <Info className=\"w-5 h-5 text-blue-300 mt-0.5\" />\r\n                    <div className=\"text-blue-100 text-sm\">\r\n                        <div className=\"font-medium mb-1\">Guidance</div>\r\n                        <ul className=\"list-disc ml-5 space-y-1\">\r\n                            <li><b>BBB</b>: best simple hypertrophy. Start at 50–60% TM for the 5×10; advance if recovery is solid.</li>\r\n                            <li><b>Triumvirate</b>: lean sessions; two big accessories matched to the main lift.</li>\r\n                            <li><b>Periodization Bible</b>: most comprehensive; 3+ categories per day, higher volume.</li>\r\n                            <li><b>Bodyweight</b>: joint-friendly; hit minimum total reps (≥75) per exercise.</li>\r\n                            <li><b>Jack Shit</b>: main work only; good for time crunches or poor recovery weeks.</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Template tiles */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                {TILES.map(t => {\r\n                    const active = st.template === t.id;\r\n                    return (\r\n                        <button\r\n                            key={t.id}\r\n                            onClick={() => choose(t.id)}\r\n                            className={`text-left bg-gray-900/60 border ${t.color} rounded p-4 hover:bg-gray-900 transition ${active ? 'ring-2 ring-red-500' : ''}`}\r\n                        >\r\n                            <div className=\"text-white font-semibold\">{t.title}</div>\r\n                            <div className=\"text-sm text-gray-300 mt-1\">{t.blurb}</div>\r\n                            {active && (\r\n                                <div className=\"mt-3 inline-flex items-center gap-2 text-green-300 bg-green-900/20 border border-green-700 px-2 py-1 rounded\">\r\n                                    <CheckCircle className=\"w-4 h-4\" />\r\n                                    Selected\r\n                                </div>\r\n                            )}\r\n                        </button>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            {/* Quick options for templates that need them */}\r\n            {st.template === TEMPLATE_IDS.BBB && (\r\n                <div className=\"bg-gray-900/60 border border-gray-700 rounded p-4\">\r\n                    <div className=\"text-white font-medium mb-3\">BBB Options</div>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\r\n                        <div className=\"flex flex-col\">\r\n                            <label className=\"text-sm text-gray-300 mb-1\">Pairing</label>\r\n                            <select\r\n                                className=\"bg-gray-800 border border-gray-600 text-white rounded px-2 py-1\"\r\n                                value={cfg.bbbPair || 'same'}\r\n                                onChange={(e) => updateData({ ...st, templateConfig: { ...cfg, bbbPair: e.target.value } })}\r\n                            >\r\n                                <option value=\"same\">Same main lift (e.g., Squat → Squat 5×10)</option>\r\n                                <option value=\"opposite\">Opposite lift (e.g., Squat → Deadlift 5×10)</option>\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"flex flex-col\">\r\n                            <label className=\"text-sm text-gray-300 mb-1\">BBB % of TM</label>\r\n                            <input\r\n                                type=\"number\" min=\"40\" max=\"75\" step=\"5\"\r\n                                className=\"bg-gray-800 border border-gray-600 text-white rounded px-2 py-1\"\r\n                                value={cfg.bbbPercent ?? 60}\r\n                                onChange={(e) => updateData({ ...st, templateConfig: { ...cfg, bbbPercent: Number(e.target.value) || 60 } })}\r\n                            />\r\n                            <span className=\"text-xs text-gray-500 mt-1\">Start 50–60%. Increase only if recovery is solid.</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {st.template === TEMPLATE_IDS.BODYWEIGHT && (\r\n                <div className=\"bg-gray-900/60 border border-gray-700 rounded p-4\">\r\n                    <div className=\"text-white font-medium mb-3\">Bodyweight Options</div>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\r\n                        <div className=\"flex flex-col\">\r\n                            <label className=\"text-sm text-gray-300 mb-1\">Target reps per movement</label>\r\n                            <input\r\n                                type=\"number\" min=\"50\" max=\"200\" step=\"5\"\r\n                                className=\"bg-gray-800 border border-gray-600 text-white rounded px-2 py-1\"\r\n                                value={cfg.bwTarget ?? 75}\r\n                                onChange={(e) => updateData({ ...st, templateConfig: { ...cfg, bwTarget: Number(e.target.value) || 75 } })}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Gentle warning */}\r\n            {!st.template && (\r\n                <div className=\"bg-yellow-900/20 border border-yellow-700 text-yellow-200 rounded p-3 text-sm\">\r\n                    <div className=\"flex items-start gap-2\">\r\n                        <AlertTriangle className=\"w-4 h-4 mt-0.5\" />\r\n                        Select a template to continue.\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Assistance configurator (pre-wizard) */}\r\n            {st.template && st.template !== TEMPLATE_IDS.JACK_SHIT && (\r\n                <div className=\"bg-gray-900/60 border border-gray-700 rounded p-4 space-y-4\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <div className=\"text-white font-medium\">Assistance Preview & Edits</div>\r\n                        {!exLoaded && <div className=\"text-xs text-gray-400\">Loading exercise database…</div>}\r\n                    </div>\r\n                    <p className=\"text-xs text-gray-400\">These selections seed Step 5. You can refine later. Categories & defaults sourced from research database.</p>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                        {['press', 'bench', 'deadlift', 'squat'].map(day => {\r\n                            const items = assistance.perDay[day] || [];\r\n                            const canAdd = (() => {\r\n                                switch (st.template) {\r\n                                    case TEMPLATE_IDS.TRIUMVIRATE: return items.length < 2;\r\n                                    case TEMPLATE_IDS.PERIODIZATION_BIBLE: return items.length < 3;\r\n                                    case TEMPLATE_IDS.BODYWEIGHT: return items.length < 4;\r\n                                    default: return false;\r\n                                }\r\n                            })();\r\n                            return (\r\n                                <div key={day} className=\"border border-gray-700 rounded p-3 bg-gray-800/40\">\r\n                                    <div className=\"flex items-center justify-between mb-2\">\r\n                                        <div className=\"text-gray-200 font-medium capitalize\">{day} Day</div>\r\n                                        <div className=\"text-xs text-gray-500\">{items.length} items</div>\r\n                                    </div>\r\n                                    <ul className=\"space-y-2 mb-2\">\r\n                                        {items.map((it, idx) => (\r\n                                            <li key={idx} className=\"bg-gray-800/60 border border-gray-700 rounded p-2 text-sm\">\r\n                                                <div className=\"flex items-center justify-between\">\r\n                                                    <span className=\"text-gray-100\">{it.name}</span>\r\n                                                    <span className=\"text-gray-400\">{it.sets}×{it.reps}{it.load?.type === 'bw' && ' @BW'}</span>\r\n                                                </div>\r\n                                                <div className=\"mt-2 flex gap-2\">\r\n                                                    <select\r\n                                                        className=\"flex-1 bg-gray-900 border border-gray-600 text-gray-200 rounded px-2 py-1\"\r\n                                                        value={it.name}\r\n                                                        onChange={e => {\r\n                                                            const row = byName[e.target.value.toLowerCase()];\r\n                                                            if (!row) return;\r\n                                                            const sets = Number(row.default_sets) || it.sets;\r\n                                                            const reps = row.numeric_reps || (/amrap/i.test(row.default_reps) ? 10 : Number(row.default_reps) || it.reps);\r\n                                                            const load = (/body|bw|bodyweight/i.test(row.equipment || '') || /AMRAP/i.test(row.default_reps)) ? { type: 'bw' } : undefined;\r\n                                                            const next = { ...assistance };\r\n                                                            next.perDay[day][idx] = { ...it, name: row.exercise, sets, reps, load };\r\n                                                            set({ assistance: next });\r\n                                                        }}\r\n                                                    >\r\n                                                        {Object.keys(categoriesMap).sort().map(cat => (\r\n                                                            <optgroup key={cat} label={cat}>\r\n                                                                {categoriesMap[cat].map(r => {\r\n                                                                    const equip = r.equipment ? ` (${r.equipment.split(';')[0]})` : '';\r\n                                                                    return <option key={r.exercise} value={r.exercise}>{r.exercise}{equip}</option>;\r\n                                                                })}\r\n                                                            </optgroup>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                    <button\r\n                                                        onClick={() => {\r\n                                                            const next = { ...assistance };\r\n                                                            next.perDay[day] = next.perDay[day].filter((_, i) => i !== idx);\r\n                                                            set({ assistance: next });\r\n                                                        }}\r\n                                                        className=\"px-2 py-1 rounded border border-gray-600 text-gray-300 hover:bg-gray-700/40\"\r\n                                                    >✕</button>\r\n                                                </div>\r\n                                            </li>\r\n                                        ))}\r\n                                        {!items.length && <li className=\"text-xs text-gray-500\">No assistance yet.</li>}\r\n                                    </ul>\r\n                                    {canAdd && exLoaded && (\r\n                                        <select\r\n                                            className=\"w-full bg-gray-900 border border-gray-600 text-gray-200 rounded px-2 py-1 text-sm mb-2\"\r\n                                            value=\"\"\r\n                                            onChange={e => {\r\n                                                const v = e.target.value; if (!v) return;\r\n                                                const row = byName[v.toLowerCase()]; if (!row) return;\r\n                                                const sets = Number(row.default_sets) || 5;\r\n                                                const reps = row.numeric_reps || (/amrap/i.test(row.default_reps) ? 10 : Number(row.default_reps) || 10);\r\n                                                const load = (/body|bw|bodyweight/i.test(row.equipment || '') || /AMRAP/i.test(row.default_reps)) ? { type: 'bw' } : undefined;\r\n                                                const next = { ...assistance };\r\n                                                next.perDay[day] = [...(next.perDay[day] || []), { name: row.exercise, sets, reps, load }];\r\n                                                set({ assistance: next });\r\n                                            }}\r\n                                        >\r\n                                            <option value=\"\">+ Add Exercise</option>\r\n                                            {Object.keys(categoriesMap).sort().map(cat => (\r\n                                                <optgroup key={cat} label={cat}>\r\n                                                    {categoriesMap[cat].map(r => {\r\n                                                        const equip = r.equipment ? ` (${r.equipment.split(';')[0]})` : '';\r\n                                                        return <option key={r.exercise} value={r.exercise}>{r.exercise}{equip}</option>;\r\n                                                    })}\r\n                                                </optgroup>\r\n                                            ))}\r\n                                        </select>\r\n                                    )}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    {!!validation.warnings.length && (\r\n                        <div className=\"bg-yellow-900/20 border border-yellow-600 rounded p-3 text-yellow-200 text-xs space-y-1\">\r\n                            {validation.warnings.map((w, i) => <div key={i} className=\"flex gap-2\"><AlertTriangle className=\"w-4 h-4\" /> <span>{w}</span></div>)}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"names":["TEMPLATE_IDS","TILES","Step2TemplateGallery","data","updateData","st","set","patch","cfg","assistance","exLoaded","categoriesMap","exercises","useExerciseDB","byName","useMemo","map","useEffect","perDay","changed","ensure","day","names","items","n","row","sets","reps","load","validation","counts","list","it","warnings","choose","id","jsxs","jsx","StepStatusPill","STEP_IDS","Info","t","active","CheckCircle","e","AlertTriangle","canAdd","idx","_a","next","cat","r","equip","_","i","v","w"],"mappings":"oTACO,MAAMA,EAAe,CACxB,IAAK,MACL,YAAa,cACb,oBAAqB,qBACrB,WAAY,aACZ,UAAW,UACf,ECCMC,EAAQ,CACV,CAAE,GAAID,EAAa,IAAK,MAAO,iBAAkB,MAAO,yEAA0E,MAAO,gBAAA,EACzI,CAAE,GAAIA,EAAa,YAAa,MAAO,cAAe,MAAO,oEAAqE,MAAO,kBAAA,EACzI,CAAE,GAAIA,EAAa,oBAAqB,MAAO,sBAAuB,MAAO,sEAAuE,MAAO,iBAAA,EAC3J,CAAE,GAAIA,EAAa,WAAY,MAAO,aAAc,MAAO,iEAAkE,MAAO,kBAAA,EACpI,CAAE,GAAIA,EAAa,UAAW,MAAO,4BAA6B,MAAO,iDAAkD,MAAO,iBAAA,CACtI,EAEA,SAAwBE,EAAqB,CAAE,KAAAC,EAAM,WAAAC,GAAc,CAC/D,MAAMC,EAAKF,GAAQ,CAAA,EACbG,EAAOC,GAAUH,EAAW,CAAE,GAAGC,EAAI,GAAGE,EAAO,EAC/CC,EAAMH,EAAG,gBAAkB,CAAE,QAAS,OAAQ,WAAY,GAAI,SAAU,EAAA,EACxEI,EAAaJ,EAAG,YAAc,CAAE,QAAS,CAAE,IAAK,CAAE,QAASG,EAAI,YAAc,GAAI,SAAUA,EAAI,SAAW,MAAA,CAAO,EAAK,OAAQ,CAAE,MAAO,CAAA,EAAI,SAAU,CAAA,EAAI,MAAO,CAAA,EAAI,MAAO,CAAA,EAAG,EAC9K,CAAE,OAAQE,EAAU,cAAAC,EAAe,UAAAC,CAAA,EAAcC,EAAA,EAGjDC,EAASC,EAAAA,QAAQ,IAAM,CACzB,MAAMC,EAAM,CAAA,EACZ,OAAAJ,GAAA,MAAAA,EAAW,QAAQ,GAAK,CAAEI,EAAI,EAAE,SAAS,YAAA,CAAa,EAAI,CAAG,GACtDA,CACX,EAAG,CAACJ,CAAS,CAAC,EAGdK,EAAAA,UAAU,IAAM,CACZ,GAAI,CAACZ,EAAG,UAAY,CAACK,EAAU,OAC/B,MAAMQ,EAAS,CAAE,GAAGT,EAAW,MAAA,EAC/B,IAAIU,EAAU,GACd,MAAMC,EAAS,CAACC,EAAKC,IAAU,CAC3B,GAAIJ,EAAOG,CAAG,GAAKH,EAAOG,CAAG,EAAE,OAAQ,OACvC,MAAME,EAAQ,CAAA,EACdD,EAAM,QAAQE,GAAK,CACf,MAAMC,EAAMX,EAAOU,EAAE,YAAA,CAAa,EAClC,GAAIC,EAAK,CACL,MAAMC,EAAO,OAAOD,EAAI,YAAY,GAAK,EACnCE,EAAOF,EAAI,eAAiB,SAAS,KAAKA,EAAI,YAAY,EAAI,GAAK,OAAOA,EAAI,YAAY,GAAK,IAC/FG,EAAQ,sBAAsB,KAAKH,EAAI,WAAa,EAAE,GAAK,SAAS,KAAKA,EAAI,YAAY,EAAK,CAAE,KAAM,MAAS,OACrHF,EAAM,KAAK,CAAE,KAAME,EAAI,SAAU,KAAAC,EAAM,KAAAC,EAAM,KAAAC,EAAM,CACvD,CACJ,CAAC,EACGL,EAAM,SAAUL,EAAOG,CAAG,EAAIE,EAAOJ,EAAU,GACvD,EACA,OAAQd,EAAG,SAAA,CACP,KAAKL,EAAa,YACdoB,EAAO,QAAS,CAAC,OAAQ,UAAU,CAAC,EACpCA,EAAO,QAAS,CAAC,UAAW,MAAM,CAAC,EACnCA,EAAO,WAAY,CAAC,iBAAkB,UAAU,CAAC,EACjDA,EAAO,QAAS,CAAC,oBAAqB,oBAAoB,CAAC,EAC3D,MACJ,KAAKpB,EAAa,oBAEdoB,EAAO,QAAS,CAAC,WAAY,UAAW,MAAM,CAAC,EAC/CA,EAAO,QAAS,CAAC,mBAAoB,WAAY,kBAAkB,CAAC,EACpEA,EAAO,WAAY,CAAC,oBAAqB,YAAa,oBAAoB,CAAC,EAC3EA,EAAO,QAAS,CAAC,iBAAkB,YAAa,UAAU,CAAC,EAC3D,MACJ,KAAKpB,EAAa,WACdoB,EAAO,QAAS,CAAC,WAAY,WAAY,MAAM,CAAC,EAChDA,EAAO,QAAS,CAAC,WAAY,WAAY,MAAM,CAAC,EAChDA,EAAO,WAAY,CAAC,WAAY,oBAAoB,CAAC,EACrDA,EAAO,QAAS,CAAC,WAAY,qBAAsB,SAAS,CAAC,EAC7D,KAIA,CAEJD,GACAb,EAAI,CAAE,WAAY,CAAE,GAAGG,EAAY,OAAAS,CAAA,EAAU,CAGrD,EAAG,CAACb,EAAG,SAAUK,CAAQ,CAAC,EAG1B,MAAMmB,EAAad,EAAAA,QAAQ,IAAM,CAC7B,GAAI,CAACL,EAAU,MAAO,CAAE,SAAU,CAAA,CAAC,EACnC,MAAMoB,EAAS,CAAE,KAAM,EAAG,KAAM,EAAG,KAAM,EAAG,UAAW,EAAG,aAAc,CAAA,EACxE,OAAO,OAAOrB,EAAW,MAAM,EAAE,QAAQsB,GAAQA,EAAK,QAAQC,GAAM,CAChE,MAAMP,EAAMX,EAAOkB,EAAG,KAAK,aAAa,EACpCP,IACAK,EAAOL,EAAI,mBAAmB,GAAKK,EAAOL,EAAI,mBAAmB,GAAK,GAAK,EAEnF,CAAC,CAAC,EACF,MAAMQ,EAAW,CAAA,EACjB,OAAIH,EAAO,KAAOA,EAAO,MAAMG,EAAS,KAAK,iEAAiE,EAC1GH,EAAO,KAAO,GAAGG,EAAS,KAAK,wCAAwC,EACvEH,EAAO,UAAY,IAAMzB,EAAG,WAAaL,EAAa,aAAeK,EAAG,WAAaL,EAAa,sBAAsBiC,EAAS,KAAK,mCAAmC,EACtK,CAAE,OAAAH,EAAQ,SAAAG,CAAA,CACrB,EAAG,CAACxB,EAAW,OAAQK,EAAQJ,EAAUL,EAAG,QAAQ,CAAC,EAE/C6B,EAAUC,GAAO7B,EAAI,CAAE,SAAU6B,EAAI,EAE3C,OACIC,EAAAA,KAAC,MAAA,CAAI,UAAU,YACX,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,mCACX,SAAA,CAAAA,OAAC,MAAA,CACG,SAAA,CAAAC,EAAAA,IAAC,KAAA,CAAG,UAAU,wCAAwC,SAAA,qCAAkC,EACxFA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,8FAAA,CAA4F,CAAA,EACrI,QACCC,EAAA,CAAe,OAAQC,EAAS,iBAAkB,KAAMlC,CAAA,CAAI,CAAA,EACjE,QAEC,MAAA,CAAI,UAAU,oDACX,SAAA+B,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACX,SAAA,CAAAC,EAAAA,IAACG,EAAA,CAAK,UAAU,8BAAA,CAA+B,EAC/CJ,EAAAA,KAAC,MAAA,CAAI,UAAU,wBACX,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,mBAAmB,SAAA,WAAQ,EAC1CD,EAAAA,KAAC,KAAA,CAAG,UAAU,2BACV,SAAA,CAAAA,OAAC,KAAA,CAAG,SAAA,CAAAC,EAAAA,IAAC,KAAE,SAAA,KAAA,CAAG,EAAI,2FAAA,EAAyF,SACtG,KAAA,CAAG,SAAA,CAAAA,EAAAA,IAAC,KAAE,SAAA,aAAA,CAAW,EAAI,gEAAA,EAA8D,SACnF,KAAA,CAAG,SAAA,CAAAA,EAAAA,IAAC,KAAE,SAAA,qBAAA,CAAmB,EAAI,6DAAA,EAA2D,SACxF,KAAA,CAAG,SAAA,CAAAA,EAAAA,IAAC,KAAE,SAAA,YAAA,CAAU,EAAI,8DAAA,EAA4D,SAChF,KAAA,CAAG,SAAA,CAAAA,EAAAA,IAAC,KAAE,SAAA,WAAA,CAAS,EAAI,kEAAA,CAAA,CAAgE,CAAA,CAAA,CACxF,CAAA,CAAA,CACJ,CAAA,CAAA,CACJ,CAAA,CACJ,QAGC,MAAA,CAAI,UAAU,wCACV,SAAApC,EAAM,IAAIwC,GAAK,CACZ,MAAMC,EAASrC,EAAG,WAAaoC,EAAE,GACjC,OACIL,EAAAA,KAAC,SAAA,CAEG,QAAS,IAAMF,EAAOO,EAAE,EAAE,EAC1B,UAAW,mCAAmCA,EAAE,KAAK,6CAA6CC,EAAS,sBAAwB,EAAE,GAErI,SAAA,CAAAL,EAAAA,IAAC,MAAA,CAAI,UAAU,2BAA4B,SAAAI,EAAE,MAAM,EACnDJ,EAAAA,IAAC,MAAA,CAAI,UAAU,6BAA8B,WAAE,MAAM,EACpDK,GACGN,EAAAA,KAAC,MAAA,CAAI,UAAU,+GACX,SAAA,CAAAC,EAAAA,IAACM,EAAA,CAAY,UAAU,SAAA,CAAU,EAAE,UAAA,CAAA,CAEvC,CAAA,CAAA,EAVCF,EAAE,EAAA,CAcnB,CAAC,CAAA,CACL,EAGCpC,EAAG,WAAaL,EAAa,KAC1BoC,EAAAA,KAAC,MAAA,CAAI,UAAU,oDACX,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,8BAA8B,SAAA,cAAW,EACxDD,EAAAA,KAAC,MAAA,CAAI,UAAU,wCACX,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,gBACX,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,6BAA6B,SAAA,UAAO,EACrDD,EAAAA,KAAC,SAAA,CACG,UAAU,kEACV,MAAO5B,EAAI,SAAW,OACtB,SAAWoC,GAAMxC,EAAW,CAAE,GAAGC,EAAI,eAAgB,CAAE,GAAGG,EAAK,QAASoC,EAAE,OAAO,KAAA,EAAS,EAE1F,SAAA,CAAAP,EAAAA,IAAC,SAAA,CAAO,MAAM,OAAO,SAAA,4CAAyC,EAC9DA,EAAAA,IAAC,SAAA,CAAO,MAAM,WAAW,SAAA,6CAAA,CAA2C,CAAA,CAAA,CAAA,CACxE,EACJ,EACAD,EAAAA,KAAC,MAAA,CAAI,UAAU,gBACX,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,6BAA6B,SAAA,cAAW,EACzDA,EAAAA,IAAC,QAAA,CACG,KAAK,SAAS,IAAI,KAAK,IAAI,KAAK,KAAK,IACrC,UAAU,kEACV,MAAO7B,EAAI,YAAc,GACzB,SAAWoC,GAAMxC,EAAW,CAAE,GAAGC,EAAI,eAAgB,CAAE,GAAGG,EAAK,WAAY,OAAOoC,EAAE,OAAO,KAAK,GAAK,IAAM,CAAA,CAAA,EAE/GP,EAAAA,IAAC,OAAA,CAAK,UAAU,6BAA6B,SAAA,mDAAA,CAAiD,CAAA,CAAA,CAClG,CAAA,CAAA,CACJ,CAAA,EACJ,EAGHhC,EAAG,WAAaL,EAAa,YAC1BoC,EAAAA,KAAC,MAAA,CAAI,UAAU,oDACX,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,8BAA8B,SAAA,qBAAkB,QAC9D,MAAA,CAAI,UAAU,wCACX,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,gBACX,SAAA,CAAAC,EAAAA,IAAC,QAAA,CAAM,UAAU,6BAA6B,SAAA,2BAAwB,EACtEA,EAAAA,IAAC,QAAA,CACG,KAAK,SAAS,IAAI,KAAK,IAAI,MAAM,KAAK,IACtC,UAAU,kEACV,MAAO7B,EAAI,UAAY,GACvB,SAAWoC,GAAMxC,EAAW,CAAE,GAAGC,EAAI,eAAgB,CAAE,GAAGG,EAAK,SAAU,OAAOoC,EAAE,OAAO,KAAK,GAAK,IAAM,CAAA,CAAA,CAC7G,CAAA,CACJ,CAAA,CACJ,CAAA,EACJ,EAIH,CAACvC,EAAG,UACDgC,EAAAA,IAAC,MAAA,CAAI,UAAU,gFACX,SAAAD,EAAAA,KAAC,MAAA,CAAI,UAAU,yBACX,SAAA,CAAAC,EAAAA,IAACQ,EAAA,CAAc,UAAU,gBAAA,CAAiB,EAAE,gCAAA,CAAA,CAEhD,CAAA,CACJ,EAIHxC,EAAG,UAAYA,EAAG,WAAaL,EAAa,WACzCoC,EAAAA,KAAC,MAAA,CAAI,UAAU,8DACX,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACX,SAAA,CAAAC,EAAAA,IAAC,MAAA,CAAI,UAAU,yBAAyB,SAAA,6BAA0B,EACjE,CAAC3B,GAAY2B,EAAAA,IAAC,MAAA,CAAI,UAAU,wBAAwB,SAAA,4BAAA,CAA0B,CAAA,EACnF,EACAA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,4GAAyG,EAC9IA,EAAAA,IAAC,MAAA,CAAI,UAAU,wCACV,SAAA,CAAC,QAAS,QAAS,WAAY,OAAO,EAAE,IAAIhB,GAAO,CAChD,MAAME,EAAQd,EAAW,OAAOY,CAAG,GAAK,CAAA,EAClCyB,GAAU,IAAM,CAClB,OAAQzC,EAAG,SAAA,CACP,KAAKL,EAAa,YAAa,OAAOuB,EAAM,OAAS,EACrD,KAAKvB,EAAa,oBAAqB,OAAOuB,EAAM,OAAS,EAC7D,KAAKvB,EAAa,WAAY,OAAOuB,EAAM,OAAS,EACpD,QAAS,MAAO,EAAA,CAExB,GAAA,EACA,OACIa,EAAAA,KAAC,MAAA,CAAc,UAAU,oDACrB,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,yCACX,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,uCAAwC,SAAA,CAAAf,EAAI,MAAA,EAAI,EAC/De,EAAAA,KAAC,MAAA,CAAI,UAAU,wBAAyB,SAAA,CAAAb,EAAM,OAAO,QAAA,CAAA,CAAM,CAAA,EAC/D,EACAa,EAAAA,KAAC,KAAA,CAAG,UAAU,iBACT,SAAA,CAAAb,EAAM,IAAI,CAACS,EAAIe,WACZX,OAAAA,OAAC,KAAA,CAAa,UAAU,4DACpB,SAAA,CAAAA,EAAAA,KAAC,MAAA,CAAI,UAAU,oCACX,SAAA,CAAAC,EAAAA,IAAC,OAAA,CAAK,UAAU,gBAAiB,SAAAL,EAAG,KAAK,EACzCI,EAAAA,KAAC,OAAA,CAAK,UAAU,gBAAiB,SAAA,CAAAJ,EAAG,KAAK,IAAEA,EAAG,OAAMgB,EAAAhB,EAAG,OAAH,YAAAgB,EAAS,QAAS,MAAQ,MAAA,CAAA,CAAO,CAAA,EACzF,EACAZ,EAAAA,KAAC,MAAA,CAAI,UAAU,kBACX,SAAA,CAAAC,EAAAA,IAAC,SAAA,CACG,UAAU,4EACV,MAAOL,EAAG,KACV,SAAUY,GAAK,CACX,MAAMnB,EAAMX,EAAO8B,EAAE,OAAO,MAAM,aAAa,EAC/C,GAAI,CAACnB,EAAK,OACV,MAAMC,EAAO,OAAOD,EAAI,YAAY,GAAKO,EAAG,KACtCL,EAAOF,EAAI,eAAiB,SAAS,KAAKA,EAAI,YAAY,EAAI,GAAK,OAAOA,EAAI,YAAY,GAAKO,EAAG,MAClGJ,EAAQ,sBAAsB,KAAKH,EAAI,WAAa,EAAE,GAAK,SAAS,KAAKA,EAAI,YAAY,EAAK,CAAE,KAAM,MAAS,OAC/GwB,EAAO,CAAE,GAAGxC,CAAA,EAClBwC,EAAK,OAAO5B,CAAG,EAAE0B,CAAG,EAAI,CAAE,GAAGf,EAAI,KAAMP,EAAI,SAAU,KAAAC,EAAM,KAAAC,EAAM,KAAAC,CAAA,EACjEtB,EAAI,CAAE,WAAY2C,EAAM,CAC5B,EAEC,gBAAO,KAAKtC,CAAa,EAAE,OAAO,IAAIuC,GACnCb,EAAAA,IAAC,WAAA,CAAmB,MAAOa,EACtB,SAAAvC,EAAcuC,CAAG,EAAE,IAAIC,GAAK,CACzB,MAAMC,EAAQD,EAAE,UAAY,KAAKA,EAAE,UAAU,MAAM,GAAG,EAAE,CAAC,CAAC,IAAM,GAChE,OAAOf,EAAAA,KAAC,SAAA,CAAwB,MAAOe,EAAE,SAAW,SAAA,CAAAA,EAAE,SAAUC,CAAA,CAAA,EAA5CD,EAAE,QAAgD,CAC1E,CAAC,CAAA,EAJUD,CAKf,CACH,CAAA,CAAA,EAELb,EAAAA,IAAC,SAAA,CACG,QAAS,IAAM,CACX,MAAMY,EAAO,CAAE,GAAGxC,CAAA,EAClBwC,EAAK,OAAO5B,CAAG,EAAI4B,EAAK,OAAO5B,CAAG,EAAE,OAAO,CAACgC,EAAGC,IAAMA,IAAMP,CAAG,EAC9DzC,EAAI,CAAE,WAAY2C,EAAM,CAC5B,EACA,UAAU,8EACb,SAAA,GAAA,CAAA,CAAC,CAAA,CACN,CAAA,CAAA,EArCKF,CAsCT,EACH,EACA,CAACxB,EAAM,cAAW,KAAA,CAAG,UAAU,wBAAwB,SAAA,oBAAA,CAAkB,CAAA,EAC9E,EACCuB,GAAUpC,GACP0B,EAAAA,KAAC,SAAA,CACG,UAAU,yFACV,MAAM,GACN,SAAUQ,GAAK,CACX,MAAMW,EAAIX,EAAE,OAAO,MAAO,GAAI,CAACW,EAAG,OAClC,MAAM9B,EAAMX,EAAOyC,EAAE,YAAA,CAAa,EAAG,GAAI,CAAC9B,EAAK,OAC/C,MAAMC,EAAO,OAAOD,EAAI,YAAY,GAAK,EACnCE,EAAOF,EAAI,eAAiB,SAAS,KAAKA,EAAI,YAAY,EAAI,GAAK,OAAOA,EAAI,YAAY,GAAK,IAC/FG,EAAQ,sBAAsB,KAAKH,EAAI,WAAa,EAAE,GAAK,SAAS,KAAKA,EAAI,YAAY,EAAK,CAAE,KAAM,MAAS,OAC/GwB,EAAO,CAAE,GAAGxC,CAAA,EAClBwC,EAAK,OAAO5B,CAAG,EAAI,CAAC,GAAI4B,EAAK,OAAO5B,CAAG,GAAK,CAAA,EAAK,CAAE,KAAMI,EAAI,SAAU,KAAAC,EAAM,KAAAC,EAAM,KAAAC,EAAM,EACzFtB,EAAI,CAAE,WAAY2C,EAAM,CAC5B,EAEA,SAAA,CAAAZ,EAAAA,IAAC,SAAA,CAAO,MAAM,GAAG,SAAA,iBAAc,EAC9B,OAAO,KAAK1B,CAAa,EAAE,KAAA,EAAO,IAAIuC,GACnCb,EAAAA,IAAC,WAAA,CAAmB,MAAOa,EACtB,SAAAvC,EAAcuC,CAAG,EAAE,IAAIC,GAAK,CACzB,MAAMC,EAAQD,EAAE,UAAY,KAAKA,EAAE,UAAU,MAAM,GAAG,EAAE,CAAC,CAAC,IAAM,GAChE,OAAOf,EAAAA,KAAC,SAAA,CAAwB,MAAOe,EAAE,SAAW,SAAA,CAAAA,EAAE,SAAUC,CAAA,CAAA,EAA5CD,EAAE,QAAgD,CAC1E,CAAC,CAAA,EAJUD,CAKf,CACH,CAAA,CAAA,CAAA,CACL,CAAA,EAzEE7B,CA2EV,CAER,CAAC,CAAA,CACL,EACC,CAAC,CAACQ,EAAW,SAAS,QACnBQ,EAAAA,IAAC,OAAI,UAAU,0FACV,SAAAR,EAAW,SAAS,IAAI,CAAC2B,EAAGF,IAAMlB,EAAAA,KAAC,MAAA,CAAY,UAAU,aAAa,SAAA,CAAAC,EAAAA,IAACQ,EAAA,CAAc,UAAU,SAAA,CAAU,EAAE,IAACR,EAAAA,IAAC,QAAM,SAAAmB,CAAA,CAAE,CAAA,CAAA,EAAzEF,CAAgF,CAAM,CAAA,CACvI,CAAA,CAAA,CAER,CAAA,EAER,CAER"}