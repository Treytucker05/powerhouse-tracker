{"version":3,"file":"TrainToday-BzbwBcX1.js","sources":["../../src/pages/TrainToday.jsx"],"sourcesContent":["// src/pages/TrainToday.jsx\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { Activity, CheckCircle, Clipboard, Play, SkipForward, AlertTriangle } from 'lucide-react';\r\nimport { getToday, advanceActiveCycle } from '../lib/fiveThreeOne/persistCycle.js';\r\nimport { addSession, estimate1RM, getHistory } from '../lib/fiveThreeOne/history.js';\r\nimport { useToast } from '../components/ui/Toast.jsx';\r\nimport { liftKey, getAmrapFromSession } from '../lib/fiveThreeOne/pr.js';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\nfunction Card({ title, children }) {\r\n    return (\r\n        <div className=\"bg-gray-900/60 border border-gray-700 rounded px-4 py-3\">\r\n            <div className=\"text-white font-medium mb-2\">{title}</div>\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction SetRow({ idx, set, onChange }) {\r\n    const isAmrap = !!set.amrap; // prefer snapshot flag if present\r\n    const [reps, setReps] = useState(set.reps ?? (isAmrap ? '' : set.targetReps ?? set.minReps ?? ''));\r\n    const [done, setDone] = useState(false);\r\n\r\n    useEffect(() => {\r\n        onChange({ idx, reps: reps === '' ? null : Number(reps), done, weight: set.weight, amrap: isAmrap, percent: set.percent });\r\n    }, [reps, done]);\r\n\r\n    return (\r\n        <div className=\"flex items-center justify-between gap-3 py-1\">\r\n            <div className=\"text-gray-300 text-sm\">\r\n                <span className=\"text-gray-400 mr-2\">Set {idx + 1}:</span>\r\n                <span className=\"font-mono\">{set.weight} lb</span>\r\n                {set.percent != null && <span className=\"text-gray-500\"> ({set.percent}%)</span>}\r\n                {' · '}\r\n                {isAmrap ? <span className=\"text-red-300 font-semibold\">AMRAP</span> : <span>{set.reps ?? set.targetReps ?? set.minReps} reps</span>}\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n                <input\r\n                    className=\"w-16 bg-gray-800 border border-gray-700 rounded px-2 py-1 text-gray-100 text-sm\"\r\n                    placeholder={isAmrap ? 'reps' : 'done'}\r\n                    value={reps}\r\n                    onChange={(e) => setReps(e.target.value.replace(/[^\\d]/g, ''))}\r\n                />\r\n                <label className=\"flex items-center gap-1 text-sm text-gray-300\">\r\n                    <input type=\"checkbox\" checked={done} onChange={(e) => setDone(e.target.checked)} />\r\n                    Done\r\n                </label>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function TrainToday() {\r\n    const navigate = useNavigate();\r\n    const { show } = useToast();\r\n    const { active, today, weekObj } = useMemo(() => getToday(), []);\r\n    const [warmupDone, setWarmupDone] = useState(() => (today?.warmups || []).map(() => false));\r\n    const [mainResults, setMainResults] = useState(() => (today?.mainSets || []).map(() => ({ reps: null, done: false })));\r\n    const [assistDone, setAssistDone] = useState(() => (today?.assistance || []).map(() => false));\r\n    const [notes, setNotes] = useState('');\r\n    const [saved, setSaved] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // If no active cycle, suggest starting one\r\n        if (!active || !today) return;\r\n        // Normalize mainResults length in case of shape drift\r\n        if (mainResults.length !== (today.mainSets?.length || 0)) {\r\n            setMainResults((today.mainSets || []).map(() => ({ reps: null, done: false })));\r\n        }\r\n    }, [active, today]);\r\n\r\n    if (!active || !today) {\r\n        return (\r\n            <div className=\"max-w-3xl mx-auto p-4 space-y-4\">\r\n                <div className=\"bg-yellow-900/20 border border-yellow-700 rounded p-4 flex items-start gap-3\">\r\n                    <AlertTriangle className=\"w-5 h-5 text-yellow-400 mt-0.5\" />\r\n                    <div className=\"text-yellow-100 text-sm\">\r\n                        <div className=\"font-semibold mb-1\">No active 5/3/1 cycle found.</div>\r\n                        <p>Go to the 5/3/1 Program Builder and press <b>Start Cycle</b>.</p>\r\n                    </div>\r\n                </div>\r\n                <button\r\n                    onClick={() => navigate('/program')}\r\n                    className=\"inline-flex items-center gap-2 px-3 py-2 rounded bg-red-600 hover:bg-red-700 text-white\"\r\n                >\r\n                    <Clipboard className=\"w-4 h-4\" /> Open Program Builder\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const amrapIndex = (today.mainSets?.length || 0) - 1;\r\n    const amrapSet = today.mainSets?.[amrapIndex];\r\n    const amrapReps = mainResults?.[amrapIndex]?.reps || 0;\r\n    const amrapE1RM = estimate1RM(amrapSet?.weight || 0, amrapReps);\r\n\r\n    const markAllWarmups = () => setWarmupDone((today.warmups || []).map(() => true));\r\n\r\n    const onChangeMain = (payload) => {\r\n        setMainResults(prev => {\r\n            const next = [...prev];\r\n            next[payload.idx] = { reps: payload.reps, done: payload.done, weight: payload.weight, amrap: payload.amrap, percent: payload.percent };\r\n            return next;\r\n        });\r\n    };\r\n\r\n    const onComplete = () => {\r\n        const session = {\r\n            id: `531-${Date.now()}`,\r\n            when: new Date().toISOString(),\r\n            week: active.currentWeek,\r\n            dayIndex: active.currentDayIndex,\r\n            day: today.day,\r\n            lift: today.lift,\r\n            liftLabel: today.liftLabel,\r\n            tm: today.tm,\r\n            warmups: (today.warmups || []).map((w, i) => ({ ...w, done: !!warmupDone[i] })),\r\n            mainSets: (today.mainSets || []).map((s, i) => ({\r\n                ...s,\r\n                loggedReps: mainResults[i]?.reps ?? null,\r\n                done: !!mainResults[i]?.done\r\n            })),\r\n            assistance: (today.assistance || []).map((a, i) => ({ ...a, done: !!assistDone[i] })),\r\n            notes,\r\n            e1RM: amrapE1RM\r\n        };\r\n        // PR check against prior history for this lift\r\n        const past = getHistory().filter(h => liftKey(h) === liftKey(session));\r\n        const amrap = getAmrapFromSession(session);\r\n        const didPR = amrap ? (() => {\r\n            const best = past.reduce((mx, h) => {\r\n                const a = getAmrapFromSession(h);\r\n                return Math.max(mx, a?.e1RM || 0);\r\n            }, 0);\r\n            return (amrap.e1RM || 0) > best;\r\n        })() : false;\r\n\r\n        addSession(session);\r\n        advanceActiveCycle();\r\n        setSaved(true);\r\n        if (didPR) {\r\n            show(`PR! ${liftKey(session)} e1RM ${amrap.e1RM} — ${amrap.weight}×${amrap.reps}`, { kind: 'success', ttl: 4500 });\r\n        } else {\r\n            show('Session saved.', { kind: 'info', ttl: 2000 });\r\n        }\r\n        setTimeout(() => navigate('/'), 600);\r\n    };\r\n\r\n    const onSkip = () => {\r\n        advanceActiveCycle();\r\n        navigate(0); // refresh page to show next day\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-4xl mx-auto p-4 space-y-5\">\r\n            {/* Header */}\r\n            <div className=\"flex items-start justify-between\">\r\n                <div>\r\n                    <h2 className=\"text-2xl text-white font-semibold flex items-center gap-2\">\r\n                        <Activity className=\"w-6 h-6 text-red-400\" /> Train Today\r\n                    </h2>\r\n                    <p className=\"text-gray-400 text-sm\">\r\n                        Week {active.currentWeek} • Day {active.currentDayIndex + 1} • <b>{today.day}</b> • {today.liftLabel}\r\n                    </p>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                    <Link to=\"/print-week\" className=\"px-3 py-1.5 rounded border border-gray-600 text-gray-100 hover:bg-gray-800 text-sm\">\r\n                        Print Week\r\n                    </Link>\r\n                    {saved && (\r\n                        <div className=\"bg-green-900/20 border border-green-600 text-green-200 text-sm px-3 py-2 rounded inline-flex items-center gap-2\">\r\n                            <CheckCircle className=\"w-4 h-4\" /> Session saved\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {/* TMs recap */}\r\n            <Card title=\"Training Max Recap\">\r\n                <div className=\"text-sm text-gray-300\">\r\n                    {today.liftLabel}: <span className=\"font-mono\">{today.tm || 0} lb</span>\r\n                </div>\r\n            </Card>\r\n\r\n            {/* Warm-ups */}\r\n            <Card title=\"Warm-up Sets (40/50/60%)\">\r\n                {(today.warmups || []).length === 0 ? (\r\n                    <div className=\"text-gray-400 text-sm\">No warm-ups found.</div>\r\n                ) : (\r\n                    <div className=\"space-y-2\">\r\n                        {(today.warmups || []).map((w, i) => (\r\n                            <div key={i} className=\"flex items-center justify-between text-sm\">\r\n                                <div className=\"text-gray-300\">\r\n                                    <span className=\"text-gray-400 mr-2\">Set {i + 1}:</span>\r\n                                    <span className=\"font-mono\">{w.weight} lb</span>\r\n                                    {w.percent != null && <span className=\"text-gray-500\"> ({w.percent}%)</span>}\r\n                                    {' · '}\r\n                                    <span>{w.reps ?? 5} reps</span>\r\n                                </div>\r\n                                <label className=\"flex items-center gap-1 text-gray-300\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={!!warmupDone[i]}\r\n                                        onChange={(e) => {\r\n                                            const next = [...warmupDone];\r\n                                            next[i] = e.target.checked;\r\n                                            setWarmupDone(next);\r\n                                        }}\r\n                                    />\r\n                                    Done\r\n                                </label>\r\n                            </div>\r\n                        ))}\r\n                        <button\r\n                            onClick={markAllWarmups}\r\n                            className=\"mt-2 inline-flex items-center gap-2 px-3 py-1.5 rounded border border-gray-600 text-gray-100 hover:bg-gray-800 text-xs\"\r\n                        >\r\n                            Mark All Done\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </Card>\r\n\r\n            {/* Main sets */}\r\n            <Card title=\"Main Sets\">\r\n                {(today.mainSets || []).length === 0 ? (\r\n                    <div className=\"text-gray-400 text-sm\">No main sets found.</div>\r\n                ) : (\r\n                    <div className=\"space-y-2\">\r\n                        {(today.mainSets || []).map((s, i) => (\r\n                            <SetRow key={i} idx={i} set={s} onChange={onChangeMain} />\r\n                        ))}\r\n                        {/* AMRAP guidance + e1RM */}\r\n                        <div className=\"mt-2 text-xs text-gray-400\">\r\n                            Last set is AMRAP in Weeks 1–3. Stop 1 rep shy of failure; keep form tight.\r\n                            {amrapSet && (\r\n                                <div className=\"mt-1\">\r\n                                    e1RM from AMRAP ({amrapSet.weight} lb × {amrapReps || 0}):{' '}\r\n                                    <span className=\"text-gray-200 font-mono\">{amrapE1RM || 0} lb</span>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Card>\r\n\r\n            {/* Assistance */}\r\n            <Card title=\"Assistance\">\r\n                {(today.assistance || []).length === 0 ? (\r\n                    <div className=\"text-gray-400 text-sm\">No assistance selected for this lift.</div>\r\n                ) : (\r\n                    <div className=\"space-y-2\">\r\n                        {(today.assistance || []).map((a, i) => (\r\n                            <div key={i} className=\"flex items-center justify-between text-sm\">\r\n                                <div className=\"text-gray-300\">\r\n                                    {a.name || a.title || 'Assistance'}{' '}\r\n                                    {a.sets && a.reps && <span className=\"text-gray-500\">({a.sets}×{a.reps})</span>}\r\n                                </div>\r\n                                <label className=\"flex items-center gap-1 text-gray-300\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={!!assistDone[i]}\r\n                                        onChange={(e) => {\r\n                                            const next = [...assistDone];\r\n                                            next[i] = e.target.checked;\r\n                                            setAssistDone(next);\r\n                                        }}\r\n                                    />\r\n                                    Done\r\n                                </label>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </Card>\r\n\r\n            {/* Notes */}\r\n            <Card title=\"Notes\">\r\n                <textarea\r\n                    className=\"w-full min-h-[90px] bg-gray-800 border border-gray-700 rounded p-2 text-gray-100 text-sm\"\r\n                    placeholder=\"Cues, pain, bar speed, etc.\"\r\n                    value={notes}\r\n                    onChange={(e) => setNotes(e.target.value)}\r\n                />\r\n            </Card>\r\n\r\n            {/* Actions */}\r\n            <div className=\"flex flex-wrap gap-3\">\r\n                <button\r\n                    onClick={onComplete}\r\n                    className=\"inline-flex items-center gap-2 px-4 py-2 rounded bg-green-600 hover:bg-green-700 text-white\"\r\n                >\r\n                    <Play className=\"w-4 h-4\" /> Complete Session\r\n                </button>\r\n                <button\r\n                    onClick={onSkip}\r\n                    className=\"inline-flex items-center gap-2 px-4 py-2 rounded border border-gray-600 text-gray-100 hover:bg-gray-800\"\r\n                >\r\n                    <SkipForward className=\"w-4 h-4\" /> Skip Day\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"names":["Card","title","children","jsxs","jsx","SetRow","idx","set","onChange","isAmrap","reps","setReps","useState","done","setDone","useEffect","e","TrainToday","navigate","useNavigate","show","useToast","active","today","weekObj","useMemo","getToday","warmupDone","setWarmupDone","mainResults","setMainResults","assistDone","setAssistDone","notes","setNotes","saved","setSaved","_a","AlertTriangle","Clipboard","amrapIndex","amrapSet","_b","amrapReps","_c","amrapE1RM","estimate1RM","markAllWarmups","onChangeMain","payload","prev","next","onComplete","session","w","i","s","a","past","getHistory","h","liftKey","amrap","getAmrapFromSession","didPR","best","mx","addSession","advanceActiveCycle","onSkip","Activity","Link","CheckCircle","Play","SkipForward"],"mappings":"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"}